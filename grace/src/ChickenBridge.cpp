/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-05-04 13:57
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  char typ = (type==2) ? 'f' : 'i';
  String str = String::empty;
  int pos=-1;
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_stringp( w ) )) {
      pos=i;  // position of string parameter
      str = String(C_c_string(w), C_header_size(w));
      buf[i++] = 0.0; // pad the pars values
      printf("stringpar=%s\n", str.toUTF8());
    }								  
    else {
      buf[i++] = 0.0;
    }
  }
  CsoundScoreEv* ev=new CsoundScoreEv(typ,len,buf,str,pos);
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ev);
}

void cs_score_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setScoreMode(b);
}

void cs_record_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordMode(b);
}

void cs_record_start(float f) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordStart(f);
}

void cs_trace_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setTraceMode(b);
}

void cs_clear_score() {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}

void cs_print_score(float start, float end) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->printScore(start,end);
}

void cs_play_score(float start, float end, float shift) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->playScore(start,end,shift);
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[969];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,55,52,51,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,55,54,53,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,55,55,53,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,55,56,49,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,55,49,48,55,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,55,48,57,54,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,55,49,48,53,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,55,48,52,51,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,55,48,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,55,49,50,53,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,55,49,52,48,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,23),40,100,111,49,55,49,32,116,97,105,108,49,55,51,32,102,108,97,103,49,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,54,57,32,108,49,55,48,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,55,57,32,112,114,111,112,49,56,48,32,46,32,100,101,102,49,56,49,41,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,100,111,49,56,55,32,102,49,56,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,56,53,32,98,49,56,54,41};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,50,53,50,50,56,32,97,50,50,52,50,50,57,32,97,50,50,51,50,51,48,32,97,50,50,50,50,51,49,32,97,50,50,49,50,51,50,32,97,50,50,48,50,51,51,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,52,48,50,52,51,32,97,50,51,57,50,52,52,32,97,50,51,56,50,52,53,32,97,50,51,55,50,52,54,32,97,50,51,54,50,52,55,32,97,50,51,53,50,52,56,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,52,57,50,53,50,41};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,53,52,50,53,55,32,97,50,53,51,50,53,56,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,54,50,50,54,53,32,97,50,54,49,50,54,54,32,97,50,54,48,50,54,55,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,54,57,50,55,50,41,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,55,52,50,55,55,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,56,49,50,56,52,32,97,50,56,48,50,56,53,32,97,50,55,57,50,56,54,32,97,50,55,56,50,56,55,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,57,50,50,57,53,32,97,50,57,49,50,57,54,32,97,50,57,48,50,57,55,32,97,50,56,57,50,57,56,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,51,48,48,51,48,51,41,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,49,52,51,49,55,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,49,56,51,50,49,41,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,50,50,51,50,53,41,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,53,48,51,53,51,32,97,51,52,57,51,53,52,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,53,54,51,53,57,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,54,56,51,55,49,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,55,54,51,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,97,56,49,52,50,32,122,52,48,49,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,57,53,32,120,49,51,57,54,32,120,50,51,57,55,32,121,49,51,57,56,32,121,50,51,57,57,32,46,32,98,52,48,48,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,12),40,97,56,49,56,50,32,122,52,49,51,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,56,50,48,56,32,122,52,49,52,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,52,48,50,32,120,49,52,48,51,32,120,50,52,48,52,32,105,49,52,48,53,32,46,32,97,114,103,115,52,48,54,41,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,49,54,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,49,55,41};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,49,56,32,46,32,97,114,103,115,52,49,57,41};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,56,51,55,48,32,110,52,50,50,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,50,48,32,115,116,101,112,115,52,50,49,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,51,57,52,32,118,52,50,54,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,50,51,32,112,108,97,99,101,115,52,50,52,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,52,52,48,32,120,52,54,55,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,50,55,32,46,32,97,114,103,115,52,50,56,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,55,50,41,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,52,56,49,32,116,97,105,108,52,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,55,51,32,99,111,111,114,100,115,52,55,52,32,98,97,115,101,52,55,53,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,57,49,32,46,32,97,114,103,115,52,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,57,52,32,108,111,119,52,57,53,32,104,105,103,104,52,57,54,32,46,32,97,114,103,115,52,57,55,41};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,49,48,32,108,98,53,49,49,32,117,98,53,49,50,32,109,111,100,101,53,49,51,41,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,57,57,53,32,110,53,49,56,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,53,48,51,32,108,98,53,48,52,32,117,98,53,48,53,32,46,32,109,111,100,101,53,48,54,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,27),40,100,111,53,51,48,32,105,53,51,50,32,107,53,51,51,32,108,53,51,52,32,116,53,51,53,41,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,50,50,32,107,101,121,110,117,109,53,50,51,32,46,32,97,114,103,115,53,50,52,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,52,52,32,98,53,52,53,41,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,52,54,41};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,52,55,32,46,32,97,114,103,115,53,52,56,41,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,57,52,32,118,97,114,105,53,57,53,32,109,111,100,101,53,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,12),40,97,57,53,50,52,32,118,54,48,49,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,57,48,32,118,97,114,105,53,57,49,32,46,32,109,111,100,101,53,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,22),40,100,111,54,48,55,32,105,54,48,57,32,106,54,49,48,32,118,54,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,49,54,41,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,49,55,41,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,54,48,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,54,49,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,54,51,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,55,53,32,105,54,55,55,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,15),40,100,111,54,57,49,32,116,97,105,108,54,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,55,32,105,54,56,57,32,110,54,57,48,41,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,54,52,32,115,117,109,54,54,53,32,46,32,97,114,103,115,54,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,49,50,41};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,50,55,41};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,52,52,32,111,99,116,55,52,53,32,101,114,114,55,52,54,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,52,50,41};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,54,52,41};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,53,50,32,100,111,99,116,55,53,51,32,101,114,114,63,55,53,52,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,55,32,116,97,105,108,55,53,57,32,100,101,102,111,55,54,48,32,116,104,105,115,55,54,49,32,114,101,115,108,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,39),40,100,111,55,55,49,32,116,97,105,108,55,55,51,32,100,101,102,111,55,55,52,32,116,104,105,115,55,55,53,32,114,101,115,108,55,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,54,57,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,39),40,100,111,55,56,55,32,116,97,105,108,55,56,57,32,100,101,102,111,55,57,48,32,116,104,105,115,55,57,49,32,114,101,115,108,55,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,56,53,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,56,48,49,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,23),40,100,111,56,48,55,32,116,97,105,108,56,48,57,32,108,97,115,116,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,48,52,41,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,13),40,97,49,48,56,50,53,32,122,56,49,52,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,56,48,50,41,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,23),40,100,111,56,50,50,32,116,97,105,108,56,50,52,32,108,97,115,116,56,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,49,57,32,111,114,105,103,56,50,48,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,13),40,97,49,48,57,55,56,32,122,56,50,57,41,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,49,53,32,121,56,49,54,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,52,49,32,97,56,51,50,32,98,56,51,51,41,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,57,57,32,97,56,51,52,32,98,56,51,53,41,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,51,48,32,46,32,109,111,100,101,56,51,49,41};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,49,53,32,115,105,122,101,57,49,54,32,102,114,101,113,115,57,49,55,32,97,109,112,115,57,49,56,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,49,57,41};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,50,51,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,50,54,32,118,97,108,57,50,55,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,50,57,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,51,50,32,118,97,108,57,51,51,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,51,53,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,51,56,32,118,97,108,57,51,57,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,52,49,41,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,27),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,57,53,49,41,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,12),40,100,111,57,53,56,32,105,57,54,48,41,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,53,50,41,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,13),40,97,49,49,51,57,53,32,97,57,54,57,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,54,54,41,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,13),40,97,49,49,52,50,54,32,97,57,55,54,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,55,51,41,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,52,53,54,32,104,57,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,53,50,56,32,107,49,48,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,53,54,49,32,104,49,48,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,53,55,49,32,104,49,48,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,20),40,97,49,49,54,50,53,32,97,49,48,49,50,32,98,49,48,49,51,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,20),40,97,49,49,54,52,48,32,97,49,48,49,52,32,98,49,48,49,53,41,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,50,55,32,46,32,97,114,103,115,49,48,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,35),40,100,111,49,50,56,54,32,116,97,105,108,49,50,56,56,32,115,105,122,101,49,50,56,57,32,97,109,112,108,49,50,57,48,41,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,54,52,32,105,49,50,54,54,32,102,49,50,54,55,32,120,49,50,54,56,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,24),40,100,111,49,50,53,56,32,110,101,103,49,50,54,48,32,112,111,115,49,50,54,49,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,24),40,102,95,56,49,50,48,32,97,51,56,57,51,57,50,32,97,51,56,56,51,57,51,41};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,52,54,32,107,49,50,52,56,32,102,49,50,52,57,32,97,49,50,53,48,41,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,51,56,32,109,114,97,116,105,111,49,50,51,57,32,105,110,100,101,120,49,50,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,50,52,32,102,114,101,113,115,49,51,50,54,32,97,109,112,115,49,51,50,55,32,108,97,115,116,102,49,51,50,56,32,108,97,115,116,97,49,51,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,50,49,32,102,114,101,113,49,51,50,50,32,97,109,112,49,51,50,51,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,53,49,41};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,53,51,32,102,49,49,51,53,52,32,102,50,49,51,53,54,41,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,55,32,108,49,49,51,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,52,32,108,50,49,51,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,52,32,108,49,49,51,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,57,32,115,50,49,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,52,54,32,115,112,101,99,50,49,51,52,55,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,44),40,100,111,49,51,56,54,32,109,97,120,102,49,51,56,56,32,109,105,110,102,49,51,56,57,32,116,97,105,108,49,51,57,48,32,102,108,105,112,49,51,57,49,41,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,51,56,53,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,48,53,32,116,97,105,108,49,52,48,55,41,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,49,48,32,116,97,105,108,49,52,49,50,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,48,56,32,116,97,105,108,49,51,49,48,32,97,109,112,108,49,51,49,49,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,20),40,97,49,51,53,49,54,32,97,49,51,48,52,32,98,49,51,48,53,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,20),40,97,49,51,53,51,48,32,97,49,51,48,50,32,98,49,51,48,51,41,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,50,32,116,97,105,108,49,52,51,52,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,55,32,116,97,105,108,49,52,51,57,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,50,51,32,116,97,105,108,49,52,50,53,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,51,57,53,32,109,111,100,101,49,51,57,54,32,46,32,97,114,103,115,49,51,57,55,41};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,52,55,56,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,52,53,55,41,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,54,48,32,105,49,52,54,50,32,97,49,52,54,51,32,102,49,52,54,52,41,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,57,49,32,108,105,110,101,49,52,57,51,32,115,112,101,99,49,52,57,52,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,56,49,41};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,97,49,52,53,49,49,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,52,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,49,55,32,108,101,110,103,116,104,49,53,49,56,32,115,116,114,101,97,109,49,53,49,57,32,100,101,102,97,117,108,116,49,53,50,48,32,111,109,105,116,49,53,50,49,32,114,101,112,115,49,53,50,50,41,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,50,52,32,118,97,108,49,53,50,53,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,53,50,55,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,53,52,56,32,118,97,108,49,53,52,57,41};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,53,53,49,41,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,53,53,55,41,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,53,56,51,41};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,53,56,55,41,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,53,57,48,32,118,97,108,49,53,57,49,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,53,57,51,41,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,53,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,48,50,32,118,97,108,49,54,48,51,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,48,53,41,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,49,52,32,118,97,108,49,54,49,53,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,15),40,102,95,49,52,56,57,51,32,120,49,54,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,50,48,32,118,97,108,49,54,50,49,41,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,50,51,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,54,54,50,32,118,97,108,49,54,54,51,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,54,54,53,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,14),40,97,49,53,50,55,49,32,120,49,54,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,54,56,53,32,100,97,116,97,49,54,56,54,32,102,111,114,49,54,56,55,32,114,101,112,49,54,56,56,32,102,108,97,103,115,49,54,56,57,32,108,101,110,49,54,57,48,32,100,112,101,114,49,54,57,49,32,103,101,116,114,49,54,57,50,32,109,97,112,114,49,54,57,51,41,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,50,48,41,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,50,49,41,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,50,54,32,105,49,55,50,56,32,101,49,55,50,57,41,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,51,51,32,110,49,55,51,53,32,101,49,55,51,54,32,102,49,55,51,55,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,50,50,32,46,32,97,114,103,115,49,55,50,51,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,54,49,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,53,55,32,100,121,110,63,49,55,53,57,32,115,116,111,112,49,55,54,48,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,55,52,51,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,55,56,49,41,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,55,56,50,32,111,98,106,49,55,56,51,41,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,97,49,53,56,52,55,32,120,49,55,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,55,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,52,49,32,102,110,49,56,52,52,32,111,98,106,49,56,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,48,49,32,46,32,97,114,103,115,49,56,48,50,41};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,56,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,56,55,49,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,56,55,52,32,118,97,108,49,56,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,23),40,97,49,54,51,55,49,32,102,110,49,57,55,50,32,111,98,106,49,57,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,48,48,32,46,32,97,114,103,115,49,57,48,49,41,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,57,56,49,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,23),40,97,49,55,48,51,56,32,102,110,50,48,52,51,32,111,98,106,50,48,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,48,48,32,46,32,97,114,103,115,50,48,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,48,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,23),40,97,49,55,51,50,53,32,102,110,50,48,57,56,32,111,98,106,50,48,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,48,53,53,32,46,32,97,114,103,115,50,48,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,48,57,32,105,50,49,49,49,32,106,50,49,49,50,32,118,50,49,49,51,41,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,55,54,55,48,32,102,110,50,49,57,51,32,111,98,106,50,49,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,50,49,32,46,32,97,114,103,115,50,49,50,50,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,48,57,32,105,50,50,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,48,52,32,115,116,97,114,116,50,50,48,53,32,115,116,101,112,50,50,48,54,32,119,105,100,116,104,50,50,48,55,32,101,110,100,50,50,48,56,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,48,50,41,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,50,51,54,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,50,51,57,32,118,97,108,50,50,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,50,52,50,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,50,52,56,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,50,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,50,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,50,54,51,32,118,97,108,50,50,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,50,54,54,41,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,49,56,53,53,53,32,105,50,51,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,23),40,97,49,56,53,52,57,32,102,110,50,51,52,55,32,111,98,106,50,51,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,17),40,97,49,56,55,56,54,32,105,116,101,109,50,51,48,50,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,51,54,48,41,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,50,57,50,32,46,32,97,114,103,115,50,50,57,51,41,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,37),40,100,111,50,52,52,55,32,116,97,105,108,50,52,52,57,32,105,110,100,101,120,50,52,53,48,32,116,111,116,97,108,50,52,53,49,41,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,52,49,32,116,97,105,108,50,52,52,51,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,52,51,55,32,102,105,120,63,50,52,51,56,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,27),40,100,111,50,52,54,57,32,116,97,105,108,50,52,55,49,32,105,110,100,101,120,50,52,55,50,41,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,52,54,55,32,114,50,52,54,56,41,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,56,32,116,97,105,108,50,52,56,48,41,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,52,32,105,116,101,109,50,52,55,54,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,52,53,55,41,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,97,49,57,56,54,57,32,102,110,50,54,48,54,32,111,98,106,50,54,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,49,57,54,50,51,32,115,50,53,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,48,48,41};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,50,50,32,116,97,105,108,50,53,50,52,32,111,114,100,101,114,50,53,50,53,32,108,105,115,50,53,50,54,32,112,50,53,50,55,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,53,51,52,32,46,32,97,114,103,115,50,53,51,53,41,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,51,49,32,116,97,105,108,50,54,51,51,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,50,49,32,116,97,105,108,50,54,50,51,32,111,117,116,50,54,50,52,32,115,117,109,50,54,50,53,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,49,57,32,111,117,116,112,117,116,115,50,54,50,48,41,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,54,49,32,108,97,115,116,50,54,54,51,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,26),40,100,111,50,54,51,55,32,105,50,54,51,57,32,106,50,54,52,48,32,102,50,54,52,49,41,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,35),40,100,111,50,54,53,50,32,116,97,105,108,50,54,53,52,32,112,97,115,116,50,54,53,53,32,105,116,101,109,50,54,53,54,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,49,54,41};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,54,56,49,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,97,50,48,55,52,49,32,110,50,55,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,23),40,97,50,48,55,51,53,32,102,110,50,55,52,53,32,111,98,106,50,55,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,28),40,97,50,48,57,56,55,32,105,116,101,109,50,55,53,55,32,46,32,97,114,103,115,50,55,53,56,41,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,55,53,54,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,48,50,32,46,32,97,114,103,115,50,55,48,51,41};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,49,49,32,116,97,105,108,50,56,49,51,41,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,14),40,97,50,49,52,49,52,32,120,50,56,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,56,55,52,32,110,101,120,116,50,56,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,97,50,49,52,54,50,32,122,50,56,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,14),40,97,50,49,52,55,50,32,122,50,56,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,56,55,57,32,121,50,56,56,48,32,108,50,56,56,49,41,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,16),40,97,50,49,53,55,48,32,114,111,119,51,48,48,56,41};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,56,50,32,105,50,57,56,52,32,109,50,57,56,53,41,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,53,32,108,50,57,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,54,56,32,105,50,57,55,48,32,109,50,57,55,49,41,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,54,50,32,105,50,57,54,52,32,109,50,57,54,53,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,56,56,32,120,50,56,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,53,54,32,116,97,105,108,50,57,53,56,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,52,54,32,105,50,57,52,56,32,109,50,57,52,57,41,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,52,49,32,108,50,57,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,51,54,32,105,50,57,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,97,50,49,56,54,54,32,120,50,57,51,50,32,121,50,57,51,51,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,50,51,32,101,50,57,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,49,55,32,101,50,57,49,57,32,115,50,57,50,48,41,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,48,57,32,116,97,105,108,50,57,49,49,32,108,101,110,50,57,49,50,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,20),40,97,50,50,48,49,53,32,120,50,57,48,55,32,121,50,57,48,56,41,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,29),40,100,111,50,56,57,54,32,112,114,101,118,50,56,57,56,32,106,50,56,57,57,32,120,50,57,48,48,41,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,57,51,32,105,50,56,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,49,57,32,46,32,97,114,103,115,50,56,50,48,41,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,48,53,50,32,115,116,114,105,110,103,51,48,53,51,32,112,111,115,105,116,105,111,110,51,48,53,52,41,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,48,53,57,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,48,54,53,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,48,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,48,56,48,41,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,48,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,48,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,48,56,53,32,116,121,112,101,51,48,56,54,32,112,97,116,116,101,114,110,51,48,56,55,32,112,97,114,115,101,114,51,48,56,56,32,101,109,105,116,101,114,51,48,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,48,57,52,41,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,49,51,56,32,100,101,102,51,49,51,57,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,49,52,49,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,49,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,49,52,52,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,49,52,53,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,49,52,54,32,105,51,49,52,55,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,49,53,49,41,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,49,53,51,32,112,111,115,105,116,105,111,110,51,49,53,52,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,49,53,57,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,49,54,53,41,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,49,55,51,32,112,97,114,115,101,100,51,49,55,52,32,112,111,115,105,116,105,111,110,51,49,55,53,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,49,55,54,41,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,49,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,49,56,54,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,49,57,50,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,50,48,50,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,50,48,51,32,116,121,112,51,50,48,52,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,54,32,105,110,102,111,51,50,48,55,41,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,57,32,100,97,116,97,51,50,49,48,32,105,110,102,111,51,50,49,49,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,50,49,50,32,100,97,116,97,51,50,49,51,32,105,110,102,111,51,50,49,52,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,50,49,55,32,105,110,102,111,51,50,49,56,32,101,114,114,102,51,50,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,50,50,48,32,105,110,102,111,51,50,50,49,32,101,114,114,102,51,50,50,50,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,51,50,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,27),40,102,95,50,51,49,54,51,32,97,114,103,115,51,50,51,53,32,101,114,114,102,51,50,51,54,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,50,51,52,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,52,52,32,116,97,105,108,51,50,52,54,41,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,36),40,102,95,50,51,49,55,49,32,117,110,105,116,51,50,51,56,32,105,110,102,111,51,50,51,57,32,101,114,114,102,51,50,52,48,41,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,50,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,8),40,97,50,51,51,54,57,41};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,26),40,97,50,51,51,55,57,32,97,51,50,55,54,32,98,51,50,55,55,32,99,51,50,55,56,41,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,8),40,97,50,51,52,55,53,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,26),40,97,50,51,52,56,57,32,97,51,50,57,50,32,98,51,50,57,51,32,99,51,50,57,52,41,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,56,55,32,105,51,50,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,8),40,97,50,51,53,52,50,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,97,50,51,53,53,54,32,97,51,51,49,52,32,98,51,51,49,53,32,99,51,51,49,54,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,48,57,32,105,51,51,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,8),40,97,50,51,54,51,49,41};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,26),40,97,50,51,54,51,55,32,97,51,51,51,51,32,98,51,51,51,52,32,99,51,51,51,53,41,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,50,57,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,8),40,97,50,51,54,55,48,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,26),40,97,50,51,54,55,54,32,97,51,51,53,49,32,98,51,51,53,50,32,99,51,51,53,51,41,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,50,54,51,32,116,111,107,101,110,115,51,50,54,52,32,102,111,114,99,101,45,97,110,100,51,50,54,53,32,108,101,118,101,108,51,50,54,54,32,116,114,97,99,101,51,50,54,55,32,101,114,114,102,51,50,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,53,50,56,41,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,53,51,50,41,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,53,52,49,41,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,53,52,50,32,116,121,112,50,51,53,52,51,41,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,57,50,32,116,111,107,115,51,53,57,52,41,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,53,56,56,32,116,121,112,51,53,56,57,41,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,54,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,29),40,100,111,51,54,50,56,32,119,50,51,54,51,48,32,111,107,51,54,51,49,32,108,105,51,54,51,50,41,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,8),40,100,111,51,54,50,54,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,54,50,49,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,55,56,55,32,101,114,114,102,51,55,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,48,53,32,102,52,48,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,57,56,32,102,52,48,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,8),40,97,50,51,50,52,48,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,44),40,97,50,51,50,52,55,32,115,117,99,99,101,115,115,51,50,53,56,32,114,101,115,117,108,116,115,51,50,53,57,32,114,101,109,97,105,110,115,51,50,54,48,41,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,17),40,97,50,51,50,51,52,32,101,114,114,102,51,50,53,54,41,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,57,56,50,32,114,117,108,101,51,57,56,51,32,116,111,107,101,110,115,51,57,56,52,32,116,114,97,99,101,63,51,57,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,50,53,32,116,97,105,108,52,48,50,55,41,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,48,50,51,32,108,101,118,52,48,50,52,41,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,51,51,32,116,97,105,108,52,48,51,53,41,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,48,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,48,52,48,41,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,48,52,50,41,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,48,52,54,41,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,48,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,49,55,56,32,120,52,49,55,57,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,49,56,48,41,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,49,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,49,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,49,57,50,41,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,49,57,51,32,120,52,49,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,49,57,53,41,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,49,57,56,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,50,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,48,54,32,97,52,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,50,48,52,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,49,56,32,108,52,50,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,50,49,54,32,97,99,99,101,115,115,111,114,52,50,49,55,41};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,50,49,51,32,99,108,97,117,115,101,115,52,50,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,50,50,52,32,111,112,115,52,50,50,53,41};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,50,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,50,50,55,32,118,97,108,52,50,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,53,48,32,116,97,105,108,52,50,53,50,41,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,52,53,32,116,97,105,108,52,50,52,55,41,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,20),40,100,111,52,50,51,53,32,104,52,50,51,55,32,108,52,50,51,56,41,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,50,50,57,32,102,111,114,109,115,52,50,51,48,32,97,114,103,115,52,50,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,50,54,52,32,99,108,97,117,115,101,115,52,50,54,53,32,111,112,115,52,50,54,54,41,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,56,52,32,110,101,120,116,52,50,56,54,41,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,50,55,48,32,99,108,97,117,115,101,115,52,50,55,49,32,111,112,115,52,50,55,50,41,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,8),40,97,50,54,56,57,54,41};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,30),40,97,50,54,57,49,52,32,99,108,97,117,115,101,52,51,54,53,32,105,103,110,111,114,101,52,51,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,51,54,50,32,99,108,97,117,115,101,115,52,51,54,51,32,111,112,115,52,51,54,52,41,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,56,51,32,110,101,120,116,52,51,56,53,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,51,54,56,32,99,108,97,117,115,101,115,52,51,54,57,32,111,112,115,52,51,55,48,41};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,53,48,32,110,101,120,116,52,52,53,50,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,52,48,32,99,108,97,117,115,101,115,52,52,52,49,32,111,112,115,52,52,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,56,56,32,110,101,101,100,52,52,57,48,32,110,101,120,116,52,52,57,49,41,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,52,55,56,32,99,108,97,117,115,101,115,52,52,55,57,32,111,112,115,52,52,56,48,41,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,8),40,100,111,52,53,51,50,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,53,50,51,32,99,108,97,117,115,101,115,52,53,50,52,32,111,112,115,52,53,50,53,41};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,53,52,50,32,99,108,97,117,115,101,115,52,53,52,51,32,111,112,115,52,53,52,52,41,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,53,53,54,32,99,108,97,117,115,101,115,52,53,53,55,32,111,112,115,52,53,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,54,50,51,32,116,121,112,101,52,54,50,52,32,97,99,99,52,54,50,53,32,104,101,97,100,52,54,50,54,41,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,54,50,55,41};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,54,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,55,53,32,97,52,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,56,51,32,99,52,53,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,54,48,50,32,99,108,97,117,115,101,115,52,54,48,51,32,111,112,115,52,54,48,52,41,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,55,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,55,48,52,32,99,108,97,117,115,101,115,52,55,48,53,32,111,112,115,52,55,48,54,41,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,55,50,53,32,99,108,97,117,115,101,115,52,55,50,54,32,111,112,115,52,55,50,55,41,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,55,52,49,32,99,108,97,117,115,101,115,52,55,52,50,32,111,112,115,52,55,52,51,41,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,8),40,97,50,56,55,56,55,41};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,20),40,97,50,56,56,48,48,32,97,52,55,54,56,32,98,52,55,54,57,41,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,38),40,100,111,52,55,54,49,32,111,112,52,55,54,51,32,99,108,97,117,115,101,52,55,54,52,32,114,101,109,97,105,110,115,52,55,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,55,53,53,32,99,108,97,117,115,101,115,52,55,53,54,32,111,112,115,52,55,53,55,41,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,8),40,97,50,56,57,53,49,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,20),40,97,50,56,57,54,53,32,97,52,55,57,55,32,98,52,55,57,56,41,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,8),40,97,50,57,48,50,57,41};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,20),40,97,50,57,48,51,53,32,97,52,55,57,52,32,98,52,55,57,53,41,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,55,56,49,32,99,108,97,117,115,101,115,52,55,56,50,32,111,112,115,52,55,56,51,41,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,56,50,52,32,116,121,112,101,52,56,50,53,41,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,97,50,57,49,55,55,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,20),40,97,50,57,49,56,54,32,97,52,56,51,55,32,98,52,56,51,56,41,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,47),40,100,111,52,56,50,56,32,111,112,52,56,51,48,32,99,108,97,117,115,101,52,56,51,49,32,114,101,109,97,105,110,115,52,56,51,50,32,98,111,100,121,52,56,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,56,53,48,32,102,111,114,109,115,52,56,53,49,32,111,112,115,52,56,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,53,57,50,32,97,53,48,50,57,53,48,51,50,32,97,53,48,50,56,53,48,51,51,32,97,53,48,50,55,53,48,51,52,32,97,53,48,50,54,53,48,51,53,32,97,53,48,50,53,53,48,51,54,41,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,57,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,51,48,54,32,97,53,48,52,53,53,48,52,57,32,97,53,48,52,52,53,48,53,48,41,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,48,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,51,51,55,32,97,53,49,50,52,53,49,50,55,32,97,53,49,50,51,53,49,50,56,32,97,53,49,50,50,53,49,50,57,32,97,53,49,50,49,53,49,51,48,32,97,53,49,50,48,53,49,51,49,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,48,53,50,41};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,55,55,54,32,97,53,49,51,57,53,49,52,51,32,97,53,49,51,56,53,49,52,52,41,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,49,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,56,49,48,32,97,53,50,53,53,53,50,53,56,32,97,53,50,53,52,53,50,53,57,32,97,53,50,53,51,53,50,54,48,32,97,53,50,53,50,53,50,54,49,32,97,53,50,53,49,53,50,54,50,41,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,49,52,54,41,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,53,50,52,32,97,53,50,55,49,53,50,55,53,32,97,53,50,55,48,53,50,55,54,41,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,50,54,57,41,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,53,56,32,97,53,51,56,55,53,51,57,48,32,97,53,51,56,54,53,51,57,49,32,97,53,51,56,53,53,51,57,50,32,97,53,51,56,52,53,51,57,51,32,97,53,51,56,51,53,51,57,52,41,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,50,55,56,41,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,50,55,50,32,97,53,52,48,51,53,52,48,55,32,97,53,52,48,50,53,52,48,56,41,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,52,48,49,41};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,51,48,51,32,97,53,52,56,50,53,52,56,53,32,97,53,52,56,49,53,52,56,54,32,97,53,52,56,48,53,52,56,55,32,97,53,52,55,57,53,52,56,56,32,97,53,52,55,56,53,52,56,57,41,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,52,49,48,41,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,55,52,50,32,97,53,52,57,55,53,53,48,49,32,97,53,52,57,54,53,53,48,50,41,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,52,57,53,41};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,55,55,51,32,97,53,53,55,54,53,53,55,57,32,97,53,53,55,53,53,53,56,48,32,97,53,53,55,52,53,53,56,49,32,97,53,53,55,51,53,53,56,50,32,97,53,53,55,50,53,53,56,51,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,53,48,52,41,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,50,49,50,32,97,53,53,57,49,53,53,57,53,32,97,53,53,57,48,53,53,57,54,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,53,56,57,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,50,52,51,32,97,53,54,55,48,53,54,55,51,32,97,53,54,54,57,53,54,55,52,32,97,53,54,54,56,53,54,55,53,32,97,53,54,54,55,53,54,55,54,32,97,53,54,54,54,53,54,55,55,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,53,57,56,41,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,55,48,52,32,97,53,54,57,51,53,54,57,55,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,54,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,55,49,57,32,97,53,55,48,49,53,55,48,53,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,55,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,55,51,52,32,97,53,55,48,57,53,55,49,51,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,55,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,55,52,57,32,97,53,55,49,57,53,55,50,51,32,97,53,55,49,56,53,55,50,52,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,55,49,54,32,116,53,55,49,55,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,55,54,56,32,97,53,55,50,56,53,55,51,50,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,55,56,51,32,97,53,55,51,55,53,55,52,49,32,97,53,55,51,54,53,55,52,50,41,0,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,55,51,52,32,99,53,55,51,53,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,56,48,50,32,97,53,55,52,55,53,55,53,49,32,97,53,55,52,54,53,55,53,50,41,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,55,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,56,50,49,32,97,53,55,53,56,53,55,54,50,32,97,53,55,53,55,53,55,54,51,32,97,53,55,53,54,53,55,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,55,53,52,32,107,53,55,53,53,41,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,56,52,52,32,97,53,55,54,57,53,55,55,51,32,97,53,55,54,56,53,55,55,52,41,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,55,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,56,54,51,32,97,53,55,56,48,53,55,56,52,32,97,53,55,55,57,53,55,56,53,32,97,53,55,55,56,53,55,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,55,55,54,32,118,53,55,55,55,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,56,57,53,32,97,53,55,57,51,53,55,57,55,32,97,53,55,57,50,53,55,57,56,41,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,57,49,49,32,97,53,56,48,49,53,56,48,53,32,97,53,56,48,48,53,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,55,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,57,52,50,32,97,53,56,49,52,53,56,49,56,32,97,53,56,49,51,53,56,49,57,32,97,53,56,49,50,53,56,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,57,54,50,32,97,53,56,50,52,53,56,50,56,32,97,53,56,50,51,53,56,50,57,32,97,53,56,50,50,53,56,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,56,48,56,32,118,53,56,48,57,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,57,56,56,32,97,53,56,51,53,53,56,51,57,32,97,53,56,51,52,53,56,52,48,41,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,56,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,48,48,55,32,97,53,56,52,54,53,56,53,48,32,97,53,56,52,53,53,56,53,49,32,97,53,56,52,52,53,56,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,56,52,50,32,118,53,56,52,51,41,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,51,48,32,97,53,56,54,52,53,56,54,55,32,97,53,56,54,51,53,56,54,56,32,97,53,56,54,50,53,56,54,57,32,97,53,56,54,49,53,56,55,48,32,97,53,56,54,48,53,56,55,49,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,56,53,53,32,100,117,114,53,56,53,54,32,107,101,121,53,56,53,55,32,97,109,112,53,56,53,56,32,99,104,97,110,53,56,53,57,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,53,56,32,97,53,56,56,49,53,56,56,52,32,97,53,56,56,48,53,56,56,53,32,97,53,56,55,57,53,56,56,54,32,97,53,56,55,56,53,56,56,55,32,97,53,56,55,55,53,56,56,56,41,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,56,55,50,32,100,117,114,53,56,55,51,32,107,101,121,53,56,55,52,32,97,109,112,53,56,55,53,32,99,104,97,110,53,56,55,54,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,56,54,32,97,53,56,57,54,53,56,57,57,32,97,53,56,57,53,53,57,48,48,32,97,53,56,57,52,53,57,48,49,32,97,53,56,57,51,53,57,48,50,32,97,53,56,57,50,53,57,48,51,41,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,56,56,57,32,107,101,121,53,56,57,48,32,99,104,97,110,53,56,57,49,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,49,49,52,32,97,53,57,49,50,53,57,49,53,32,97,53,57,49,49,53,57,49,54,32,97,53,57,49,48,53,57,49,55,32,97,53,57,48,57,53,57,49,56,32,97,53,57,48,56,53,57,49,57,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,57,48,52,32,107,101,121,53,57,48,53,32,118,101,108,53,57,48,54,32,99,104,97,110,53,57,48,55,41,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,49,52,50,32,97,53,57,50,56,53,57,51,49,32,97,53,57,50,55,53,57,51,50,32,97,53,57,50,54,53,57,51,51,32,97,53,57,50,53,53,57,51,52,32,97,53,57,50,52,53,57,51,53,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,57,50,48,32,107,101,121,53,57,50,49,32,118,97,108,53,57,50,50,32,99,104,97,110,53,57,50,51,41,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,49,55,48,32,97,53,57,52,52,53,57,52,55,32,97,53,57,52,51,53,57,52,56,32,97,53,57,52,50,53,57,52,57,32,97,53,57,52,49,53,57,53,48,32,97,53,57,52,48,53,57,53,49,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,57,51,54,32,110,117,109,53,57,51,55,32,118,97,108,53,57,51,56,32,99,104,97,110,53,57,51,57,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,49,57,56,32,97,53,57,53,57,53,57,54,50,32,97,53,57,53,56,53,57,54,51,32,97,53,57,53,55,53,57,54,52,32,97,53,57,53,54,53,57,54,53,32,97,53,57,53,53,53,57,54,54,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,57,53,50,32,118,97,108,53,57,53,51,32,99,104,97,110,53,57,53,52,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,50,50,54,32,97,53,57,55,52,53,57,55,55,32,97,53,57,55,51,53,57,55,56,32,97,53,57,55,50,53,57,55,57,32,97,53,57,55,49,53,57,56,48,32,97,53,57,55,48,53,57,56,49,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,57,54,55,32,118,97,108,53,57,54,56,32,99,104,97,110,53,57,54,57,41,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,50,53,52,32,97,53,57,56,57,53,57,57,50,32,97,53,57,56,56,53,57,57,51,32,97,53,57,56,55,53,57,57,52,32,97,53,57,56,54,53,57,57,53,32,97,53,57,56,53,53,57,57,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,57,56,50,32,118,97,108,53,57,56,51,32,99,104,97,110,53,57,56,52,41,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,50,56,50,32,97,53,57,57,56,54,48,48,50,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,57,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,17),40,97,51,52,51,49,53,32,37,101,114,114,54,48,49,49,41,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,8),40,97,51,52,51,51,53,41};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,18),40,97,51,52,51,48,57,32,37,99,111,110,116,54,48,49,48,41,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,17),40,97,51,52,51,48,51,32,37,109,115,103,54,48,48,57,41,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,52,49,32,97,54,48,48,53,54,48,48,56,41,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,52,54,32,97,54,48,49,52,54,48,49,55,41,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,48,48,52,41,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,56,55,32,97,54,48,54,56,54,48,55,49,41,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,18),40,99,115,58,115,99,111,114,101,32,118,97,108,54,48,54,55,41,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,52,48,49,32,97,54,48,55,51,54,48,55,54,41,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,52,49,53,32,97,54,48,56,49,54,48,56,52,41,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,52,49,55,32,97,54,48,55,55,54,48,56,48,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,19),40,99,115,58,114,101,99,111,114,100,32,118,97,108,54,48,55,50,41,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,52,51,56,32,97,54,48,56,55,54,48,57,48,41,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,18),40,99,115,58,116,114,97,99,101,32,118,97,108,54,48,56,54,41,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,52,52,54,41,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,52,55,48,32,97,54,48,57,54,54,48,57,57,32,97,54,48,57,53,54,49,48,48,32,97,54,48,57,52,54,49,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,48,57,51,41,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,53,50,55,32,97,54,49,48,55,54,49,49,48,32,97,54,49,48,54,54,49,49,49,32,97,54,49,48,53,54,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,49,48,52,41,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,56,48,32,97,54,49,53,53,54,49,53,56,32,97,54,49,53,52,54,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,21),40,99,115,58,112,114,105,110,116,32,46,32,97,114,103,115,54,49,49,53,41,0,0,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,56,50,49,32,97,54,50,51,52,54,50,51,55,32,97,54,50,51,51,54,50,51,56,32,97,54,50,51,50,54,50,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,20),40,99,115,58,112,108,97,121,32,46,32,97,114,103,115,54,49,54,52,41,0,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,14),40,100,111,54,50,55,53,32,120,54,50,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,26),40,100,111,54,50,54,49,32,101,54,50,55,50,32,118,54,50,55,51,32,121,54,50,55,52,41,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,50,54,48,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,50,56,54,54,50,57,48,41,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,50,57,50,54,50,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,54,51,48,56,54,51,49,49,41,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,51,49,54,54,51,49,57,32,97,54,51,49,53,54,51,50,48,32,97,54,51,49,52,54,51,50,49,41};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,51,51,54,54,51,51,57,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,53,56,56,32,97,54,51,52,55,54,51,53,49,41,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,51,52,54,41};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,55,49,32,112,54,51,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,51,53,55,32,115,116,97,114,116,54,51,54,51,32,105,100,54,51,54,52,41,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,51,54,48,32,37,115,116,97,114,116,54,51,53,53,54,51,55,57,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,51,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,51,53,51,32,46,32,97,114,103,115,54,51,53,52,41,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,54,51,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,17),40,100,111,54,52,48,48,32,116,97,105,108,54,52,48,50,41,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,51,57,57,41,0,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,52,48,55,32,99,108,97,117,115,101,115,54,52,48,56,32,111,112,115,54,52,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,52,51,55,32,115,116,111,112,54,52,51,56,41,0,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,31),40,97,51,54,51,48,49,32,102,111,114,109,97,108,115,54,52,53,56,32,46,32,98,111,100,121,54,52,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,17),40,97,51,54,51,51,48,32,97,114,103,115,54,52,53,55,41,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,16),40,100,111,54,52,51,48,32,111,112,115,54,52,51,50,41};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,17),40,97,51,54,51,57,57,32,97,114,103,115,52,56,54,51,41,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,16),40,97,51,54,53,52,49,32,115,121,109,52,49,55,54,41};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,16),40,97,51,54,53,52,52,32,115,121,109,52,49,55,52,41};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,24),40,97,51,54,53,55,51,32,118,97,108,52,49,55,50,32,115,121,109,52,49,55,51,41};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,17),40,97,51,54,53,56,55,32,97,114,103,115,52,49,55,49,41,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,54,54,48,49,32,97,114,103,115,51,57,55,55,32,101,114,114,102,51,57,55,56,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,51,54,54,49,53,32,117,110,105,116,51,57,55,57,32,105,110,102,111,51,57,56,48,32,101,114,114,102,51,57,56,49,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,51,54,55,50,49,32,97,114,103,115,51,57,50,54,32,101,114,114,102,51,57,50,55,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,51,56,32,114,101,115,116,51,57,52,48,41,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,26),40,100,111,51,57,54,52,32,97,114,103,115,51,57,54,54,32,116,97,105,108,51,57,54,55,41,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,51,54,55,54,48,32,117,110,105,116,51,57,51,49,32,105,110,102,111,51,57,51,50,32,101,114,114,102,51,57,51,51,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,26),40,97,51,55,49,55,56,32,97,114,103,115,51,57,49,57,32,101,114,114,102,51,57,50,48,41,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,26),40,97,51,55,51,50,51,32,97,114,103,115,51,57,48,53,32,101,114,114,102,51,57,48,54,41,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,55,55,32,116,97,105,108,51,56,55,57,41,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,55,48,32,116,97,105,108,51,56,55,50,41,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,53,56,32,99,108,97,117,115,101,115,51,56,54,48,41,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,53,53,32,116,97,105,108,51,56,53,55,41,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,35),40,97,51,55,51,54,57,32,117,110,105,116,51,57,49,53,32,105,110,102,111,51,57,49,54,32,101,114,114,102,51,57,49,55,41,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,26),40,97,51,55,56,50,51,32,97,114,103,115,51,55,55,49,32,101,114,114,102,51,55,55,50,41,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,57,49,32,117,110,105,116,51,55,56,51,32,105,110,102,111,51,55,56,52,32,101,114,114,102,51,55,56,53,41,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,26),40,97,51,56,48,56,50,32,97,114,103,115,51,55,53,57,32,101,114,114,102,51,55,54,48,41,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,35),40,97,51,56,49,48,56,32,117,110,105,116,51,55,54,52,32,105,110,102,111,51,55,54,53,32,101,114,114,102,51,55,54,54,41,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,26),40,97,51,56,49,57,54,32,97,114,103,115,51,55,51,55,32,101,114,114,102,51,55,51,56,41,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,52,53,32,105,116,101,114,51,55,52,55,41,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,35),40,97,51,56,50,51,57,32,117,110,105,116,51,55,51,57,32,105,110,102,111,51,55,52,48,32,101,114,114,102,51,55,52,49,41,0,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,26),40,97,51,56,52,55,54,32,97,114,103,115,51,55,51,52,32,101,114,114,102,51,55,51,53,41,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,26),40,97,51,56,53,54,50,32,97,114,103,115,51,55,50,54,32,101,114,114,102,51,55,50,55,41,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,14),40,97,51,56,54,49,52,32,101,51,55,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,35),40,97,51,56,54,48,53,32,117,110,105,116,51,55,50,56,32,105,110,102,111,51,55,50,57,32,101,114,114,102,51,55,51,48,41,0,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,26),40,97,51,56,54,54,52,32,97,114,103,115,51,55,49,57,32,101,114,114,102,51,55,50,48,41,0,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,14),40,97,51,56,55,48,53,32,101,51,55,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,35),40,97,51,56,54,57,57,32,117,110,105,116,51,55,50,49,32,105,110,102,111,51,55,50,50,32,101,114,114,102,51,55,50,51,41,0,0,0};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,35),40,97,51,56,55,53,57,32,117,110,105,116,51,55,49,50,32,105,110,102,111,51,55,49,51,32,101,114,114,102,51,55,49,52,41,0,0,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,35),40,97,51,56,56,50,48,32,117,110,105,116,51,55,48,54,32,105,110,102,111,51,55,48,55,32,101,114,114,102,51,55,48,56,41,0,0,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,26),40,97,51,56,56,55,52,32,97,114,103,115,51,55,48,48,32,101,114,114,102,51,55,48,49,41,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,35),40,97,51,56,57,48,52,32,117,110,105,116,51,55,48,50,32,105,110,102,111,51,55,48,51,32,101,114,114,102,51,55,48,52,41,0,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,50,51,32,97,114,103,115,51,54,57,51,32,101,114,114,102,51,54,57,52,41,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,52,57,32,97,114,103,115,51,54,56,48,32,101,114,114,102,51,54,56,49,41,0,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,27),40,97,51,57,50,52,52,32,115,116,114,51,54,57,48,32,46,32,97,114,103,115,51,54,57,49,41,0,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,35),40,97,51,57,50,50,52,32,117,110,105,116,51,54,56,53,32,105,110,102,111,51,54,56,54,32,101,114,114,102,51,54,56,55,41,0,0,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,26),40,97,51,57,51,54,50,32,97,114,103,115,51,54,55,51,32,101,114,114,102,51,54,55,52,41,0,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,35),40,97,51,57,51,56,52,32,117,110,105,116,51,54,55,53,32,105,110,102,111,51,54,55,54,32,101,114,114,102,51,54,55,55,41,0,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,51,55,32,97,114,103,115,51,54,53,57,32,101,114,114,102,51,54,54,48,41,0,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,54,54,32,97,114,103,115,51,54,54,56,41,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,35),40,97,51,57,52,53,57,32,117,110,105,116,51,54,54,49,32,105,110,102,111,51,54,54,50,32,101,114,114,102,51,54,54,51,41,0,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,57,49,32,97,114,103,115,51,54,53,50,32,101,114,114,102,51,54,53,51,41,0,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,49,55,32,117,110,105,116,51,54,53,52,32,105,110,102,111,51,54,53,53,32,101,114,114,102,51,54,53,54,41,0,0,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,26),40,97,51,57,55,50,55,32,97,114,103,115,51,54,52,56,32,101,114,114,102,51,54,52,57,41,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,26),40,97,51,57,56,56,51,32,97,114,103,115,51,54,49,49,32,101,114,114,102,51,54,49,50,41,0,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,35),40,97,51,57,57,48,49,32,117,110,105,116,51,54,49,51,32,105,110,102,111,51,54,49,52,32,101,114,114,102,51,54,49,53,41,0,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,26),40,97,51,57,57,53,52,32,97,114,103,115,51,54,48,53,32,101,114,114,102,51,54,48,54,41,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,26),40,97,52,48,49,48,54,32,97,114,103,115,51,54,48,50,32,101,114,114,102,51,54,48,51,41,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,52,53,32,97,114,103,115,51,53,57,57,32,101,114,114,102,51,54,48,48,41,0,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,26),40,97,52,48,51,54,53,32,97,114,103,115,51,53,55,56,32,101,114,114,102,51,53,55,57,41,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,35),40,97,52,48,51,57,54,32,117,110,105,116,51,53,56,49,32,105,110,102,111,51,53,56,50,32,101,114,114,102,51,53,56,51,41,0,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,26),40,97,52,48,52,56,56,32,97,114,103,115,51,53,55,50,32,101,114,114,102,51,53,55,51,41,0,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,35),40,97,52,48,53,48,54,32,117,110,105,116,51,53,55,52,32,105,110,102,111,51,53,55,53,32,101,114,114,102,51,53,55,54,41,0,0,0};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,35),40,97,52,48,53,56,48,32,117,110,105,116,51,53,54,49,32,105,110,102,111,51,53,54,50,32,101,114,114,102,51,53,54,51,41,0,0,0};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,26),40,97,52,48,54,55,54,32,97,114,103,115,51,53,52,57,32,101,114,114,102,51,53,53,48,41,0,0};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,35),40,97,52,48,54,56,54,32,117,110,105,116,51,53,53,49,32,105,110,102,111,51,53,53,50,32,101,114,114,102,51,53,53,51,41,0,0,0};
static C_char C_TLS li654[] C_aligned={C_lihdr(0,0,20),40,97,52,48,56,54,50,32,117,51,49,57,57,32,112,51,50,48,48,41,0,0,0,0};
static C_char C_TLS li655[] C_aligned={C_lihdr(0,0,20),40,97,52,48,56,56,56,32,101,51,49,55,49,32,112,51,49,55,50,41,0,0,0,0};
static C_char C_TLS li656[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,49,51,52,41,0,0,0,0};
static C_char C_TLS li657[] C_aligned={C_lihdr(0,0,35),40,97,52,48,57,48,50,32,116,121,112,51,49,51,48,32,112,97,116,51,49,51,49,32,46,32,97,114,103,115,51,49,51,50,41,0,0,0};
static C_char C_TLS li658[] C_aligned={C_lihdr(0,0,20),40,97,52,49,48,48,53,32,114,51,49,50,55,32,112,51,49,50,56,41,0,0,0,0};
static C_char C_TLS li659[] C_aligned={C_lihdr(0,0,20),40,97,52,49,48,49,53,32,116,51,48,55,56,32,112,51,48,55,57,41,0,0,0,0};
static C_char C_TLS li660[] C_aligned={C_lihdr(0,0,23),40,97,52,49,48,50,57,32,111,98,106,57,52,57,32,112,111,114,116,57,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li661[] C_aligned={C_lihdr(0,0,71),40,100,111,55,49,50,32,100,55,49,52,32,107,55,49,53,32,112,55,49,54,32,107,60,55,49,55,32,107,62,55,49,56,32,102,55,49,57,32,102,62,55,50,48,32,102,60,55,50,49,32,111,55,50,50,32,120,55,50,51,32,110,55,50,52,32,101,55,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li662[] C_aligned={C_lihdr(0,0,14),40,100,111,55,48,54,32,107,101,121,55,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li663[] C_aligned={C_lihdr(0,0,24),40,97,52,49,50,53,53,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li664[] C_aligned={C_lihdr(0,0,22),40,97,52,49,50,54,49,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li665[] C_aligned={C_lihdr(0,0,24),40,97,52,49,51,49,51,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li666[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k35591 */
static C_word C_fcall stub6348(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6348(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k35576 in hush in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6342)
static void C_ccall stub6342(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6342(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35570 */
C_noret_decl(stub6337)
static void C_ccall stub6337(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6337(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35554 in cont in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6332)
static void C_ccall stub6332(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6332(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35545 in pause in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6328)
static void C_ccall stub6328(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6328(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35536 in paused? in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6324)
static void C_ccall stub6324(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6324(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35530 */
C_noret_decl(stub6317)
static void C_ccall stub6317(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6317(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35510 in scheduler-set-time-milliseconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6309)
static void C_ccall stub6309(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6309(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35501 in time-format in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
C_noret_decl(stub6304)
static void C_ccall stub6304(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6304(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6301(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6301(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6298(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6298(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k35482 in print-error in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k35468 in print-message in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from k34832 */
static C_word C_fcall stub6235(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6235(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
cs_play_score(t0,t1,t2);
return C_r;}

/* from k34587 */
static C_word C_fcall stub6156(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub6156(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
cs_print_score(t0,t1);
return C_r;}

/* from k34534 */
static C_word C_fcall stub6108(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6108(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k34477 */
static C_word C_fcall stub6097(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6097(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_34446 in cs:clear in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6091(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6091(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from f_34438 in cs:trace in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6088(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6088(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_trace_mode(t0);
return C_r;}

/* from f_34415 in k34409 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6082(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6082(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from k34420 */
static C_word C_fcall stub6078(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6078(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
cs_record_start(t0);
return C_r;}

/* from f_34401 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6074(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6074(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from f_34387 in cs:score in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6069(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6069(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_score_mode(t0);
return C_r;}

/* from f_34346 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6015(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6015(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_34341 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub6006(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6006(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k34285 */
static C_word C_fcall stub5999(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5999(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k34273 */
static C_word C_fcall stub5990(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5990(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34245 */
static C_word C_fcall stub5975(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5975(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34217 */
static C_word C_fcall stub5960(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5960(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34189 */
static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34161 */
static C_word C_fcall stub5929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34133 */
static C_word C_fcall stub5913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34105 */
static C_word C_fcall stub5897(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5897(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34077 */
static C_word C_fcall stub5882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34049 */
static C_word C_fcall stub5865(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5865(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34018 */
static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33995 */
static C_word C_fcall stub5836(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5836(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33973 */
static C_word C_fcall stub5825(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5825(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33953 */
static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33918 */
static C_word C_fcall stub5802(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5802(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33902 */
static C_word C_fcall stub5794(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5794(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33874 */
static C_word C_fcall stub5781(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5781(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33851 */
static C_word C_fcall stub5770(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5770(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33832 */
static C_word C_fcall stub5759(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5759(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33809 */
static C_word C_fcall stub5748(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5748(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33790 */
static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k33771 */
static C_word C_fcall stub5729(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5729(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k33756 */
static C_word C_fcall stub5720(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5720(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k33737 */
static C_word C_fcall stub5710(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5710(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k33722 */
static C_word C_fcall stub5702(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5702(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k33707 */
static C_word C_fcall stub5694(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5694(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k33689 */
static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33262 */
static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33219 */
static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32792 */
static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32749 */
static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32322 */
static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32279 */
static C_word C_fcall stub5404(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5404(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31577 */
static C_word C_fcall stub5388(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5388(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31531 */
static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30829 */
static C_word C_fcall stub5256(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5256(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30783 */
static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30356 */
static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30313 */
static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29611 */
static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k8127 */
static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub383(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub380(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k8105 */
static C_word C_fcall stub377(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub377(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub373(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub373(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k8095 */
static C_word C_fcall stub369(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k8088 */
static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k8077 */
static C_word C_fcall stub357(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub357(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k8070 */
static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub346(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub346(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub343(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub340(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub340(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k8050 */
static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k8039 */
static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k8028 */
static C_word C_fcall stub323(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub323(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k8021 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k8011 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k8004 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7997 */
static C_word C_fcall stub301(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub301(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7990 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7971 */
static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7952 */
static C_word C_fcall stub275(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub275(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7945 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7938 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7923 */
static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7912 */
static C_word C_fcall stub250(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub250(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7905 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7878 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7143 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_7125 in cwd in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6518)
static void C_ccall f_6518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6521)
static void C_ccall f_6521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6524)
static void C_ccall f_6524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6527)
static void C_ccall f_6527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41314)
static void C_ccall f_41314(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41314)
static void C_ccall f_41314r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6818)
static void C_ccall f_6818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6822)
static void C_ccall f_6822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41262)
static void C_ccall f_41262(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41309)
static void C_ccall f_41309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41299)
static void C_ccall f_41299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41266)
static void C_ccall f_41266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6825)
static void C_ccall f_6825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41256)
static void C_ccall f_41256(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41256)
static void C_ccall f_41256r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7118)
static void C_ccall f_7118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10186)
static void C_ccall f_10186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41040)
static void C_fcall f_41040(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41254)
static void C_ccall f_41254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41074)
static void C_ccall f_41074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41086)
static void C_ccall f_41086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41090)
static void C_ccall f_41090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41094)
static void C_ccall f_41094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41238)
static void C_ccall f_41238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41100)
static void C_fcall f_41100(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_41120)
static void C_fcall f_41120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41123)
static void C_fcall f_41123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41131)
static void C_ccall f_41131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41138)
static void C_ccall f_41138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41141)
static void C_ccall f_41141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41145)
static void C_ccall f_41145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41152)
static void C_ccall f_41152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41155)
static void C_ccall f_41155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41159)
static void C_ccall f_41159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41166)
static void C_ccall f_41166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41110)
static void C_ccall f_41110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41063)
static void C_ccall f_41063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41053)
static void C_ccall f_41053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41056)
static void C_ccall f_41056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10189)
static void C_ccall f_10189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41030)
static void C_ccall f_41030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41038)
static void C_ccall f_41038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11254)
static void C_ccall f_11254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41016)
static void C_ccall f_41016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41024)
static void C_ccall f_41024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41028)
static void C_ccall f_41028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22409)
static void C_ccall f_22409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22460)
static void C_ccall f_22460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41006)
static void C_ccall f_41006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41014)
static void C_ccall f_41014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22565)
static void C_ccall f_22565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40903)
static void C_ccall f_40903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_40903)
static void C_ccall f_40903r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_40966)
static void C_ccall f_40966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40970)
static void C_ccall f_40970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40984)
static void C_fcall f_40984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40906)
static void C_fcall f_40906(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40926)
static void C_ccall f_40926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40930)
static void C_ccall f_40930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22568)
static void C_ccall f_22568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40889)
static void C_ccall f_40889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40897)
static void C_ccall f_40897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40901)
static void C_ccall f_40901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22761)
static void C_ccall f_22761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40863)
static void C_ccall f_40863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40867)
static void C_ccall f_40867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40873)
static void C_ccall f_40873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40884)
static void C_ccall f_40884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40880)
static void C_ccall f_40880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22830)
static void C_ccall f_22830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40841)
static void C_ccall f_40841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24075)
static void C_ccall f_24075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40821)
static void C_ccall f_40821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24078)
static void C_ccall f_24078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40781)
static void C_ccall f_40781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24081)
static void C_ccall f_24081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40687)
static void C_ccall f_40687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40691)
static void C_ccall f_40691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40694)
static void C_ccall f_40694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40712)
static void C_ccall f_40712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40715)
static void C_ccall f_40715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40746)
static void C_ccall f_40746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40718)
static void C_fcall f_40718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40724)
static void C_ccall f_40724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40677)
static void C_ccall f_40677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40671)
static void C_ccall f_40671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24084)
static void C_ccall f_24084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40579)
static void C_ccall f_40579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40581)
static void C_ccall f_40581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40585)
static void C_ccall f_40585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40588)
static void C_ccall f_40588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40591)
static void C_ccall f_40591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40631)
static void C_ccall f_40631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40623)
static void C_ccall f_40623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40594)
static void C_ccall f_40594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40597)
static void C_ccall f_40597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40600)
static void C_ccall f_40600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40571)
static void C_ccall f_40571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24087)
static void C_ccall f_24087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40543)
static void C_ccall f_40543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24090)
static void C_ccall f_24090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40507)
static void C_ccall f_40507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40519)
static void C_ccall f_40519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40515)
static void C_ccall f_40515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40489)
static void C_ccall f_40489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40483)
static void C_ccall f_40483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24093)
static void C_ccall f_24093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40397)
static void C_ccall f_40397(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40401)
static void C_ccall f_40401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40404)
static void C_ccall f_40404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40407)
static void C_ccall f_40407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40420)
static void C_ccall f_40420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40366)
static void C_ccall f_40366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40370)
static void C_ccall f_40370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40385)
static void C_ccall f_40385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40360)
static void C_ccall f_40360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24096)
static void C_ccall f_24096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40246)
static void C_ccall f_40246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40262)
static void C_ccall f_40262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40273)
static void C_ccall f_40273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40240)
static void C_ccall f_40240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24152)
static void C_ccall f_24152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40107)
static void C_ccall f_40107(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40130)
static void C_ccall f_40130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40127)
static void C_ccall f_40127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40101)
static void C_ccall f_40101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24155)
static void C_ccall f_24155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39955)
static void C_ccall f_39955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39973)
static void C_ccall f_39973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39982)
static void C_ccall f_39982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39949)
static void C_ccall f_39949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24158)
static void C_ccall f_24158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39902)
static void C_ccall f_39902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39906)
static void C_ccall f_39906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39909)
static void C_ccall f_39909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39925)
static void C_ccall f_39925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39884)
static void C_ccall f_39884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39878)
static void C_ccall f_39878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24161)
static void C_ccall f_24161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39802)
static void C_ccall f_39802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24300)
static void C_ccall f_24300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39728)
static void C_ccall f_39728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39735)
static void C_ccall f_39735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39722)
static void C_ccall f_39722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24303)
static void C_ccall f_24303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39618)
static void C_ccall f_39618(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39626)
static void C_ccall f_39626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39592)
static void C_ccall f_39592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39609)
static void C_ccall f_39609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39600)
static void C_fcall f_39600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39586)
static void C_ccall f_39586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24306)
static void C_ccall f_24306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39542)
static void C_ccall f_39542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24309)
static void C_ccall f_24309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39460)
static void C_ccall f_39460(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39471)
static void C_ccall f_39471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39473)
static void C_fcall f_39473(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39502)
static void C_ccall f_39502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39438)
static void C_ccall f_39438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39454)
static void C_ccall f_39454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39432)
static void C_ccall f_39432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24312)
static void C_ccall f_24312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39385)
static void C_ccall f_39385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39389)
static void C_ccall f_39389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39396)
static void C_ccall f_39396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39363)
static void C_ccall f_39363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39379)
static void C_ccall f_39379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39357)
static void C_ccall f_39357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24315)
static void C_ccall f_24315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39225)
static void C_ccall f_39225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39265)
static void C_ccall f_39265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39229)
static void C_ccall f_39229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39245)
static void C_ccall f_39245(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39245)
static void C_ccall f_39245r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39257)
static void C_ccall f_39257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39261)
static void C_ccall f_39261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39253)
static void C_ccall f_39253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39150)
static void C_ccall f_39150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39193)
static void C_ccall f_39193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39197)
static void C_ccall f_39197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39157)
static void C_fcall f_39157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39168)
static void C_ccall f_39168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39144)
static void C_ccall f_39144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39124)
static void C_ccall f_39124(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39118)
static void C_ccall f_39118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24321)
static void C_ccall f_24321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39098)
static void C_ccall f_39098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39102)
static void C_ccall f_39102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39090)
static void C_ccall f_39090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24324)
static void C_ccall f_24324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39070)
static void C_ccall f_39070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39074)
static void C_ccall f_39074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39062)
static void C_ccall f_39062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24327)
static void C_ccall f_24327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39042)
static void C_ccall f_39042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39046)
static void C_ccall f_39046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39034)
static void C_ccall f_39034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24330)
static void C_ccall f_24330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39014)
static void C_ccall f_39014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39018)
static void C_ccall f_39018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39006)
static void C_ccall f_39006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24333)
static void C_ccall f_24333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38905)
static void C_ccall f_38905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38875)
static void C_ccall f_38875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38899)
static void C_ccall f_38899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38869)
static void C_ccall f_38869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24336)
static void C_ccall f_24336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38819)
static void C_ccall f_38819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38821)
static void C_ccall f_38821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38825)
static void C_ccall f_38825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38853)
static void C_ccall f_38853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38845)
static void C_ccall f_38845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38841)
static void C_ccall f_38841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38828)
static void C_ccall f_38828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38811)
static void C_ccall f_38811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24339)
static void C_ccall f_24339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38758)
static void C_ccall f_38758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38760)
static void C_ccall f_38760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38764)
static void C_ccall f_38764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38795)
static void C_ccall f_38795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38787)
static void C_ccall f_38787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38783)
static void C_ccall f_38783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38767)
static void C_ccall f_38767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38770)
static void C_ccall f_38770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38750)
static void C_ccall f_38750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24342)
static void C_ccall f_24342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38700)
static void C_ccall f_38700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38714)
static void C_ccall f_38714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38706)
static void C_ccall f_38706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38665)
static void C_ccall f_38665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38698)
static void C_ccall f_38698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38659)
static void C_ccall f_38659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24345)
static void C_ccall f_24345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38606)
static void C_ccall f_38606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38610)
static void C_ccall f_38610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38623)
static void C_ccall f_38623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38615)
static void C_ccall f_38615(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38563)
static void C_ccall f_38563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38596)
static void C_ccall f_38596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38557)
static void C_ccall f_38557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24348)
static void C_ccall f_24348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38477)
static void C_ccall f_38477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38471)
static void C_ccall f_38471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24351)
static void C_ccall f_24351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38240)
static void C_ccall f_38240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38244)
static void C_ccall f_38244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38252)
static void C_fcall f_38252(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38275)
static void C_ccall f_38275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38278)
static void C_ccall f_38278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38281)
static void C_ccall f_38281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38284)
static void C_ccall f_38284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38344)
static void C_ccall f_38344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38351)
static void C_ccall f_38351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38361)
static void C_ccall f_38361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38371)
static void C_ccall f_38371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38385)
static void C_ccall f_38385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38395)
static void C_ccall f_38395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38405)
static void C_ccall f_38405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38415)
static void C_ccall f_38415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38287)
static void C_fcall f_38287(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38311)
static void C_fcall f_38311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38290)
static void C_fcall f_38290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38197)
static void C_ccall f_38197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38230)
static void C_ccall f_38230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38191)
static void C_ccall f_38191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24354)
static void C_ccall f_24354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38109)
static void C_ccall f_38109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38113)
static void C_ccall f_38113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38119)
static void C_ccall f_38119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38139)
static void C_ccall f_38139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38083)
static void C_ccall f_38083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38093)
static void C_fcall f_38093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38077)
static void C_ccall f_38077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24357)
static void C_ccall f_24357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37892)
static void C_ccall f_37892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37896)
static void C_ccall f_37896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37902)
static void C_ccall f_37902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37911)
static void C_ccall f_37911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37949)
static void C_ccall f_37949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37941)
static void C_ccall f_37941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37918)
static void C_ccall f_37918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37922)
static void C_ccall f_37922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37824)
static void C_ccall f_37824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37843)
static void C_ccall f_37843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37878)
static void C_ccall f_37878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37849)
static void C_fcall f_37849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37853)
static void C_ccall f_37853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37867)
static void C_ccall f_37867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37856)
static void C_fcall f_37856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37837)
static void C_fcall f_37837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37818)
static void C_ccall f_37818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24360)
static void C_ccall f_24360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37546)
static void C_ccall f_37546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24883)
static void C_ccall f_24883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37498)
static void C_ccall f_37498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37490)
static void C_ccall f_37490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24886)
static void C_ccall f_24886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37370)
static void C_ccall f_37370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24892)
static void C_ccall f_24892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25428)
static void C_ccall f_25428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25462)
static void C_ccall f_25462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25454)
static void C_ccall f_25454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25450)
static void C_ccall f_25450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25435)
static void C_ccall f_25435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25439)
static void C_ccall f_25439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25432)
static void C_ccall f_25432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24910)
static void C_fcall f_24910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25421)
static void C_ccall f_25421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25417)
static void C_ccall f_25417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24917)
static void C_fcall f_24917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25292)
static void C_fcall f_25292(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25313)
static void C_ccall f_25313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25315)
static void C_fcall f_25315(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25329)
static void C_ccall f_25329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25382)
static void C_ccall f_25382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25332)
static void C_fcall f_25332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25367)
static void C_ccall f_25367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25335)
static void C_fcall f_25335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25348)
static void C_ccall f_25348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25360)
static void C_ccall f_25360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25352)
static void C_ccall f_25352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25338)
static void C_fcall f_25338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25302)
static void C_ccall f_25302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24920)
static void C_ccall f_24920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25256)
static void C_fcall f_25256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25282)
static void C_ccall f_25282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25267)
static void C_ccall f_25267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24926)
static void C_ccall f_24926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24930)
static void C_ccall f_24930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25133)
static void C_ccall f_25133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25137)
static void C_ccall f_25137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25141)
static void C_ccall f_25141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25184)
static void C_fcall f_25184(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25194)
static void C_ccall f_25194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25197)
static void C_ccall f_25197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25218)
static void C_ccall f_25218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25200)
static void C_fcall f_25200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25204)
static void C_ccall f_25204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25144)
static void C_ccall f_25144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25147)
static void C_fcall f_25147(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24933)
static void C_fcall f_24933(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24937)
static void C_ccall f_24937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24940)
static void C_fcall f_24940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25093)
static void C_ccall f_25093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25101)
static void C_ccall f_25101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25097)
static void C_ccall f_25097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24943)
static void C_fcall f_24943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24971)
static void C_ccall f_24971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24974)
static void C_ccall f_24974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24977)
static void C_ccall f_24977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24980)
static void C_ccall f_24980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24983)
static void C_ccall f_24983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25042)
static void C_ccall f_25042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37324)
static void C_ccall f_37324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37340)
static void C_ccall f_37340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37343)
static void C_ccall f_37343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37346)
static void C_fcall f_37346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37349)
static void C_fcall f_37349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37360)
static void C_ccall f_37360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37318)
static void C_ccall f_37318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25469)
static void C_ccall f_25469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37179)
static void C_ccall f_37179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37218)
static void C_ccall f_37218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37192)
static void C_fcall f_37192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37173)
static void C_ccall f_37173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25472)
static void C_ccall f_25472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36761)
static void C_ccall f_36761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36765)
static void C_ccall f_36765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36777)
static void C_ccall f_36777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36835)
static void C_ccall f_36835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36838)
static void C_ccall f_36838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36841)
static void C_ccall f_36841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37053)
static void C_ccall f_37053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36991)
static void C_ccall f_36991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37025)
static void C_ccall f_37025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37000)
static void C_fcall f_37000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37011)
static void C_ccall f_37011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37007)
static void C_ccall f_37007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36850)
static void C_fcall f_36850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36928)
static void C_ccall f_36928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36969)
static void C_ccall f_36969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36973)
static void C_ccall f_36973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36977)
static void C_ccall f_36977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36932)
static void C_ccall f_36932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36936)
static void C_ccall f_36936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36963)
static void C_ccall f_36963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36939)
static void C_fcall f_36939(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36853)
static void C_fcall f_36853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36925)
static void C_ccall f_36925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36867)
static void C_ccall f_36867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36869)
static void C_fcall f_36869(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36917)
static void C_ccall f_36917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36888)
static void C_ccall f_36888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36905)
static void C_ccall f_36905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36891)
static void C_fcall f_36891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36884)
static void C_ccall f_36884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36856)
static void C_ccall f_36856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36786)
static void C_fcall f_36786(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36796)
static void C_ccall f_36796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36802)
static void C_ccall f_36802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36774)
static void C_ccall f_36774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36722)
static void C_ccall f_36722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36739)
static void C_ccall f_36739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36755)
static void C_ccall f_36755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36733)
static void C_fcall f_36733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36716)
static void C_ccall f_36716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25475)
static void C_ccall f_25475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36640)
static void C_ccall f_36640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25478)
static void C_ccall f_25478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36616)
static void C_ccall f_36616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36628)
static void C_ccall f_36628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36624)
static void C_ccall f_36624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36602)
static void C_ccall f_36602(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36610)
static void C_ccall f_36610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36596)
static void C_ccall f_36596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25481)
static void C_ccall f_25481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36588)
static void C_ccall f_36588(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29252)
static void C_ccall f_29252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29255)
static void C_ccall f_29255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29421)
static void C_ccall f_29421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29417)
static void C_ccall f_29417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29407)
static void C_fcall f_29407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29262)
static void C_ccall f_29262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29266)
static void C_ccall f_29266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29269)
static void C_fcall f_29269(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29280)
static void C_ccall f_29280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_ccall f_29288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29360)
static void C_ccall f_29360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29368)
static void C_ccall f_29368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29364)
static void C_ccall f_29364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29356)
static void C_ccall f_29356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29352)
static void C_ccall f_29352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29324)
static void C_ccall f_29324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29320)
static void C_ccall f_29320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_ccall f_29284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25899)
static void C_ccall f_25899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36574)
static void C_ccall f_36574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25902)
static void C_ccall f_25902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36545)
static void C_ccall f_36545(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36549)
static void C_ccall f_36549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25905)
static void C_ccall f_25905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36542)
static void C_ccall f_36542(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25908)
static void C_ccall f_25908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36400)
static void C_ccall f_36400(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29434)
static void C_ccall f_29434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29566)
static void C_ccall f_29566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29437)
static void C_ccall f_29437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29448)
static void C_ccall f_29448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29456)
static void C_ccall f_29456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29480)
static void C_ccall f_29480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29483)
static void C_fcall f_29483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29491)
static void C_ccall f_29491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29499)
static void C_ccall f_29499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29519)
static void C_ccall f_29519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29515)
static void C_ccall f_29515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29495)
static void C_ccall f_29495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29487)
static void C_ccall f_29487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29476)
static void C_ccall f_29476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29452)
static void C_ccall f_29452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29428)
static void C_ccall f_29428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34350)
static void C_ccall f_34350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34353)
static void C_ccall f_34353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34356)
static void C_ccall f_34356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34359)
static void C_ccall f_34359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34362)
static void C_ccall f_34362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34365)
static void C_ccall f_34365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34368)
static void C_ccall f_34368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34371)
static void C_ccall f_34371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34374)
static void C_ccall f_34374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34377)
static void C_ccall f_34377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34380)
static void C_ccall f_34380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35252)
static void C_ccall f_35252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35255)
static void C_ccall f_35255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35258)
static void C_ccall f_35258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35261)
static void C_ccall f_35261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35264)
static void C_ccall f_35264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35267)
static void C_ccall f_35267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35270)
static void C_ccall f_35270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35273)
static void C_ccall f_35273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36337)
static void C_fcall f_36337(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36365)
static void C_fcall f_36365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36004)
static void C_ccall f_36004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36331)
static void C_ccall f_36331(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36049)
static void C_ccall f_36049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36055)
static void C_ccall f_36055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36058)
static void C_ccall f_36058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36061)
static void C_ccall f_36061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36065)
static void C_ccall f_36065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36275)
static void C_ccall f_36275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36287)
static void C_ccall f_36287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36283)
static void C_ccall f_36283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36068)
static void C_fcall f_36068(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36232)
static void C_fcall f_36232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36268)
static void C_ccall f_36268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36261)
static void C_ccall f_36261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36071)
static void C_ccall f_36071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36170)
static void C_ccall f_36170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36178)
static void C_ccall f_36178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36174)
static void C_ccall f_36174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36166)
static void C_ccall f_36166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36162)
static void C_ccall f_36162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36118)
static void C_ccall f_36118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36114)
static void C_ccall f_36114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36081)
static void C_fcall f_36081(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36092)
static void C_ccall f_36092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36100)
static void C_ccall f_36100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36096)
static void C_ccall f_36096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36294)
static void C_ccall f_36294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36302)
static void C_ccall f_36302(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_36302)
static void C_ccall f_36302r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_36316)
static void C_fcall f_36316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36306)
static void C_ccall f_36306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36297)
static void C_ccall f_36297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36300)
static void C_ccall f_36300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36006)
static void C_fcall f_36006(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36022)
static void C_ccall f_36022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35933)
static void C_ccall f_35933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35944)
static void C_ccall f_35944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35947)
static void C_fcall f_35947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35954)
static void C_ccall f_35954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35923)
static void C_ccall f_35923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35578)
static void C_ccall f_35578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35927)
static void C_ccall f_35927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35883)
static void C_fcall f_35883(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35893)
static void C_ccall f_35893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35869)
static void C_ccall f_35869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35856)
static void C_ccall f_35856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35556)
static void C_ccall f_35556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35860)
static void C_ccall f_35860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35850)
static void C_ccall f_35850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35538)
static void C_ccall f_35538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35841)
static void C_ccall f_35841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35547)
static void C_ccall f_35547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35845)
static void C_ccall f_35845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35778)
static void C_ccall f_35778(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35778)
static void C_ccall f_35778r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35803)
static void C_fcall f_35803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35503)
static void C_ccall f_35503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35791)
static void C_ccall f_35791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35602)
static void C_ccall f_35602(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35602)
static void C_ccall f_35602r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35729)
static void C_fcall f_35729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35724)
static void C_fcall f_35724(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35604)
static void C_fcall f_35604(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35723)
static void C_ccall f_35723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35719)
static void C_ccall f_35719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35711)
static void C_ccall f_35711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35675)
static void C_fcall f_35675(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35708)
static void C_ccall f_35708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35704)
static void C_ccall f_35704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35685)
static void C_ccall f_35685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35664)
static void C_ccall f_35664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35634)
static void C_fcall f_35634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35606)
static void C_fcall f_35606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35583)
static void C_ccall f_35583(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35588)
static void C_ccall f_35588(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35593)
static void C_ccall f_35593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35561)
static void C_fcall f_35561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35565)
static void C_ccall f_35565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35517)
static void C_fcall f_35517(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35521)
static void C_ccall f_35521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35508)
static void C_fcall f_35508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35512)
static void C_ccall f_35512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35496)
static void C_ccall f_35496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35493)
static void C_ccall f_35493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35479)
static void C_ccall f_35479(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35484)
static void C_ccall f_35484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35465)
static void C_ccall f_35465(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35470)
static void C_ccall f_35470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35275)
static void C_ccall f_35275(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35336)
static void C_ccall f_35336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35338)
static void C_fcall f_35338(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35348)
static void C_ccall f_35348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35367)
static void C_fcall f_35367(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35407)
static void C_ccall f_35407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35449)
static void C_ccall f_35449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35419)
static void C_ccall f_35419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35404)
static void C_fcall f_35404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35322)
static void C_ccall f_35322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35287)
static void C_ccall f_35287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35314)
static void C_ccall f_35314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35295)
static void C_ccall f_35295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35302)
static void C_ccall f_35302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35306)
static void C_ccall f_35306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35310)
static void C_ccall f_35310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35387)
static void C_ccall f_35387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35365)
static void C_ccall f_35365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35351)
static void C_ccall f_35351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35354)
static void C_ccall f_35354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35329)
static void C_ccall f_35329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34801)
static void C_ccall f_34801(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34801)
static void C_ccall f_34801r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35228)
static void C_ccall f_35228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35243)
static void C_ccall f_35243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35235)
static void C_ccall f_35235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35199)
static void C_ccall f_35199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35203)
static void C_ccall f_35203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35164)
static void C_ccall f_35164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35168)
static void C_ccall f_35168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35129)
static void C_ccall f_35129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35133)
static void C_ccall f_35133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34805)
static void C_fcall f_34805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35093)
static void C_ccall f_35093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35108)
static void C_ccall f_35108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35100)
static void C_ccall f_35100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35064)
static void C_ccall f_35064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35068)
static void C_ccall f_35068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35029)
static void C_ccall f_35029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35033)
static void C_ccall f_35033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34994)
static void C_ccall f_34994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34998)
static void C_ccall f_34998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34808)
static void C_fcall f_34808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34958)
static void C_ccall f_34958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34973)
static void C_ccall f_34973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34965)
static void C_ccall f_34965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34929)
static void C_ccall f_34929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34933)
static void C_ccall f_34933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34894)
static void C_ccall f_34894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34898)
static void C_ccall f_34898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34859)
static void C_ccall f_34859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34863)
static void C_ccall f_34863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34811)
static void C_fcall f_34811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34814)
static void C_ccall f_34814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34817)
static void C_fcall f_34817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34821)
static void C_ccall f_34821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34563)
static void C_ccall f_34563(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34563)
static void C_ccall f_34563r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34778)
static void C_ccall f_34778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34793)
static void C_ccall f_34793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34785)
static void C_ccall f_34785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34749)
static void C_ccall f_34749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34753)
static void C_ccall f_34753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34714)
static void C_ccall f_34714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34718)
static void C_ccall f_34718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34567)
static void C_fcall f_34567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34678)
static void C_ccall f_34678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34693)
static void C_ccall f_34693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34685)
static void C_ccall f_34685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34649)
static void C_ccall f_34649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34653)
static void C_ccall f_34653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34614)
static void C_ccall f_34614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34618)
static void C_ccall f_34618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34570)
static void C_fcall f_34570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34573)
static void C_ccall f_34573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34576)
static void C_fcall f_34576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34580)
static void C_ccall f_34580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34506)
static void C_ccall f_34506(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34506)
static void C_ccall f_34506r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34539)
static void C_fcall f_34539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34519)
static void C_fcall f_34519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34527)
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34510)
static void C_ccall f_34510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34449)
static void C_ccall f_34449(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34449)
static void C_ccall f_34449r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34482)
static void C_fcall f_34482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34462)
static void C_fcall f_34462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34470)
static void C_ccall f_34470(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34453)
static void C_ccall f_34453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34441)
static void C_ccall f_34441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34446)
static void C_ccall f_34446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34433)
static void C_ccall f_34433(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34438)
static void C_ccall f_34438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34390)
static void C_ccall f_34390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34417)
static void C_ccall f_34417(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34411)
static void C_ccall f_34411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34415)
static void C_ccall f_34415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34401)
static void C_ccall f_34401(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34382)
static void C_ccall f_34382(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34387)
static void C_ccall f_34387(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34292)
static void C_ccall f_34292(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34346)
static void C_ccall f_34346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34341)
static void C_ccall f_34341(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34304)
static void C_ccall f_34304(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34310)
static void C_ccall f_34310(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34336)
static void C_ccall f_34336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34340)
static void C_ccall f_34340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34316)
static void C_ccall f_34316(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34334)
static void C_ccall f_34334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34331)
static void C_ccall f_34331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34327)
static void C_ccall f_34327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34320)
static void C_ccall f_34320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34277)
static void C_ccall f_34277(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34282)
static void C_ccall f_34282(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34249)
static void C_ccall f_34249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34254)
static void C_ccall f_34254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34221)
static void C_ccall f_34221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34226)
static void C_ccall f_34226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34193)
static void C_ccall f_34193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34198)
static void C_ccall f_34198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34165)
static void C_ccall f_34165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34170)
static void C_ccall f_34170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34137)
static void C_ccall f_34137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34142)
static void C_ccall f_34142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34109)
static void C_ccall f_34109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34114)
static void C_ccall f_34114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34081)
static void C_ccall f_34081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34086)
static void C_ccall f_34086(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34053)
static void C_ccall f_34053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34058)
static void C_ccall f_34058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34025)
static void C_ccall f_34025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34030)
static void C_ccall f_34030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34002)
static void C_ccall f_34002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34007)
static void C_ccall f_34007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34006)
static void C_ccall f_34006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33983)
static void C_ccall f_33983(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33988)
static void C_ccall f_33988(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33928)
static void C_ccall f_33928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33935)
static void C_ccall f_33935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33938)
static void C_ccall f_33938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33962)
static void C_ccall f_33962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33942)
static void C_ccall f_33942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33932)
static void C_ccall f_33932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33881)
static void C_ccall f_33881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33888)
static void C_ccall f_33888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33891)
static void C_ccall f_33891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33911)
static void C_ccall f_33911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33895)
static void C_ccall f_33895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33858)
static void C_ccall f_33858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33863)
static void C_ccall f_33863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33862)
static void C_ccall f_33862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33839)
static void C_ccall f_33839(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33844)
static void C_ccall f_33844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33816)
static void C_ccall f_33816(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33821)
static void C_ccall f_33821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33820)
static void C_ccall f_33820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33797)
static void C_ccall f_33797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33802)
static void C_ccall f_33802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33778)
static void C_ccall f_33778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33783)
static void C_ccall f_33783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33782)
static void C_ccall f_33782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33763)
static void C_ccall f_33763(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33744)
static void C_ccall f_33744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33749)
static void C_ccall f_33749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33748)
static void C_ccall f_33748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33729)
static void C_ccall f_33729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33734)
static void C_ccall f_33734(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33714)
static void C_ccall f_33714(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33719)
static void C_ccall f_33719(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33696)
static void C_ccall f_33696(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33704)
static void C_ccall f_33704(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33700)
static void C_ccall f_33700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33226)
static void C_ccall f_33226(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33226)
static void C_ccall f_33226r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33654)
static void C_ccall f_33654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33669)
static void C_ccall f_33669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33661)
static void C_ccall f_33661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33625)
static void C_ccall f_33625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33629)
static void C_ccall f_33629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33590)
static void C_ccall f_33590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33594)
static void C_ccall f_33594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33555)
static void C_ccall f_33555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33559)
static void C_ccall f_33559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33230)
static void C_fcall f_33230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33519)
static void C_ccall f_33519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33534)
static void C_ccall f_33534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33526)
static void C_ccall f_33526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33490)
static void C_ccall f_33490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33494)
static void C_ccall f_33494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33455)
static void C_ccall f_33455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33459)
static void C_ccall f_33459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33420)
static void C_ccall f_33420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33424)
static void C_ccall f_33424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33233)
static void C_fcall f_33233(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33384)
static void C_ccall f_33384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33399)
static void C_ccall f_33399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33391)
static void C_ccall f_33391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33355)
static void C_ccall f_33355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33359)
static void C_ccall f_33359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33320)
static void C_ccall f_33320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33324)
static void C_ccall f_33324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33285)
static void C_ccall f_33285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33289)
static void C_ccall f_33289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33236)
static void C_fcall f_33236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33239)
static void C_ccall f_33239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33243)
static void C_ccall f_33243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33207)
static void C_ccall f_33207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33212)
static void C_ccall f_33212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32756)
static void C_ccall f_32756(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32756)
static void C_ccall f_32756r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33184)
static void C_ccall f_33184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33199)
static void C_ccall f_33199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33191)
static void C_ccall f_33191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33155)
static void C_ccall f_33155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33159)
static void C_ccall f_33159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33120)
static void C_ccall f_33120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33124)
static void C_ccall f_33124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33085)
static void C_ccall f_33085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33089)
static void C_ccall f_33089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32760)
static void C_fcall f_32760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33049)
static void C_ccall f_33049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33064)
static void C_ccall f_33064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33056)
static void C_ccall f_33056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33020)
static void C_ccall f_33020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33024)
static void C_ccall f_33024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32985)
static void C_ccall f_32985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32989)
static void C_ccall f_32989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32950)
static void C_ccall f_32950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32954)
static void C_ccall f_32954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32763)
static void C_fcall f_32763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32914)
static void C_ccall f_32914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32929)
static void C_ccall f_32929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32921)
static void C_ccall f_32921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32885)
static void C_ccall f_32885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32889)
static void C_ccall f_32889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32854)
static void C_ccall f_32854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32815)
static void C_ccall f_32815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32819)
static void C_ccall f_32819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32766)
static void C_fcall f_32766(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32769)
static void C_ccall f_32769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32773)
static void C_ccall f_32773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32737)
static void C_ccall f_32737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32742)
static void C_ccall f_32742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32286)
static void C_ccall f_32286(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32286)
static void C_ccall f_32286r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32714)
static void C_ccall f_32714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32729)
static void C_ccall f_32729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32721)
static void C_ccall f_32721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32685)
static void C_ccall f_32685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32689)
static void C_ccall f_32689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32650)
static void C_ccall f_32650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32654)
static void C_ccall f_32654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32615)
static void C_ccall f_32615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32619)
static void C_ccall f_32619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32290)
static void C_fcall f_32290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32579)
static void C_ccall f_32579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32594)
static void C_ccall f_32594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32586)
static void C_ccall f_32586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32550)
static void C_ccall f_32550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32554)
static void C_ccall f_32554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32515)
static void C_ccall f_32515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32519)
static void C_ccall f_32519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32480)
static void C_ccall f_32480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32484)
static void C_ccall f_32484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32293)
static void C_fcall f_32293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32444)
static void C_ccall f_32444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32459)
static void C_ccall f_32459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32451)
static void C_ccall f_32451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32415)
static void C_ccall f_32415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32419)
static void C_ccall f_32419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32380)
static void C_ccall f_32380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32384)
static void C_ccall f_32384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32345)
static void C_ccall f_32345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32349)
static void C_ccall f_32349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32296)
static void C_fcall f_32296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32299)
static void C_ccall f_32299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32303)
static void C_ccall f_32303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32267)
static void C_ccall f_32267(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32272)
static void C_ccall f_32272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31538)
static void C_ccall f_31538(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31538)
static void C_ccall f_31538r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32244)
static void C_ccall f_32244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32259)
static void C_ccall f_32259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32251)
static void C_ccall f_32251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32215)
static void C_ccall f_32215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32219)
static void C_ccall f_32219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32180)
static void C_ccall f_32180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32184)
static void C_ccall f_32184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32145)
static void C_ccall f_32145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32149)
static void C_ccall f_32149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32110)
static void C_ccall f_32110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32114)
static void C_ccall f_32114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31542)
static void C_fcall f_31542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32074)
static void C_ccall f_32074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32089)
static void C_ccall f_32089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32081)
static void C_ccall f_32081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32045)
static void C_ccall f_32045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32049)
static void C_ccall f_32049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32010)
static void C_ccall f_32010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32014)
static void C_ccall f_32014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31975)
static void C_ccall f_31975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31979)
static void C_ccall f_31979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31940)
static void C_ccall f_31940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31944)
static void C_ccall f_31944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31545)
static void C_fcall f_31545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31904)
static void C_ccall f_31904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31919)
static void C_ccall f_31919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31911)
static void C_ccall f_31911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31875)
static void C_ccall f_31875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31879)
static void C_ccall f_31879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31840)
static void C_ccall f_31840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31844)
static void C_ccall f_31844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31805)
static void C_ccall f_31805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31809)
static void C_ccall f_31809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31770)
static void C_ccall f_31770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31774)
static void C_ccall f_31774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31548)
static void C_fcall f_31548(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31734)
static void C_ccall f_31734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31749)
static void C_ccall f_31749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31741)
static void C_ccall f_31741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31705)
static void C_ccall f_31705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31709)
static void C_ccall f_31709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31670)
static void C_ccall f_31670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31674)
static void C_ccall f_31674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31635)
static void C_ccall f_31635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31639)
static void C_ccall f_31639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31600)
static void C_ccall f_31600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31604)
static void C_ccall f_31604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31551)
static void C_fcall f_31551(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31554)
static void C_ccall f_31554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31558)
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31519)
static void C_ccall f_31519(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31524)
static void C_ccall f_31524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30790)
static void C_ccall f_30790(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30790)
static void C_ccall f_30790r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31496)
static void C_ccall f_31496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31511)
static void C_ccall f_31511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31503)
static void C_ccall f_31503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31467)
static void C_ccall f_31467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31471)
static void C_ccall f_31471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31432)
static void C_ccall f_31432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31436)
static void C_ccall f_31436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31397)
static void C_ccall f_31397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31401)
static void C_ccall f_31401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31362)
static void C_ccall f_31362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31366)
static void C_ccall f_31366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30794)
static void C_fcall f_30794(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31326)
static void C_ccall f_31326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31341)
static void C_ccall f_31341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31333)
static void C_ccall f_31333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31297)
static void C_ccall f_31297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31301)
static void C_ccall f_31301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31262)
static void C_ccall f_31262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31266)
static void C_ccall f_31266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31227)
static void C_ccall f_31227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31231)
static void C_ccall f_31231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31192)
static void C_ccall f_31192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31196)
static void C_ccall f_31196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30797)
static void C_fcall f_30797(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31156)
static void C_ccall f_31156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31171)
static void C_ccall f_31171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31163)
static void C_ccall f_31163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31127)
static void C_ccall f_31127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31131)
static void C_ccall f_31131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31092)
static void C_ccall f_31092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31096)
static void C_ccall f_31096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31057)
static void C_ccall f_31057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31061)
static void C_ccall f_31061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31022)
static void C_ccall f_31022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31026)
static void C_ccall f_31026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30800)
static void C_fcall f_30800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30986)
static void C_ccall f_30986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31001)
static void C_ccall f_31001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30993)
static void C_ccall f_30993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30957)
static void C_ccall f_30957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30961)
static void C_ccall f_30961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30922)
static void C_ccall f_30922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30926)
static void C_ccall f_30926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30887)
static void C_ccall f_30887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30891)
static void C_ccall f_30891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30852)
static void C_ccall f_30852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30856)
static void C_ccall f_30856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30803)
static void C_fcall f_30803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30806)
static void C_ccall f_30806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30810)
static void C_ccall f_30810(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30771)
static void C_ccall f_30771(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30776)
static void C_ccall f_30776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30320)
static void C_ccall f_30320(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30320)
static void C_ccall f_30320r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30748)
static void C_ccall f_30748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30763)
static void C_ccall f_30763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30755)
static void C_ccall f_30755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30719)
static void C_ccall f_30719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30723)
static void C_ccall f_30723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30684)
static void C_ccall f_30684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30688)
static void C_ccall f_30688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30649)
static void C_ccall f_30649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30653)
static void C_ccall f_30653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30324)
static void C_fcall f_30324(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30613)
static void C_ccall f_30613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30628)
static void C_ccall f_30628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30620)
static void C_ccall f_30620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30584)
static void C_ccall f_30584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30588)
static void C_ccall f_30588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30549)
static void C_ccall f_30549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30553)
static void C_ccall f_30553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30514)
static void C_ccall f_30514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30518)
static void C_ccall f_30518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30327)
static void C_fcall f_30327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30478)
static void C_ccall f_30478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30493)
static void C_ccall f_30493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30485)
static void C_ccall f_30485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30453)
static void C_ccall f_30453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30414)
static void C_ccall f_30414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30418)
static void C_ccall f_30418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30379)
static void C_ccall f_30379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30383)
static void C_ccall f_30383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30330)
static void C_fcall f_30330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30333)
static void C_ccall f_30333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30337)
static void C_ccall f_30337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30301)
static void C_ccall f_30301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30306)
static void C_ccall f_30306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29572)
static void C_ccall f_29572(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29572)
static void C_ccall f_29572r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30278)
static void C_ccall f_30278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30293)
static void C_ccall f_30293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30285)
static void C_ccall f_30285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30249)
static void C_ccall f_30249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30253)
static void C_ccall f_30253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30214)
static void C_ccall f_30214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30218)
static void C_ccall f_30218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30179)
static void C_ccall f_30179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30183)
static void C_ccall f_30183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30144)
static void C_ccall f_30144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30148)
static void C_ccall f_30148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29576)
static void C_fcall f_29576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30108)
static void C_ccall f_30108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30123)
static void C_ccall f_30123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30115)
static void C_ccall f_30115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30079)
static void C_ccall f_30079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30083)
static void C_ccall f_30083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30044)
static void C_ccall f_30044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30048)
static void C_ccall f_30048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30009)
static void C_ccall f_30009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30013)
static void C_ccall f_30013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29974)
static void C_ccall f_29974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29978)
static void C_ccall f_29978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29579)
static void C_fcall f_29579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29938)
static void C_ccall f_29938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29953)
static void C_ccall f_29953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29945)
static void C_ccall f_29945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29909)
static void C_ccall f_29909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29913)
static void C_ccall f_29913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29874)
static void C_ccall f_29874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29878)
static void C_ccall f_29878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29839)
static void C_ccall f_29839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29843)
static void C_ccall f_29843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29804)
static void C_ccall f_29804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29808)
static void C_ccall f_29808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29582)
static void C_fcall f_29582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29768)
static void C_ccall f_29768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29783)
static void C_ccall f_29783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29775)
static void C_ccall f_29775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29739)
static void C_ccall f_29739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29743)
static void C_ccall f_29743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29704)
static void C_ccall f_29704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29708)
static void C_ccall f_29708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29669)
static void C_ccall f_29669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29673)
static void C_ccall f_29673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29634)
static void C_ccall f_29634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29638)
static void C_ccall f_29638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29585)
static void C_fcall f_29585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29588)
static void C_ccall f_29588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29592)
static void C_ccall f_29592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29234)
static void C_fcall f_29234(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29074)
static void C_fcall f_29074(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29109)
static void C_fcall f_29109(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29119)
static void C_fcall f_29119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29123)
static void C_ccall f_29123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29126)
static void C_ccall f_29126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29187)
static void C_ccall f_29187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29178)
static void C_ccall f_29178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29129)
static void C_ccall f_29129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29148)
static void C_ccall f_29148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29155)
static void C_ccall f_29155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29132)
static void C_ccall f_29132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29138)
static void C_ccall f_29138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29107)
static void C_ccall f_29107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29082)
static void C_fcall f_29082(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29081)
static void C_ccall f_29081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29242)
static void C_fcall f_29242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28820)
static void C_ccall f_28820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28842)
static void C_ccall f_28842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28857)
static void C_ccall f_28857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28860)
static void C_fcall f_28860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29036)
static void C_ccall f_29036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29030)
static void C_ccall f_29030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28863)
static void C_ccall f_28863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29012)
static void C_ccall f_29012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28866)
static void C_fcall f_28866(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28869)
static void C_ccall f_28869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29005)
static void C_ccall f_29005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28993)
static void C_ccall f_28993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28889)
static void C_fcall f_28889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28896)
static void C_ccall f_28896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28966)
static void C_ccall f_28966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28952)
static void C_ccall f_28952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28960)
static void C_ccall f_28960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28899)
static void C_ccall f_28899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28938)
static void C_ccall f_28938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28902)
static void C_fcall f_28902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28931)
static void C_ccall f_28931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28908)
static void C_ccall f_28908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28911)
static void C_ccall f_28911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28915)
static void C_ccall f_28915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28876)
static void C_fcall f_28876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28879)
static void C_ccall f_28879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28689)
static void C_fcall f_28689(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28698)
static void C_fcall f_28698(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28646)
static void C_ccall f_28646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28652)
static void C_fcall f_28652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28715)
static void C_ccall f_28715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28801)
static void C_ccall f_28801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28788)
static void C_ccall f_28788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28796)
static void C_ccall f_28796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28718)
static void C_ccall f_28718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28722)
static void C_ccall f_28722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28765)
static void C_ccall f_28765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28727)
static void C_ccall f_28727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28693)
static void C_ccall f_28693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28588)
static void C_ccall f_28588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28595)
static void C_ccall f_28595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28626)
static void C_ccall f_28626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28622)
static void C_ccall f_28622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28614)
static void C_ccall f_28614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28497)
static void C_ccall f_28497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28504)
static void C_ccall f_28504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28572)
static void C_ccall f_28572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28515)
static void C_fcall f_28515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28542)
static void C_ccall f_28542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28526)
static void C_ccall f_28526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28431)
static void C_ccall f_28431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28442)
static void C_ccall f_28442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28445)
static void C_fcall f_28445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28452)
static void C_ccall f_28452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28425)
static void C_ccall f_28425(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27879)
static void C_ccall f_27879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27910)
static void C_ccall f_27910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28374)
static void C_ccall f_28374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28380)
static void C_ccall f_28380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27921)
static void C_ccall f_27921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27806)
static void C_fcall f_27806(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27831)
static void C_ccall f_27831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27766)
static void C_fcall f_27766(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27779)
static void C_fcall f_27779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27820)
static void C_ccall f_27820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27925)
static void C_ccall f_27925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28362)
static void C_ccall f_28362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28358)
static void C_fcall f_28358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28354)
static void C_ccall f_28354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27928)
static void C_ccall f_27928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28148)
static void C_fcall f_28148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28257)
static void C_ccall f_28257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28322)
static void C_ccall f_28322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28264)
static void C_fcall f_28264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28268)
static void C_ccall f_28268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28272)
static void C_ccall f_28272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28314)
static void C_ccall f_28314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28310)
static void C_ccall f_28310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28288)
static void C_ccall f_28288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28151)
static void C_fcall f_28151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28154)
static void C_fcall f_28154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28053)
static void C_ccall f_28053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28136)
static void C_ccall f_28136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28103)
static void C_ccall f_28103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28129)
static void C_ccall f_28129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28111)
static void C_ccall f_28111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28059)
static void C_fcall f_28059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28099)
static void C_ccall f_28099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28041)
static void C_ccall f_28041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28012)
static void C_ccall f_28012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28034)
static void C_ccall f_28034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28020)
static void C_ccall f_28020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27974)
static void C_fcall f_27974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27931)
static void C_fcall f_27931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27942)
static void C_ccall f_27942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27946)
static void C_ccall f_27946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27950)
static void C_ccall f_27950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27954)
static void C_ccall f_27954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27938)
static void C_ccall f_27938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27898)
static void C_fcall f_27898(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27893)
static void C_fcall f_27893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27888)
static void C_fcall f_27888(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27720)
static void C_ccall f_27720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27731)
static void C_ccall f_27731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27746)
static void C_ccall f_27746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27682)
static void C_ccall f_27682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27693)
static void C_ccall f_27693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27708)
static void C_ccall f_27708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27615)
static void C_ccall f_27615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27635)
static void C_fcall f_27635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27645)
static void C_ccall f_27645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27658)
static void C_ccall f_27658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27626)
static void C_ccall f_27626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27633)
static void C_ccall f_27633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27422)
static void C_ccall f_27422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27482)
static void C_fcall f_27482(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27492)
static void C_ccall f_27492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27606)
static void C_ccall f_27606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27571)
static void C_ccall f_27571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27563)
static void C_ccall f_27563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27534)
static void C_ccall f_27534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27512)
static void C_ccall f_27512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27515)
static void C_ccall f_27515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27503)
static void C_ccall f_27503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27429)
static void C_ccall f_27429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27480)
static void C_ccall f_27480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27472)
static void C_ccall f_27472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27432)
static void C_ccall f_27432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27443)
static void C_ccall f_27443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27447)
static void C_ccall f_27447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27439)
static void C_ccall f_27439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27280)
static void C_ccall f_27280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27328)
static void C_fcall f_27328(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27338)
static void C_ccall f_27338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27349)
static void C_ccall f_27349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27386)
static void C_ccall f_27386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27361)
static void C_ccall f_27361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27290)
static void C_ccall f_27290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27326)
static void C_ccall f_27326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27297)
static void C_ccall f_27297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26929)
static void C_ccall f_26929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26936)
static void C_ccall f_26936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27170)
static void C_fcall f_27170(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27180)
static void C_ccall f_27180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27191)
static void C_ccall f_27191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27203)
static void C_fcall f_27203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27206)
static void C_ccall f_27206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27194)
static void C_ccall f_27194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26942)
static void C_ccall f_26942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27168)
static void C_ccall f_27168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27164)
static void C_ccall f_27164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27110)
static void C_fcall f_27110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27075)
static void C_fcall f_27075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27091)
static void C_fcall f_27091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27046)
static void C_fcall f_27046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26970)
static void C_ccall f_26970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26973)
static void C_ccall f_26973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27037)
static void C_ccall f_27037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27033)
static void C_ccall f_27033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26953)
static void C_fcall f_26953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26964)
static void C_ccall f_26964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26960)
static void C_ccall f_26960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26882)
static void C_ccall f_26882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26915)
static void C_ccall f_26915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26897)
static void C_ccall f_26897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26909)
static void C_ccall f_26909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26500)
static void C_ccall f_26500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26709)
static void C_fcall f_26709(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26719)
static void C_ccall f_26719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26730)
static void C_ccall f_26730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26850)
static void C_ccall f_26850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26829)
static void C_ccall f_26829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26808)
static void C_ccall f_26808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26787)
static void C_ccall f_26787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26766)
static void C_ccall f_26766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26745)
static void C_ccall f_26745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26733)
static void C_ccall f_26733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26510)
static void C_ccall f_26510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26513)
static void C_fcall f_26513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26676)
static void C_fcall f_26676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26516)
static void C_fcall f_26516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26667)
static void C_ccall f_26667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26647)
static void C_ccall f_26647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26519)
static void C_fcall f_26519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26612)
static void C_ccall f_26612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26629)
static void C_ccall f_26629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26522)
static void C_fcall f_26522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26561)
static void C_ccall f_26561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26595)
static void C_ccall f_26595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26579)
static void C_ccall f_26579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26564)
static void C_fcall f_26564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26529)
static void C_fcall f_26529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26540)
static void C_ccall f_26540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26544)
static void C_ccall f_26544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26536)
static void C_ccall f_26536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26418)
static void C_ccall f_26418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26422)
static void C_ccall f_26422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26440)
static void C_ccall f_26440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26258)
static void C_fcall f_26258(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26266)
static void C_fcall f_26266(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26314)
static void C_ccall f_26314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26317)
static void C_ccall f_26317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26320)
static void C_ccall f_26320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26395)
static void C_fcall f_26395(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26405)
static void C_ccall f_26405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26323)
static void C_ccall f_26323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26326)
static void C_ccall f_26326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26329)
static void C_ccall f_26329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26349)
static void C_fcall f_26349(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26359)
static void C_ccall f_26359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26362)
static void C_ccall f_26362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26365)
static void C_ccall f_26365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26332)
static void C_ccall f_26332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26335)
static void C_ccall f_26335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26252)
static void C_fcall f_26252(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26246)
static void C_fcall f_26246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26240)
static void C_fcall f_26240(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26169)
static void C_fcall f_26169(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26210)
static void C_ccall f_26210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26214)
static void C_ccall f_26214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26218)
static void C_ccall f_26218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26222)
static void C_ccall f_26222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26226)
static void C_ccall f_26226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26230)
static void C_ccall f_26230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26234)
static void C_ccall f_26234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26238)
static void C_ccall f_26238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26171)
static void C_fcall f_26171(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26177)
static void C_fcall f_26177(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26199)
static void C_ccall f_26199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26188)
static void C_ccall f_26188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26018)
static void C_fcall f_26018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26033)
static void C_fcall f_26033(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26006)
static void C_ccall f_26006(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25994)
static void C_ccall f_25994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25982)
static void C_ccall f_25982(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25976)
static void C_fcall f_25976(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25970)
static void C_ccall f_25970(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25958)
static void C_ccall f_25958(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25946)
static void C_ccall f_25946(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25934)
static void C_ccall f_25934(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25922)
static void C_ccall f_25922(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25916)
static void C_fcall f_25916(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25880)
static void C_ccall f_25880(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25874)
static void C_ccall f_25874(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25827)
static void C_ccall f_25827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25831)
static void C_ccall f_25831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25847)
static void C_ccall f_25847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25856)
static void C_ccall f_25856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25834)
static void C_ccall f_25834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25818)
static void C_ccall f_25818(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25822)
static void C_ccall f_25822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25665)
static void C_ccall f_25665(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25665)
static void C_ccall f_25665r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25792)
static void C_fcall f_25792(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25805)
static void C_ccall f_25805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25787)
static void C_ccall f_25787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25668)
static void C_fcall f_25668(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25784)
static void C_ccall f_25784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25768)
static void C_ccall f_25768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25696)
static void C_ccall f_25696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25704)
static void C_fcall f_25704(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25714)
static void C_ccall f_25714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25717)
static void C_ccall f_25717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25699)
static void C_ccall f_25699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25488)
static void C_ccall f_25488(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_25492)
static void C_ccall f_25492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25497)
static void C_ccall f_25497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25500)
static void C_fcall f_25500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23235)
static void C_ccall f_23235(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23248)
static void C_ccall f_23248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23255)
static void C_fcall f_23255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23262)
static void C_ccall f_23262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23241)
static void C_ccall f_23241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25504)
static void C_ccall f_25504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25541)
static void C_ccall f_25541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25634)
static void C_fcall f_25634(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25644)
static void C_fcall f_25644(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25547)
static void C_ccall f_25547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25604)
static void C_fcall f_25604(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25614)
static void C_fcall f_25614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25555)
static void C_ccall f_25555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25569)
static void C_ccall f_25569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25573)
static void C_ccall f_25573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25577)
static void C_ccall f_25577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25581)
static void C_ccall f_25581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25588)
static void C_ccall f_25588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25565)
static void C_ccall f_25565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25558)
static void C_ccall f_25558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25507)
static void C_ccall f_25507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24362)
static void C_ccall f_24362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24375)
static void C_ccall f_24375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24425)
static void C_ccall f_24425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24522)
static void C_ccall f_24522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24590)
static void C_ccall f_24590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24847)
static void C_ccall f_24847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24597)
static void C_fcall f_24597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24835)
static void C_ccall f_24835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24786)
static void C_ccall f_24786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24792)
static void C_ccall f_24792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24816)
static void C_ccall f_24816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24812)
static void C_ccall f_24812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24800)
static void C_ccall f_24800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24600)
static void C_fcall f_24600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24762)
static void C_ccall f_24762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24766)
static void C_ccall f_24766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24603)
static void C_fcall f_24603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24739)
static void C_ccall f_24739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24743)
static void C_ccall f_24743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24606)
static void C_fcall f_24606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24716)
static void C_ccall f_24716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24720)
static void C_ccall f_24720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24609)
static void C_fcall f_24609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24641)
static void C_ccall f_24641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24659)
static void C_ccall f_24659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24677)
static void C_ccall f_24677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24695)
static void C_ccall f_24695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24612)
static void C_fcall f_24612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24616)
static void C_ccall f_24616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24526)
static void C_ccall f_24526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24530)
static void C_ccall f_24530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24534)
static void C_ccall f_24534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24429)
static void C_ccall f_24429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24433)
static void C_ccall f_24433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24437)
static void C_ccall f_24437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24456)
static void C_ccall f_24456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24460)
static void C_ccall f_24460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24440)
static void C_fcall f_24440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24444)
static void C_ccall f_24444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24379)
static void C_ccall f_24379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24383)
static void C_ccall f_24383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24387)
static void C_ccall f_24387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24369)
static void C_fcall f_24369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24184)
static void C_fcall f_24184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24196)
static void C_fcall f_24196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24215)
static void C_ccall f_24215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24233)
static void C_fcall f_24233(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24265)
static void C_ccall f_24265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24268)
static void C_fcall f_24268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24247)
static void C_ccall f_24247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24218)
static void C_ccall f_24218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24163)
static void C_fcall f_24163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24170)
static void C_ccall f_24170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24173)
static void C_ccall f_24173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24179)
static void C_ccall f_24179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24098)
static void C_fcall f_24098(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24107)
static void C_fcall f_24107(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24130)
static void C_ccall f_24130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_fcall f_24120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24054)
static void C_fcall f_24054(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24042)
static void C_fcall f_24042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23940)
static void C_fcall f_23940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23892)
static void C_fcall f_23892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23273)
static void C_fcall f_23273(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23277)
static void C_ccall f_23277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23280)
static void C_ccall f_23280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23706)
static void C_ccall f_23706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23702)
static void C_ccall f_23702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23698)
static void C_ccall f_23698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23283)
static void C_fcall f_23283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23406)
static void C_ccall f_23406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22639)
static void C_ccall f_22639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23412)
static void C_fcall f_23412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22655)
static void C_ccall f_22655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23500)
static void C_fcall f_23500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23570)
static void C_ccall f_23570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22671)
static void C_ccall f_22671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23573)
static void C_fcall f_23573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22703)
static void C_ccall f_22703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23651)
static void C_fcall f_23651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23677)
static void C_ccall f_23677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23671)
static void C_ccall f_23671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23660)
static void C_ccall f_23660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23602)
static void C_fcall f_23602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23612)
static void C_ccall f_23612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23638)
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23632)
static void C_ccall f_23632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23615)
static void C_ccall f_23615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23625)
static void C_ccall f_23625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23618)
static void C_fcall f_23618(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23579)
static void C_ccall f_23579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23588)
static void C_ccall f_23588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23582)
static void C_fcall f_23582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23506)
static void C_ccall f_23506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23524)
static void C_fcall f_23524(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23557)
static void C_ccall f_23557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23543)
static void C_ccall f_23543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23551)
static void C_ccall f_23551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23534)
static void C_ccall f_23534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23509)
static void C_ccall f_23509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23421)
static void C_ccall f_23421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23443)
static void C_fcall f_23443(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23490)
static void C_ccall f_23490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23476)
static void C_ccall f_23476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23484)
static void C_ccall f_23484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23456)
static void C_ccall f_23456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23459)
static void C_fcall f_23459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23424)
static void C_ccall f_23424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23441)
static void C_ccall f_23441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23427)
static void C_fcall f_23427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23292)
static void C_ccall f_23292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23298)
static void C_ccall f_23298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23356)
static void C_ccall f_23356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23359)
static void C_ccall f_23359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23380)
static void C_ccall f_23380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23391)
static void C_ccall f_23391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23370)
static void C_ccall f_23370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23304)
static void C_ccall f_23304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23314)
static void C_ccall f_23314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23350)
static void C_ccall f_23350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23320)
static void C_ccall f_23320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23335)
static void C_ccall f_23335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23339)
static void C_ccall f_23339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23343)
static void C_ccall f_23343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23327)
static void C_ccall f_23327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23169)
static void C_fcall f_23169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23171)
static void C_ccall f_23171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23219)
static void C_ccall f_23219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23175)
static void C_ccall f_23175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23178)
static void C_fcall f_23178(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23183)
static void C_fcall f_23183(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23204)
static void C_ccall f_23204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23161)
static void C_fcall f_23161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23163)
static void C_ccall f_23163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22984)
static void C_ccall f_22984(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22984)
static void C_ccall f_22984r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22992)
static void C_ccall f_22992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22953)
static void C_fcall f_22953(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22970)
static void C_ccall f_22970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22974)
static void C_ccall f_22974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22920)
static void C_fcall f_22920(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22927)
static void C_ccall f_22927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22871)
static void C_ccall f_22871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22878)
static void C_ccall f_22878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22936)
static void C_ccall f_22936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23159)
static void C_ccall f_23159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23136)
static void C_ccall f_23136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23152)
static void C_ccall f_23152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22998)
static void C_ccall f_22998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23001)
static void C_ccall f_23001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23025)
static void C_ccall f_23025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23082)
static void C_ccall f_23082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23088)
static void C_ccall f_23088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23097)
static void C_ccall f_23097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23106)
static void C_ccall f_23106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23115)
static void C_ccall f_23115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23124)
static void C_ccall f_23124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23076)
static void C_ccall f_23076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23031)
static void C_ccall f_23031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23037)
static void C_ccall f_23037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23043)
static void C_ccall f_23043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23049)
static void C_ccall f_23049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23055)
static void C_ccall f_23055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23061)
static void C_ccall f_23061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22902)
static void C_fcall f_22902(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22909)
static void C_ccall f_22909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22892)
static void C_fcall f_22892(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22880)
static void C_fcall f_22880(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22848)
static void C_fcall f_22848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22855)
static void C_ccall f_22855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22862)
static void C_ccall f_22862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22832)
static void C_fcall f_22832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22839)
static void C_ccall f_22839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22846)
static void C_ccall f_22846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22820)
static void C_fcall f_22820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22802)
static void C_fcall f_22802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22784)
static void C_fcall f_22784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22769)
static void C_fcall f_22769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22763)
static void C_fcall f_22763(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22751)
static void C_fcall f_22751(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22733)
static void C_fcall f_22733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22712)
static void C_fcall f_22712(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22680)
static void C_fcall f_22680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22687)
static void C_ccall f_22687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22622)
static void C_fcall f_22622(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22630)
static void C_ccall f_22630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22612)
static void C_fcall f_22612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_ccall f_22620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22606)
static void C_fcall f_22606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22594)
static void C_fcall f_22594(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22591)
static void C_ccall f_22591(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22570)
static void C_fcall f_22570(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22483)
static void C_fcall f_22483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22462)
static void C_fcall f_22462(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22452)
static void C_fcall f_22452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22440)
static void C_fcall f_22440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22411)
static void C_ccall f_22411(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22399)
static void C_fcall f_22399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22381)
static void C_fcall f_22381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22363)
static void C_fcall f_22363(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22342)
static void C_ccall f_22342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21320)
static void C_ccall f_21320(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21320)
static void C_ccall f_21320r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22319)
static void C_ccall f_22319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22334)
static void C_ccall f_22334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22326)
static void C_ccall f_22326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22290)
static void C_ccall f_22290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22294)
static void C_ccall f_22294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22255)
static void C_ccall f_22255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22259)
static void C_ccall f_22259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21330)
static void C_fcall f_21330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22219)
static void C_ccall f_22219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22234)
static void C_ccall f_22234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22226)
static void C_ccall f_22226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22190)
static void C_ccall f_22190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22194)
static void C_ccall f_22194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22155)
static void C_ccall f_22155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22159)
static void C_ccall f_22159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21333)
static void C_fcall f_21333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21336)
static void C_ccall f_21336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21341)
static void C_ccall f_21341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22048)
static void C_fcall f_22048(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22071)
static void C_fcall f_22071(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22124)
static void C_ccall f_22124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22106)
static void C_fcall f_22106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22099)
static void C_ccall f_22099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22081)
static void C_ccall f_22081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22058)
static void C_ccall f_22058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21535)
static void C_ccall f_21535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22010)
static void C_fcall f_22010(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22032)
static void C_ccall f_22032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22016)
static void C_ccall f_22016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22024)
static void C_ccall f_22024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22028)
static void C_ccall f_22028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22014)
static void C_ccall f_22014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22004)
static void C_ccall f_22004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21538)
static void C_fcall f_21538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21881)
static void C_fcall f_21881(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21905)
static void C_ccall f_21905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21967)
static void C_fcall f_21967(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21908)
static void C_ccall f_21908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21924)
static void C_fcall f_21924(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21949)
static void C_ccall f_21949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21915)
static void C_ccall f_21915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21892)
static void C_ccall f_21892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21541)
static void C_ccall f_21541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21867)
static void C_ccall f_21867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21545)
static void C_ccall f_21545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21589)
static void C_ccall f_21589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21592)
static void C_ccall f_21592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21848)
static void C_fcall f_21848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21858)
static void C_ccall f_21858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21595)
static void C_ccall f_21595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21786)
static void C_fcall f_21786(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21796)
static void C_ccall f_21796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21799)
static void C_ccall f_21799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21819)
static void C_ccall f_21819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21821)
static void C_fcall f_21821(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21831)
static void C_ccall f_21831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21805)
static void C_ccall f_21805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21808)
static void C_ccall f_21808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21598)
static void C_ccall f_21598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21606)
static void C_fcall f_21606(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21619)
static void C_ccall f_21619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21493)
static void C_ccall f_21493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21502)
static void C_fcall f_21502(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21513)
static void C_ccall f_21513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21622)
static void C_ccall f_21622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21759)
static void C_fcall f_21759(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21769)
static void C_ccall f_21769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21628)
static void C_ccall f_21628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21730)
static void C_ccall f_21730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21732)
static void C_fcall f_21732(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21742)
static void C_ccall f_21742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21631)
static void C_ccall f_21631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21643)
static void C_fcall f_21643(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21669)
static void C_ccall f_21669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21675)
static void C_ccall f_21675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21681)
static void C_ccall f_21681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21691)
static void C_ccall f_21691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21693)
static void C_fcall f_21693(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21703)
static void C_ccall f_21703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21684)
static void C_ccall f_21684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21656)
static void C_ccall f_21656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21634)
static void C_ccall f_21634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21601)
static void C_ccall f_21601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21548)
static void C_ccall f_21548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21571)
static void C_ccall f_21571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21560)
static void C_ccall f_21560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21425)
static void C_fcall f_21425(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21473)
static void C_ccall f_21473(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21435)
static void C_ccall f_21435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21463)
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21438)
static void C_ccall f_21438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21343)
static void C_fcall f_21343(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21415)
static void C_ccall f_21415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21347)
static void C_ccall f_21347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21365)
static void C_ccall f_21365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21397)
static void C_ccall f_21397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21226)
static void C_ccall f_21226(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21230)
static void C_ccall f_21230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21259)
static void C_ccall f_21259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21264)
static void C_fcall f_21264(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21289)
static void C_fcall f_21289(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21274)
static void C_ccall f_21274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20708)
static void C_ccall f_20708(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20708)
static void C_ccall f_20708r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20979)
static void C_ccall f_20979(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20983)
static void C_ccall f_20983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20988)
static void C_ccall f_20988(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20988)
static void C_ccall f_20988r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21194)
static void C_ccall f_21194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21209)
static void C_ccall f_21209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21201)
static void C_ccall f_21201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21165)
static void C_ccall f_21165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21169)
static void C_ccall f_21169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21130)
static void C_ccall f_21130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21134)
static void C_ccall f_21134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20992)
static void C_fcall f_20992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21094)
static void C_ccall f_21094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21109)
static void C_ccall f_21109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21101)
static void C_ccall f_21101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21065)
static void C_ccall f_21065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21069)
static void C_ccall f_21069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21030)
static void C_ccall f_21030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21034)
static void C_ccall f_21034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20995)
static void C_fcall f_20995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20998)
static void C_ccall f_20998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21001)
static void C_fcall f_21001(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20712)
static void C_ccall f_20712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20939)
static void C_ccall f_20939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20954)
static void C_ccall f_20954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20946)
static void C_ccall f_20946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20910)
static void C_ccall f_20910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20914)
static void C_ccall f_20914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20875)
static void C_ccall f_20875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20879)
static void C_ccall f_20879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20715)
static void C_fcall f_20715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20839)
static void C_ccall f_20839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20854)
static void C_ccall f_20854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20846)
static void C_ccall f_20846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20810)
static void C_ccall f_20810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20814)
static void C_ccall f_20814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20775)
static void C_ccall f_20775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20779)
static void C_ccall f_20779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20718)
static void C_fcall f_20718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20721)
static void C_ccall f_20721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20724)
static void C_ccall f_20724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20736)
static void C_ccall f_20736(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20754)
static void C_ccall f_20754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20742)
static void C_ccall f_20742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20730)
static void C_ccall f_20730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20645)
static void C_fcall f_20645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20305)
static void C_ccall f_20305(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20487)
static void C_ccall f_20487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20491)
static void C_ccall f_20491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20493)
static void C_fcall f_20493(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20418)
static void C_fcall f_20418(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20428)
static void C_fcall f_20428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20435)
static void C_fcall f_20435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20503)
static void C_ccall f_20503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20506)
static void C_ccall f_20506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20510)
static void C_ccall f_20510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20530)
static void C_fcall f_20530(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20546)
static void C_ccall f_20546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20513)
static void C_ccall f_20513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20308)
static void C_fcall f_20308(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20320)
static void C_fcall f_20320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20356)
static void C_ccall f_20356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20376)
static void C_ccall f_20376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20381)
static void C_fcall f_20381(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19818)
static void C_ccall f_19818(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19818)
static void C_ccall f_19818r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19745)
static void C_fcall f_19745(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19590)
static void C_ccall f_19590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19596)
static void C_ccall f_19596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19681)
static void C_fcall f_19681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19608)
static void C_ccall f_19608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19624)
static void C_ccall f_19624(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19628)
static void C_fcall f_19628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19631)
static void C_fcall f_19631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19611)
static void C_ccall f_19611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19622)
static void C_ccall f_19622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19762)
static void C_ccall f_19762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20299)
static void C_ccall f_20299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19822)
static void C_ccall f_19822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20268)
static void C_ccall f_20268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20283)
static void C_ccall f_20283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20275)
static void C_ccall f_20275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20239)
static void C_ccall f_20239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20243)
static void C_ccall f_20243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20204)
static void C_ccall f_20204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20208)
static void C_ccall f_20208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20169)
static void C_ccall f_20169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20173)
static void C_ccall f_20173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19825)
static void C_fcall f_19825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20133)
static void C_ccall f_20133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20148)
static void C_ccall f_20148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20140)
static void C_ccall f_20140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20104)
static void C_ccall f_20104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20108)
static void C_ccall f_20108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20069)
static void C_ccall f_20069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20073)
static void C_ccall f_20073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20034)
static void C_ccall f_20034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20038)
static void C_ccall f_20038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19828)
static void C_fcall f_19828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19998)
static void C_ccall f_19998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20013)
static void C_ccall f_20013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20005)
static void C_ccall f_20005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19969)
static void C_ccall f_19969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19973)
static void C_ccall f_19973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19934)
static void C_ccall f_19934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19938)
static void C_ccall f_19938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19899)
static void C_ccall f_19899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19903)
static void C_ccall f_19903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19831)
static void C_fcall f_19831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19834)
static void C_ccall f_19834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19837)
static void C_ccall f_19837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19870)
static void C_ccall f_19870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19878)
static void C_ccall f_19878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19843)
static void C_ccall f_19843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19856)
static void C_ccall f_19856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19846)
static void C_fcall f_19846(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19849)
static void C_ccall f_19849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19385)
static void C_ccall f_19385(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19389)
static void C_ccall f_19389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19392)
static void C_ccall f_19392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19395)
static void C_ccall f_19395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19564)
static void C_ccall f_19564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19577)
static void C_ccall f_19577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19581)
static void C_ccall f_19581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19401)
static void C_ccall f_19401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19557)
static void C_ccall f_19557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19538)
static void C_ccall f_19538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19545)
static void C_ccall f_19545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19549)
static void C_ccall f_19549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19407)
static void C_fcall f_19407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19413)
static void C_ccall f_19413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19497)
static void C_ccall f_19497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19499)
static void C_fcall f_19499(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19521)
static void C_ccall f_19521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19528)
static void C_ccall f_19528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19532)
static void C_ccall f_19532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19518)
static void C_fcall f_19518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19514)
static void C_ccall f_19514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19455)
static void C_ccall f_19455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19472)
static void C_fcall f_19472(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19482)
static void C_ccall f_19482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19458)
static void C_ccall f_19458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19417)
static void C_fcall f_19417(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19425)
static void C_ccall f_19425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19427)
static void C_fcall f_19427(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19448)
static void C_ccall f_19448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19273)
static void C_fcall f_19273(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19383)
static void C_ccall f_19383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19342)
static void C_fcall f_19342(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19375)
static void C_ccall f_19375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19371)
static void C_ccall f_19371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19356)
static void C_ccall f_19356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_ccall f_19280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19288)
static void C_fcall f_19288(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19333)
static void C_ccall f_19333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19321)
static void C_ccall f_19321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19305)
static void C_ccall f_19305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18506)
static void C_ccall f_18506(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18506)
static void C_ccall f_18506r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18823)
static void C_ccall f_18823(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18830)
static void C_fcall f_18830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19235)
static void C_ccall f_19235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19250)
static void C_ccall f_19250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19242)
static void C_ccall f_19242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19206)
static void C_ccall f_19206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19210)
static void C_ccall f_19210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19171)
static void C_ccall f_19171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19175)
static void C_ccall f_19175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19136)
static void C_ccall f_19136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19140)
static void C_ccall f_19140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18833)
static void C_fcall f_18833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19100)
static void C_ccall f_19100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19115)
static void C_ccall f_19115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19107)
static void C_ccall f_19107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19071)
static void C_ccall f_19071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19075)
static void C_ccall f_19075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19036)
static void C_ccall f_19036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19040)
static void C_ccall f_19040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19001)
static void C_ccall f_19001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19005)
static void C_ccall f_19005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18836)
static void C_fcall f_18836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_ccall f_18965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18980)
static void C_ccall f_18980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18972)
static void C_ccall f_18972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18936)
static void C_ccall f_18936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18940)
static void C_ccall f_18940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18901)
static void C_ccall f_18901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18905)
static void C_ccall f_18905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18866)
static void C_ccall f_18866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18870)
static void C_ccall f_18870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18839)
static void C_fcall f_18839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18842)
static void C_ccall f_18842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18510)
static void C_ccall f_18510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18513)
static void C_ccall f_18513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18787)
static void C_ccall f_18787(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18791)
static void C_ccall f_18791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18794)
static void C_ccall f_18794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18797)
static void C_ccall f_18797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18800)
static void C_ccall f_18800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18813)
static void C_ccall f_18813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18803)
static void C_fcall f_18803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18519)
static void C_ccall f_18519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18526)
static void C_fcall f_18526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18757)
static void C_ccall f_18757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18772)
static void C_ccall f_18772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18764)
static void C_ccall f_18764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18728)
static void C_ccall f_18728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18732)
static void C_ccall f_18732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18693)
static void C_ccall f_18693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18697)
static void C_ccall f_18697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18529)
static void C_fcall f_18529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18657)
static void C_ccall f_18657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18672)
static void C_ccall f_18672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18664)
static void C_ccall f_18664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18628)
static void C_ccall f_18628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18632)
static void C_ccall f_18632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18593)
static void C_ccall f_18593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18597)
static void C_ccall f_18597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18532)
static void C_fcall f_18532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18535)
static void C_ccall f_18535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18550)
static void C_ccall f_18550(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18572)
static void C_ccall f_18572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18556)
static void C_ccall f_18556(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18564)
static void C_ccall f_18564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18538)
static void C_ccall f_18538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18541)
static void C_ccall f_18541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18423)
static void C_fcall f_18423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18414)
static void C_fcall f_18414(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18405)
static void C_fcall f_18405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18387)
static void C_fcall f_18387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18369)
static void C_fcall f_18369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18351)
static void C_fcall f_18351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18342)
static void C_fcall f_18342(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18333)
static void C_fcall f_18333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18111)
static void C_ccall f_18111(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18161)
static void C_ccall f_18161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18306)
static void C_ccall f_18306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18187)
static void C_ccall f_18187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18302)
static void C_ccall f_18302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18287)
static void C_ccall f_18287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18268)
static void C_ccall f_18268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18241)
static void C_ccall f_18241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18194)
static void C_ccall f_18194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18164)
static void C_fcall f_18164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18114)
static void C_ccall f_18114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_18120)
static void C_fcall f_18120(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18136)
static void C_ccall f_18136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18139)
static void C_ccall f_18139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17637)
static void C_ccall f_17637(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17637)
static void C_ccall f_17637r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18101)
static void C_ccall f_18101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17641)
static void C_fcall f_17641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18073)
static void C_ccall f_18073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18088)
static void C_ccall f_18088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18080)
static void C_ccall f_18080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18044)
static void C_ccall f_18044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18048)
static void C_ccall f_18048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_ccall f_18009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18013)
static void C_ccall f_18013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17974)
static void C_ccall f_17974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17978)
static void C_ccall f_17978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17644)
static void C_fcall f_17644(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17938)
static void C_ccall f_17938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17953)
static void C_ccall f_17953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17945)
static void C_ccall f_17945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17909)
static void C_ccall f_17909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17913)
static void C_ccall f_17913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17874)
static void C_ccall f_17874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17878)
static void C_ccall f_17878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17839)
static void C_ccall f_17839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17843)
static void C_ccall f_17843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17647)
static void C_fcall f_17647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17803)
static void C_ccall f_17803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17818)
static void C_ccall f_17818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17774)
static void C_ccall f_17774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17778)
static void C_ccall f_17778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17739)
static void C_ccall f_17739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17743)
static void C_ccall f_17743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17704)
static void C_ccall f_17704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17708)
static void C_ccall f_17708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17650)
static void C_fcall f_17650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17653)
static void C_ccall f_17653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17656)
static void C_ccall f_17656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17671)
static void C_ccall f_17671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17683)
static void C_ccall f_17683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17662)
static void C_ccall f_17662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17665)
static void C_ccall f_17665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17561)
static void C_ccall f_17561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17565)
static void C_ccall f_17565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17584)
static void C_ccall f_17584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17594)
static void C_ccall f_17594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17596)
static void C_fcall f_17596(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17613)
static void C_ccall f_17613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17616)
static void C_ccall f_17616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17627)
static void C_ccall f_17627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17568)
static void C_ccall f_17568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17298)
static void C_ccall f_17298(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17298)
static void C_ccall f_17298r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17551)
static void C_ccall f_17551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17302)
static void C_fcall f_17302(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17523)
static void C_ccall f_17523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17538)
static void C_ccall f_17538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17530)
static void C_ccall f_17530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17494)
static void C_ccall f_17494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17498)
static void C_ccall f_17498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17459)
static void C_ccall f_17459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17463)
static void C_ccall f_17463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17305)
static void C_fcall f_17305(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17423)
static void C_ccall f_17423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17438)
static void C_ccall f_17438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17430)
static void C_ccall f_17430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17394)
static void C_ccall f_17394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17398)
static void C_ccall f_17398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17359)
static void C_ccall f_17359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17363)
static void C_ccall f_17363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17308)
static void C_fcall f_17308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17311)
static void C_ccall f_17311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17314)
static void C_ccall f_17314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17326)
static void C_ccall f_17326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17338)
static void C_ccall f_17338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17320)
static void C_ccall f_17320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17262)
static void C_ccall f_17262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17266)
static void C_ccall f_17266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17288)
static void C_ccall f_17288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17282)
static void C_ccall f_17282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17275)
static void C_ccall f_17275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17015)
static void C_ccall f_17015(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17015)
static void C_ccall f_17015r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17019)
static void C_fcall f_17019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17232)
static void C_ccall f_17232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17247)
static void C_ccall f_17247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17239)
static void C_ccall f_17239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17203)
static void C_ccall f_17203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17207)
static void C_ccall f_17207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17168)
static void C_ccall f_17168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17172)
static void C_ccall f_17172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17022)
static void C_fcall f_17022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17132)
static void C_ccall f_17132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17147)
static void C_ccall f_17147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17139)
static void C_ccall f_17139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17103)
static void C_ccall f_17103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17107)
static void C_ccall f_17107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17068)
static void C_ccall f_17068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17072)
static void C_ccall f_17072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17025)
static void C_fcall f_17025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17028)
static void C_ccall f_17028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17031)
static void C_ccall f_17031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17039)
static void C_ccall f_17039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17047)
static void C_ccall f_17047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17037)
static void C_ccall f_17037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16800)
static void C_ccall f_16800(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16804)
static void C_ccall f_16804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17013)
static void C_ccall f_17013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16966)
static void C_ccall f_16966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16978)
static void C_fcall f_16978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16834)
static void C_ccall f_16834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16837)
static void C_ccall f_16837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16843)
static void C_ccall f_16843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16846)
static void C_ccall f_16846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_fcall f_16934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16849)
static void C_fcall f_16849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16928)
static void C_ccall f_16928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16855)
static void C_ccall f_16855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16858)
static void C_ccall f_16858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16810)
static void C_ccall f_16810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16813)
static void C_ccall f_16813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16820)
static void C_ccall f_16820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16330)
static void C_ccall f_16330(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16330)
static void C_ccall f_16330r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16334)
static void C_fcall f_16334(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16770)
static void C_ccall f_16770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16785)
static void C_ccall f_16785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16777)
static void C_ccall f_16777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16741)
static void C_ccall f_16741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16745)
static void C_ccall f_16745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16706)
static void C_ccall f_16706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16710)
static void C_ccall f_16710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16671)
static void C_ccall f_16671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16675)
static void C_ccall f_16675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16337)
static void C_fcall f_16337(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16635)
static void C_ccall f_16635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16650)
static void C_ccall f_16650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16642)
static void C_ccall f_16642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16606)
static void C_ccall f_16606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16610)
static void C_ccall f_16610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16571)
static void C_ccall f_16571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16575)
static void C_ccall f_16575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16536)
static void C_ccall f_16536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16540)
static void C_ccall f_16540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16340)
static void C_fcall f_16340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16500)
static void C_ccall f_16500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16515)
static void C_ccall f_16515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16507)
static void C_ccall f_16507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16471)
static void C_ccall f_16471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16475)
static void C_ccall f_16475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16436)
static void C_ccall f_16436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16440)
static void C_ccall f_16440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16401)
static void C_ccall f_16401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16405)
static void C_ccall f_16405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16343)
static void C_fcall f_16343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16346)
static void C_ccall f_16346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16349)
static void C_ccall f_16349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16372)
static void C_ccall f_16372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16380)
static void C_ccall f_16380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16355)
static void C_ccall f_16355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16358)
static void C_ccall f_16358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16250)
static void C_fcall f_16250(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16241)
static void C_fcall f_16241(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_ccall f_16169(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16173)
static void C_ccall f_16173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16176)
static void C_fcall f_16176(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15914)
static void C_ccall f_15914(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15914)
static void C_ccall f_15914r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15918)
static void C_fcall f_15918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16139)
static void C_ccall f_16139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16154)
static void C_ccall f_16154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16146)
static void C_ccall f_16146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16110)
static void C_ccall f_16110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16114)
static void C_ccall f_16114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16075)
static void C_ccall f_16075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16079)
static void C_ccall f_16079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15921)
static void C_fcall f_15921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16039)
static void C_ccall f_16039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16054)
static void C_ccall f_16054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16046)
static void C_ccall f_16046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16010)
static void C_ccall f_16010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16014)
static void C_ccall f_16014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15975)
static void C_ccall f_15975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15979)
static void C_ccall f_15979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15924)
static void C_fcall f_15924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15927)
static void C_ccall f_15927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15930)
static void C_ccall f_15930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_ccall f_15942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15954)
static void C_ccall f_15954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15936)
static void C_ccall f_15936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15799)
static void C_fcall f_15799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15912)
static void C_ccall f_15912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15809)
static void C_ccall f_15809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15897)
static void C_ccall f_15897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15908)
static void C_ccall f_15908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15904)
static void C_ccall f_15904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15812)
static void C_ccall f_15812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15894)
static void C_ccall f_15894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15820)
static void C_ccall f_15820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15884)
static void C_ccall f_15884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15829)
static void C_ccall f_15829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15848)
static void C_ccall f_15848(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15877)
static void C_ccall f_15877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15858)
static void C_ccall f_15858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15873)
static void C_ccall f_15873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15861)
static void C_ccall f_15861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15832)
static void C_ccall f_15832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15842)
static void C_ccall f_15842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15823)
static void C_fcall f_15823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15826)
static void C_ccall f_15826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15753)
static void C_fcall f_15753(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15744)
static void C_fcall f_15744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15443)
static void C_fcall f_15443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15450)
static void C_ccall f_15450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15739)
static void C_ccall f_15739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15453)
static void C_ccall f_15453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15724)
static void C_ccall f_15724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15716)
static void C_ccall f_15716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15708)
static void C_ccall f_15708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15711)
static void C_ccall f_15711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15679)
static void C_fcall f_15679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15702)
static void C_ccall f_15702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15685)
static void C_fcall f_15685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15689)
static void C_ccall f_15689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15456)
static void C_ccall f_15456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15462)
static void C_ccall f_15462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15554)
static void C_ccall f_15554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15666)
static void C_ccall f_15666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15673)
static void C_ccall f_15673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15577)
static void C_fcall f_15577(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15579)
static void C_fcall f_15579(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15628)
static void C_fcall f_15628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15663)
static void C_ccall f_15663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15652)
static void C_ccall f_15652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15797)
static void C_ccall f_15797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15772)
static void C_ccall f_15772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15793)
static void C_ccall f_15793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15789)
static void C_ccall f_15789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15781)
static void C_ccall f_15781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15645)
static void C_ccall f_15645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15638)
static void C_ccall f_15638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15586)
static void C_ccall f_15586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15626)
static void C_ccall f_15626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15590)
static void C_ccall f_15590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15622)
static void C_ccall f_15622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15609)
static void C_ccall f_15609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15617)
static void C_ccall f_15617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15613)
static void C_ccall f_15613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15593)
static void C_fcall f_15593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15596)
static void C_ccall f_15596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15570)
static void C_ccall f_15570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15557)
static void C_ccall f_15557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15566)
static void C_ccall f_15566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15561)
static void C_ccall f_15561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15468)
static void C_ccall f_15468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15548)
static void C_ccall f_15548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15528)
static void C_ccall f_15528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15534)
static void C_ccall f_15534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15545)
static void C_ccall f_15545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15513)
static void C_ccall f_15513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15516)
static void C_ccall f_15516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15471)
static void C_ccall f_15471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15507)
static void C_ccall f_15507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15502)
static void C_ccall f_15502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15474)
static void C_ccall f_15474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15487)
static void C_ccall f_15487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15477)
static void C_fcall f_15477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15483)
static void C_ccall f_15483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15320)
static void C_ccall f_15320(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15320)
static void C_ccall f_15320r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15379)
static void C_ccall f_15379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15389)
static void C_ccall f_15389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15391)
static void C_fcall f_15391(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15420)
static void C_ccall f_15420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15425)
static void C_ccall f_15425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_fcall f_15410(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15341)
static void C_fcall f_15341(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15373)
static void C_ccall f_15373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15301)
static void C_ccall f_15301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15308)
static void C_ccall f_15308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15315)
static void C_ccall f_15315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15289)
static void C_ccall f_15289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15296)
static void C_ccall f_15296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15102)
static void C_fcall f_15102(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_15106)
static void C_ccall f_15106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15109)
static void C_ccall f_15109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15112)
static void C_ccall f_15112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15272)
static void C_ccall f_15272(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15279)
static void C_ccall f_15279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15118)
static void C_ccall f_15118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15121)
static void C_fcall f_15121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15127)
static void C_ccall f_15127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15133)
static void C_ccall f_15133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15196)
static void C_ccall f_15196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15210)
static void C_ccall f_15210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15136)
static void C_fcall f_15136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15139)
static void C_ccall f_15139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15145)
static void C_fcall f_15145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15158)
static void C_ccall f_15158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15148)
static void C_ccall f_15148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15151)
static void C_ccall f_15151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15092)
static void C_fcall f_15092(C_word t0) C_noret;
C_noret_decl(f_15037)
static void C_fcall f_15037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15028)
static void C_fcall f_15028(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14911)
static void C_fcall f_14911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14902)
static void C_fcall f_14902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14893)
static void C_ccall f_14893(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14884)
static void C_fcall f_14884(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14875)
static void C_fcall f_14875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14857)
static void C_fcall f_14857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14848)
static void C_fcall f_14848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14839)
static void C_fcall f_14839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14821)
static void C_fcall f_14821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14812)
static void C_fcall f_14812(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14803)
static void C_fcall f_14803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14788)
static void C_fcall f_14788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14743)
static void C_fcall f_14743(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14725)
static void C_fcall f_14725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14716)
static void C_fcall f_14716(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14689)
static void C_fcall f_14689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14671)
static void C_fcall f_14671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14653)
static void C_fcall f_14653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14644)
static void C_fcall f_14644(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14632)
static void C_fcall f_14632(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_14506)
static void C_ccall f_14506(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14512)
static void C_ccall f_14512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14516)
static void C_ccall f_14516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14534)
static void C_ccall f_14534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14537)
static void C_ccall f_14537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14541)
static void C_ccall f_14541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14544)
static void C_ccall f_14544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14596)
static void C_fcall f_14596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14547)
static void C_ccall f_14547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14557)
static void C_ccall f_14557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14559)
static void C_fcall f_14559(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14403)
static void C_ccall f_14403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14427)
static void C_ccall f_14427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14431)
static void C_ccall f_14431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14457)
static void C_fcall f_14457(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14467)
static void C_ccall f_14467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14504)
static void C_ccall f_14504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14496)
static void C_ccall f_14496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14434)
static void C_ccall f_14434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14404)
static void C_fcall f_14404(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14408)
static void C_ccall f_14408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14411)
static void C_ccall f_14411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14573)
static void C_ccall f_14573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14576)
static void C_fcall f_14576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14583)
static void C_ccall f_14583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14517)
static void C_fcall f_14517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14521)
static void C_ccall f_14521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14524)
static void C_ccall f_14524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13993)
static void C_ccall f_13993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_13993)
static void C_ccall f_13993r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14372)
static void C_fcall f_14372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14366)
static void C_ccall f_14366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13997)
static void C_ccall f_13997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14350)
static void C_ccall f_14350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14000)
static void C_ccall f_14000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14336)
static void C_ccall f_14336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_fcall f_14003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14325)
static void C_ccall f_14325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14321)
static void C_ccall f_14321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14006)
static void C_fcall f_14006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14009)
static void C_fcall f_14009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14309)
static void C_ccall f_14309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14301)
static void C_ccall f_14301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14305)
static void C_ccall f_14305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14293)
static void C_ccall f_14293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14297)
static void C_ccall f_14297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14167)
static void C_fcall f_14167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14282)
static void C_ccall f_14282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14286)
static void C_ccall f_14286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14274)
static void C_ccall f_14274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14278)
static void C_ccall f_14278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14170)
static void C_fcall f_14170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14174)
static void C_ccall f_14174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14179)
static void C_fcall f_14179(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14189)
static void C_fcall f_14189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14192)
static void C_ccall f_14192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14073)
static void C_ccall f_14073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14136)
static void C_fcall f_14136(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14157)
static void C_ccall f_14157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14098)
static void C_fcall f_14098(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14127)
static void C_ccall f_14127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14076)
static void C_ccall f_14076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14093)
static void C_ccall f_14093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14089)
static void C_ccall f_14089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13539)
static void C_ccall f_13539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13543)
static void C_ccall f_13543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13531)
static void C_ccall f_13531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13456)
static void C_ccall f_13456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13517)
static void C_ccall f_13517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13460)
static void C_ccall f_13460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13468)
static void C_fcall f_13468(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13501)
static void C_ccall f_13501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13478)
static void C_ccall f_13478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13481)
static void C_ccall f_13481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14053)
static void C_fcall f_14053(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14023)
static void C_fcall f_14023(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14012)
static void C_ccall f_14012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13936)
static void C_ccall f_13936(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13944)
static void C_ccall f_13944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13948)
static void C_ccall f_13948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13952)
static void C_ccall f_13952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13958)
static void C_fcall f_13958(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13968)
static void C_ccall f_13968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13724)
static void C_ccall f_13724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13792)
static void C_ccall f_13792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13795)
static void C_ccall f_13795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13798)
static void C_ccall f_13798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13801)
static void C_ccall f_13801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13804)
static void C_ccall f_13804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13902)
static void C_fcall f_13902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13870)
static void C_fcall f_13870(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13880)
static void C_ccall f_13880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13821)
static void C_fcall f_13821(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13840)
static void C_fcall f_13840(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13850)
static void C_ccall f_13850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13831)
static void C_ccall f_13831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13807)
static void C_ccall f_13807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13760)
static void C_fcall f_13760(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13770)
static void C_ccall f_13770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13743)
static void C_fcall f_13743(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13750)
static void C_ccall f_13750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13726)
static void C_fcall f_13726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13733)
static void C_ccall f_13733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13545)
static void C_ccall f_13545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13557)
static void C_ccall f_13557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13559)
static void C_fcall f_13559(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13569)
static void C_fcall f_13569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13700)
static void C_ccall f_13700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13649)
static void C_ccall f_13649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13652)
static void C_ccall f_13652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13663)
static void C_ccall f_13663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13615)
static void C_ccall f_13615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13584)
static void C_ccall f_13584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13587)
static void C_ccall f_13587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13572)
static void C_ccall f_13572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13133)
static void C_ccall f_13133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13450)
static void C_ccall f_13450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_ccall f_13379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13381)
static void C_fcall f_13381(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8120)
static void C_ccall f_8120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13400)
static void C_ccall f_13400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13403)
static void C_fcall f_13403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13146)
static void C_ccall f_13146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13222)
static void C_fcall f_13222(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13375)
static void C_ccall f_13375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13359)
static void C_ccall f_13359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_fcall f_13311(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13325)
static void C_fcall f_13325(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13278)
static void C_ccall f_13278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13253)
static void C_fcall f_13253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13149)
static void C_ccall f_13149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13157)
static void C_fcall f_13157(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13190)
static void C_ccall f_13190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11660)
static void C_ccall f_11660(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11660)
static void C_ccall f_11660r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13110)
static void C_ccall f_13110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13125)
static void C_ccall f_13125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13117)
static void C_ccall f_13117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13081)
static void C_ccall f_13081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13085)
static void C_ccall f_13085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13050)
static void C_ccall f_13050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13011)
static void C_ccall f_13011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13015)
static void C_ccall f_13015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12976)
static void C_ccall f_12976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12980)
static void C_ccall f_12980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12941)
static void C_ccall f_12941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12945)
static void C_ccall f_12945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12906)
static void C_ccall f_12906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12910)
static void C_ccall f_12910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11664)
static void C_fcall f_11664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12870)
static void C_ccall f_12870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12885)
static void C_ccall f_12885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12877)
static void C_ccall f_12877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12841)
static void C_ccall f_12841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12845)
static void C_ccall f_12845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12806)
static void C_ccall f_12806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12810)
static void C_ccall f_12810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12771)
static void C_ccall f_12771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12775)
static void C_ccall f_12775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12736)
static void C_ccall f_12736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12740)
static void C_ccall f_12740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12701)
static void C_ccall f_12701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12705)
static void C_ccall f_12705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12666)
static void C_ccall f_12666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12670)
static void C_ccall f_12670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11667)
static void C_fcall f_11667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12645)
static void C_ccall f_12645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12637)
static void C_ccall f_12637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12601)
static void C_ccall f_12601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12605)
static void C_ccall f_12605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12566)
static void C_ccall f_12566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12570)
static void C_ccall f_12570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12531)
static void C_ccall f_12531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12535)
static void C_ccall f_12535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12496)
static void C_ccall f_12496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12500)
static void C_ccall f_12500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12461)
static void C_ccall f_12461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12465)
static void C_ccall f_12465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12426)
static void C_ccall f_12426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12430)
static void C_ccall f_12430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11670)
static void C_fcall f_11670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12390)
static void C_ccall f_12390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12405)
static void C_ccall f_12405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12397)
static void C_ccall f_12397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12361)
static void C_ccall f_12361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12365)
static void C_ccall f_12365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12326)
static void C_ccall f_12326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12330)
static void C_ccall f_12330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12291)
static void C_ccall f_12291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12295)
static void C_ccall f_12295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12256)
static void C_ccall f_12256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12260)
static void C_ccall f_12260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12221)
static void C_ccall f_12221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12225)
static void C_ccall f_12225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12186)
static void C_ccall f_12186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12190)
static void C_ccall f_12190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11673)
static void C_fcall f_11673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12150)
static void C_ccall f_12150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12165)
static void C_ccall f_12165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12157)
static void C_ccall f_12157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12121)
static void C_ccall f_12121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12125)
static void C_ccall f_12125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12086)
static void C_ccall f_12086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12090)
static void C_ccall f_12090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12051)
static void C_ccall f_12051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12055)
static void C_ccall f_12055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12016)
static void C_ccall f_12016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12020)
static void C_ccall f_12020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11981)
static void C_ccall f_11981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11985)
static void C_ccall f_11985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11946)
static void C_ccall f_11946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11950)
static void C_ccall f_11950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11676)
static void C_fcall f_11676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11925)
static void C_ccall f_11925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11917)
static void C_ccall f_11917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11881)
static void C_ccall f_11881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11885)
static void C_ccall f_11885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11846)
static void C_ccall f_11846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11850)
static void C_ccall f_11850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11811)
static void C_ccall f_11811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11815)
static void C_ccall f_11815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11776)
static void C_ccall f_11776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11780)
static void C_ccall f_11780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11741)
static void C_ccall f_11741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11745)
static void C_ccall f_11745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11706)
static void C_ccall f_11706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11710)
static void C_ccall f_11710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11679)
static void C_fcall f_11679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11682)
static void C_ccall f_11682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11441)
static void C_fcall f_11441(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11450)
static void C_ccall f_11450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11454)
static void C_ccall f_11454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11641)
static void C_ccall f_11641(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11626)
static void C_ccall f_11626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11591)
static void C_ccall f_11591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11571)
static void C_ccall f_11571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11575)
static void C_ccall f_11575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11561)
static void C_ccall f_11561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11569)
static void C_ccall f_11569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11528)
static void C_ccall f_11528(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11456)
static void C_ccall f_11456(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11523)
static void C_ccall f_11523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11460)
static void C_ccall f_11460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_fcall f_11496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11471)
static void C_fcall f_11471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11412)
static void C_ccall f_11412(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11416)
static void C_ccall f_11416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11427)
static void C_ccall f_11427(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11425)
static void C_ccall f_11425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11381)
static void C_ccall f_11381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11385)
static void C_ccall f_11385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11396)
static void C_ccall f_11396(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11394)
static void C_ccall f_11394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11363)
static void C_ccall f_11363(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11371)
static void C_ccall f_11371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11379)
static void C_ccall f_11379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11353)
static void C_ccall f_11353(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11361)
static void C_ccall f_11361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11294)
static void C_ccall f_11294(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11301)
static void C_ccall f_11301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11304)
static void C_ccall f_11304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11307)
static void C_ccall f_11307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11312)
static void C_fcall f_11312(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11256)
static void C_ccall f_11256(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11264)
static void C_ccall f_11264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11268)
static void C_ccall f_11268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11288)
static void C_ccall f_11288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11272)
static void C_ccall f_11272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11276)
static void C_ccall f_11276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11244)
static void C_ccall f_11244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11235)
static void C_fcall f_11235(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11226)
static void C_ccall f_11226(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11217)
static void C_fcall f_11217(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11208)
static void C_ccall f_11208(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11199)
static void C_fcall f_11199(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11175)
static void C_fcall f_11175(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11169)
static void C_fcall f_11169(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11027)
static void C_ccall f_11027(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11027)
static void C_ccall f_11027r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11031)
static void C_fcall f_11031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11100)
static void C_ccall f_11100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11143)
static void C_ccall f_11143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11147)
static void C_ccall f_11147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11136)
static void C_ccall f_11136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11123)
static void C_ccall f_11123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11042)
static void C_ccall f_11042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11085)
static void C_ccall f_11085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11089)
static void C_ccall f_11089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11078)
static void C_ccall f_11078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11065)
static void C_ccall f_11065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10861)
static void C_ccall f_10861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10962)
static void C_ccall f_10962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11011)
static void C_ccall f_11011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11007)
static void C_ccall f_11007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10979)
static void C_ccall f_10979(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10914)
static void C_fcall f_10914(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10923)
static void C_fcall f_10923(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10907)
static void C_ccall f_10907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10726)
static void C_ccall f_10726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10852)
static void C_ccall f_10852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10848)
static void C_ccall f_10848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10826)
static void C_ccall f_10826(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10756)
static void C_fcall f_10756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10772)
static void C_fcall f_10772(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10681)
static void C_ccall f_10681(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10724)
static void C_ccall f_10724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10713)
static void C_ccall f_10713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10565)
static void C_ccall f_10565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10679)
static void C_ccall f_10679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10580)
static void C_fcall f_10580(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10610)
static void C_fcall f_10610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10629)
static void C_ccall f_10629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10614)
static void C_ccall f_10614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10593)
static void C_fcall f_10593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10443)
static void C_ccall f_10443(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10563)
static void C_ccall f_10563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10458)
static void C_fcall f_10458(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10488)
static void C_fcall f_10488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10507)
static void C_ccall f_10507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10492)
static void C_ccall f_10492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10471)
static void C_fcall f_10471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10346)
static void C_ccall f_10346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10441)
static void C_ccall f_10441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10361)
static void C_fcall f_10361(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10407)
static void C_ccall f_10407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10392)
static void C_ccall f_10392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10374)
static void C_fcall f_10374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10293)
static void C_fcall f_10293(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10331)
static void C_ccall f_10331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10338)
static void C_ccall f_10338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10316)
static void C_ccall f_10316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10291)
static void C_ccall f_10291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10263)
static void C_fcall f_10263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10265)
static void C_ccall f_10265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10243)
static void C_ccall f_10243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10191)
static void C_fcall f_10191(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10228)
static void C_ccall f_10228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10195)
static void C_ccall f_10195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10211)
static void C_ccall f_10211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10213)
static void C_ccall f_10213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9977)
static void C_ccall f_9977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9977)
static void C_ccall f_9977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9990)
static void C_fcall f_9990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10072)
static void C_fcall f_10072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10075)
static void C_ccall f_10075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10083)
static void C_fcall f_10083(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10095)
static void C_fcall f_10095(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10116)
static void C_ccall f_10116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10124)
static void C_ccall f_10124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10011)
static void C_ccall f_10011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10016)
static void C_fcall f_10016(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10048)
static void C_ccall f_10048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9956)
static void C_ccall f_9956(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9956)
static void C_ccall f_9956r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9937)
static void C_ccall f_9937(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9937)
static void C_ccall f_9937r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9896)
static void C_ccall f_9896(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9896)
static void C_ccall f_9896r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9877)
static void C_ccall f_9877(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9877)
static void C_ccall f_9877r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9649)
static void C_ccall f_9649(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9649)
static void C_ccall f_9649r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9854)
static void C_ccall f_9854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9869)
static void C_ccall f_9869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9861)
static void C_ccall f_9861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9825)
static void C_ccall f_9825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9829)
static void C_ccall f_9829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9790)
static void C_ccall f_9790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9794)
static void C_ccall f_9794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9653)
static void C_fcall f_9653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9754)
static void C_ccall f_9754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9769)
static void C_ccall f_9769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9761)
static void C_ccall f_9761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9725)
static void C_ccall f_9725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9729)
static void C_ccall f_9729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9694)
static void C_ccall f_9694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9656)
static void C_fcall f_9656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9659)
static void C_ccall f_9659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9662)
static void C_fcall f_9662(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9607)
static void C_ccall f_9607(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9607)
static void C_ccall f_9607r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9636)
static void C_ccall f_9636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9621)
static void C_ccall f_9621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9552)
static void C_ccall f_9552(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9563)
static void C_ccall f_9563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9565)
static void C_fcall f_9565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9593)
static void C_ccall f_9593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9453)
static void C_ccall f_9453(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9453)
static void C_ccall f_9453r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9457)
static void C_fcall f_9457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9460)
static void C_ccall f_9460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9525)
static void C_ccall f_9525(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9462)
static void C_fcall f_9462(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9478)
static void C_ccall f_9478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9225)
static void C_ccall f_9225(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9225)
static void C_ccall f_9225r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9430)
static void C_ccall f_9430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9445)
static void C_ccall f_9445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9437)
static void C_ccall f_9437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9401)
static void C_ccall f_9401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9405)
static void C_ccall f_9405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9366)
static void C_ccall f_9366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9370)
static void C_ccall f_9370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9229)
static void C_fcall f_9229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9330)
static void C_ccall f_9330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9345)
static void C_ccall f_9345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9337)
static void C_ccall f_9337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9301)
static void C_ccall f_9301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9305)
static void C_ccall f_9305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9266)
static void C_ccall f_9266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9270)
static void C_ccall f_9270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9232)
static void C_fcall f_9232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9235)
static void C_ccall f_9235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9245)
static void C_ccall f_9245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9182)
static void C_ccall f_9182(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9182)
static void C_ccall f_9182r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9215)
static void C_ccall f_9215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9200)
static void C_ccall f_9200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9161)
static void C_ccall f_9161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9126)
static void C_ccall f_9126(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9126)
static void C_ccall f_9126r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9130)
static void C_fcall f_9130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9105)
static void C_ccall f_9105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9025)
static void C_fcall f_9025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9034)
static void C_fcall f_9034(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9081)
static void C_ccall f_9081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9047)
static void C_fcall f_9047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9073)
static void C_ccall f_9073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8885)
static void C_ccall f_8885(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8885)
static void C_ccall f_8885r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8889)
static void C_fcall f_8889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8892)
static void C_fcall f_8892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8996)
static void C_ccall f_8996(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8894)
static void C_fcall f_8894(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8901)
static void C_ccall f_8901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8943)
static void C_ccall f_8943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8950)
static void C_ccall f_8950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8924)
static void C_ccall f_8924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8818)
static void C_ccall f_8818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8818)
static void C_ccall f_8818r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8822)
static void C_fcall f_8822(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8868)
static void C_ccall f_8868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8825)
static void C_fcall f_8825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8861)
static void C_ccall f_8861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8828)
static void C_fcall f_8828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8841)
static void C_ccall f_8841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8772)
static void C_ccall f_8772(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8772)
static void C_ccall f_8772r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8776)
static void C_ccall f_8776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8686)
static void C_fcall f_8686(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8690)
static void C_ccall f_8690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8693)
static void C_ccall f_8693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8702)
static void C_fcall f_8702(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8724)
static void C_ccall f_8724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8671)
static void C_ccall f_8671(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8656)
static void C_ccall f_8656(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8420)
static void C_ccall f_8420(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8420)
static void C_ccall f_8420r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8633)
static void C_ccall f_8633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8640)
static void C_ccall f_8640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8604)
static void C_ccall f_8604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8608)
static void C_ccall f_8608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8569)
static void C_ccall f_8569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8573)
static void C_ccall f_8573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8424)
static void C_fcall f_8424(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8533)
static void C_ccall f_8533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8548)
static void C_ccall f_8548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8540)
static void C_ccall f_8540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8504)
static void C_ccall f_8504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8508)
static void C_ccall f_8508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8469)
static void C_ccall f_8469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8473)
static void C_ccall f_8473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8427)
static void C_fcall f_8427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8430)
static void C_ccall f_8430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8441)
static void C_ccall f_8441(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8380)
static void C_ccall f_8380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8384)
static void C_ccall f_8384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8414)
static void C_ccall f_8414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8395)
static void C_ccall f_8395(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8403)
static void C_ccall f_8403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8359)
static void C_ccall f_8359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8371)
static void C_ccall f_8371(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8333)
static void C_ccall f_8333(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8333)
static void C_ccall f_8333r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8291)
static void C_ccall f_8291(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8291)
static void C_ccall f_8291r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8276)
static void C_ccall f_8276(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8165)
static void C_ccall f_8165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_8165)
static void C_ccall f_8165r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8240)
static void C_ccall f_8240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8169)
static void C_fcall f_8169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8209)
static void C_ccall f_8209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8198)
static void C_ccall f_8198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8183)
static void C_ccall f_8183(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8191)
static void C_ccall f_8191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8131)
static void C_ccall f_8131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_8131)
static void C_ccall f_8131r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_8143)
static void C_ccall f_8143(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8112)
static void C_ccall f_8112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8109)
static void C_ccall f_8109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8102)
static void C_fcall f_8102(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8099)
static void C_ccall f_8099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8092)
static void C_fcall f_8092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8074)
static void C_fcall f_8074(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8063)
static void C_fcall f_8063(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8060)
static void C_ccall f_8060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8057)
static void C_ccall f_8057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8054)
static void C_ccall f_8054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8025)
static void C_fcall f_8025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8018)
static void C_fcall f_8018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8015)
static void C_ccall f_8015(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7994)
static void C_fcall f_7994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7975)
static void C_ccall f_7975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7956)
static void C_ccall f_7956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7949)
static void C_ccall f_7949(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7942)
static void C_ccall f_7942(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7927)
static void C_fcall f_7927(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7916)
static void C_fcall f_7916(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7909)
static void C_ccall f_7909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7882)
static void C_fcall f_7882(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7855)
static void C_fcall f_7855(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7814)
static void C_fcall f_7814(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7820)
static void C_fcall f_7820(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7830)
static void C_fcall f_7830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7689)
static void C_ccall f_7689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7695)
static void C_fcall f_7695(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7718)
static void C_ccall f_7718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7708)
static void C_fcall f_7708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7650)
static void C_ccall f_7650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7656)
static void C_fcall f_7656(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7676)
static void C_ccall f_7676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7666)
static void C_fcall f_7666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7610)
static void C_ccall f_7610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7616)
static void C_fcall f_7616(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7640)
static void C_ccall f_7640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7626)
static void C_fcall f_7626(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7511)
static void C_ccall f_7511(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7511)
static void C_ccall f_7511r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7515)
static void C_ccall f_7515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7540)
static void C_fcall f_7540(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7557)
static void C_ccall f_7557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7561)
static void C_ccall f_7561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7517)
static void C_fcall f_7517(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7534)
static void C_ccall f_7534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7450)
static void C_ccall f_7450(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7463)
static void C_fcall f_7463(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7440)
static void C_ccall f_7440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7400)
static void C_ccall f_7400(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7400)
static void C_ccall f_7400r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7430)
static void C_ccall f_7430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7310)
static void C_ccall f_7310(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7296)
static void C_ccall f_7296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7239)
static void C_ccall f_7239(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7233)
static void C_ccall f_7233(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7218)
static void C_ccall f_7218(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7204)
static void C_ccall f_7204(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7194)
static void C_ccall f_7194(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7184)
static void C_ccall f_7184(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7174)
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7164)
static void C_ccall f_7164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7131)
static void C_ccall f_7131(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7131)
static void C_ccall f_7131r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7140)
static void C_ccall f_7140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7145)
static void C_ccall f_7145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7120)
static void C_ccall f_7120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7125)
static void C_ccall f_7125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6827)
static void C_ccall f_6827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6837)
static void C_ccall f_6837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7088)
static void C_ccall f_7088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6840)
static void C_ccall f_6840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6843)
static void C_ccall f_6843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6858)
static void C_fcall f_6858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6868)
static void C_ccall f_6868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6870)
static void C_fcall f_6870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6929)
static void C_ccall f_6929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6939)
static void C_ccall f_6939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7056)
static void C_ccall f_7056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7044)
static void C_ccall f_7044(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7042)
static void C_ccall f_7042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7029)
static void C_ccall f_7029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6983)
static void C_ccall f_6983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6989)
static void C_ccall f_6989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6923)
static void C_fcall f_6923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6882)
static void C_fcall f_6882(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6895)
static void C_fcall f_6895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7105)
static void C_ccall f_7105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7096)
static void C_ccall f_7096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7104)
static void C_ccall f_7104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7107)
static void C_ccall f_7107(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7107)
static void C_ccall f_7107r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7115)
static void C_ccall f_7115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6529)
static void C_ccall f_6529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6782)
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6815)
static void C_ccall f_6815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6811)
static void C_ccall f_6811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6800)
static void C_ccall f_6800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6796)
static void C_ccall f_6796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6690)
static void C_ccall f_6690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6693)
static void C_ccall f_6693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6696)
static void C_ccall f_6696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6776)
static void C_ccall f_6776(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6601)
static void C_ccall f_6601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6542)
static void C_ccall f_6542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6699)
static void C_ccall f_6699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6706)
static void C_ccall f_6706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6766)
static void C_ccall f_6766(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6752)
static void C_ccall f_6752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6718)
static void C_ccall f_6718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6744)
static void C_ccall f_6744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6679)
static void C_ccall f_6679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6726)
static void C_ccall f_6726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6722)
static void C_ccall f_6722(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_41040)
static void C_fcall trf_41040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41040(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41040(t0,t1,t2);}

C_noret_decl(trf_41100)
static void C_fcall trf_41100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41100(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_41100(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_41120)
static void C_fcall trf_41120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41120(t0,t1);}

C_noret_decl(trf_41123)
static void C_fcall trf_41123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41123(t0,t1);}

C_noret_decl(trf_40984)
static void C_fcall trf_40984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40984(t0,t1);}

C_noret_decl(trf_40906)
static void C_fcall trf_40906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40906(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40906(t0,t1,t2);}

C_noret_decl(trf_40718)
static void C_fcall trf_40718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40718(t0,t1);}

C_noret_decl(trf_39600)
static void C_fcall trf_39600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39600(t0,t1);}

C_noret_decl(trf_39473)
static void C_fcall trf_39473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39473(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39473(t0,t1,t2);}

C_noret_decl(trf_39157)
static void C_fcall trf_39157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39157(t0,t1);}

C_noret_decl(trf_38252)
static void C_fcall trf_38252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38252(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38252(t0,t1,t2);}

C_noret_decl(trf_38287)
static void C_fcall trf_38287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38287(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38287(t0,t1);}

C_noret_decl(trf_38311)
static void C_fcall trf_38311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38311(t0,t1);}

C_noret_decl(trf_38290)
static void C_fcall trf_38290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38290(t0,t1);}

C_noret_decl(trf_38093)
static void C_fcall trf_38093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38093(t0,t1);}

C_noret_decl(trf_37849)
static void C_fcall trf_37849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37849(t0,t1);}

C_noret_decl(trf_37856)
static void C_fcall trf_37856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37856(t0,t1);}

C_noret_decl(trf_37837)
static void C_fcall trf_37837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37837(t0,t1);}

C_noret_decl(trf_24910)
static void C_fcall trf_24910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24910(t0,t1);}

C_noret_decl(trf_24917)
static void C_fcall trf_24917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24917(t0,t1);}

C_noret_decl(trf_25292)
static void C_fcall trf_25292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25292(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25292(t0,t1,t2);}

C_noret_decl(trf_25315)
static void C_fcall trf_25315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25315(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25315(t0,t1,t2);}

C_noret_decl(trf_25332)
static void C_fcall trf_25332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25332(t0,t1);}

C_noret_decl(trf_25335)
static void C_fcall trf_25335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25335(t0,t1);}

C_noret_decl(trf_25338)
static void C_fcall trf_25338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25338(t0,t1);}

C_noret_decl(trf_25256)
static void C_fcall trf_25256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25256(t0,t1,t2);}

C_noret_decl(trf_25184)
static void C_fcall trf_25184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25184(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25184(t0,t1,t2);}

C_noret_decl(trf_25200)
static void C_fcall trf_25200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25200(t0,t1);}

C_noret_decl(trf_25147)
static void C_fcall trf_25147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25147(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25147(t0,t1);}

C_noret_decl(trf_24933)
static void C_fcall trf_24933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24933(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24933(t0,t1);}

C_noret_decl(trf_24940)
static void C_fcall trf_24940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24940(t0,t1);}

C_noret_decl(trf_24943)
static void C_fcall trf_24943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24943(t0,t1);}

C_noret_decl(trf_37346)
static void C_fcall trf_37346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37346(t0,t1);}

C_noret_decl(trf_37349)
static void C_fcall trf_37349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37349(t0,t1);}

C_noret_decl(trf_37192)
static void C_fcall trf_37192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37192(t0,t1);}

C_noret_decl(trf_37000)
static void C_fcall trf_37000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37000(t0,t1);}

C_noret_decl(trf_36850)
static void C_fcall trf_36850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36850(t0,t1);}

C_noret_decl(trf_36939)
static void C_fcall trf_36939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36939(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36939(t0,t1);}

C_noret_decl(trf_36853)
static void C_fcall trf_36853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36853(t0,t1);}

C_noret_decl(trf_36869)
static void C_fcall trf_36869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36869(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_36869(t0,t1,t2,t3);}

C_noret_decl(trf_36891)
static void C_fcall trf_36891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36891(t0,t1);}

C_noret_decl(trf_36786)
static void C_fcall trf_36786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36786(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36786(t0,t1,t2);}

C_noret_decl(trf_36733)
static void C_fcall trf_36733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36733(t0,t1);}

C_noret_decl(trf_29407)
static void C_fcall trf_29407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29407(t0,t1);}

C_noret_decl(trf_29269)
static void C_fcall trf_29269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29269(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29269(t0,t1);}

C_noret_decl(trf_29483)
static void C_fcall trf_29483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29483(t0,t1);}

C_noret_decl(trf_36337)
static void C_fcall trf_36337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36337(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36337(t0,t1,t2);}

C_noret_decl(trf_36365)
static void C_fcall trf_36365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36365(t0,t1);}

C_noret_decl(trf_36068)
static void C_fcall trf_36068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36068(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36068(t0,t1);}

C_noret_decl(trf_36232)
static void C_fcall trf_36232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36232(t0,t1);}

C_noret_decl(trf_36081)
static void C_fcall trf_36081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36081(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36081(t0,t1);}

C_noret_decl(trf_36316)
static void C_fcall trf_36316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36316(t0,t1);}

C_noret_decl(trf_36006)
static void C_fcall trf_36006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36006(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36006(t0,t1,t2);}

C_noret_decl(trf_35947)
static void C_fcall trf_35947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35947(t0,t1);}

C_noret_decl(trf_35883)
static void C_fcall trf_35883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35883(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35883(t0,t1,t2);}

C_noret_decl(trf_35803)
static void C_fcall trf_35803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35803(t0,t1);}

C_noret_decl(trf_35729)
static void C_fcall trf_35729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35729(t0,t1);}

C_noret_decl(trf_35724)
static void C_fcall trf_35724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35724(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35724(t0,t1,t2);}

C_noret_decl(trf_35604)
static void C_fcall trf_35604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35604(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35604(t0,t1,t2,t3);}

C_noret_decl(trf_35675)
static void C_fcall trf_35675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35675(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35675(t0,t1,t2);}

C_noret_decl(trf_35634)
static void C_fcall trf_35634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35634(t0,t1);}

C_noret_decl(trf_35606)
static void C_fcall trf_35606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35606(t0,t1);}

C_noret_decl(trf_35561)
static void C_fcall trf_35561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35561(t0,t1);}

C_noret_decl(trf_35517)
static void C_fcall trf_35517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35517(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35517(t0,t1,t2,t3);}

C_noret_decl(trf_35508)
static void C_fcall trf_35508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35508(t0,t1);}

C_noret_decl(trf_35338)
static void C_fcall trf_35338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35338(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_35338(t0,t1,t2,t3,t4);}

C_noret_decl(trf_35367)
static void C_fcall trf_35367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35367(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35367(t0,t1,t2);}

C_noret_decl(trf_35404)
static void C_fcall trf_35404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35404(t0,t1);}

C_noret_decl(trf_34805)
static void C_fcall trf_34805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34805(t0,t1);}

C_noret_decl(trf_34808)
static void C_fcall trf_34808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34808(t0,t1);}

C_noret_decl(trf_34811)
static void C_fcall trf_34811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34811(t0,t1);}

C_noret_decl(trf_34817)
static void C_fcall trf_34817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34817(t0,t1);}

C_noret_decl(trf_34567)
static void C_fcall trf_34567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34567(t0,t1);}

C_noret_decl(trf_34570)
static void C_fcall trf_34570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34570(t0,t1);}

C_noret_decl(trf_34576)
static void C_fcall trf_34576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34576(t0,t1);}

C_noret_decl(trf_34539)
static void C_fcall trf_34539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34539(t0,t1);}

C_noret_decl(trf_34519)
static void C_fcall trf_34519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34519(t0,t1);}

C_noret_decl(trf_34482)
static void C_fcall trf_34482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34482(t0,t1);}

C_noret_decl(trf_34462)
static void C_fcall trf_34462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34462(t0,t1);}

C_noret_decl(trf_33230)
static void C_fcall trf_33230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33230(t0,t1);}

C_noret_decl(trf_33233)
static void C_fcall trf_33233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33233(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33233(t0,t1);}

C_noret_decl(trf_33236)
static void C_fcall trf_33236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33236(t0,t1);}

C_noret_decl(trf_32760)
static void C_fcall trf_32760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32760(t0,t1);}

C_noret_decl(trf_32763)
static void C_fcall trf_32763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32763(t0,t1);}

C_noret_decl(trf_32766)
static void C_fcall trf_32766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32766(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32766(t0,t1);}

C_noret_decl(trf_32290)
static void C_fcall trf_32290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32290(t0,t1);}

C_noret_decl(trf_32293)
static void C_fcall trf_32293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32293(t0,t1);}

C_noret_decl(trf_32296)
static void C_fcall trf_32296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32296(t0,t1);}

C_noret_decl(trf_31542)
static void C_fcall trf_31542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31542(t0,t1);}

C_noret_decl(trf_31545)
static void C_fcall trf_31545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31545(t0,t1);}

C_noret_decl(trf_31548)
static void C_fcall trf_31548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31548(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31548(t0,t1);}

C_noret_decl(trf_31551)
static void C_fcall trf_31551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31551(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31551(t0,t1);}

C_noret_decl(trf_30794)
static void C_fcall trf_30794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30794(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30794(t0,t1);}

C_noret_decl(trf_30797)
static void C_fcall trf_30797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30797(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30797(t0,t1);}

C_noret_decl(trf_30800)
static void C_fcall trf_30800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30800(t0,t1);}

C_noret_decl(trf_30803)
static void C_fcall trf_30803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30803(t0,t1);}

C_noret_decl(trf_30324)
static void C_fcall trf_30324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30324(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30324(t0,t1);}

C_noret_decl(trf_30327)
static void C_fcall trf_30327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30327(t0,t1);}

C_noret_decl(trf_30330)
static void C_fcall trf_30330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30330(t0,t1);}

C_noret_decl(trf_29576)
static void C_fcall trf_29576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29576(t0,t1);}

C_noret_decl(trf_29579)
static void C_fcall trf_29579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29579(t0,t1);}

C_noret_decl(trf_29582)
static void C_fcall trf_29582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29582(t0,t1);}

C_noret_decl(trf_29585)
static void C_fcall trf_29585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29585(t0,t1);}

C_noret_decl(trf_29234)
static void C_fcall trf_29234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29234(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29234(t0,t1,t2,t3);}

C_noret_decl(trf_29074)
static void C_fcall trf_29074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29074(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29074(t0,t1);}

C_noret_decl(trf_29109)
static void C_fcall trf_29109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29109(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_29109(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_29119)
static void C_fcall trf_29119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29119(t0,t1);}

C_noret_decl(trf_29082)
static void C_fcall trf_29082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29082(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29082(t0,t1,t2);}

C_noret_decl(trf_29242)
static void C_fcall trf_29242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29242(t0,t1);}

C_noret_decl(trf_28860)
static void C_fcall trf_28860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28860(t0,t1);}

C_noret_decl(trf_28866)
static void C_fcall trf_28866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28866(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28866(t0,t1);}

C_noret_decl(trf_28889)
static void C_fcall trf_28889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28889(t0,t1);}

C_noret_decl(trf_28902)
static void C_fcall trf_28902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28902(t0,t1);}

C_noret_decl(trf_28876)
static void C_fcall trf_28876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28876(t0,t1);}

C_noret_decl(trf_28689)
static void C_fcall trf_28689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28689(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28689(t0,t1,t2,t3);}

C_noret_decl(trf_28698)
static void C_fcall trf_28698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28698(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28698(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28652)
static void C_fcall trf_28652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28652(t0,t1);}

C_noret_decl(trf_28515)
static void C_fcall trf_28515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28515(t0,t1);}

C_noret_decl(trf_28445)
static void C_fcall trf_28445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28445(t0,t1);}

C_noret_decl(trf_27806)
static void C_fcall trf_27806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27806(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27806(t0,t1,t2);}

C_noret_decl(trf_27766)
static void C_fcall trf_27766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27766(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27766(t0,t1,t2);}

C_noret_decl(trf_27779)
static void C_fcall trf_27779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27779(t0,t1);}

C_noret_decl(trf_28358)
static void C_fcall trf_28358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28358(t0,t1);}

C_noret_decl(trf_28148)
static void C_fcall trf_28148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28148(t0,t1);}

C_noret_decl(trf_28264)
static void C_fcall trf_28264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28264(t0,t1);}

C_noret_decl(trf_28151)
static void C_fcall trf_28151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28151(t0,t1);}

C_noret_decl(trf_28154)
static void C_fcall trf_28154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28154(t0,t1);}

C_noret_decl(trf_28059)
static void C_fcall trf_28059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28059(t0,t1);}

C_noret_decl(trf_27974)
static void C_fcall trf_27974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27974(t0,t1);}

C_noret_decl(trf_27931)
static void C_fcall trf_27931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27931(t0,t1);}

C_noret_decl(trf_27898)
static void C_fcall trf_27898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27898(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27898(t0,t1);}

C_noret_decl(trf_27893)
static void C_fcall trf_27893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27893(t0,t1);}

C_noret_decl(trf_27888)
static void C_fcall trf_27888(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27888(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27888(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27635)
static void C_fcall trf_27635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27635(t0,t1);}

C_noret_decl(trf_27482)
static void C_fcall trf_27482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27482(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27482(t0,t1,t2,t3);}

C_noret_decl(trf_27328)
static void C_fcall trf_27328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27328(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27328(t0,t1,t2);}

C_noret_decl(trf_27170)
static void C_fcall trf_27170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27170(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27170(t0,t1,t2);}

C_noret_decl(trf_27203)
static void C_fcall trf_27203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27203(t0,t1);}

C_noret_decl(trf_27110)
static void C_fcall trf_27110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27110(t0,t1);}

C_noret_decl(trf_27075)
static void C_fcall trf_27075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27075(t0,t1);}

C_noret_decl(trf_27091)
static void C_fcall trf_27091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27091(t0,t1);}

C_noret_decl(trf_27046)
static void C_fcall trf_27046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27046(t0,t1);}

C_noret_decl(trf_26953)
static void C_fcall trf_26953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26953(t0,t1);}

C_noret_decl(trf_26709)
static void C_fcall trf_26709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26709(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26709(t0,t1,t2);}

C_noret_decl(trf_26513)
static void C_fcall trf_26513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26513(t0,t1);}

C_noret_decl(trf_26676)
static void C_fcall trf_26676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26676(t0,t1);}

C_noret_decl(trf_26516)
static void C_fcall trf_26516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26516(t0,t1);}

C_noret_decl(trf_26519)
static void C_fcall trf_26519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26519(t0,t1);}

C_noret_decl(trf_26522)
static void C_fcall trf_26522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26522(t0,t1);}

C_noret_decl(trf_26564)
static void C_fcall trf_26564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26564(t0,t1);}

C_noret_decl(trf_26529)
static void C_fcall trf_26529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26529(t0,t1);}

C_noret_decl(trf_26258)
static void C_fcall trf_26258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26258(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26258(t0,t1,t2,t3);}

C_noret_decl(trf_26266)
static void C_fcall trf_26266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26266(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26266(t0,t1,t2,t3);}

C_noret_decl(trf_26395)
static void C_fcall trf_26395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26395(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26395(t0,t1,t2);}

C_noret_decl(trf_26349)
static void C_fcall trf_26349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26349(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26349(t0,t1,t2);}

C_noret_decl(trf_26252)
static void C_fcall trf_26252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26252(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26252(t0,t1,t2);}

C_noret_decl(trf_26246)
static void C_fcall trf_26246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26246(t0,t1);}

C_noret_decl(trf_26240)
static void C_fcall trf_26240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26240(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26240(t0,t1,t2);}

C_noret_decl(trf_26169)
static void C_fcall trf_26169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26169(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26169(t0,t1,t2);}

C_noret_decl(trf_26171)
static void C_fcall trf_26171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26171(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26171(t0,t1,t2);}

C_noret_decl(trf_26177)
static void C_fcall trf_26177(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26177(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26177(t0,t1,t2);}

C_noret_decl(trf_26018)
static void C_fcall trf_26018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26018(t0,t1);}

C_noret_decl(trf_26033)
static void C_fcall trf_26033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26033(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26033(t0,t1,t2);}

C_noret_decl(trf_25976)
static void C_fcall trf_25976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25976(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25976(t0,t1,t2);}

C_noret_decl(trf_25916)
static void C_fcall trf_25916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25916(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25916(t0,t1,t2);}

C_noret_decl(trf_25792)
static void C_fcall trf_25792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25792(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25792(t0,t1,t2);}

C_noret_decl(trf_25668)
static void C_fcall trf_25668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25668(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25668(t0,t1,t2,t3);}

C_noret_decl(trf_25704)
static void C_fcall trf_25704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25704(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25704(t0,t1,t2);}

C_noret_decl(trf_25500)
static void C_fcall trf_25500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25500(t0,t1);}

C_noret_decl(trf_23255)
static void C_fcall trf_23255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23255(t0,t1);}

C_noret_decl(trf_25634)
static void C_fcall trf_25634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25634(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25634(t0,t1,t2);}

C_noret_decl(trf_25644)
static void C_fcall trf_25644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25644(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25644(t0,t1);}

C_noret_decl(trf_25604)
static void C_fcall trf_25604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25604(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25604(t0,t1,t2);}

C_noret_decl(trf_25614)
static void C_fcall trf_25614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25614(t0,t1);}

C_noret_decl(trf_24597)
static void C_fcall trf_24597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24597(t0,t1);}

C_noret_decl(trf_24600)
static void C_fcall trf_24600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24600(t0,t1);}

C_noret_decl(trf_24603)
static void C_fcall trf_24603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24603(t0,t1);}

C_noret_decl(trf_24606)
static void C_fcall trf_24606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24606(t0,t1);}

C_noret_decl(trf_24609)
static void C_fcall trf_24609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24609(t0,t1);}

C_noret_decl(trf_24612)
static void C_fcall trf_24612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24612(t0,t1);}

C_noret_decl(trf_24440)
static void C_fcall trf_24440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24440(t0,t1);}

C_noret_decl(trf_24369)
static void C_fcall trf_24369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24369(t0,t1);}

C_noret_decl(trf_24184)
static void C_fcall trf_24184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24184(t0,t1);}

C_noret_decl(trf_24196)
static void C_fcall trf_24196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24196(t0,t1);}

C_noret_decl(trf_24233)
static void C_fcall trf_24233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24233(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24233(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24268)
static void C_fcall trf_24268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24268(t0,t1);}

C_noret_decl(trf_24163)
static void C_fcall trf_24163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24163(t0,t1);}

C_noret_decl(trf_24098)
static void C_fcall trf_24098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24098(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24098(t0,t1,t2);}

C_noret_decl(trf_24107)
static void C_fcall trf_24107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24107(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24107(t0,t1,t2);}

C_noret_decl(trf_24120)
static void C_fcall trf_24120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24120(t0,t1);}

C_noret_decl(trf_24054)
static void C_fcall trf_24054(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24054(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24054(t0,t1,t2);}

C_noret_decl(trf_24042)
static void C_fcall trf_24042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24042(t0,t1);}

C_noret_decl(trf_23940)
static void C_fcall trf_23940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23940(t0,t1);}

C_noret_decl(trf_23892)
static void C_fcall trf_23892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23892(t0,t1);}

C_noret_decl(trf_23273)
static void C_fcall trf_23273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23273(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23273(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23283)
static void C_fcall trf_23283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23283(t0,t1);}

C_noret_decl(trf_23412)
static void C_fcall trf_23412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23412(t0,t1);}

C_noret_decl(trf_23500)
static void C_fcall trf_23500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23500(t0,t1);}

C_noret_decl(trf_23573)
static void C_fcall trf_23573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23573(t0,t1);}

C_noret_decl(trf_23651)
static void C_fcall trf_23651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23651(t0,t1);}

C_noret_decl(trf_23602)
static void C_fcall trf_23602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23602(t0,t1);}

C_noret_decl(trf_23618)
static void C_fcall trf_23618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23618(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23618(t0,t1);}

C_noret_decl(trf_23582)
static void C_fcall trf_23582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23582(t0,t1);}

C_noret_decl(trf_23524)
static void C_fcall trf_23524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23524(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23524(t0,t1,t2);}

C_noret_decl(trf_23443)
static void C_fcall trf_23443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23443(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23443(t0,t1,t2);}

C_noret_decl(trf_23459)
static void C_fcall trf_23459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23459(t0,t1);}

C_noret_decl(trf_23427)
static void C_fcall trf_23427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23427(t0,t1);}

C_noret_decl(trf_23169)
static void C_fcall trf_23169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23169(t0,t1);}

C_noret_decl(trf_23178)
static void C_fcall trf_23178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23178(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23178(t0,t1);}

C_noret_decl(trf_23183)
static void C_fcall trf_23183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23183(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23183(t0,t1,t2);}

C_noret_decl(trf_23161)
static void C_fcall trf_23161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23161(t0,t1);}

C_noret_decl(trf_22953)
static void C_fcall trf_22953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22953(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22953(t0,t1,t2,t3);}

C_noret_decl(trf_22920)
static void C_fcall trf_22920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22920(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22920(t0,t1,t2,t3);}

C_noret_decl(trf_22902)
static void C_fcall trf_22902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22902(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22902(t0,t1,t2,t3);}

C_noret_decl(trf_22892)
static void C_fcall trf_22892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22892(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22892(t0,t1,t2,t3);}

C_noret_decl(trf_22880)
static void C_fcall trf_22880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22880(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22880(t0,t1,t2);}

C_noret_decl(trf_22848)
static void C_fcall trf_22848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22848(t0,t1,t2);}

C_noret_decl(trf_22832)
static void C_fcall trf_22832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22832(t0,t1);}

C_noret_decl(trf_22820)
static void C_fcall trf_22820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22820(t0,t1);}

C_noret_decl(trf_22802)
static void C_fcall trf_22802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22802(t0,t1);}

C_noret_decl(trf_22784)
static void C_fcall trf_22784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22784(t0,t1);}

C_noret_decl(trf_22769)
static void C_fcall trf_22769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22769(t0,t1);}

C_noret_decl(trf_22763)
static void C_fcall trf_22763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22763(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22763(t0,t1,t2,t3);}

C_noret_decl(trf_22751)
static void C_fcall trf_22751(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22751(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22751(t0,t1);}

C_noret_decl(trf_22733)
static void C_fcall trf_22733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22733(t0,t1);}

C_noret_decl(trf_22712)
static void C_fcall trf_22712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22712(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22712(t0,t1,t2);}

C_noret_decl(trf_22680)
static void C_fcall trf_22680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22680(t0,t1);}

C_noret_decl(trf_22622)
static void C_fcall trf_22622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22622(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22622(t0,t1,t2);}

C_noret_decl(trf_22612)
static void C_fcall trf_22612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22612(t0,t1);}

C_noret_decl(trf_22606)
static void C_fcall trf_22606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22606(t0,t1);}

C_noret_decl(trf_22594)
static void C_fcall trf_22594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22594(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22594(t0,t1);}

C_noret_decl(trf_22570)
static void C_fcall trf_22570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22570(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22570(t0,t1,t2);}

C_noret_decl(trf_22483)
static void C_fcall trf_22483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22483(t0,t1);}

C_noret_decl(trf_22462)
static void C_fcall trf_22462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22462(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22462(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22452)
static void C_fcall trf_22452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22452(t0,t1);}

C_noret_decl(trf_22440)
static void C_fcall trf_22440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22440(t0,t1);}

C_noret_decl(trf_22399)
static void C_fcall trf_22399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22399(t0,t1);}

C_noret_decl(trf_22381)
static void C_fcall trf_22381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22381(t0,t1);}

C_noret_decl(trf_22363)
static void C_fcall trf_22363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22363(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22363(t0,t1);}

C_noret_decl(trf_21330)
static void C_fcall trf_21330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21330(t0,t1);}

C_noret_decl(trf_21333)
static void C_fcall trf_21333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21333(t0,t1);}

C_noret_decl(trf_22048)
static void C_fcall trf_22048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22048(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22048(t0,t1,t2);}

C_noret_decl(trf_22071)
static void C_fcall trf_22071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22071(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22071(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22106)
static void C_fcall trf_22106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22106(t0,t1);}

C_noret_decl(trf_22010)
static void C_fcall trf_22010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22010(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22010(t0,t1);}

C_noret_decl(trf_21538)
static void C_fcall trf_21538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21538(t0,t1);}

C_noret_decl(trf_21881)
static void C_fcall trf_21881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21881(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21881(t0,t1,t2,t3);}

C_noret_decl(trf_21967)
static void C_fcall trf_21967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21967(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21967(t0,t1,t2,t3);}

C_noret_decl(trf_21924)
static void C_fcall trf_21924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21924(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21924(t0,t1,t2);}

C_noret_decl(trf_21848)
static void C_fcall trf_21848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21848(t0,t1,t2);}

C_noret_decl(trf_21786)
static void C_fcall trf_21786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21786(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21786(t0,t1,t2);}

C_noret_decl(trf_21821)
static void C_fcall trf_21821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21821(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21821(t0,t1,t2,t3);}

C_noret_decl(trf_21606)
static void C_fcall trf_21606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21606(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21606(t0,t1,t2);}

C_noret_decl(trf_21502)
static void C_fcall trf_21502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21502(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21502(t0,t1,t2);}

C_noret_decl(trf_21759)
static void C_fcall trf_21759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21759(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21759(t0,t1,t2,t3);}

C_noret_decl(trf_21732)
static void C_fcall trf_21732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21732(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21732(t0,t1,t2,t3);}

C_noret_decl(trf_21643)
static void C_fcall trf_21643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21643(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21643(t0,t1,t2);}

C_noret_decl(trf_21693)
static void C_fcall trf_21693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21693(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21693(t0,t1,t2,t3);}

C_noret_decl(trf_21425)
static void C_fcall trf_21425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21425(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21425(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21343)
static void C_fcall trf_21343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21343(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21343(t0,t1,t2,t3);}

C_noret_decl(trf_21264)
static void C_fcall trf_21264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21264(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21264(t0,t1,t2);}

C_noret_decl(trf_21289)
static void C_fcall trf_21289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21289(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21289(t0,t1);}

C_noret_decl(trf_20992)
static void C_fcall trf_20992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20992(t0,t1);}

C_noret_decl(trf_20995)
static void C_fcall trf_20995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20995(t0,t1);}

C_noret_decl(trf_21001)
static void C_fcall trf_21001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21001(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21001(t0,t1);}

C_noret_decl(trf_20715)
static void C_fcall trf_20715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20715(t0,t1);}

C_noret_decl(trf_20718)
static void C_fcall trf_20718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20718(t0,t1);}

C_noret_decl(trf_20645)
static void C_fcall trf_20645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20645(t0,t1);}

C_noret_decl(trf_20493)
static void C_fcall trf_20493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20493(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20493(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20418)
static void C_fcall trf_20418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20418(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20418(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20428)
static void C_fcall trf_20428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20428(t0,t1);}

C_noret_decl(trf_20435)
static void C_fcall trf_20435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20435(t0,t1);}

C_noret_decl(trf_20530)
static void C_fcall trf_20530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20530(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20530(t0,t1,t2);}

C_noret_decl(trf_20308)
static void C_fcall trf_20308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20308(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20308(t0,t1,t2,t3);}

C_noret_decl(trf_20320)
static void C_fcall trf_20320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20320(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20320(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20381)
static void C_fcall trf_20381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20381(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20381(t0,t1,t2);}

C_noret_decl(trf_19745)
static void C_fcall trf_19745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19745(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19745(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19681)
static void C_fcall trf_19681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19681(t0,t1);}

C_noret_decl(trf_19628)
static void C_fcall trf_19628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19628(t0,t1);}

C_noret_decl(trf_19631)
static void C_fcall trf_19631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19631(t0,t1);}

C_noret_decl(trf_19825)
static void C_fcall trf_19825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19825(t0,t1);}

C_noret_decl(trf_19828)
static void C_fcall trf_19828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19828(t0,t1);}

C_noret_decl(trf_19831)
static void C_fcall trf_19831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19831(t0,t1);}

C_noret_decl(trf_19846)
static void C_fcall trf_19846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19846(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19846(t0,t1);}

C_noret_decl(trf_19407)
static void C_fcall trf_19407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19407(t0,t1);}

C_noret_decl(trf_19499)
static void C_fcall trf_19499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19499(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19499(t0,t1,t2);}

C_noret_decl(trf_19518)
static void C_fcall trf_19518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19518(t0,t1);}

C_noret_decl(trf_19472)
static void C_fcall trf_19472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19472(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19472(t0,t1,t2);}

C_noret_decl(trf_19417)
static void C_fcall trf_19417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19417(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19417(t0,t1,t2);}

C_noret_decl(trf_19427)
static void C_fcall trf_19427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19427(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19427(t0,t1,t2,t3);}

C_noret_decl(trf_19273)
static void C_fcall trf_19273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19273(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19273(t0,t1,t2);}

C_noret_decl(trf_19342)
static void C_fcall trf_19342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19342(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19342(t0,t1,t2);}

C_noret_decl(trf_19288)
static void C_fcall trf_19288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19288(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19288(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18830)
static void C_fcall trf_18830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18830(t0,t1);}

C_noret_decl(trf_18833)
static void C_fcall trf_18833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18833(t0,t1);}

C_noret_decl(trf_18836)
static void C_fcall trf_18836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18836(t0,t1);}

C_noret_decl(trf_18839)
static void C_fcall trf_18839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18839(t0,t1);}

C_noret_decl(trf_18803)
static void C_fcall trf_18803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18803(t0,t1);}

C_noret_decl(trf_18526)
static void C_fcall trf_18526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18526(t0,t1);}

C_noret_decl(trf_18529)
static void C_fcall trf_18529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18529(t0,t1);}

C_noret_decl(trf_18532)
static void C_fcall trf_18532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18532(t0,t1);}

C_noret_decl(trf_18423)
static void C_fcall trf_18423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18423(t0,t1);}

C_noret_decl(trf_18414)
static void C_fcall trf_18414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18414(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18414(t0,t1,t2);}

C_noret_decl(trf_18405)
static void C_fcall trf_18405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18405(t0,t1);}

C_noret_decl(trf_18387)
static void C_fcall trf_18387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18387(t0,t1);}

C_noret_decl(trf_18369)
static void C_fcall trf_18369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18369(t0,t1);}

C_noret_decl(trf_18351)
static void C_fcall trf_18351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18351(t0,t1);}

C_noret_decl(trf_18342)
static void C_fcall trf_18342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18342(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18342(t0,t1,t2);}

C_noret_decl(trf_18333)
static void C_fcall trf_18333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18333(t0,t1);}

C_noret_decl(trf_18164)
static void C_fcall trf_18164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18164(t0,t1);}

C_noret_decl(trf_18120)
static void C_fcall trf_18120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18120(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18120(t0,t1,t2);}

C_noret_decl(trf_17641)
static void C_fcall trf_17641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17641(t0,t1);}

C_noret_decl(trf_17644)
static void C_fcall trf_17644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17644(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17644(t0,t1);}

C_noret_decl(trf_17647)
static void C_fcall trf_17647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17647(t0,t1);}

C_noret_decl(trf_17650)
static void C_fcall trf_17650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17650(t0,t1);}

C_noret_decl(trf_17596)
static void C_fcall trf_17596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17596(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17596(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17302)
static void C_fcall trf_17302(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17302(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17302(t0,t1);}

C_noret_decl(trf_17305)
static void C_fcall trf_17305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17305(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17305(t0,t1);}

C_noret_decl(trf_17308)
static void C_fcall trf_17308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17308(t0,t1);}

C_noret_decl(trf_17019)
static void C_fcall trf_17019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17019(t0,t1);}

C_noret_decl(trf_17022)
static void C_fcall trf_17022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17022(t0,t1);}

C_noret_decl(trf_17025)
static void C_fcall trf_17025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17025(t0,t1);}

C_noret_decl(trf_16978)
static void C_fcall trf_16978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16978(t0,t1);}

C_noret_decl(trf_16934)
static void C_fcall trf_16934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16934(t0,t1);}

C_noret_decl(trf_16849)
static void C_fcall trf_16849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16849(t0,t1);}

C_noret_decl(trf_16334)
static void C_fcall trf_16334(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16334(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16334(t0,t1);}

C_noret_decl(trf_16337)
static void C_fcall trf_16337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16337(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16337(t0,t1);}

C_noret_decl(trf_16340)
static void C_fcall trf_16340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16340(t0,t1);}

C_noret_decl(trf_16343)
static void C_fcall trf_16343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16343(t0,t1);}

C_noret_decl(trf_16250)
static void C_fcall trf_16250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16250(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16250(t0,t1,t2);}

C_noret_decl(trf_16241)
static void C_fcall trf_16241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16241(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16241(t0,t1);}

C_noret_decl(trf_16176)
static void C_fcall trf_16176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16176(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16176(t0,t1);}

C_noret_decl(trf_15918)
static void C_fcall trf_15918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15918(t0,t1);}

C_noret_decl(trf_15921)
static void C_fcall trf_15921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15921(t0,t1);}

C_noret_decl(trf_15924)
static void C_fcall trf_15924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15924(t0,t1);}

C_noret_decl(trf_15799)
static void C_fcall trf_15799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15799(t0,t1);}

C_noret_decl(trf_15823)
static void C_fcall trf_15823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15823(t0,t1);}

C_noret_decl(trf_15753)
static void C_fcall trf_15753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15753(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15753(t0,t1,t2);}

C_noret_decl(trf_15744)
static void C_fcall trf_15744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15744(t0,t1);}

C_noret_decl(trf_15443)
static void C_fcall trf_15443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15443(t0,t1);}

C_noret_decl(trf_15679)
static void C_fcall trf_15679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15679(t0,t1);}

C_noret_decl(trf_15685)
static void C_fcall trf_15685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15685(t0,t1);}

C_noret_decl(trf_15577)
static void C_fcall trf_15577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15577(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15577(t0,t1);}

C_noret_decl(trf_15579)
static void C_fcall trf_15579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15579(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15579(t0,t1,t2,t3);}

C_noret_decl(trf_15628)
static void C_fcall trf_15628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15628(t0,t1);}

C_noret_decl(trf_15593)
static void C_fcall trf_15593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15593(t0,t1);}

C_noret_decl(trf_15477)
static void C_fcall trf_15477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15477(t0,t1);}

C_noret_decl(trf_15391)
static void C_fcall trf_15391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15391(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15391(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15410)
static void C_fcall trf_15410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15410(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15410(t0,t1);}

C_noret_decl(trf_15341)
static void C_fcall trf_15341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15341(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15341(t0,t1,t2,t3);}

C_noret_decl(trf_15102)
static void C_fcall trf_15102(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15102(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_15102(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_15121)
static void C_fcall trf_15121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15121(t0,t1);}

C_noret_decl(trf_15136)
static void C_fcall trf_15136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15136(t0,t1);}

C_noret_decl(trf_15145)
static void C_fcall trf_15145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15145(t0,t1);}

C_noret_decl(trf_15092)
static void C_fcall trf_15092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15092(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_15092(t0);}

C_noret_decl(trf_15037)
static void C_fcall trf_15037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15037(t0,t1);}

C_noret_decl(trf_15028)
static void C_fcall trf_15028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15028(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15028(t0,t1,t2);}

C_noret_decl(trf_14911)
static void C_fcall trf_14911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14911(t0,t1);}

C_noret_decl(trf_14902)
static void C_fcall trf_14902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14902(t0,t1,t2);}

C_noret_decl(trf_14884)
static void C_fcall trf_14884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14884(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14884(t0,t1,t2);}

C_noret_decl(trf_14875)
static void C_fcall trf_14875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14875(t0,t1);}

C_noret_decl(trf_14857)
static void C_fcall trf_14857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14857(t0,t1);}

C_noret_decl(trf_14848)
static void C_fcall trf_14848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14848(t0,t1,t2);}

C_noret_decl(trf_14839)
static void C_fcall trf_14839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14839(t0,t1);}

C_noret_decl(trf_14821)
static void C_fcall trf_14821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14821(t0,t1);}

C_noret_decl(trf_14812)
static void C_fcall trf_14812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14812(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14812(t0,t1,t2);}

C_noret_decl(trf_14803)
static void C_fcall trf_14803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14803(t0,t1);}

C_noret_decl(trf_14788)
static void C_fcall trf_14788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14788(t0,t1);}

C_noret_decl(trf_14743)
static void C_fcall trf_14743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14743(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14743(t0,t1);}

C_noret_decl(trf_14725)
static void C_fcall trf_14725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14725(t0,t1);}

C_noret_decl(trf_14716)
static void C_fcall trf_14716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14716(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14716(t0,t1,t2);}

C_noret_decl(trf_14689)
static void C_fcall trf_14689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14689(t0,t1);}

C_noret_decl(trf_14671)
static void C_fcall trf_14671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14671(t0,t1);}

C_noret_decl(trf_14653)
static void C_fcall trf_14653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14653(t0,t1);}

C_noret_decl(trf_14644)
static void C_fcall trf_14644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14644(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14644(t0,t1,t2);}

C_noret_decl(trf_14632)
static void C_fcall trf_14632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14632(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_14632(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_14596)
static void C_fcall trf_14596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14596(t0,t1);}

C_noret_decl(trf_14559)
static void C_fcall trf_14559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14559(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14559(t0,t1,t2,t3);}

C_noret_decl(trf_14457)
static void C_fcall trf_14457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14457(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14457(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14404)
static void C_fcall trf_14404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14404(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14404(t0,t1,t2);}

C_noret_decl(trf_14576)
static void C_fcall trf_14576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14576(t0,t1);}

C_noret_decl(trf_14517)
static void C_fcall trf_14517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14517(t0,t1);}

C_noret_decl(trf_14372)
static void C_fcall trf_14372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14372(t0,t1);}

C_noret_decl(trf_14003)
static void C_fcall trf_14003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14003(t0,t1);}

C_noret_decl(trf_14006)
static void C_fcall trf_14006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14006(t0,t1);}

C_noret_decl(trf_14009)
static void C_fcall trf_14009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14009(t0,t1);}

C_noret_decl(trf_14167)
static void C_fcall trf_14167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14167(t0,t1);}

C_noret_decl(trf_14170)
static void C_fcall trf_14170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14170(t0,t1);}

C_noret_decl(trf_14179)
static void C_fcall trf_14179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14179(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14179(t0,t1,t2);}

C_noret_decl(trf_14189)
static void C_fcall trf_14189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14189(t0,t1);}

C_noret_decl(trf_14136)
static void C_fcall trf_14136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14136(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14136(t0,t1,t2);}

C_noret_decl(trf_14098)
static void C_fcall trf_14098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14098(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14098(t0,t1,t2);}

C_noret_decl(trf_13468)
static void C_fcall trf_13468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13468(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13468(t0,t1,t2,t3);}

C_noret_decl(trf_14053)
static void C_fcall trf_14053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14053(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14053(t0,t1,t2);}

C_noret_decl(trf_14023)
static void C_fcall trf_14023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14023(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14023(t0,t1,t2);}

C_noret_decl(trf_13958)
static void C_fcall trf_13958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13958(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13958(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13902)
static void C_fcall trf_13902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13902(t0,t1,t2);}

C_noret_decl(trf_13870)
static void C_fcall trf_13870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13870(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13870(t0,t1,t2);}

C_noret_decl(trf_13821)
static void C_fcall trf_13821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13821(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13821(t0,t1,t2);}

C_noret_decl(trf_13840)
static void C_fcall trf_13840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13840(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13840(t0,t1,t2);}

C_noret_decl(trf_13760)
static void C_fcall trf_13760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13760(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13760(t0,t1,t2,t3);}

C_noret_decl(trf_13743)
static void C_fcall trf_13743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13743(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13743(t0,t1);}

C_noret_decl(trf_13726)
static void C_fcall trf_13726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13726(t0,t1);}

C_noret_decl(trf_13559)
static void C_fcall trf_13559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13559(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13559(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13569)
static void C_fcall trf_13569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13569(t0,t1);}

C_noret_decl(trf_13381)
static void C_fcall trf_13381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13381(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13381(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13403)
static void C_fcall trf_13403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13403(t0,t1);}

C_noret_decl(trf_13222)
static void C_fcall trf_13222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13222(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13222(t0,t1,t2,t3);}

C_noret_decl(trf_13311)
static void C_fcall trf_13311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13311(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13311(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13325)
static void C_fcall trf_13325(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13325(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13325(t0,t1);}

C_noret_decl(trf_13253)
static void C_fcall trf_13253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13253(t0,t1);}

C_noret_decl(trf_13157)
static void C_fcall trf_13157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13157(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13157(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11664)
static void C_fcall trf_11664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11664(t0,t1);}

C_noret_decl(trf_11667)
static void C_fcall trf_11667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11667(t0,t1);}

C_noret_decl(trf_11670)
static void C_fcall trf_11670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11670(t0,t1);}

C_noret_decl(trf_11673)
static void C_fcall trf_11673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11673(t0,t1);}

C_noret_decl(trf_11676)
static void C_fcall trf_11676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11676(t0,t1);}

C_noret_decl(trf_11679)
static void C_fcall trf_11679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11679(t0,t1);}

C_noret_decl(trf_11441)
static void C_fcall trf_11441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11441(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11441(t0,t1);}

C_noret_decl(trf_11496)
static void C_fcall trf_11496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11496(t0,t1);}

C_noret_decl(trf_11471)
static void C_fcall trf_11471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11471(t0,t1);}

C_noret_decl(trf_11312)
static void C_fcall trf_11312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11312(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11312(t0,t1,t2);}

C_noret_decl(trf_11235)
static void C_fcall trf_11235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11235(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11235(t0,t1,t2);}

C_noret_decl(trf_11217)
static void C_fcall trf_11217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11217(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11217(t0,t1,t2);}

C_noret_decl(trf_11199)
static void C_fcall trf_11199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11199(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11199(t0,t1,t2);}

C_noret_decl(trf_11175)
static void C_fcall trf_11175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11175(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11175(t0,t1);}

C_noret_decl(trf_11169)
static void C_fcall trf_11169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11169(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11169(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11031)
static void C_fcall trf_11031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11031(t0,t1);}

C_noret_decl(trf_10914)
static void C_fcall trf_10914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10914(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10914(t0,t1,t2);}

C_noret_decl(trf_10923)
static void C_fcall trf_10923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10923(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10923(t0,t1,t2,t3);}

C_noret_decl(trf_10756)
static void C_fcall trf_10756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10756(t0,t1);}

C_noret_decl(trf_10772)
static void C_fcall trf_10772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10772(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10772(t0,t1,t2,t3);}

C_noret_decl(trf_10580)
static void C_fcall trf_10580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10580(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10580(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10610)
static void C_fcall trf_10610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10610(t0,t1);}

C_noret_decl(trf_10593)
static void C_fcall trf_10593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10593(t0,t1);}

C_noret_decl(trf_10458)
static void C_fcall trf_10458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10458(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10458(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10488)
static void C_fcall trf_10488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10488(t0,t1);}

C_noret_decl(trf_10471)
static void C_fcall trf_10471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10471(t0,t1);}

C_noret_decl(trf_10361)
static void C_fcall trf_10361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10361(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10361(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10374)
static void C_fcall trf_10374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10374(t0,t1);}

C_noret_decl(trf_10293)
static void C_fcall trf_10293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10293(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10293(t0,t1,t2,t3);}

C_noret_decl(trf_10263)
static void C_fcall trf_10263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10263(t0,t1);}

C_noret_decl(trf_10191)
static void C_fcall trf_10191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10191(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10191(t0,t1,t2,t3);}

C_noret_decl(trf_9990)
static void C_fcall trf_9990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9990(t0,t1);}

C_noret_decl(trf_10072)
static void C_fcall trf_10072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10072(t0,t1);}

C_noret_decl(trf_10083)
static void C_fcall trf_10083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10083(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10083(t0,t1,t2,t3);}

C_noret_decl(trf_10095)
static void C_fcall trf_10095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10095(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10095(t0,t1,t2);}

C_noret_decl(trf_10016)
static void C_fcall trf_10016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10016(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10016(t0,t1,t2);}

C_noret_decl(trf_9653)
static void C_fcall trf_9653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9653(t0,t1);}

C_noret_decl(trf_9656)
static void C_fcall trf_9656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9656(t0,t1);}

C_noret_decl(trf_9662)
static void C_fcall trf_9662(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9662(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9662(t0,t1);}

C_noret_decl(trf_9565)
static void C_fcall trf_9565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9565(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9565(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9457)
static void C_fcall trf_9457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9457(t0,t1);}

C_noret_decl(trf_9462)
static void C_fcall trf_9462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9462(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9462(t0,t1,t2,t3);}

C_noret_decl(trf_9229)
static void C_fcall trf_9229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9229(t0,t1);}

C_noret_decl(trf_9232)
static void C_fcall trf_9232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9232(t0,t1);}

C_noret_decl(trf_9130)
static void C_fcall trf_9130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9130(t0,t1);}

C_noret_decl(trf_9025)
static void C_fcall trf_9025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9025(t0,t1);}

C_noret_decl(trf_9034)
static void C_fcall trf_9034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9034(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9034(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9047)
static void C_fcall trf_9047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9047(t0,t1);}

C_noret_decl(trf_8889)
static void C_fcall trf_8889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8889(t0,t1);}

C_noret_decl(trf_8892)
static void C_fcall trf_8892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8892(t0,t1);}

C_noret_decl(trf_8894)
static void C_fcall trf_8894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8894(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8894(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8822)
static void C_fcall trf_8822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8822(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8822(t0,t1);}

C_noret_decl(trf_8825)
static void C_fcall trf_8825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8825(t0,t1);}

C_noret_decl(trf_8828)
static void C_fcall trf_8828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8828(t0,t1);}

C_noret_decl(trf_8686)
static void C_fcall trf_8686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8686(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8686(t0,t1,t2,t3);}

C_noret_decl(trf_8702)
static void C_fcall trf_8702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8702(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8702(t0,t1,t2);}

C_noret_decl(trf_8424)
static void C_fcall trf_8424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8424(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8424(t0,t1);}

C_noret_decl(trf_8427)
static void C_fcall trf_8427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8427(t0,t1);}

C_noret_decl(trf_8169)
static void C_fcall trf_8169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8169(t0,t1);}

C_noret_decl(trf_8102)
static void C_fcall trf_8102(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8102(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8102(t0,t1);}

C_noret_decl(trf_8092)
static void C_fcall trf_8092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8092(t0,t1);}

C_noret_decl(trf_8074)
static void C_fcall trf_8074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8074(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8074(t0,t1);}

C_noret_decl(trf_8063)
static void C_fcall trf_8063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8063(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8063(t0,t1,t2);}

C_noret_decl(trf_8025)
static void C_fcall trf_8025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8025(t0,t1);}

C_noret_decl(trf_8018)
static void C_fcall trf_8018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8018(t0,t1);}

C_noret_decl(trf_7994)
static void C_fcall trf_7994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7994(t0,t1);}

C_noret_decl(trf_7927)
static void C_fcall trf_7927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7927(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7927(t0,t1,t2,t3);}

C_noret_decl(trf_7916)
static void C_fcall trf_7916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7916(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7916(t0,t1,t2);}

C_noret_decl(trf_7882)
static void C_fcall trf_7882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7882(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7882(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7855)
static void C_fcall trf_7855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7855(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7855(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7814)
static void C_fcall trf_7814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7814(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7814(t0,t1,t2);}

C_noret_decl(trf_7820)
static void C_fcall trf_7820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7820(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7820(t0,t1,t2);}

C_noret_decl(trf_7830)
static void C_fcall trf_7830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7830(t0,t1);}

C_noret_decl(trf_7695)
static void C_fcall trf_7695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7695(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7695(t0,t1,t2,t3);}

C_noret_decl(trf_7708)
static void C_fcall trf_7708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7708(t0,t1);}

C_noret_decl(trf_7656)
static void C_fcall trf_7656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7656(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7656(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7666)
static void C_fcall trf_7666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7666(t0,t1);}

C_noret_decl(trf_7616)
static void C_fcall trf_7616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7616(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7616(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7626)
static void C_fcall trf_7626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7626(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7626(t0,t1);}

C_noret_decl(trf_7540)
static void C_fcall trf_7540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7540(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7540(t0,t1,t2,t3);}

C_noret_decl(trf_7517)
static void C_fcall trf_7517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7517(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7517(t0,t1,t2,t3);}

C_noret_decl(trf_7463)
static void C_fcall trf_7463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7463(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7463(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6858)
static void C_fcall trf_6858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6858(t0,t1);}

C_noret_decl(trf_6870)
static void C_fcall trf_6870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6870(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6870(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6923)
static void C_fcall trf_6923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6923(t0,t1);}

C_noret_decl(trf_6882)
static void C_fcall trf_6882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6882(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6882(t0,t1,t2);}

C_noret_decl(trf_6895)
static void C_fcall trf_6895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6895(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5795)){
C_save(t1);
C_rereclaim2(5795*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,969);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"first");
lf[48]=C_h_intern(&lf[48],6,"second");
lf[49]=C_h_intern(&lf[49],5,"third");
lf[50]=C_h_intern(&lf[50],5,"caddr");
lf[51]=C_h_intern(&lf[51],6,"fourth");
lf[52]=C_h_intern(&lf[52],6,"cadddr");
lf[53]=C_h_intern(&lf[53],5,"fifth");
lf[54]=C_h_intern(&lf[54],5,"sixth");
lf[55]=C_h_intern(&lf[55],7,"seventh");
lf[56]=C_h_intern(&lf[56],6,"eighth");
lf[57]=C_h_intern(&lf[57],5,"ninth");
lf[58]=C_h_intern(&lf[58],5,"tenth");
lf[59]=C_h_intern(&lf[59],3,"nth");
lf[60]=C_h_intern(&lf[60],8,"list-ref");
lf[61]=C_h_intern(&lf[61],4,"rest");
lf[62]=C_h_intern(&lf[62],4,"last");
lf[63]=C_h_intern(&lf[63],7,"butlast");
lf[64]=C_h_intern(&lf[64],4,"tail");
lf[65]=C_h_intern(&lf[65],5,"list*");
lf[66]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[67]=C_h_intern(&lf[67],9,"list-set!");
lf[68]=C_h_intern(&lf[68],8,"reverse!");
lf[69]=C_h_intern(&lf[69],9,"make-list");
lf[70]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[71]=C_h_intern(&lf[71],10,"list-index");
lf[72]=C_h_intern(&lf[72],9,"list-find");
lf[73]=C_h_intern(&lf[73],6,"every\077");
lf[99]=C_h_intern(&lf[99],7,"rescale");
lf[100]=C_h_intern(&lf[100],8,"discrete");
lf[101]=C_h_intern(&lf[101],4,"not\077");
lf[102]=C_h_intern(&lf[102],3,"int");
lf[103]=C_h_intern(&lf[103],4,"plus");
lf[104]=C_h_intern(&lf[104],1,"+");
lf[105]=C_h_intern(&lf[105],5,"minus");
lf[106]=C_h_intern(&lf[106],1,"-");
lf[107]=C_h_intern(&lf[107],5,"times");
lf[108]=C_h_intern(&lf[108],1,"*");
lf[109]=C_h_intern(&lf[109],6,"divide");
lf[110]=C_h_intern(&lf[110],1,"/");
lf[111]=C_h_intern(&lf[111],8,"quantize");
lf[112]=C_h_intern(&lf[112],8,"decimals");
lf[113]=C_h_intern(&lf[113],5,"round");
lf[114]=C_h_intern(&lf[114],4,"expt");
lf[115]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[116]=C_h_intern(&lf[116],15,"rhythm->seconds");
lf[117]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[118]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[119]=C_h_intern(&lf[119],6,"\000tempo");
lf[120]=C_h_intern(&lf[120],5,"\000beat");
lf[121]=C_h_intern(&lf[121],12,"cents->ratio");
lf[122]=C_h_intern(&lf[122],12,"ratio->cents");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[125]=C_h_intern(&lf[125],3,"err");
lf[126]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[128]=C_h_intern(&lf[128],6,"interp");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[130]=C_h_intern(&lf[130],8,"tendency");
lf[131]=C_h_intern(&lf[131],3,"ran");
lf[132]=C_h_intern(&lf[132],3,"fit");
lf[133]=C_h_intern(&lf[133],9,"remainder");
lf[134]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[135]=C_h_intern(&lf[135],5,"scale");
lf[136]=C_h_intern(&lf[136],6,"modulo");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[138]=C_h_intern(&lf[138],8,"ran-set!");
lf[139]=C_h_intern(&lf[139],7,"between");
lf[140]=C_h_intern(&lf[140],4,"pick");
lf[141]=C_h_intern(&lf[141],4,"odds");
lf[142]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[143]=C_h_intern(&lf[143],5,"\000true");
lf[144]=C_h_intern(&lf[144],6,"\000false");
lf[145]=C_h_intern(&lf[145],4,"vary");
lf[146]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[148]=C_h_intern(&lf[148],8,"shuffle!");
lf[149]=C_h_intern(&lf[149],7,"shuffle");
lf[150]=C_h_intern(&lf[150],6,"ranlow");
lf[151]=C_h_intern(&lf[151],7,"ranhigh");
lf[152]=C_h_intern(&lf[152],9,"ranmiddle");
lf[153]=C_h_intern(&lf[153],7,"ranbeta");
lf[154]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[155]=C_h_intern(&lf[155],2,"\000a");
lf[156]=C_h_intern(&lf[156],2,"\000b");
lf[157]=C_h_intern(&lf[157],6,"ranexp");
lf[158]=C_h_intern(&lf[158],8,"rangauss");
lf[159]=C_h_intern(&lf[159],9,"rancauchy");
lf[160]=C_h_intern(&lf[160],10,"ranpoisson");
lf[161]=C_h_intern(&lf[161],3,"arg");
lf[162]=C_h_intern(&lf[162],8,"rangamma");
lf[163]=C_h_intern(&lf[163],8,"ranbrown");
lf[164]=C_h_intern(&lf[164],7,"ranpink");
lf[165]=C_h_intern(&lf[165],4,"segs");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[171]=C_h_intern(&lf[171],13,"string-append");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[176]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[177]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[178]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[179]=C_h_intern(&lf[179],5,"floor");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[181]=C_h_intern(&lf[181],4,"note");
lf[182]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[183]=C_h_intern(&lf[183],3,"key");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[185]=C_h_intern(&lf[185],2,"hz");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[187]=C_h_intern(&lf[187],2,"pc");
lf[188]=C_h_intern(&lf[188],6,"invert");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[191]=C_h_intern(&lf[191],9,"transpose");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[193]=C_h_intern(&lf[193],10,"retrograde");
lf[194]=C_h_intern(&lf[194],7,"reverse");
lf[195]=C_h_intern(&lf[195],11,"scale-order");
lf[196]=C_h_intern(&lf[196],4,"sort");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[199]=C_h_intern(&lf[199],8,"spectrum");
lf[201]=C_h_intern(&lf[201],13,"spectrum-time");
lf[203]=C_h_intern(&lf[203],14,"\003sysblock-set!");
lf[204]=C_h_intern(&lf[204],13,"spectrum-size");
lf[206]=C_h_intern(&lf[206],14,"spectrum-freqs");
lf[208]=C_h_intern(&lf[208],13,"spectrum-amps");
lf[209]=C_h_intern(&lf[209],13,"spectrum-copy");
lf[210]=C_h_intern(&lf[210],14,"spectrum-pairs");
lf[211]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[212]=C_h_intern(&lf[212],16,"spectrum-minfreq");
lf[213]=C_h_intern(&lf[213],16,"spectrum-maxfreq");
lf[214]=C_h_intern(&lf[214],15,"spectrum-minamp");
lf[215]=C_h_intern(&lf[215],12,"\003sysfor-each");
lf[216]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[217]=C_h_intern(&lf[217],15,"spectrum-maxamp");
lf[218]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[219]=C_h_intern(&lf[219],13,"spectrum-keys");
lf[220]=C_h_intern(&lf[220],8,"for-each");
lf[221]=C_h_intern(&lf[221],6,"\000order");
lf[222]=C_h_intern(&lf[222],7,"\000thresh");
lf[223]=C_h_intern(&lf[223],6,"\000quant");
lf[224]=C_h_intern(&lf[224],7,"\000unique");
lf[225]=C_h_intern(&lf[225],4,"\000min");
lf[226]=C_h_intern(&lf[226],4,"\000max");
lf[227]=C_h_intern(&lf[227],11,"fm-spectrum");
lf[228]=C_h_intern(&lf[228],8,"set-car!");
lf[229]=C_h_intern(&lf[229],4,"caar");
lf[230]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[231]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[232]=C_h_intern(&lf[232],13,"spectrum-add!");
lf[233]=C_h_intern(&lf[233],11,"rm-spectrum");
lf[234]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[235]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[236]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[237]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[238]=C_h_intern(&lf[238],14,"spectrum-flip!");
lf[239]=C_h_intern(&lf[239],17,"spectrum-rescale!");
lf[240]=C_h_intern(&lf[240],5,"sort!");
lf[241]=C_h_intern(&lf[241],3,"map");
lf[242]=C_h_intern(&lf[242],2,"<=");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[244]=C_h_intern(&lf[244],7,"number\077");
lf[245]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[248]=C_h_intern(&lf[248],19,"import-spear-frames");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[250]=C_h_intern(&lf[250],9,"read-line");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[252]=C_h_intern(&lf[252],4,"read");
lf[253]=C_h_intern(&lf[253],17,"open-input-string");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[259]=C_h_intern(&lf[259],18,"current-input-port");
lf[260]=C_h_intern(&lf[260],20,"with-input-from-file");
lf[262]=C_h_intern(&lf[262],6,"period");
lf[271]=C_h_intern(&lf[271],7,"pattern");
lf[286]=C_h_intern(&lf[286],4,"\000nad");
lf[287]=C_h_intern(&lf[287],8,"\000periods");
lf[288]=C_h_intern(&lf[288],12,"\000depth-first");
lf[290]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[291]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[292]=C_h_intern(&lf[292],14,"\000breadth-first");
lf[293]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[294]=C_h_intern(&lf[294],7,"\000values");
lf[295]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[297]=C_h_intern(&lf[297],4,"eop\077");
lf[298]=C_h_intern(&lf[298],4,"\000eop");
lf[299]=C_h_intern(&lf[299],4,"eod\077");
lf[300]=C_h_intern(&lf[300],4,"\000eod");
lf[301]=C_h_intern(&lf[301],4,"next");
lf[305]=C_h_intern(&lf[305],5,"force");
lf[306]=C_h_intern(&lf[306],8,"promise\077");
lf[307]=C_h_intern(&lf[307],3,"max");
lf[308]=C_h_intern(&lf[308],10,"make-cycle");
lf[310]=C_h_intern(&lf[310],4,"\000for");
lf[311]=C_h_intern(&lf[311],7,"\000repeat");
lf[313]=C_h_intern(&lf[313],5,"palin");
lf[315]=C_h_intern(&lf[315],15,"make-palindrome");
lf[317]=C_h_intern(&lf[317],6,"\000elide");
lf[318]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[319]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[320]=C_h_intern(&lf[320],9,"make-line");
lf[322]=C_h_intern(&lf[322],9,"make-heap");
lf[324]=C_h_intern(&lf[324],13,"make-rotation");
lf[326]=C_h_intern(&lf[326],7,"\000rotate");
lf[328]=C_h_intern(&lf[328],11,"random-item");
lf[336]=C_h_intern(&lf[336],14,"make-weighting");
lf[339]=C_h_intern(&lf[339],7,"\000weight");
lf[340]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[341]=C_h_intern(&lf[341],11,"make-markov");
lf[343]=C_h_intern(&lf[343],5,"\000past");
lf[344]=C_h_intern(&lf[344],2,"->");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[346]=C_h_intern(&lf[346],3,"\000->");
lf[347]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[352]=C_h_intern(&lf[352],10,"graph-node");
lf[353]=C_h_intern(&lf[353],10,"make-graph");
lf[355]=C_h_intern(&lf[355],3,"\000to");
lf[356]=C_h_intern(&lf[356],3,"\000id");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[360]=C_h_intern(&lf[360],14,"markov-analyze");
lf[361]=C_h_intern(&lf[361],6,"format");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[363]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[365]=C_h_intern(&lf[365],7,"newline");
lf[366]=C_h_intern(&lf[366],7,"display");
lf[367]=C_h_intern(&lf[367],19,"\003syswrite-char/port");
lf[368]=C_h_intern(&lf[368],19,"\003sysstandard-output");
lf[369]=C_h_intern(&lf[369],3,"min");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[373]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[374]=C_h_intern(&lf[374],11,"make-string");
lf[375]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[376]=C_h_intern(&lf[376],1,"<");
lf[377]=C_h_intern(&lf[377],11,"string-ci<\077");
lf[378]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[381]=C_h_intern(&lf[381],5,"\000mode");
lf[383]=C_h_intern(&lf[383],5,"token");
lf[388]=C_h_intern(&lf[388],1,"t");
lf[393]=C_h_intern(&lf[393],4,"rule");
lf[396]=C_h_intern(&lf[396],22,"hash-table-ref/default");
lf[403]=C_h_intern(&lf[403],11,"parse-error");
lf[407]=C_h_intern(&lf[407],10,"parse-unit");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[421]=C_h_intern(&lf[421],14,"string->symbol");
lf[422]=C_h_intern(&lf[422],5,"equal");
lf[423]=C_h_intern(&lf[423],3,"and");
lf[424]=C_h_intern(&lf[424],2,"or");
lf[425]=C_h_intern(&lf[425],3,"not");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[432]=C_h_intern(&lf[432],2,"!=");
lf[433]=C_h_intern(&lf[433],1,"=");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[440]=C_h_intern(&lf[440],1,"@");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[442]=C_h_intern(&lf[442],6,"printf");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[448]=C_h_intern(&lf[448],2,">=");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[451]=C_h_intern(&lf[451],5,"begin");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[454]=C_h_intern(&lf[454],1,">");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[461]=C_h_intern(&lf[461],17,"*sal-trace-input*");
lf[462]=C_h_intern(&lf[462],3,"sal");
lf[463]=C_h_intern(&lf[463],11,"print-error");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[465]=C_h_intern(&lf[465],9,"substring");
lf[466]=C_h_intern(&lf[466],2,"pp");
lf[467]=C_h_intern(&lf[467],4,"eval");
lf[468]=C_h_intern(&lf[468],7,"\000syntax");
lf[469]=C_h_intern(&lf[469],7,"\000scheme");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[471]=C_h_intern(&lf[471],7,"call/cc");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[473]=C_h_intern(&lf[473],9,"sal:print");
lf[474]=C_h_intern(&lf[474],13,"print-message");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[483]=C_h_intern(&lf[483],9,"sal:chdir");
lf[484]=C_h_intern(&lf[484],8,"sal:load");
lf[485]=C_h_intern(&lf[485],13,"load-sal-file");
lf[486]=C_h_intern(&lf[486],4,"load");
lf[487]=C_h_intern(&lf[487],15,"\003syssubstring=\077");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[491]=C_h_intern(&lf[491],12,"file-exists\077");
lf[492]=C_h_intern(&lf[492],8,"sal:open");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[494]=C_h_intern(&lf[494],10,"sal:output");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[507]=C_h_intern(&lf[507],8,"operator");
lf[508]=C_h_intern(&lf[508],8,"bindings");
lf[509]=C_h_intern(&lf[509],10,"collectors");
lf[510]=C_h_intern(&lf[510],9,"initially");
lf[511]=C_h_intern(&lf[511],9,"end-tests");
lf[512]=C_h_intern(&lf[512],7,"looping");
lf[513]=C_h_intern(&lf[513],8,"stepping");
lf[514]=C_h_intern(&lf[514],7,"finally");
lf[515]=C_h_intern(&lf[515],9,"returning");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[537]=C_h_intern(&lf[537],3,"for");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[540]=C_h_intern(&lf[540],8,"downfrom");
lf[541]=C_h_intern(&lf[541],5,"above");
lf[542]=C_h_intern(&lf[542],5,"below");
lf[543]=C_h_intern(&lf[543],6,"downto");
lf[544]=C_h_intern(&lf[544],4,"from");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[551]=C_h_intern(&lf[551],2,"to");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[561]=C_h_intern(&lf[561],2,"by");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[570]=C_h_intern(&lf[570],6,"across");
lf[571]=C_h_intern(&lf[571],13,"vector-length");
lf[572]=C_h_intern(&lf[572],10,"vector-ref");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[575]=C_h_intern(&lf[575],4,"over");
lf[576]=C_h_intern(&lf[576],2,"in");
lf[577]=C_h_intern(&lf[577],5,"quote");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[585]=C_h_intern(&lf[585],2,"on");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[590]=C_h_intern(&lf[590],4,"then");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[596]=C_h_intern(&lf[596],4,"with");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[619]=C_h_intern(&lf[619],3,"sum");
lf[620]=C_h_intern(&lf[620],5,"count");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[622]=C_h_intern(&lf[622],8,"minimize");
lf[623]=C_h_intern(&lf[623],8,"maximize");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[626]=C_h_intern(&lf[626],4,"list");
lf[627]=C_h_intern(&lf[627],8,"set-cdr!");
lf[628]=C_h_intern(&lf[628],9,"last-pair");
lf[629]=C_h_intern(&lf[629],7,"collect");
lf[630]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[633]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[634]=C_h_intern(&lf[634],5,"nconc");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[638]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[639]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[640]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[641]=C_h_intern(&lf[641],4,"into");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[648]=C_h_intern(&lf[648],6,"return");
lf[650]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[651]=C_h_intern(&lf[651],5,"until");
lf[652]=C_h_intern(&lf[652],5,"while");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[656]=C_h_intern(&lf[656],7,"thereis");
lf[657]=C_h_intern(&lf[657],6,"always");
lf[658]=C_h_intern(&lf[658],5,"never");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[662]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[668]=C_h_intern(&lf[668],4,"task");
lf[669]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[671]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[677]=C_h_intern(&lf[677],2,"do");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[680]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[681]=C_h_intern(&lf[681],4,"iter");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[684]=C_h_intern(&lf[684],6,"repeat");
lf[685]=C_h_intern(&lf[685],2,"as");
lf[687]=C_h_intern(&lf[687],10,"mm:make-on");
lf[688]=C_h_intern(&lf[688],5,"\000time");
lf[689]=C_h_intern(&lf[689],4,"\000key");
lf[690]=C_h_intern(&lf[690],4,"\000vel");
lf[691]=C_h_intern(&lf[691],5,"\000chan");
lf[692]=C_h_intern(&lf[692],6,"mm:on\077");
lf[693]=C_h_intern(&lf[693],11,"mm:make-off");
lf[694]=C_h_intern(&lf[694],7,"mm:off\077");
lf[695]=C_h_intern(&lf[695],13,"mm:make-touch");
lf[696]=C_h_intern(&lf[696],4,"\000val");
lf[697]=C_h_intern(&lf[697],9,"mm:touch\077");
lf[698]=C_h_intern(&lf[698],12,"mm:make-ctrl");
lf[699]=C_h_intern(&lf[699],4,"\000num");
lf[700]=C_h_intern(&lf[700],8,"mm:ctrl\077");
lf[701]=C_h_intern(&lf[701],12,"mm:make-prog");
lf[702]=C_h_intern(&lf[702],8,"mm:prog\077");
lf[703]=C_h_intern(&lf[703],13,"mm:make-press");
lf[704]=C_h_intern(&lf[704],9,"mm:press\077");
lf[705]=C_h_intern(&lf[705],12,"mm:make-bend");
lf[706]=C_h_intern(&lf[706],7,"mm:free");
lf[707]=C_h_intern(&lf[707],7,"mm:copy");
lf[708]=C_h_intern(&lf[708],7,"mm:time");
lf[709]=C_h_intern(&lf[709],12,"mm:time-set!");
lf[710]=C_h_intern(&lf[710],7,"mm:chan");
lf[711]=C_h_intern(&lf[711],12,"mm:chan-set!");
lf[712]=C_h_intern(&lf[712],6,"mm:key");
lf[713]=C_h_intern(&lf[713],11,"mm:key-set!");
lf[714]=C_h_intern(&lf[714],6,"mm:vel");
lf[715]=C_h_intern(&lf[715],11,"mm:vel-set!");
lf[716]=C_h_intern(&lf[716],6,"mm:val");
lf[717]=C_h_intern(&lf[717],11,"mm:val-set!");
lf[718]=C_h_intern(&lf[718],1,"k");
lf[719]=C_h_intern(&lf[719],6,"mm:num");
lf[720]=C_h_intern(&lf[720],11,"mm:num-set!");
lf[721]=C_h_intern(&lf[721],7,"mp:note");
lf[722]=C_h_intern(&lf[722],7,"mp:midi");
lf[723]=C_h_intern(&lf[723],6,"mp:off");
lf[724]=C_h_intern(&lf[724],5,"mp:on");
lf[725]=C_h_intern(&lf[725],8,"mp:touch");
lf[726]=C_h_intern(&lf[726],7,"mp:ctrl");
lf[727]=C_h_intern(&lf[727],7,"mp:prog");
lf[728]=C_h_intern(&lf[728],8,"mp:press");
lf[729]=C_h_intern(&lf[729],7,"mp:bend");
lf[730]=C_h_intern(&lf[730],5,"mp:mm");
lf[731]=C_h_intern(&lf[731],9,"mp:inhook");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[733]=C_h_intern(&lf[733],27,"condition-property-accessor");
lf[734]=C_h_intern(&lf[734],3,"exn");
lf[735]=C_h_intern(&lf[735],7,"message");
lf[736]=C_h_intern(&lf[736],22,"with-exception-handler");
lf[737]=C_h_intern(&lf[737],30,"call-with-current-continuation");
lf[738]=C_h_intern(&lf[738],8,"cs:score");
lf[739]=C_h_intern(&lf[739],9,"cs:record");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\037value not boolean or number > 0");
lf[741]=C_h_intern(&lf[741],8,"cs:trace");
lf[742]=C_h_intern(&lf[742],8,"cs:clear");
lf[743]=C_h_intern(&lf[743],4,"cs:i");
lf[744]=C_h_intern(&lf[744],4,"cs:f");
lf[745]=C_h_intern(&lf[745],8,"cs:print");
lf[746]=C_h_intern(&lf[746],6,"\000start");
lf[747]=C_h_intern(&lf[747],4,"\000end");
lf[748]=C_h_intern(&lf[748],7,"cs:play");
lf[749]=C_h_intern(&lf[749],6,"\000shift");
lf[750]=C_h_intern(&lf[750],7,"cm-logo");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[758]=C_h_intern(&lf[758],25,"current-time-milliseconds");
lf[759]=C_h_intern(&lf[759],20,"current-time-seconds");
lf[761]=C_h_intern(&lf[761],6,"\003sysgc");
lf[764]=C_h_intern(&lf[764],6,"sprout");
lf[765]=C_h_intern(&lf[765],9,"\003syserror");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[767]=C_h_intern(&lf[767],3,"now");
lf[768]=C_h_intern(&lf[768],11,"time-format");
lf[769]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[770]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[771]=C_h_intern(&lf[771],1,"m");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[773]=C_h_intern(&lf[773],1,"s");
lf[774]=C_h_intern(&lf[774],5,"pause");
lf[775]=C_h_intern(&lf[775],7,"paused\077");
lf[776]=C_h_intern(&lf[776],4,"cont");
lf[777]=C_h_intern(&lf[777],4,"stop");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[779]=C_h_intern(&lf[779],4,"hush");
lf[781]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[787]=C_h_intern(&lf[787],14,"return-to-host");
lf[788]=C_h_intern(&lf[788],6,"define");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[790]=C_h_intern(&lf[790],18,"\003sysregister-macro");
lf[791]=C_h_intern(&lf[791],14,"define-process");
lf[792]=C_h_intern(&lf[792],6,"lambda");
lf[793]=C_h_intern(&lf[793],7,"elapsed");
lf[794]=C_h_intern(&lf[794],1,"x");
lf[795]=C_h_intern(&lf[795],4,"wait");
lf[796]=C_h_intern(&lf[796],18,"current-error-port");
lf[797]=C_h_intern(&lf[797],19,"print-error-message");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[803]=C_h_intern(&lf[803],3,"run");
lf[804]=C_h_intern(&lf[804],20,"\003sysregister-macro-2");
lf[805]=C_h_intern(&lf[805],15,"hash-table-set!");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:play");
lf[807]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007cs:play\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:print");
lf[809]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:print\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[811]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:trace");
lf[813]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:trace\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\011cs:record");
lf[815]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011cs:record\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:score");
lf[817]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:score\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[819]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[821]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[823]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[825]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[827]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[829]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[831]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[833]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[835]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[837]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[839]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[841]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[843]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[844]=C_h_intern(&lf[844],5,":loop");
lf[845]=C_h_intern(&lf[845],7,"tagbody");
lf[846]=C_h_intern(&lf[846],5,"block");
lf[847]=C_h_intern(&lf[847],3,"nil");
lf[848]=C_h_intern(&lf[848],2,"go");
lf[849]=C_h_intern(&lf[849],8,"function");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[851]=C_h_intern(&lf[851],3,"pop");
lf[852]=C_h_intern(&lf[852],4,"cons");
lf[853]=C_h_intern(&lf[853],4,"push");
lf[854]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[855]=C_h_intern(&lf[855],4,"loop");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[864]=C_h_intern(&lf[864],7,"\000return");
lf[865]=C_h_intern(&lf[865],9,"\000function");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[867]=C_h_intern(&lf[867],8,"\000process");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[872]=C_h_intern(&lf[872],4,"cond");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\004halt");
lf[879]=C_h_intern(&lf[879],5,"\000loop");
lf[880]=C_h_intern(&lf[880],4,"\000run");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[885]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[888]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[889]=C_h_intern(&lf[889],9,"list-tail");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[892]=C_h_intern(&lf[892],9,"\000bindings");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[900]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[904]=C_h_intern(&lf[904],10,"sal:system");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[918]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[922]=C_h_intern(&lf[922],7,"unquote");
lf[923]=C_h_intern(&lf[923],16,"unquote-splicing");
lf[924]=C_h_intern(&lf[924],5,"\000list");
lf[925]=C_h_intern(&lf[925],8,"\000unquote");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[928]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[929]=C_h_intern(&lf[929],10,"quasiquote");
lf[930]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[932]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[934]=C_h_intern(&lf[934],7,"fprintf");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[936]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[937]=C_h_intern(&lf[937],27,"\003sysregister-record-printer");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[939]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[940]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[941]=C_h_intern(&lf[941],6,"ruleid");
lf[942]=C_h_intern(&lf[942],9,"make-rule");
lf[943]=C_h_intern(&lf[943],7,"*rules*");
lf[944]=C_h_intern(&lf[944],7,"defrule");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[946]=C_h_intern(&lf[946],15,"make-hash-table");
lf[947]=C_h_intern(&lf[947],3,"eq\077");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[951]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[953]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[954]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[955]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[956]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[961]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[962]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[963]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[964]=C_h_intern(&lf[964],6,"equal\077");
lf[965]=C_h_intern(&lf[965],4,"send");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[967]=C_h_intern(&lf[967],19,"define-send-message");
lf[968]=C_h_intern(&lf[968],12,"with-optkeys");
C_register_lf2(lf,969,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6518,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6516 */
static void C_ccall f_6518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6519 in k6516 */
static void C_ccall f_6521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6522 in k6519 in k6516 */
static void C_ccall f_6524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6527,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6529,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6818,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41314,a[2]=((C_word)li665),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[968],t4);}

/* a41313 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41314(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_41314r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41314r(t0,t1,t2,t3);}}

static void C_ccall f_41314r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 250  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6822,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 256  make-hash-table");
t3=C_retrieve(lf[946]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[964]+1));}

/* k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6822,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6825,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41262,a[2]=((C_word)li664),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 258  ##sys#register-macro");
t5=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[967],t4);}

/* a41261 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41262(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41262,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41266,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_41266(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41299,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  string->symbol");
t10=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41309,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 267  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 269  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[966]);}}}}

/* k41307 in a41261 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41266(2,t3,t2);}

/* k41297 in a41261 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41266(2,t3,t2);}

/* k41264 in a41261 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41266,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[577],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[805],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6825,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6827,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7118,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41256,a[2]=((C_word)li663),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  ##sys#register-macro");
t5=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[965],t4);}

/* a41255 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41256(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_41256r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41256r(t0,t1,t2,t3);}}

static void C_ccall f_41256r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 355  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7118,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7120,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7131,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,*((C_word*)lf[8]+1));
t5=C_mutate((C_word*)lf[48]+1,*((C_word*)lf[22]+1));
t6=C_mutate((C_word*)lf[49]+1,*((C_word*)lf[50]+1));
t7=C_mutate((C_word*)lf[51]+1,*((C_word*)lf[52]+1));
t8=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7164,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7174,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7184,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7194,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7204,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7218,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[59]+1,*((C_word*)lf[60]+1));
t15=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7233,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7239,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7262,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7310,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7400,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7440,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7450,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7511,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7610,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7650,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7689,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7728,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7814,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7855,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7882,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7909,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7916,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7927,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7942,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7949,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7956,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7975,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7994,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8015,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8018,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8025,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8054,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8057,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8060,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8063,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8074,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8092,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8099,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8102,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8109,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8112,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8131,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8165,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8276,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[103]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8291,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8333,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[107]+1,*((C_word*)lf[108]+1));
t57=C_mutate((C_word*)lf[109]+1,*((C_word*)lf[110]+1));
t58=C_mutate((C_word*)lf[111]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8359,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8380,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8420,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8656,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8671,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[123],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8686,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[128]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8772,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8818,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8885,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9018,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[138]+1,C_retrieve2(lf[86],"tb:ran-set!"));
t69=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9126,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9161,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9182,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[141]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9225,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[145]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9453,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9552,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[149]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9607,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[150]+1,C_retrieve2(lf[89],"tb:ranlow"));
t77=C_mutate((C_word*)lf[151]+1,C_retrieve2(lf[90],"tb:ranhigh"));
t78=C_mutate((C_word*)lf[152]+1,C_retrieve2(lf[91],"tb:ranmiddle"));
t79=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9649,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9877,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9896,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[159]+1,C_retrieve2(lf[95],"tb:rancauchy"));
t83=C_mutate((C_word*)lf[160]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9937,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t84=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9956,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate((C_word*)lf[163]+1,C_retrieve2(lf[98],"tb:ranbrown"));
t86=C_mutate((C_word*)lf[164]+1,C_retrieve2(lf[97],"tb:ranpink"));
t87=C_mutate((C_word*)lf[165]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9977,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t88=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10186,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  make-hash-table");
t89=C_retrieve(lf[946]);
((C_proc3)C_retrieve_proc(t89))(3,t89,t88,*((C_word*)lf[964]+1));}

/* k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10186,2,t0,t1);}
t2=C_mutate(&lf[168],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10189,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41040,a[2]=t7,a[3]=t4,a[4]=((C_word)li662),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_41040(t9,t5,C_fix(0));}

/* do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_41040(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41040,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[950],C_fix(-1),lf[951],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41053,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t5=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[168],"*notes*"),lf[952],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41254,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41254,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[953],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41074,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t6=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41074,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[954]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[955]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41086,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7994(t4,((C_word*)t0)[4]);}

/* k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41090,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[963]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7994(t2,t3);}

/* k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41094,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[962]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7994(t2,t3);}

/* k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_41238,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 376  floor");
t4=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41238,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41100,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li661),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_41100(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_41100(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41100,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41110,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41120,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_41120(t21,(C_word)C_i_string_equal_p(t20,lf[961]));}
else{
t20=t19;
f_41120(t20,C_SCHEME_FALSE);}}}

/* k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_41120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41120,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_41110(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41123,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[959]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_41123(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[960]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_41123(t7,t6);}
else{
t5=t2;
f_41123(t5,C_SCHEME_UNDEFINED);}}}}

/* k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_41123(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41123,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[956],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_41131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41131,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_41138,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_41141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_41141(2,t4,C_SCHEME_UNDEFINED);}}

/* k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_41145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[958],((C_word*)((C_word*)t0)[8])[1]);}

/* k41143 in k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41145,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_41152,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k41150 in k41143 in k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41155,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_41155(2,t4,C_SCHEME_UNDEFINED);}}

/* k41153 in k41150 in k41143 in k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[957],((C_word*)((C_word*)t0)[6])[1]);}

/* k41157 in k41153 in k41150 in k41143 in k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41159,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41166,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k41164 in k41157 in k41153 in k41150 in k41143 in k41139 in k41136 in k41129 in k41121 in k41118 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_41110(2,t3,C_SCHEME_UNDEFINED);}}

/* k41108 in do712 in k41236 in k41092 in k41088 in k41084 in k41072 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_41100(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k41061 in k41252 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41063,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_41040(t3,((C_word*)t0)[2],t2);}

/* k41051 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41056,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[168],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k41054 in k41051 in do706 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10189,2,t0,t1);}
t2=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10191,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10293,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10346,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[183]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10443,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[185]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10565,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[187]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10681,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[188]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10726,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[191]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10861,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[193]+1,*((C_word*)lf[194]+1));
t11=C_mutate((C_word*)lf[195]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11027,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[198],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11169,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[200],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11175,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[201]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11190,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[202],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11199,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11208,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[205],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11217,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11226,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11235,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[208]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11244,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11254,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41030,a[2]=((C_word)li660),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t23=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[199],t22);}

/* a41029 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41030,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41038,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t5=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k41036 in a41029 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[934]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[949],t1);}

/* k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[237],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11254,2,t0,t1);}
t2=C_mutate((C_word*)lf[209]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11256,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11294,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[212]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11353,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11363,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[214]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11381,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11412,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[219]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11660,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13133,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[232]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13545,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[233]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13724,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[238]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13936,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[239]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13993,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[248]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14506,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14632,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[263],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14644,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14653,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[265],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14671,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14689,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14716,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14725,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14743,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14788,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14803,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14812,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14821,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14839,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14848,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14857,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14875,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14884,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14893,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14902,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14911,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15028,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15037,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15092,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15102,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[297]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15282,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[299]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15301,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[301]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15320,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15443,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15744,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15753,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15799,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[308]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15914,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16169,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16241,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16250,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[315]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16330,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16800,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[320]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17015,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17262,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[322]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17298,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17561,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[324]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17637,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[325],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18111,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[327],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18333,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18342,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18351,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18369,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18387,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[333],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18405,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18414,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18423,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18506,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19273,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19385,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[341]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19818,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20305,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20645,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[353]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20708,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21226,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[360]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21320,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22342,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22363,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22381,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22399,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22409,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41016,a[2]=((C_word)li659),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t81=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t81))(4,t81,t79,lf[383],t80);}

/* a41015 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41016,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41024,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22363(t4,t2);}

/* k41022 in a41015 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41028,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_22381(t2,((C_word*)t0)[2]);}

/* k41026 in k41022 in a41015 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[934]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[948],((C_word*)t0)[2],t1);}

/* k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22409,2,t0,t1);}
t2=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22411,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22440,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22452,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22460,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-hash-table");
t6=C_retrieve(lf[946]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[947]+1));}

/* k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22460,2,t0,t1);}
t2=C_mutate(&lf[391],t1);
t3=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22462,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22483,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22565,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41006,a[2]=((C_word)li658),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t7=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[393],t6);}

/* a41005 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41006,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41014,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  rule-name");
f_22483(t4,t2);}

/* k41012 in a41005 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_41014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[934]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[945],t1);}

/* k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22568,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40903,a[2]=((C_word)li657),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[944],t3);}

/* a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_40903r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_40903r(t0,t1,t2,t3,t4);}}

static void C_ccall f_40903r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40906,a[2]=t6,a[3]=((C_word)li656),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[941],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40966,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k40964 in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40970,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_40906(t3,t2,((C_word*)t0)[2]);}

/* k40968 in k40964 in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40970,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_40984(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_40984(t7,(C_word)C_i_nullp(t6));}}

/* k40982 in k40968 in k40964 in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_40984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40984,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[942],((C_word*)t0)[6],lf[941],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[805],lf[943],lf[941],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_40906(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_40906,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[939]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40926,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[940]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[577],t2):t2));}}}

/* k40924 in ppat in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40930,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_40906(t4,t2,t3);}

/* k40928 in k40924 in ppat in a40902 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40930,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[852],((C_word*)t0)[2],t1));}

/* k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22568,2,t0,t1);}
t2=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22570,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22591,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22594,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22606,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22612,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22622,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22680,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22712,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22733,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22751,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22761,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40889,a[2]=((C_word)li655),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t14=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[403],t13);}

/* a40888 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40889,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40897,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22733(t4,t2);}

/* k40895 in a40888 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40901,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22751(t2,((C_word*)t0)[2]);}

/* k40899 in k40895 in a40888 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[934]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[938],((C_word*)t0)[2],t1);}

/* k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22761,2,t0,t1);}
t2=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22763,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22769,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22784,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22802,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[411],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22820,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22830,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40863,a[2]=((C_word)li654),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t9=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[407],t8);}

/* a40862 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40863,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40867,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t4,t2);}

/* k40865 in a40862 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40873,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_24042(t2,t1);}

/* k40871 in k40865 in a40862 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40873,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40884,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_22570(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[934]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[936],((C_word*)t0)[2]);}}

/* k40882 in k40871 in k40865 in a40862 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  rule-name");
f_22483(((C_word*)t0)[2],t1);}

/* k40878 in k40871 in k40865 in a40862 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[934]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[935],t1);}

/* k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22830,2,t0,t1);}
t2=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22832,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22848,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[416],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22880,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22892,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[418],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22902,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[420],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22920,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22953,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22984,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[434],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23161,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[435],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23169,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t12=lf[436]=C_SCHEME_FALSE;;
t13=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23273,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23892,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[428],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23940,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24042,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[415],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24054,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24075,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40841,a[2]=t18,tmp=(C_word)a,a+=3,tmp);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t21=(C_word)C_a_i_cons(&a,2,C_fix(3328),t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(2816),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[424],t22);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t19,lf[933],C_fix(25856),t23,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40839 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(25856),t1);}

/* k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24078,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40821,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[932],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40819 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26112),t1);}

/* k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24081,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40781,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[424],t10);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[931],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40779 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26368),t1);}

/* k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24084,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40671,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[108],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40677,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40687,a[2]=((C_word)li653),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[930],C_fix(26624),t9,t10,t11);}

/* a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40687,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40691,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t5,lf[924],t3);}

/* k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t2,((C_word*)t0)[2]);}

/* k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40694,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[626]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40712,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t3,lf[924],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k40710 in k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40715,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k40713 in k40710 in k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40715,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40718,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40746,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t5,lf[924],((C_word*)t0)[2]);}

/* k40744 in k40713 in k40710 in k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40746,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[925]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[929],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_40718(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[577],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_40718(t5,t4);}}

/* k40716 in k40713 in k40710 in k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_40718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40718,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40724,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t2,lf[892],((C_word*)t0)[2]);}

/* k40722 in k40716 in k40713 in k40710 in k40692 in k40689 in a40686 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40724,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[626]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a40676 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40677,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k40669 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26624),t1);}

/* k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24087,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40571,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40579,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t10,C_fix(27648));}

/* k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40581,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[3],lf[928],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40585,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40588,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(5376));}

/* k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t2,lf[924],((C_word*)t0)[4]);}

/* k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_40594(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40623,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[926]:lf[927]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40631,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t5,t6);}}

/* k40629 in k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40621 in k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40592 in k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40597,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k40595 in k40592 in k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40600,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22902(t2,lf[924],lf[925],((C_word*)t0)[2]);}

/* k40598 in k40595 in k40592 in k40589 in k40586 in k40583 in a40580 in k40577 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40600,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[922],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[923],((C_word*)t0)[2])));}

/* k40569 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27648),t1);}

/* k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24090,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40543,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[424],t7);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[921],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40541 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26880),t1);}

/* k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24093,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40483,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[423],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40489,a[2]=((C_word)li649),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40507,a[2]=((C_word)li650),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[920],C_fix(27136),t8,t9,t10);}

/* a40506 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40507,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40515,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40519,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k40517 in a40506 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40513 in a40506 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40515,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[60],t1));}

/* a40488 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40489,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k40481 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27136),t1);}

/* k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24096,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40360,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[440],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40366,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40397,a[2]=((C_word)li648),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[919],C_fix(27392),t14,t15,t16);}

/* a40396 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40397(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40397,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40401,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k40399 in a40396 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40402 in k40399 in a40396 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40405 in k40402 in k40399 in a40396 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40407,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40420,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k40418 in k40405 in k40402 in k40399 in a40396 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40420,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a40365 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40366,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40370,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t5=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k40368 in a40365 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40370,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40385,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k40383 in k40368 in a40365 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40385,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k40358 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27392),t1);}

/* k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24096,2,t0,t1);}
t2=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24098,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24152,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40240,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[104],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[424],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40246,a[2]=((C_word)li646),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t4,lf[918],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a40245 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40246,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40262,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t4,t8,C_fix(256));}
else{
t7=t4;
f_40262(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_40262(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k40260 in a40245 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40262,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40273,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k40271 in k40260 in a40245 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40273,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k40238 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28416),t1);}

/* k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24155,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40101,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[104],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[423],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[424],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40107,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[917],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a40106 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40107(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40107,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40127,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40130,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t7,t11,C_fix(256));}
else{
t10=t7;
f_40130(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_40130(2,t9,C_SCHEME_FALSE);}}

/* k40128 in a40106 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_40127(2,t2,C_SCHEME_END_OF_LIST);}}

/* k40125 in a40106 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40127,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k40099 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_40101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28672),t1);}

/* k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24158,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39949,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[423],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[424],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39955,a[2]=((C_word)li644),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[916],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a39954 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39955,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39973,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t10,t7,C_fix(768));}

/* k39971 in a39954 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39973,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(256));}}

/* k39980 in k39971 in a39954 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k39947 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28160),t1);}

/* k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24161,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39878,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39884,a[2]=((C_word)li642),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39902,a[2]=((C_word)li643),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[915],C_fix(27904),t6,t7,t8);}

/* a39901 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39902,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39906,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k39904 in a39901 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39907 in k39904 in a39901 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39925,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39923 in k39907 in k39904 in a39901 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39925,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a39883 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39884,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k39876 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27904),t1);}

/* k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24161,2,t0,t1);}
t2=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24163,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24184,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24300,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39802,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[424],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t5,lf[914],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39800 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28928),t1);}

/* k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24303,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39722,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39728,a[2]=((C_word)li641),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[913],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a39727 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39728,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39735,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 379  is-op?");
f_24163(t4,t7);}
else{
t6=t4;
f_39735(2,t6,C_SCHEME_FALSE);}}

/* k39733 in a39727 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39735,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 379  inf->pre");
f_24184(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k39720 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29184),t1);}

/* k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24306,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39586,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[423],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[424],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39592,a[2]=((C_word)li639),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39618,a[2]=((C_word)li640),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[912],C_fix(29440),t23,t24,t25);}

/* a39617 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39618(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39618,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39626,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k39624 in a39617 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39591 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39592,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39600,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39609,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t5,t6,C_fix(512));}
else{
t5=t4;
f_39600(t5,t2);}}

/* k39607 in a39591 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_39600(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k39598 in a39591 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_39600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k39584 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29440),t1);}

/* k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24309,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39542,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[424],t11);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[911],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39540 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29696),t1);}

/* k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24312,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39432,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39438,a[2]=((C_word)li636),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39460,a[2]=((C_word)li638),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[910],C_fix(33536),t10,t11,t12);}

/* a39459 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39460(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39460,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[473]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39471,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t8,t2);}

/* k39469 in a39459 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39471,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li637),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_39473(t5,((C_word*)t0)[2],t1);}

/* do3666 in k39469 in a39459 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_39473(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39473,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39502,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k39500 in do3666 in k39469 in a39459 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39502,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_39473(t7,((C_word*)t0)[2],t6);}

/* a39437 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39438,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39454,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t5,t6,C_fix(256));}

/* k39452 in a39437 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39454,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k39430 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33536),t1);}

/* k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24315,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39357,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39363,a[2]=((C_word)li634),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39385,a[2]=((C_word)li635),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[909],C_fix(34560),t10,t11,t12);}

/* a39384 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39385,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39389,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k39387 in a39384 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39396,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39394 in k39387 in a39384 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39396,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[764],t1));}

/* a39362 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39363,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39379,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t5,t6,C_fix(256));}

/* k39377 in a39362 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39379,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k39355 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34560),t1);}

/* k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24318,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39144,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[424],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[440],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39150,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39225,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[908],C_fix(34304),t21,t22,t23);}

/* a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39225,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39229,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39265,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k39263 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39227 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39229,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li632),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a39244 in k39227 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39245(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_39245r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39245r(t0,t1,t2,t3);}}

static void C_ccall f_39245r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39253,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39257,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k39255 in a39244 in k39227 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39261,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t2,((C_word*)t0)[2]);}

/* k39259 in k39255 in a39244 in k39227 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39251 in a39244 in k39227 in a39224 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a39149 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39150,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39157,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39193,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_39193(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_39157(t10,t9);}}

/* k39191 in a39149 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39193,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39197,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_39157(t2,C_SCHEME_UNDEFINED);}}

/* k39195 in k39191 in a39149 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39157(t3,t2);}

/* k39155 in a39149 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_39157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39157,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39168,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t4,t5);}

/* k39166 in k39155 in a39149 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k39142 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34304),t1);}

/* k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24321,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39118,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39124,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[907],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a39123 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39124(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39124,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k39116 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33792),t1);}

/* k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24324,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39090,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39098,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(35072));}

/* k39096 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39102,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23169(t2,lf[484]);}

/* k39100 in k39096 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[4],lf[906],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39088 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35072),t1);}

/* k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24327,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39062,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39070,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(35584));}

/* k39068 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39074,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23169(t2,lf[483]);}

/* k39072 in k39068 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[4],lf[905],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39060 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35584),t1);}

/* k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24330,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39034,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39042,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(35328));}

/* k39040 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39046,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23169(t2,lf[904]);}

/* k39044 in k39040 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[4],lf[903],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39032 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35328),t1);}

/* k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24333,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39006,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39014,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(34816));}

/* k39012 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39018,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23169(t2,lf[494]);}

/* k39016 in k39012 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[4],lf[902],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39004 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_39006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34816),t1);}

/* k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24336,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38869,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[424],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[423],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[424],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[108],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[423],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38875,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38905,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[901],C_fix(36096),t22,t23,t24);}

/* a38904 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38905,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[900]);}

/* a38874 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38875,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38899,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t6,t7,C_fix(256));}

/* k38897 in a38874 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38899,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k38867 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36096),t1);}

/* k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24339,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38811,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38819,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(31744));}

/* k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38821,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[3],lf[899],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38821,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38825,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k38823 in a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38853,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t3,lf[880],((C_word*)t0)[3]);}

/* k38851 in k38823 in a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38853,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38828(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38841,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38845,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t3,t4);}}

/* k38843 in k38851 in k38823 in a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[2],lf[898],t1);}

/* k38839 in k38851 in k38823 in a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38826 in k38823 in a38820 in k38817 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38809 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(31744),t1);}

/* k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24342,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38750,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38758,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t7,C_fix(31488));}

/* k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38760,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[3],lf[897],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38760,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38764,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38795,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t3,lf[865],((C_word*)t0)[3]);}

/* k38793 in k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38795,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38767(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38783,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38787,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t3,t4);}}

/* k38785 in k38793 in k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[2],lf[896],t1);}

/* k38781 in k38793 in k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38765 in k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22902(t2,lf[865],lf[864],((C_word*)t0)[3]);}

/* k38768 in k38765 in k38762 in a38759 in k38756 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38748 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(31488),t1);}

/* k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24345,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38659,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[423],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[424],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38665,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38700,a[2]=((C_word)li625),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[895],C_fix(30208),t10,t11,t12);}

/* a38699 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38700,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38706,a[2]=t4,a[3]=t3,a[4]=((C_word)li624),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38714,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k38712 in a38699 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a38705 in a38699 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38706,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38664 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38665,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38698,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t4,C_fix(4608),lf[894],C_SCHEME_FALSE);}}

/* k38696 in a38664 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38698,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k38657 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30208),t1);}

/* k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24348,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38557,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38563,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38606,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[893],C_fix(29952),t10,t11,t12);}

/* a38605 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38606,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38610,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t5,lf[892],C_SCHEME_TRUE,t3);}

/* k38608 in a38605 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38615,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li621),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38623,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t3,((C_word*)t0)[2]);}

/* k38621 in k38608 in a38605 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a38614 in k38608 in a38605 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38615(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38615,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38562 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38563,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38596,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k38594 in a38562 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38596,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k38555 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29952),t1);}

/* k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24351,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38471,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[424],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[423],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38477,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[891],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a38476 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38477,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k38469 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30720),t1);}

/* k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24354,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38191,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38197,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38240,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[890],C_fix(30464),t10,t11,t12);}

/* a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38240,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38244,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38244,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[451]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li617),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_38252(t8,((C_word*)t0)[2],t1);}

/* do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_38252(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38252,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t3,t4);}}

/* k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38278,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t2,t3);}

/* k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38284,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38284,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38344,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t5,((C_word*)t0)[2],C_fix(10756));}

/* k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38344,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_38287(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38351,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38287(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38361,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[108],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38287(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k38369 in k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38371,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[626],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_38287(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k38383 in k38369 in k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38385,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[852],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38287(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k38393 in k38383 in k38369 in k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38395,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38287(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k38403 in k38393 in k38383 in k38369 in k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38405,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[369],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38287(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k38413 in k38403 in k38393 in k38383 in k38369 in k38359 in k38349 in k38342 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38415,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38287(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_38287(t2,C_SCHEME_UNDEFINED);}}

/* k38285 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_38287(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38287,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38311,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_38311(t5,(C_word)C_eqp(t4,lf[60]));}
else{
t4=t3;
f_38311(t4,C_SCHEME_FALSE);}}

/* k38309 in k38285 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_38311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38311,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[889],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[228],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38290(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38290(t4,t3);}}

/* k38288 in k38285 in k38282 in k38279 in k38276 in k38273 in do3745 in k38242 in a38239 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_38290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38290,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_38252(t7,((C_word*)t0)[2],t6);}

/* a38196 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38197,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38230,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k38228 in a38196 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38230,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k38189 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30464),t1);}

/* k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24357,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38077,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[440],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[108],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[423],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38083,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38109,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[888],C_fix(32000),t12,t13,t14);}

/* a38108 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38109,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38113,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k38111 in a38108 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38113,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38117 in k38111 in a38108 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38119,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38139,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[451],t1));}}

/* k38137 in k38117 in k38111 in a38108 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38139,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a38082 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38083,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38093,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_38093(t12,t11);}
else{
t10=t8;
f_38093(t10,C_SCHEME_FALSE);}}

/* k38091 in a38082 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_38093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38093,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k38075 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_38077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32000),t1);}

/* k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24360,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37818,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[440],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[440],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[423],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[423],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[424],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37824,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37892,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[887],C_fix(32256),t26,t27,t28);}

/* a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37892,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37896,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t5,t2);}

/* k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(14336));}

/* k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37902,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(19968));}}

/* k37909 in k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37911,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k37947 in k37909 in k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37949,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[425],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37941,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37939 in k37947 in k37909 in k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37941,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* k37916 in k37909 in k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37922,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37920 in k37916 in k37909 in k37900 in k37894 in a37891 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37922,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37824,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37837,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37843,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t9,t4,C_fix(14336));}

/* k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37843,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37849,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_37849(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37878,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t11,C_fix(4608),lf[886],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37837(t5,t4);}}

/* k37876 in k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37849(t3,t2);}

/* k37847 in k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37849,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k37851 in k37847 in k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37853,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_37856(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37867,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t5,C_fix(4608),lf[885],C_SCHEME_FALSE);}}

/* k37865 in k37851 in k37847 in k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37856(t3,t2);}

/* k37854 in k37851 in k37847 in k37841 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37856,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37837(t4,t3);}

/* k37835 in a37823 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k37816 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32256),t1);}

/* k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24360,2,t0,t1);}
t2=C_mutate(&lf[447],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24362,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24883,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37546,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[423],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[440],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[423],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[424],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[440],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[440],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[423],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[424],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[440],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[423],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[424],t58);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t4,lf[884],C_fix(33024),t59,C_retrieve2(lf[447],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k37544 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33024),t1);}

/* k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24886,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37490,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[424],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37498,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_23161(t13,C_fix(33280));}

/* k37496 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(((C_word*)t0)[3],lf[883],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k37488 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33280),t1);}

/* k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25469,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37318,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[440],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[108],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[108],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[104],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[440],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[423],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37324,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37370,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[882],C_fix(32512),t25,t26,t27);}

/* a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37370,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24892,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t7,t2);}

/* k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24892,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24910,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25428,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t17,t18,C_fix(14864));}

/* k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25428,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25432,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t2,lf[879],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25435,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t3,lf[867],((C_word*)((C_word*)t0)[6])[1]);}}

/* k25460 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25462,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_25435(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25450,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25454,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t3,t4);}}

/* k25452 in k25460 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[2],lf[881],t1);}

/* k25448 in k25460 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25433 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t2,lf[880],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k25437 in k25433 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_24910(t4,t3);}

/* k25430 in k25426 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24910(t3,t2);}

/* k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24910,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25417,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25421,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_24917(t5,C_SCHEME_UNDEFINED);}}

/* k25419 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25415 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24917(t3,t2);}

/* k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24917,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25292,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li610),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_25292(t7,t2,t3);}

/* do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25292(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25292,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25302,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25313,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t4,t5);}}

/* k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25313,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li609),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_25315(t5,((C_word*)t0)[2],t1);}

/* do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25315(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25315,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 379  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25329,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25382,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_25332(t4,C_SCHEME_UNDEFINED);}}

/* k25380 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25332(t3,t2);}

/* k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25332,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25367,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_25335(t3,C_SCHEME_UNDEFINED);}}

/* k25365 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25335(t3,t2);}

/* k25333 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25335,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25338,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25348,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25346 in k25333 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25348,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25360,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_25338(t2,C_SCHEME_UNDEFINED);}}

/* k25358 in k25346 in k25333 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25360,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25350 in k25346 in k25333 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25338(t3,t2);}

/* k25336 in k25333 in k25330 in k25327 in do3858 in k25311 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25315(t3,((C_word*)t0)[2],t2);}

/* k25300 in do3855 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25292(t3,((C_word*)t0)[2],t2);}

/* k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24920,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=t3,tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25256,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t7,a[5]=t3,a[6]=((C_word)li608),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25256(t9,t4,t5);}

/* do3870 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25256(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25256,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25267,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25282,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k25280 in do3870 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25282,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25265 in do3870 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25256(t4,((C_word*)t0)[2],t3);}

/* k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24930,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24933,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t4))){
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t6,a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[5],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[878]);}
else{
t5=t3;
f_24933(t5,C_SCHEME_UNDEFINED);}}

/* k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_list(&a,2,t1,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25141,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25141,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25144,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=((C_word)li607),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25184(t8,t3,t4);}

/* do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25184(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25184,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t3,t4);}}

/* k25192 in do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25197,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25195 in k25192 in do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25197,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25200,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25218,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t5,t6,C_fix(20224));}

/* k25216 in k25195 in k25192 in do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25218,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25200(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_25200(t2,C_SCHEME_UNDEFINED);}}

/* k25198 in k25195 in k25192 in do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25200,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k25202 in k25198 in k25195 in k25192 in do3877 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25184(t4,((C_word*)t0)[2],t3);}

/* k25142 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25147(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25147(t6,t5);}}

/* k25145 in k25142 in k25139 in k25135 in k25131 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25147(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25147,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],C_SCHEME_TRUE);
t3=(C_word)C_a_i_cons(&a,2,lf[451],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[3])[1],t2,t3);
t5=(C_word)C_a_i_list(&a,1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[2];
f_24933(t7,t6);}

/* k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24933(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24933,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24937,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[8])[1]))){
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_24940(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_24940(t7,t6);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t5=t3;
f_24940(t5,t4);}}

/* k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24940(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24940,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24943,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25093,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25091 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25093,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25097,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_24943(t3,t2);}}

/* k25099 in k25091 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25095 in k25091 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24943(t3,t2);}

/* k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24943,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[877]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[677],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[876]);}

/* k24972 in k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[875]);}

/* k24975 in k24972 in k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[874]);}

/* k24978 in k24975 in k24972 in k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[873]);}

/* k24981 in k24978 in k24975 in k24972 in k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24983,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[792],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[793],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[792],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[795],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[796]);
t14=(C_word)C_a_i_list(&a,4,lf[797],((C_word*)t0)[7],t13,lf[871]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[792],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k25040 in k24981 in k24978 in k24975 in k24972 in k24969 in k24941 in k24938 in k24935 in k24931 in k24928 in k24924 in k24918 in k24915 in k24908 in k24890 in a37369 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25042,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[872],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[792],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[736],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[792],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[737],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[792],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37324,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37340,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t11=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k37338 in a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37343,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t3=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k37341 in k37338 in a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37343,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37346,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_37346(t7,t6);}
else{
t5=t4;
f_37346(t5,C_SCHEME_UNDEFINED);}}

/* k37344 in k37341 in k37338 in a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37346,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_37349(t5,t4);}
else{
t3=t2;
f_37349(t3,C_SCHEME_UNDEFINED);}}

/* k37347 in k37344 in k37341 in k37338 in a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37349,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37360,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t3,((C_word*)t0)[8]);}

/* k37358 in k37347 in k37344 in k37341 in k37338 in a37323 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k37316 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32512),t1);}

/* k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25472,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37173,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[108],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[424],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37179,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[870],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a37178 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37179,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37192,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_37192(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37218,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t12,t13,C_fix(256));}}

/* k37216 in a37178 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37218,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37192(t4,t3);}

/* k37190 in a37178 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37192,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k37171 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(37632),t1);}

/* k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36716,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[423],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[423],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[424],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[423],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36722,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36761,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[869],C_fix(36352),t23,t24,t25);}

/* a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36761,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36765,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36765,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[451]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36774,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36777,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t7,t2,C_fix(24576));}

/* k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36777,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36786,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li602),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_36786(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t2,t3);}}

/* k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36838,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37053,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_36850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_36850(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36991,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 379  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k36989 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36991,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37000,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37025,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t6=*((C_word*)lf[465]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_37000(t4,C_SCHEME_FALSE);}}

/* k37023 in k36989 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_37000(t2,(C_word)C_i_string_equal_p(t1,lf[868]));}

/* k36998 in k36989 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_37000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37000,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37007,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37011,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t5=*((C_word*)lf[465]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_36850(t2,C_SCHEME_UNDEFINED);}}

/* k37009 in k36998 in k36989 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37005 in k36998 in k36989 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_37007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_36850(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36850,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36853,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t3,((C_word*)t0)[2],C_fix(24064));}

/* k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36928,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t2,lf[865],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k36967 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36969,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t2,lf[867],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_36853(t2,C_SCHEME_UNDEFINED);}}

/* k36971 in k36967 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36977,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k36975 in k36971 in k36967 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[788],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[866]);
t6=((C_word*)t0)[2];
f_36853(t6,t5);}

/* k36930 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36932,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36936,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k36934 in k36930 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36936,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36963,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22880(t4,lf[865],((C_word*)((C_word*)t0)[2])[1]);}

/* k36961 in k36934 in k36930 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36963,2,t0,t1);}
t2=(C_word)C_eqp(lf[864],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[648]);
t4=(C_word)C_a_i_list(&a,3,lf[792],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[737],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36939(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_36939(t3,C_SCHEME_UNDEFINED);}}

/* k36937 in k36934 in k36930 in k36926 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36939(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36939,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[788],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[863]);
t5=((C_word*)t0)[2];
f_36853(t5,t4);}

/* k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36853,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36856,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36867,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36925,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k36923 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[862]);}

/* k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36867,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36869,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li603),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_36869(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36869(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36869,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36884,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[860]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36888,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36917,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k36915 in do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k36886 in do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36888,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36891,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_36891(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36905,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[861]);}}

/* k36903 in k36886 in do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36891(t3,t2);}

/* k36889 in k36886 in do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_36869(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k36882 in do3964 in k36865 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36884,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[474],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k36854 in k36851 in k36848 in k37051 in k36839 in k36836 in k36833 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36856,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_36774(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3938 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36786(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36786,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36796,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k36794 in do3938 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36796,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[859],t2);}

/* k36800 in k36794 in do3938 in k36775 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36802,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[788],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[473],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_36786(t9,((C_word*)t0)[2],t8);}

/* k36772 in k36763 in a36760 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a36721 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36722,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36733,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36739,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t9,t7,C_fix(24576));}

/* k36737 in a36721 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36739,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36755,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_24098(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_36733(t2,C_SCHEME_UNDEFINED);}}

/* k36753 in k36737 in a36721 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36755,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36733(t5,t4);}

/* k36731 in a36721 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36733(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k36714 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36352),t1);}

/* k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36640,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[424],t19);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[858],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36638 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36608),t1);}

/* k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25481,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36596,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[104],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36602,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36616,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22462(t3,lf[857],C_fix(36864),t5,t6,t7);}

/* a36615 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36616,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36624,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36628,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k36626 in a36615 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36622 in a36615 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36624,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[451],t1));}

/* a36601 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36602(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36602,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36610,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22820(t4,t5);}

/* k36608 in a36601 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k36594 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36864),t1);}

/* k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25481,2,t0,t1);}
t2=lf[458]=C_SCHEME_FALSE;;
t3=lf[459]=C_SCHEME_FALSE;;
t4=lf[460]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[461],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[462]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25488,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[473]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25665,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[483]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25818,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[484]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25827,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25874,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25880,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25899,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36588,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t14=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[855],t13);}

/* a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36588(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36588,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29252,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[856]);}

/* k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29255,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_29234(t2,lf[855],((C_word*)t0)[2],C_retrieve2(lf[686],"*loop-operators*"));}

/* k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29255,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[648],C_retrieve2(lf[686],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29262,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29407,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29421,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t11=C_retrieve2(lf[505],"loop-returning");
f_26006(3,t11,t10,t1);}

/* k29419 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29421,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_29407(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29417,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t3=C_retrieve2(lf[505],"loop-returning");
f_26006(3,t3,t2,((C_word*)t0)[2]);}}

/* k29415 in k29419 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29407(t2,(C_word)C_i_car(t1));}

/* k29405 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29262,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[500],"loop-end-tests");
f_25958(3,t4,t3,((C_word*)t0)[2]);}

/* k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_29269(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[424],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[854],C_SCHEME_FALSE);
t7=t2;
f_29269(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29269(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29269,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29280,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t4=C_retrieve2(lf[497],"loop-bindings");
f_25922(3,t4,t3,((C_word*)t0)[2]);}

/* k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29284,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25946(3,t4,t3,((C_word*)t0)[3]);}

/* k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29288,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[648]);
t3=(C_word)C_a_i_list(&a,1,lf[848]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29356,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t7=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t7,t6,((C_word*)t0)[3]);}

/* k29358 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29364,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29368,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25982(3,t4,t3,((C_word*)t0)[2]);}

/* k29366 in k29358 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29368,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k29362 in k29358 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29354 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29350 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29352,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[792],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[737],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29324,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t9=C_retrieve2(lf[504],"loop-finally");
f_25994(3,t9,t8,((C_word*)t0)[2]);}

/* k29322 in k29350 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29324,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29318 in k29350 in k29286 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29320,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[792],t3);
t5=(C_word)C_a_i_list(&a,2,lf[737],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k29282 in k29278 in k29267 in k29264 in k29260 in k29253 in k29250 in a36587 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29284,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25902,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36574,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[853],t3);}

/* a36573 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36574,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[852],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[451],t5,t3));}

/* k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25905,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36545,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[851],t3);}

/* a36544 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36545(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36545,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36549,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[850]);}

/* k36547 in a36544 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36549,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25908,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36542,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[849],t3);}

/* a36541 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36542(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36542,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25908,2,t0,t1);}
t2=C_mutate(&lf[496],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25916,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25922,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25934,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[499],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25946,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[500],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25958,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25970,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[502],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25976,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[503],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25982,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[504],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25994,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[505],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26006,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[506],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26018,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[516],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26169,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[517],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26240,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[518],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26246,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[519],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26252,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[520],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26258,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[528],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26418,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26500,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[566],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26882,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[569],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26929,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[588],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27280,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[595],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27422,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[609],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27615,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[612],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27682,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[615],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27720,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[618],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27879,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28425,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[649],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28431,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28497,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[661],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28588,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[664],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28689,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28820,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[676],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29234,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[596],C_retrieve2(lf[595],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[510],C_retrieve2(lf[615],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[684],C_retrieve2(lf[566],"parse-repeat"),lf[681]);
t38=(C_word)C_a_i_list(&a,2,lf[544],C_retrieve2(lf[536],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[540],C_retrieve2(lf[536],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[542],C_retrieve2(lf[536],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[551],C_retrieve2(lf[536],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[541],C_retrieve2(lf[536],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[543],C_retrieve2(lf[536],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[576],C_retrieve2(lf[569],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[585],C_retrieve2(lf[569],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[570],C_retrieve2(lf[569],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[433],C_retrieve2(lf[588],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[575],C_retrieve2(lf[569],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[537],C_retrieve2(lf[528],"parse-for"),lf[681],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[685],C_retrieve2(lf[528],"parse-for"),lf[681]);
t51=(C_word)C_a_i_list(&a,3,lf[677],C_retrieve2(lf[609],"parse-do"),lf[668]);
t52=(C_word)C_a_i_list(&a,3,lf[629],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t54=(C_word)C_a_i_list(&a,3,lf[634],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t55=(C_word)C_a_i_list(&a,3,lf[619],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t56=(C_word)C_a_i_list(&a,3,lf[620],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t57=(C_word)C_a_i_list(&a,3,lf[622],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t58=(C_word)C_a_i_list(&a,3,lf[623],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t59=(C_word)C_a_i_list(&a,4,lf[656],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[657],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[658],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[648],C_retrieve2(lf[661],"parse-return"),lf[668],C_retrieve2(lf[647],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[652],C_retrieve2(lf[649],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[651],C_retrieve2(lf[649],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t68=(C_word)C_a_i_list(&a,3,lf[514],C_retrieve2(lf[612],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[686],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29428,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36400,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t73=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[681],t72);}

/* a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36400(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36400,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29434,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_29234(t3,lf[681],t2,C_retrieve2(lf[686],"*loop-operators*"));}

/* k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29437,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[648],C_retrieve2(lf[686],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29566,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t6=C_retrieve2(lf[505],"loop-returning");
f_26006(3,t6,t5,t1);}

/* k29564 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29566,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29448,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t3=C_retrieve2(lf[497],"loop-bindings");
f_25922(3,t3,t2,((C_word*)t0)[2]);}

/* k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29452,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29456,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25946(3,t4,t3,((C_word*)t0)[2]);}

/* k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29476,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[500],"loop-end-tests");
f_25958(3,t4,t3,((C_word*)t0)[2]);}

/* k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[424],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[848],lf[388]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_29483(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_29483(t3,C_SCHEME_END_OF_LIST);}}

/* k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29483,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29487,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t4,t3,((C_word*)t0)[2]);}

/* k29489 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29495,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25982(3,t4,t3,((C_word*)t0)[2]);}

/* k29497 in k29489 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29499,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[848],lf[844]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29515,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29519,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t5=C_retrieve2(lf[504],"loop-finally");
f_25994(3,t5,t4,((C_word*)t0)[2]);}

/* k29517 in k29497 in k29489 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29519,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29513 in k29497 in k29489 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29515,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[388],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29493 in k29489 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29485 in k29481 in k29478 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29474 in k29454 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29476,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[844],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[845],t2);
t4=(C_word)C_a_i_list(&a,3,lf[846],lf[847],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k29450 in k29446 in k29435 in k29432 in a36399 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29452,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29428,2,t0,t1);}
t2=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29572,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30301,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30320,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30771,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30790,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[697]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31519,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[698]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31538,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32267,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32286,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32737,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32756,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33207,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[705]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33226,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[706]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33696,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[707]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33714,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[708]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33729,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[709]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33744,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[710]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33763,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33778,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33797,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33816,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33839,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[715]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33858,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[716]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33881,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[717]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33928,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[719]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33983,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34002,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34025,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34053,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34081,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34109,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[725]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34137,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[726]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34165,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[727]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34193,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34221,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[729]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34249,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34277,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34292,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34350,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t41=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[842],lf[843]);}

/* k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34353,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[840],lf[841]);}

/* k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34356,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[838],lf[839]);}

/* k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34359,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[836],lf[837]);}

/* k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34362,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[834],lf[835]);}

/* k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34365,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[832],lf[833]);}

/* k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34368,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[830],lf[831]);}

/* k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34371,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[828],lf[829]);}

/* k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34374,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[826],lf[827]);}

/* k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34377,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[824],lf[825]);}

/* k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34380,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[822],lf[823]);}

/* k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34380,2,t0,t1);}
t2=C_mutate((C_word*)lf[738]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34382,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34390,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34433,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34441,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34449,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[744]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34506,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[745]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34563,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[748]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34801,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35252,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t11=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t11))(5,t11,t10,C_retrieve(lf[29]),lf[820],lf[821]);}

/* k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35255,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[818],lf[819]);}

/* k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35258,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[816],lf[817]);}

/* k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35261,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[814],lf[815]);}

/* k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35264,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[812],lf[813]);}

/* k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35267,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[810],lf[811]);}

/* k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35270,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[808],lf[809]);}

/* k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35273,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[805]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[806],lf[807]);}

/* k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35273,2,t0,t1);}
t2=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35275,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[474]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35465,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35479,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[758]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35493,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35496,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[760],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35508,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[762],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35517,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[763],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35561,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[485]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35583,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35602,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[767]+1,C_retrieve(lf[759]));
t13=C_mutate((C_word*)lf[768]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35778,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[774]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35841,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[775]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35850,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[776]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35856,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[777]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35865,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[779]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35923,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[780],lf[781]);
t20=C_mutate(&lf[782],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35933,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36004,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36337,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li593),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_36337(t28,t24,C_retrieve2(lf[686],"*loop-operators*"));}

/* do6430 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36337(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36337,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[652],C_retrieve2(lf[782],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[651],C_retrieve2(lf[782],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36365,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[629]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[634]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[619]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[620]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[622]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[623]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[656]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[657]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[658]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[648]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[652]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[651]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_36365(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_36365(t11,t10);}}}

/* k36363 in do6430 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36337(t3,((C_word*)t0)[2],t2);}

/* k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36004,2,t0,t1);}
t2=C_mutate(&lf[785],t1);
t3=C_mutate(&lf[786],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36006,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36294,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36331,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 660  ##sys#register-macro-2");
t6=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[803],t5);}

/* a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36331(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36331,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36049,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 605  parse-iteration");
f_29234(t3,lf[803],t2,C_retrieve2(lf[785],"*run-operators*"));}

/* k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36049,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[780],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36055,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[802]);}

/* k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[801]);}

/* k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 615  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[800]);}

/* k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 617  loop-end-tests");
t3=C_retrieve2(lf[500],"loop-end-tests");
f_25958(3,t3,t2,((C_word*)t0)[3]);}

/* k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36065,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36275,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t5=C_retrieve2(lf[504],"loop-finally");
f_25994(3,t5,t4,((C_word*)t0)[3]);}

/* k36273 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36275,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36287,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 619  loop-finally");
t4=C_retrieve2(lf[504],"loop-finally");
f_25994(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36068(t2,C_SCHEME_UNDEFINED);}}

/* k36285 in k36273 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36287,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36281 in k36273 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36283,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36068(t4,t3);}

/* k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36068(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36068,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36261,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36268,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 627  loop-looping");
t5=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36232,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_36232(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_36232(t7,t6);}}}

/* k36230 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36232,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_36071(2,t5,t4);}

/* k36266 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 626  process-code-terminates?");
f_36006(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k36259 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_36071(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 628  printf");
t2=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[799]);}}

/* k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36071,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[792],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[793],t4);
t6=(C_word)C_a_i_list(&a,1,lf[794]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[794]);
t8=(C_word)C_a_i_list(&a,3,lf[792],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[795],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[796]);
t14=(C_word)C_a_i_list(&a,4,lf[797],((C_word*)t0)[6],t13,lf[798]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[792],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36166,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36170,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 647  loop-looping");
t20=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t20,t19,((C_word*)t0)[3]);}

/* k36168 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36174,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36178,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 648  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25982(3,t4,t3,((C_word*)t0)[2]);}

/* k36176 in k36168 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36178,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36172 in k36168 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36164 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36162,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[792],t2);
t4=(C_word)C_a_i_list(&a,3,lf[736],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[792],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[737],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[792],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36118,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 652  loop-bindings");
t12=C_retrieve2(lf[497],"loop-bindings");
f_25922(3,t12,t11,((C_word*)t0)[2]);}

/* k36116 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36118,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36114,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 653  loop-initially");
t3=C_retrieve2(lf[499],"loop-initially");
f_25946(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36081(t2,C_SCHEME_FALSE);}}

/* k36112 in k36116 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_36081(t2,(C_word)C_i_nullp(t1));}

/* k36079 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36081(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36081,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 656  loop-bindings");
t3=C_retrieve2(lf[497],"loop-bindings");
f_25922(3,t3,t2,((C_word*)t0)[2]);}}

/* k36090 in k36079 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36096,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36100,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 657  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25946(3,t4,t3,((C_word*)t0)[2]);}

/* k36098 in k36090 in k36079 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36100,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36094 in k36090 in k36079 in k36160 in k36069 in k36066 in k36063 in k36059 in k36056 in k36053 in k36047 in a36330 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36096,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36297,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36302,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 663  ##sys#register-macro");
t4=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[791],t3);}

/* a36301 in k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36302(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_36302r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_36302r(t0,t1,t2,t3);}}

static void C_ccall f_36302r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36306,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36316,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_36316(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_36316(t6,C_SCHEME_FALSE);}}

/* k36314 in a36301 in k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_36306(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 665  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[789],((C_word*)t0)[2]);}}

/* k36304 in a36301 in k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36306,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[788],t2));}

/* k36295 in k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36300,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 772  return-to-host");
t3=C_retrieve(lf[787]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k36298 in k36295 in k36292 in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_36006(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_36006,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36022,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k36020 in process-code-terminates? in k36002 in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_36022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 601  process-code-terminates?");
f_36006(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35933,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35944,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 568  loop-error");
f_26258(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[783],t7,lf[784]));}
else{
t13=t12;
f_35944(2,t13,C_SCHEME_UNDEFINED);}}

/* k35942 in run-while-until in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[651]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_35947(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[652]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[425],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_35947(t10,t9);}
else{
t5=t2;
f_35947(t5,C_SCHEME_UNDEFINED);}}}

/* k35945 in k35942 in run-while-until in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35947(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35947,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35954,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[780],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 572  make-loop-clause");
f_26018(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[512],t4));}

/* k35952 in k35945 in k35942 in run-while-until in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 572  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35927,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35578,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35576 in hush in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35578,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6342,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k35925 in hush in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 553  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_35865r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35865r(t0,t1,t2);}}

static void C_ccall f_35865r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35869,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 543  scheduler-stop");
f_35561(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35883,a[2]=t5,a[3]=((C_word)li585),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_35883(t7,t3,t2);}}

/* do6400 in stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35883(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35883,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35893,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  scheduler-stop");
f_35561(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[778],t5);}}}

/* k35891 in do6400 in stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35883(t3,((C_word*)t0)[2],t2);}

/* k35867 in stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35860,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35556,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35554 in cont in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35556,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6332,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k35858 in cont in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 539  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35538,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k35536 in paused? in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35538,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6324,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35845,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35547,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35545 in pause in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35547,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6328,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k35843 in pause in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 532  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35778(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_35778r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_35778r(t0,t1,t2);}}

static void C_ccall f_35778r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35791,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35503,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[770]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35803,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_35803(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_35803(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[773])));}}}

/* k35801 in time-format in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[767]+1,C_retrieve(lf[759]));
C_trace("ChickenBridge.scm: 521  scheduler-set-time-milliseconds");
f_35508(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[771]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[767]+1,C_retrieve(lf[758]));
C_trace("ChickenBridge.scm: 525  scheduler-set-time-milliseconds");
f_35508(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 528  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[772],t4);}}}

/* k35501 in time-format in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35503,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6304,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k35789 in time-format in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[769]));}

/* sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35602(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_35602r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35602r(t0,t1,t2,t3);}}

static void C_ccall f_35602r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35604,a[2]=t2,a[3]=((C_word)li573),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35724,a[2]=t4,a[3]=((C_word)li574),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35729,a[2]=t5,a[3]=((C_word)li575),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start63596380");
t7=t6;
f_35729(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id63606378");
t9=t5;
f_35724(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body63576362");
t11=t4;
f_35604(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[765]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[766],t10);}}}}

/* def-start6359 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35729(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35729,NULL,2,t0,t1);}
C_trace("def-id63606378");
t2=((C_word*)t0)[2];
f_35724(t2,t1,C_fix(0));}

/* def-id6360 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35724(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35724,NULL,3,t0,t1,t2);}
C_trace("body63576362");
t3=((C_word*)t0)[2];
f_35604(t3,t1,t2,C_fix(-1));}

/* body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35604(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35604,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35606,a[2]=t4,a[3]=((C_word)li570),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35634,a[2]=t5,a[3]=((C_word)li571),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35664,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35675,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li572),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_35675(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35711,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35723,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextstart");
t11=t6;
f_35606(t11,t10);}}

/* k35721 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35723,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35719,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextid");
t4=((C_word*)t0)[2];
f_35634(t4,t3);}

/* k35717 in k35721 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 505  scheduler-sprout");
f_35517(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35709 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35664(2,t2,((C_word*)t0)[2]);}

/* do6371 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35675(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35675,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35685,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35708,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextstart");
t6=((C_word*)t0)[2];
f_35606(t6,t5);}}

/* k35706 in do6371 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35708,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35704,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 503  nextid");
t4=((C_word*)t0)[2];
f_35634(t4,t3);}

/* k35702 in k35706 in do6371 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 502  scheduler-sprout");
f_35517(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35683 in do6371 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35675(t3,((C_word*)t0)[2],t2);}

/* k35662 in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 509  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35634,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6357 in sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35606,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35583(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35583,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35588,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_35588 in load-sal-file in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35588(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35588,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35593,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35593(2,t4,C_SCHEME_FALSE);}}

/* k35591 */
static void C_ccall f_35593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6348(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35561(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35561,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35565,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35563 in scheduler-stop in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35565,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6337,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35517(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35517,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35521,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k35519 in scheduler-sprout in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35521,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6317,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35508(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35508,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35512,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[761]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35510 in scheduler-set-time-milliseconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35512,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6309,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35496,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6301(t2));}

/* current-time-milliseconds in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35493,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6298(t2));}

/* print-error in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35479(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35479,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35484,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35484(2,t4,C_SCHEME_FALSE);}}

/* k35482 in print-error in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6293(C_SCHEME_UNDEFINED,t1));}

/* print-message in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35465(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35465,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35470,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35470(2,t4,C_SCHEME_FALSE);}}

/* k35468 in print-message in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6287(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35275(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35275,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35329,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35336,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 398  make-string");
t5=*((C_word*)lf[374]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35336,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35338,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li556),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35338(t5,((C_word*)t0)[2],lf[757],t1,C_fix(0));}

/* do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35338(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35338,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35348,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 401  printf");
t6=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_35348(2,t6,C_SCHEME_UNDEFINED);}}}

/* k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35365,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35367,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li555),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_35367(t7,t3,C_fix(0));}

/* do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35367(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35367,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35387,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35322,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 390  floor");
t14=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 406  string-append");
t3=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[756]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35404,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35407,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 408  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k35405 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35407,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35404(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 409  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k35447 in k35405 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35449,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_35404(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35419,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 411  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k35417 in k35447 in k35405 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35419,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35404(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_35404(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k35402 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_35404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35404,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_35367(t4,((C_word*)t0)[2],t3);}

/* k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35322,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35287,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 391  modulo");
t5=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35287,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35314,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 392  floor");
t5=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k35312 in k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35314,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 393  modulo");
t5=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k35293 in k35312 in k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35295,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k35300 in k35293 in k35312 in k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35306,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k35304 in k35300 in k35293 in k35312 in k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35310,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k35308 in k35304 in k35300 in k35293 in k35312 in k35285 in k35320 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 394  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[753],((C_word*)t0)[3],lf[754],((C_word*)t0)[2],lf[755],t1);}

/* k35385 in do6275 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[751],t1,lf[752]);}

/* k35363 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 402  printf");
t2=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35349 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 414  printf");
t3=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k35352 in k35349 in k35346 in do6261 in k35334 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35354,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_35338(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k35327 in cm-logo in k35271 in k35268 in k35265 in k35262 in k35259 in k35256 in k35253 in k35250 in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 415  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34801(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_34801r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34801r(t0,t1,t2);}}

static void C_ccall f_34801r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34805,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t8,a[9]=t6,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_34805(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[746]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35129,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[746]);}
else{
t23=t22;
f_35129(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[747]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35164,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[747]);}
else{
t24=t23;
f_35164(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[749]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35199,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[749]);}
else{
t25=t24;
f_35199(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35228,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_35228(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k35226 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35228,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35243,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35241 in k35226 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35235(2,t2,C_SCHEME_UNDEFINED);}}

/* k35233 in k35226 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34805(t5,t4);}

/* k35197 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35201 in k35197 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34805(t7,t6);}

/* k35162 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35166 in k35162 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34805(t7,t6);}

/* k35127 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35133(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35131 in k35127 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34805(t7,t6);}

/* k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34805,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34808,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34808(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34994,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[746]);}
else{
t6=t5;
f_34994(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[747]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35029,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[747]);}
else{
t7=t6;
f_35029(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[749]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35064,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[749]);}
else{
t8=t7;
f_35064(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35093,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_35093(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k35091 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35093,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35108,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35106 in k35091 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35100(2,t2,C_SCHEME_UNDEFINED);}}

/* k35098 in k35091 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34808(t5,t4);}

/* k35062 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35066 in k35062 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34808(t7,t6);}

/* k35027 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35033(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35031 in k35027 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_35033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34808(t7,t6);}

/* k34992 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34998(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34996 in k34992 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34808(t7,t6);}

/* k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34811,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34811(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34859,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[746]);}
else{
t6=t5;
f_34859(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[747]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34894,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[747]);}
else{
t7=t6;
f_34894(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[749]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34929,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[749]);}
else{
t8=t7;
f_34929(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34958,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_34958(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34956 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34958,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34973,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34971 in k34956 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34965(2,t2,C_SCHEME_UNDEFINED);}}

/* k34963 in k34956 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34811(t5,t4);}

/* k34927 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34931 in k34927 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34811(t7,t6);}

/* k34892 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34898(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34896 in k34892 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34811(t7,t6);}

/* k34857 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34863(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34861 in k34857 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34811(t7,t6);}

/* k34809 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34811,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34814,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34814(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k34812 in k34809 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_34817(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[3],0,C_fix(-1));
t5=t2;
f_34817(t5,t4);}}

/* k34815 in k34812 in k34809 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34817,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34821,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_34821 in k34815 in k34812 in k34809 in k34806 in k34803 in cs:play in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34821,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub6235(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34563(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_34563r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34563r(t0,t1,t2);}}

static void C_ccall f_34563r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34567,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_34567(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[746]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34714,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[746]);}
else{
t19=t18;
f_34714(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[747]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34749,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[747]);}
else{
t20=t19;
f_34749(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34778,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_34778(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k34776 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34778,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34793,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34791 in k34776 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34785(2,t2,C_SCHEME_UNDEFINED);}}

/* k34783 in k34776 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34567(t5,t4);}

/* k34747 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34751 in k34747 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34567(t7,t6);}

/* k34712 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34718,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34718(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34716 in k34712 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34567(t7,t6);}

/* k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34567,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34570,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_34570(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34614,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[746]);}
else{
t6=t5;
f_34614(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[747]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34649,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[747]);}
else{
t7=t6;
f_34649(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34678,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_34678(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k34676 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34678,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34693,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34691 in k34676 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34685(2,t2,C_SCHEME_UNDEFINED);}}

/* k34683 in k34676 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34570(t5,t4);}

/* k34647 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34653(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34651 in k34647 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34570(t7,t6);}

/* k34612 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34618(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34616 in k34612 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34570(t7,t6);}

/* k34568 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34570(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34570,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34573,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34573(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k34571 in k34568 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_34576(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(-1));
t5=t2;
f_34576(t5,t4);}}

/* k34574 in k34571 in k34568 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34580,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_34580 in k34574 in k34571 in k34568 in k34565 in cs:print in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34580,4,t0,t1,t2,t3);}
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub6156(C_SCHEME_UNDEFINED,t4,t5));}

/* cs:f in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34506(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34506r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34506r(t0,t1,t2);}}

static void C_ccall f_34506r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34510,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34510(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34519,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34539,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34539(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34539(t8,C_SCHEME_FALSE);}}}

/* k34537 in cs:f in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34519(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34519(t2,C_SCHEME_UNDEFINED);}}

/* k34517 in cs:f in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34519,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34527,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34527 in k34517 in cs:f in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34527,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6108(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34508 in cs:f in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34449(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34449r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34449r(t0,t1,t2);}}

static void C_ccall f_34449r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34453,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34453(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34462,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34482,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34482(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34482(t8,C_SCHEME_FALSE);}}}

/* k34480 in cs:i in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34482(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34462(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34462(t2,C_SCHEME_UNDEFINED);}}

/* k34460 in cs:i in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_34462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34462,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34470,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34470 in k34460 in cs:i in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34470(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34470,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6097(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34451 in cs:i in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34446,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_34446 in cs:clear in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34446,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6091(C_SCHEME_UNDEFINED));}

/* cs:trace in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34433(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34433,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34438,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34438 in cs:trace in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34438,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6088(C_SCHEME_UNDEFINED,t2));}

/* cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34390,3,t0,t1,t2);}
if(C_truep((C_word)C_booleanp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34401,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}
else{
t3=(C_word)C_i_numberp(t2);
t4=(C_truep(t3)?(C_word)C_i_greater_or_equalp(t2,C_fix(0)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34411,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34417,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t2);}
else{
C_trace("ChickenBridge.scm: 382  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,lf[740],t2);}}}

/* f_34417 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34417(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34417,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6078(C_SCHEME_UNDEFINED,t3));}

/* k34409 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34415,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[2],C_SCHEME_TRUE);}

/* f_34415 in k34409 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34415,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6082(C_SCHEME_UNDEFINED,t2));}

/* f_34401 in cs:record in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34401(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34401,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6074(C_SCHEME_UNDEFINED,t2));}

/* cs:score in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34382(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34382,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34387,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34387 in cs:score in k34378 in k34375 in k34372 in k34369 in k34366 in k34363 in k34360 in k34357 in k34354 in k34351 in k34348 in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34387(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34387,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6069(C_SCHEME_UNDEFINED,t2));}

/* mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34292(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34292,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34304,a[2]=t2,a[3]=((C_word)li533),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34341,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34346,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_34346 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34346,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6015(C_SCHEME_UNDEFINED,t2));}

/* f_34341 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34341(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34341,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6006(C_SCHEME_UNDEFINED,t2));}

/* a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34304(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34304,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34310,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li532),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-current-continuation");
t4=*((C_word*)lf[737]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34310(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34310,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34316,a[2]=t2,a[3]=((C_word)li530),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  with-exception-handler");
t5=C_retrieve(lf[736]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a34335 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34340,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34338 in a34335 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a34315 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34316(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34316,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34320,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34327,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34331,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34334,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  condition-property-accessor");
t7=C_retrieve(lf[733]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[734],lf[735]);}

/* k34332 in a34315 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34329 in a34315 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[732],t1);}

/* k34325 in a34315 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34318 in a34315 in a34309 in a34303 in mp:inhook in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34277(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34277,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34282,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34282 in mp:mm in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34282(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34282,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5999(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34249,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34254,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_34254 in mp:bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34254,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5990(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34221,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34226,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_34226 in mp:press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34226,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5975(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34193,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34198,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_34198 in mp:prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34198,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5960(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34165,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34170,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_34170 in mp:ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34170,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5945(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34137,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34142,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_34142 in mp:touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34142,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5929(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34109,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34114,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_34114 in mp:on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34114,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5913(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34081,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34086,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_34086 in mp:off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34086(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34086,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5897(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34053,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34058,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34058 in mp:midi in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34058,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5882(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34025,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34030,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34030 in mp:note in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34030,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5865(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34002,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34006,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34007,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34007 in mm:num-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34007,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5847(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34004 in mm:num-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_34006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33983(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33983,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33988,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33988 in mm:num in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33988(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33988,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5836(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33928,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33932,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33935,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  mm:ctrl?");
t6=C_retrieve(lf[700]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k33933 in mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_33938(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:touch?");
t3=C_retrieve(lf[697]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}}

/* k33936 in k33933 in mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33938,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33942,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33962,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[718]));}}

/* f_33962 in k33936 in k33933 in mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33962,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5825(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_33942 in k33936 in k33933 in mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33942,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5815(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33930 in mm:val-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33881,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33888,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  mm:ctrl?");
t4=C_retrieve(lf[700]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k33886 in mm:val in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_33891(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:touch?");
t3=C_retrieve(lf[697]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k33889 in k33886 in mm:val in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33891,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33895,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33911,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_33911 in k33889 in k33886 in mm:val in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33911,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5802(C_SCHEME_UNDEFINED,t4,t5));}

/* f_33895 in k33889 in k33886 in mm:val in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33895,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5794(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33858,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33862,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33863,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_33863 in mm:vel-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33863,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5781(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33860 in mm:vel-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33839(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33839,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33844,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_33844 in mm:vel in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33844,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5770(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33816(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33816,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33820,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33821,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33821 in mm:key-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33821,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5759(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33818 in mm:key-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33797,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33802,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33802 in mm:key in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33802,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5748(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33778,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33782,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33783,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33783 in mm:chan-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33783,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5738(C_SCHEME_UNDEFINED,t4,t5));}

/* k33780 in mm:chan-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33763(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33763,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33768,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33768 in mm:chan in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33768,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5729(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33744,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33748,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33749,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33749 in mm:time-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33749,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5720(C_SCHEME_UNDEFINED,t4,t5));}

/* k33746 in mm:time-set! in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33729,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33734,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33734 in mm:time in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33734(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33734,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5710(t3,t4));}

/* mm:copy in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33714(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33714,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33719,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33719 in mm:copy in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33719(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33719,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5702(t3,t4));}

/* mm:free in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33696(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33696,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33700,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33704,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_33704 in mm:free in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33704(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33704,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5694(C_SCHEME_UNDEFINED,t3));}

/* k33698 in mm:free in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33226(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33226r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33226r(t0,t1,t2);}}

static void C_ccall f_33226r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33230,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33230(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33555,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_33555(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33590,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_33590(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33625,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_33625(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33654,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33654(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33652 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33654,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33669,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33667 in k33652 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33661(2,t2,C_SCHEME_UNDEFINED);}}

/* k33659 in k33652 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33230(t5,t4);}

/* k33623 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33627 in k33623 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33230(t7,t6);}

/* k33588 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33592 in k33588 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33230(t7,t6);}

/* k33553 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33557 in k33553 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33230(t7,t6);}

/* k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_33230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33230,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33233(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33420,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_33420(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33455,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_33455(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33490,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_33490(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33519,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33519(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33517 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33519,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33534,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33532 in k33517 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33526(2,t2,C_SCHEME_UNDEFINED);}}

/* k33524 in k33517 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33233(t5,t4);}

/* k33488 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33492 in k33488 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33233(t7,t6);}

/* k33453 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33457 in k33453 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33233(t7,t6);}

/* k33418 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33422 in k33418 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33233(t7,t6);}

/* k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_33233(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33233,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33236,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33236(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33285,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_33285(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33320,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_33320(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33355,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_33355(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33384,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33384(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33382 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33384,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33399,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33397 in k33382 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33391(2,t2,C_SCHEME_UNDEFINED);}}

/* k33389 in k33382 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33236(t5,t4);}

/* k33353 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33357 in k33353 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33236(t7,t6);}

/* k33318 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33324(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33322 in k33318 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33236(t7,t6);}

/* k33283 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33289(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33287 in k33283 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33236(t7,t6);}

/* k33234 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_33236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33239,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33239(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33237 in k33234 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33243,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33243 in k33237 in k33234 in k33231 in k33228 in mm:make-bend in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33243,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5671(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33207,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33212,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_33212 in mm:press? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33212,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5592(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32756(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32756r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32756r(t0,t1,t2);}}

static void C_ccall f_32756r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32760,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32760(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33085,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_33085(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33120,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_33120(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33155,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_33155(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33184,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33184(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33182 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33184,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33199,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33197 in k33182 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33191(2,t2,C_SCHEME_UNDEFINED);}}

/* k33189 in k33182 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32760(t5,t4);}

/* k33153 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33159(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33157 in k33153 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32760(t7,t6);}

/* k33118 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33124(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33122 in k33118 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32760(t7,t6);}

/* k33083 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33089(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33087 in k33083 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32760(t7,t6);}

/* k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32763(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32950,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32950(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32985,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32985(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33020,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_33020(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33049,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33049(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33047 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33049,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33064,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33062 in k33047 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33056(2,t2,C_SCHEME_UNDEFINED);}}

/* k33054 in k33047 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32763(t5,t4);}

/* k33018 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33024,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33024(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33022 in k33018 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_33024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32763(t7,t6);}

/* k32983 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32987 in k32983 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32763(t7,t6);}

/* k32948 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32954(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32952 in k32948 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32763(t7,t6);}

/* k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32763,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32766,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32766(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32815,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32815(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32850,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32850(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32885,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32885(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32914,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32914(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32912 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32914,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32929,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32927 in k32912 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32921(2,t2,C_SCHEME_UNDEFINED);}}

/* k32919 in k32912 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32766(t5,t4);}

/* k32883 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32889(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32887 in k32883 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32766(t7,t6);}

/* k32848 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32852 in k32848 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32766(t7,t6);}

/* k32813 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32819(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32817 in k32813 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32766(t7,t6);}

/* k32764 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32766(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32766,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32769,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32769(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32767 in k32764 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32773,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32773 in k32767 in k32764 in k32761 in k32758 in mm:make-press in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32773,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5577(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32737,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32742,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_32742 in mm:prog? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32742,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5498(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32286(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32286r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32286r(t0,t1,t2);}}

static void C_ccall f_32286r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32290,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32290(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32615,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_32615(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32650,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_32650(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32685,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_32685(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32714,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32714(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32712 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32714,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32729,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32727 in k32712 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32721(2,t2,C_SCHEME_UNDEFINED);}}

/* k32719 in k32712 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32290(t5,t4);}

/* k32683 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32689,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32689(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32687 in k32683 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32290(t7,t6);}

/* k32648 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32654(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32652 in k32648 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32290(t7,t6);}

/* k32613 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32619(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32617 in k32613 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32290(t7,t6);}

/* k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32290,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32293(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32480,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32480(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32515,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32515(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32550,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32550(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32579,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32579(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32577 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32579,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32594,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32592 in k32577 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32586(2,t2,C_SCHEME_UNDEFINED);}}

/* k32584 in k32577 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32293(t5,t4);}

/* k32548 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32554,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32554(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32552 in k32548 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32293(t7,t6);}

/* k32513 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32519(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32517 in k32513 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32293(t7,t6);}

/* k32478 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32482 in k32478 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32293(t7,t6);}

/* k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32293,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32296,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32296(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32345,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32345(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32380,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32380(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32415,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32415(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32444,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32444(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32442 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32444,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32459,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32457 in k32442 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32451(2,t2,C_SCHEME_UNDEFINED);}}

/* k32449 in k32442 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32296(t5,t4);}

/* k32413 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32419(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32417 in k32413 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32296(t7,t6);}

/* k32378 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32382 in k32378 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32296(t7,t6);}

/* k32343 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32347 in k32343 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32296(t7,t6);}

/* k32294 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_32296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32296,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32299,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32299(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32297 in k32294 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32303,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32303 in k32297 in k32294 in k32291 in k32288 in mm:make-prog in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32303,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5483(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32267(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32267,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32272,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_32272 in mm:ctrl? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32272,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5404(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31538(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31538r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31538r(t0,t1,t2);}}

static void C_ccall f_31538r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31542,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31542(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32110,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_32110(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[699]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32145,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[699]);}
else{
t28=t27;
f_32145(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[696]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32180,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[696]);}
else{
t29=t28;
f_32180(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32215,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_32215(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32244,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32244(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32242 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32244,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32259,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32257 in k32242 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32251(2,t2,C_SCHEME_UNDEFINED);}}

/* k32249 in k32242 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31542(t5,t4);}

/* k32213 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32219(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32217 in k32213 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31542(t7,t6);}

/* k32178 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32184(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32182 in k32178 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31542(t7,t6);}

/* k32143 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32149,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32149(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32147 in k32143 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31542(t7,t6);}

/* k32108 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32112 in k32108 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31542(t7,t6);}

/* k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_31542(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31542,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31545(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31940,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31940(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31975,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31975(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32010,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_32010(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32045,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_32045(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32074,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32074(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32072 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32089,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32087 in k32072 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32081(2,t2,C_SCHEME_UNDEFINED);}}

/* k32079 in k32072 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31545(t5,t4);}

/* k32043 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32049(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32047 in k32043 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31545(t7,t6);}

/* k32008 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32012 in k32008 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_32014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31545(t7,t6);}

/* k31973 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31977 in k31973 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31545(t7,t6);}

/* k31938 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31942 in k31938 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31545(t7,t6);}

/* k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_31545(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31545,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31548,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31548(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31770,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31770(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31805,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31805(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31840,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31840(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31875,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31875(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31904,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31904(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31902 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31904,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31919,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31917 in k31902 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31911(2,t2,C_SCHEME_UNDEFINED);}}

/* k31909 in k31902 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31548(t5,t4);}

/* k31873 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31879(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31877 in k31873 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31548(t7,t6);}

/* k31838 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31844,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31844(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31842 in k31838 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31548(t7,t6);}

/* k31803 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31809(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31807 in k31803 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31548(t7,t6);}

/* k31768 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31774,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31774(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31772 in k31768 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31548(t7,t6);}

/* k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_31548(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31548,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31551,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31551(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31600,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31600(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31635,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31635(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31670,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31670(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31705,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31705(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31734,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31734(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31732 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31734,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31749,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31747 in k31732 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31741(2,t2,C_SCHEME_UNDEFINED);}}

/* k31739 in k31732 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31551(t5,t4);}

/* k31703 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31709(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31707 in k31703 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31551(t7,t6);}

/* k31668 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31674(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31672 in k31668 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31551(t7,t6);}

/* k31633 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31635,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31639,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31639(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31637 in k31633 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31551(t7,t6);}

/* k31598 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31604,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31604(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31602 in k31598 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31551(t7,t6);}

/* k31549 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_31551(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31551,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31554,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31554(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31552 in k31549 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31558,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31558 in k31552 in k31549 in k31546 in k31543 in k31540 in mm:make-ctrl in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31558,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5388(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31519(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31519,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31524,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_31524 in mm:touch? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31524,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5272(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30790(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30790r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30790r(t0,t1,t2);}}

static void C_ccall f_30790r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30794,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30794(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31362,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_31362(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31397,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[689]);}
else{
t28=t27;
f_31397(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[696]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31432,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[696]);}
else{
t29=t28;
f_31432(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31467,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_31467(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31496,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31496(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31494 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31496,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31511,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31509 in k31494 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31503(2,t2,C_SCHEME_UNDEFINED);}}

/* k31501 in k31494 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30794(t5,t4);}

/* k31465 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31469 in k31465 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30794(t7,t6);}

/* k31430 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31436(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31434 in k31430 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30794(t7,t6);}

/* k31395 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31401(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31399 in k31395 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30794(t7,t6);}

/* k31360 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31366(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31364 in k31360 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30794(t7,t6);}

/* k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30794(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30794,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30797(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31192,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31192(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31227,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_31227(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31262,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31262(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31297,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31297(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31326,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31326(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31324 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31326,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31341,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31339 in k31324 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31333(2,t2,C_SCHEME_UNDEFINED);}}

/* k31331 in k31324 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30797(t5,t4);}

/* k31295 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31301(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31299 in k31295 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30797(t7,t6);}

/* k31260 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31266(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31264 in k31260 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30797(t7,t6);}

/* k31225 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31231(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31229 in k31225 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30797(t7,t6);}

/* k31190 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31194 in k31190 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30797(t7,t6);}

/* k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30797(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30797,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30800(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31022,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31022(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31057,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_31057(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31092,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31092(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31127,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31127(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31156,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31156(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31154 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31156,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31171,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31169 in k31154 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31163(2,t2,C_SCHEME_UNDEFINED);}}

/* k31161 in k31154 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30800(t5,t4);}

/* k31125 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31129 in k31125 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30800(t7,t6);}

/* k31090 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31096(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31094 in k31090 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30800(t7,t6);}

/* k31055 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31061(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31059 in k31055 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30800(t7,t6);}

/* k31020 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31026(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31024 in k31020 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30800(t7,t6);}

/* k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30800(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30800,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30803,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30803(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30852,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30852(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30887,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30887(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30922,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_30922(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30957,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_30957(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30986,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30986(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30984 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30986,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31001,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30999 in k30984 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_31001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30993(2,t2,C_SCHEME_UNDEFINED);}}

/* k30991 in k30984 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30803(t5,t4);}

/* k30955 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30959 in k30955 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30803(t7,t6);}

/* k30920 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30924 in k30920 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30803(t7,t6);}

/* k30885 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30891(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30889 in k30885 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30803(t7,t6);}

/* k30850 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30856(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30854 in k30850 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30803(t7,t6);}

/* k30801 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30803,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30806,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30806(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30804 in k30801 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30810,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30810 in k30804 in k30801 in k30798 in k30795 in k30792 in mm:make-touch in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30810(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30810,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5256(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30771(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30771,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30776,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_30776 in mm:off? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30776,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5140(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30320(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30320r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30320r(t0,t1,t2);}}

static void C_ccall f_30320r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30324,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30324(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30649,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_30649(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[689]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30684,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[689]);}
else{
t24=t23;
f_30684(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30719,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_30719(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30748,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30748(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30746 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30748,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30755,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30763,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30761 in k30746 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30755(2,t2,C_SCHEME_UNDEFINED);}}

/* k30753 in k30746 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30324(t5,t4);}

/* k30717 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30723(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30721 in k30717 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30324(t7,t6);}

/* k30682 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30688(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30686 in k30682 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30324(t7,t6);}

/* k30647 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30653(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30651 in k30647 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30324(t7,t6);}

/* k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30324(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30324,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30327(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30514,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30514(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30549,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30549(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30584,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_30584(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30613,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30613(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30611 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30613,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30620,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30628,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30626 in k30611 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30620(2,t2,C_SCHEME_UNDEFINED);}}

/* k30618 in k30611 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30327(t5,t4);}

/* k30582 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30588(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30586 in k30582 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30327(t7,t6);}

/* k30547 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30553(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30551 in k30547 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30327(t7,t6);}

/* k30512 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30518(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30516 in k30512 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30327(t7,t6);}

/* k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30327,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30330,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30330(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30379,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30379(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30414,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30414(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30449,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_30449(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30478,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30478(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30476 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30478,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30493,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30491 in k30476 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30485(2,t2,C_SCHEME_UNDEFINED);}}

/* k30483 in k30476 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30330(t5,t4);}

/* k30447 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30451 in k30447 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30330(t7,t6);}

/* k30412 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30416 in k30412 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30330(t7,t6);}

/* k30377 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30383,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30383(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30381 in k30377 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30330(t7,t6);}

/* k30328 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_30330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30330,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30333,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30333(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30331 in k30328 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30337,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30337 in k30331 in k30328 in k30325 in k30322 in mm:make-off in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30337,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5125(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30301,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30306,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_30306 in mm:on? in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30306,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5046(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29572(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_29572r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29572r(t0,t1,t2);}}

static void C_ccall f_29572r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29576,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_29576(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30144,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_30144(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30179,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[689]);}
else{
t28=t27;
f_30179(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[690]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30214,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[690]);}
else{
t29=t28;
f_30214(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30249,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_30249(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30278,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30278(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30276 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30278,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30285,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30293,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30291 in k30276 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30285(2,t2,C_SCHEME_UNDEFINED);}}

/* k30283 in k30276 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29576(t5,t4);}

/* k30247 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30253(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30251 in k30247 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29576(t7,t6);}

/* k30212 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30216 in k30212 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29576(t7,t6);}

/* k30177 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30183(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30181 in k30177 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29576(t7,t6);}

/* k30142 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30146 in k30142 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29576(t7,t6);}

/* k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29579(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29974,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29974(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30009,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30009(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30044,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_30044(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30079,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_30079(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30108,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30108(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30106 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30108,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30123,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30121 in k30106 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30115(2,t2,C_SCHEME_UNDEFINED);}}

/* k30113 in k30106 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29579(t5,t4);}

/* k30077 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30083(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30081 in k30077 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29579(t7,t6);}

/* k30042 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30048(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30046 in k30042 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29579(t7,t6);}

/* k30007 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30013(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30011 in k30007 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_30013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29579(t7,t6);}

/* k29972 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29978(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29976 in k29972 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29579(t7,t6);}

/* k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29579(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29579,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29582(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29804,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29804(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29839,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_29839(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29874,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_29874(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29909,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_29909(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29938,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29938(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29936 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29938,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29945,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29953,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29951 in k29936 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29945(2,t2,C_SCHEME_UNDEFINED);}}

/* k29943 in k29936 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29582(t5,t4);}

/* k29907 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29913(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29911 in k29907 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29582(t7,t6);}

/* k29872 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29878(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29876 in k29872 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29582(t7,t6);}

/* k29837 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29843(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29841 in k29837 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29582(t7,t6);}

/* k29802 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29808(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29806 in k29802 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29582(t7,t6);}

/* k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29582(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29582,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29585,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29585(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29634,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29634(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29669,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_29669(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29704,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_29704(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29739,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_29739(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29768,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29768(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29766 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29768,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29783,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29781 in k29766 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29775(2,t2,C_SCHEME_UNDEFINED);}}

/* k29773 in k29766 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29585(t5,t4);}

/* k29737 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29743(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29741 in k29737 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29585(t7,t6);}

/* k29702 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29706 in k29702 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29585(t7,t6);}

/* k29667 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29671 in k29667 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29585(t7,t6);}

/* k29632 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29636 in k29632 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29585(t7,t6);}

/* k29583 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29585,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29588,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29588(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29586 in k29583 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29592,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_29592 in k29586 in k29583 in k29580 in k29577 in k29574 in mm:make-on in k29426 in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29592,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5030(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29234(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29234,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29242,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29074,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_29074(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_29074(t12,(C_word)C_i_not(t11));}}

/* k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29074(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29074,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29081,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(t2,(C_word)C_a_i_list(&a,4,lf[507],lf[677],lf[512],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29082,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29107,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29109,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li452),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_29109(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29109(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29109,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[423]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_29119(t16,t13);}
else{
t13=t10;
f_29119(t13,C_SCHEME_UNDEFINED);}}}

/* k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29119,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t2,t3,((C_word*)t0)[3]);}

/* k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29123,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_29126(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[682],t5,lf[683]));}}

/* k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29178,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li450),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29187,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li451),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29186 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29187,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29177 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29178,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k29127 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29132,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_29082(t3,((C_word*)((C_word*)t0)[6])[1],lf[668]);}

/* k29146 in k29127 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29148,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_29132(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29155,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_29082(t2,((C_word*)((C_word*)t0)[6])[1],lf[681]);}}

/* k29153 in k29146 in k29127 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29155,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_29132(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[678],t2,lf[679],t3,lf[680]));}}
else{
t2=((C_word*)t0)[5];
f_29132(2,t2,C_SCHEME_UNDEFINED);}}

/* k29130 in k29127 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29132,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k29136 in k29130 in k29127 in k29124 in k29121 in k29117 in do4828 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_29109(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29105 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29242(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29082(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29082,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k29079 in k29072 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29081,2,t0,t1);}
t2=((C_word*)t0)[2];
f_29242(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k29240 in parse-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_29242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26169(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28820,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[671],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28842,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[674],t8,lf[675]));}
else{
t19=t17;
f_28842(2,t19,C_SCHEME_UNDEFINED);}}

/* k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28842,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[673]));}
else{
t9=t8;
f_28857(2,t9,C_SCHEME_UNDEFINED);}}

/* k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_28860(t6,t5);}
else{
t4=t2;
f_28860(t4,C_SCHEME_UNDEFINED);}}

/* k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28860(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28860,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29030,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li446),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29036,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li447),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29035 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29036,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29029 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29030,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_28689(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28866,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_28866(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29012,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26169(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k29010 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28866(t3,t2);}

/* k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28866(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28866,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25916(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29005,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k29003 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_29005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29005,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28993,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28876,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_28889(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_28889(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28889(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28889,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[672]));}
else{
t5=t4;
f_28896(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_28876(t2,C_SCHEME_UNDEFINED);}}

/* k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28899,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li444),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28966,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li445),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28965 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28966,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28951 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28960,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k28958 in a28951 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_28689(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_28902(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28938,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26169(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28936 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28902(t3,t2);}

/* k28900 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28902,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25970(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28929 in k28900 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28931,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25976(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k28906 in k28929 in k28900 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25976(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k28909 in k28906 in k28929 in k28900 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26169(t2,lf[20],t3);}

/* k28913 in k28909 in k28906 in k28929 in k28900 in k28897 in k28894 in k28887 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28876(t3,t2);}

/* k28874 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28876,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25976(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k28877 in k28874 in k28991 in k28867 in k28864 in k28861 in k28858 in k28855 in k28840 in parse-conditional in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28689(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28689,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28693,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28698,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li442),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_28698(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28698(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28698,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28646,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t12,t10,t11);}}

/* k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_28652(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[668]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[669]);
t8=t2;
f_28652(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_28652(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_28652(t3,C_SCHEME_FALSE);}}

/* k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28652(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28652,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_28715(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[666],t6,lf[667]));}}

/* k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28718,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28788,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li440),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28801,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li441),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28800 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28801,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28787 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28796,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28794 in a28787 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28716 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k28720 in k28716 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28722,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28727,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_28727(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[423]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[665]));}
else{
t10=t5;
f_28727(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_28727(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28765,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t10,t11,((C_word*)t0)[3]);}}}}

/* k28763 in k28720 in k28716 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_28727(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_28727(2,t2,C_SCHEME_UNDEFINED);}}

/* k28725 in k28720 in k28716 in k28713 in k28650 in k28644 in do4761 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_28698(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28691 in parse-then-else-dependents in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28588,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28595,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[662],t13,lf[663]));}
else{
t13=t11;
f_28595(2,t13,C_SCHEME_UNDEFINED);}}

/* k28593 in parse-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28595,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28626,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28624 in k28593 in parse-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28626,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28622,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k28620 in k28624 in k28593 in parse-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28622,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[507],lf[648],lf[512],t2));}

/* k28612 in k28624 in k28593 in parse-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28497,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28504,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[659],t15,lf[660]));}
else{
t15=t13;
f_28504(2,t15,C_SCHEME_UNDEFINED);}}

/* k28502 in parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28504,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28570 in k28502 in parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28572,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28515,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[656]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_28515(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[657]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_28515(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[658]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_28515(t9,t8);}
else{
t8=t4;
f_28515(t8,C_SCHEME_UNDEFINED);}}}}

/* k28513 in k28570 in k28502 in parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28515(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28515,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28526,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28542,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k28540 in k28513 in k28570 in k28502 in parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28542,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[507],lf[656],lf[512],t3,lf[515],t4));}

/* k28524 in k28513 in k28570 in k28502 in parse-thereis in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28431,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28442,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[653],t7,lf[654]));}
else{
t13=t12;
f_28442(2,t13,C_SCHEME_UNDEFINED);}}

/* k28440 in parse-while-until in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[651]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_28445(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[652]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[425],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_28445(t10,t9);}
else{
t5=t2;
f_28445(t5,C_SCHEME_UNDEFINED);}}}

/* k28443 in k28440 in parse-while-until in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28452,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[650]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[512],t4));}

/* k28450 in k28443 in k28440 in parse-while-until in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28425(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28425,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[648],t2));}

/* parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27879,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27888,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27893,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27898,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27910,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[645],t7,lf[646]));}
else{
t30=t29;
f_27910(2,t30,C_SCHEME_UNDEFINED);}}

/* k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27910,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_27921(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[641]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28374,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[644]));}
else{
t11=t9;
f_28374(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_27921(2,t9,C_SCHEME_UNDEFINED);}}}

/* k28372 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26246(t2,t3);}

/* k28378 in k28372 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28380,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_27921(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[642],t2,lf[643]));}}

/* k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_27925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27806,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li434),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_27806(t9,t2,C_SCHEME_FALSE);}

/* do4583 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27806(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27806,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27820,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27831,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-collectors");
t9=C_retrieve2(lf[498],"loop-collectors");
f_25934(3,t9,t7,t8);}}

/* k27829 in do4583 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27831,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27766,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li433),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27766(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4575 in k27829 in do4583 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27766(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27766,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27779,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_27779(t12,t11);}
else{
t10=t6;
f_27779(t10,C_SCHEME_UNDEFINED);}}}

/* k27777 in do4575 in k27829 in do4583 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_27766(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27818 in do4583 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27806(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27925,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_27928,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28358,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28362,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27893(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_27928(2,t6,t5);}}

/* k28360 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[638];
t3=lf[639];
t4=lf[640];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_28358(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_28358(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_28358(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_28358(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k28356 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28358,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_27928(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28354,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27893(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28352 in k28356 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28354,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[635],t1,lf[636],((C_word*)t0)[2],lf[637]));}

/* k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27931,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[619]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[620]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27974,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28012,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_28012(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[621]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28041,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27898(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[622]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[623]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[625]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_28148(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[629]);
t10=t8;
f_28148(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[634])));}}}}

/* k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28148,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28151,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28264,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28322,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t9,((C_word*)((C_word*)t0)[13])[1],lf[633]);}
else{
t9=t8;
f_28264(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28257,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27898(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_27931(t2,C_SCHEME_UNDEFINED);}}

/* k28255 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28151(t6,t5);}

/* k28320 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28322,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28264(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28264,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[632]);}

/* k28266 in k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28268,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[631]);}

/* k28270 in k28266 in k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28272,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)((C_word*)t0)[11])[1],lf[630]);}

/* k28312 in k28270 in k28266 in k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28314,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k28308 in k28312 in k28270 in k28266 in k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28310,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28288,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27888(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k28286 in k28308 in k28312 in k28270 in k28266 in k28262 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28288,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28151(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28151(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28149 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28154,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[626]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[628],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28154(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[629]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[626],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28154(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[628],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_28154(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k28152 in k28149 in k28146 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28154,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27931(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_27931(t2,C_SCHEME_UNDEFINED);}}

/* k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28053,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[622]);
t3=(C_truep(t2)?lf[376]:lf[454]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28059,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28103,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_28103(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[624]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28136,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27898(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k28134 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28059(t3,t2);}

/* k28101 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28103,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k28127 in k28101 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28129,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28111,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27888(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28109 in k28127 in k28101 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28111,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28059(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[424],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28059(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28057 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_28059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28059,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28099,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k28097 in k28057 in k28051 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28099,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[424],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[451],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_27931(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k28039 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27974(t3,t2);}

/* k28010 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28012,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k28032 in k28010 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28034,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28020,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27888(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28018 in k28032 in k28010 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_28020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28020,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27974(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_27974(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27972 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27974,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[619]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27931(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_27931(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27931,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27938,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27940 in k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27944 in k27940 in k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27950,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27948 in k27944 in k27940 in k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27954,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27952 in k27948 in k27944 in k27940 in k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27954,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[507],((C_word*)t0)[5],lf[508],((C_word*)t0)[4],lf[510],((C_word*)t0)[3],lf[512],((C_word*)t0)[2],lf[515],t1,lf[509],t2,lf[511],C_SCHEME_END_OF_LIST));}

/* k27936 in k27929 in k27926 in k27923 in k27919 in k27908 in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27898(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27898,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27893(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27893,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27888(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27888,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27720,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27731,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[616],t6,lf[617]));}
else{
t12=t11;
f_27731(2,t12,C_SCHEME_UNDEFINED);}}

/* k27729 in parse-initially in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27731,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27746,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(t6,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[510],t7));}

/* k27744 in k27729 in parse-initially in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27682,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27693,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[613],t6,lf[614]));}
else{
t12=t11;
f_27693(2,t12,C_SCHEME_UNDEFINED);}}

/* k27691 in parse-finally in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27693,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27708,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(t6,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[514],t7));}

/* k27706 in k27691 in parse-finally in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27615,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27626,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27635,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li426),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_27635(t16,t12);}

/* do4532 in parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27635(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27635,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_27645(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t3,t4,((C_word*)t0)[5]);}}

/* k27643 in do4532 in parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27645,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[610],((C_word*)t0)[4],lf[611]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27658,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_27635(t7,((C_word*)t0)[7]);}}

/* k27656 in k27643 in do4532 in parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k27624 in parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27633,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[3],lf[512],((C_word*)((C_word*)t0)[2])[1]));}

/* k27631 in k27624 in parse-do in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27422,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27429,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27482,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li424),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_27482(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27482(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27482,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_27492(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t7,t8,((C_word*)t0)[5]);}}

/* k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27492,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27503,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27606,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26246(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27606,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27512,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[600],((C_word*)((C_word*)t0)[10])[1],lf[601]));}
else{
t4=t3;
f_27512(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[423]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27534,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[602]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27563,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27571,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[603]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[433]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[604]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_27503(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[605],((C_word*)((C_word*)t0)[10])[1],lf[606]));}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[607],((C_word*)((C_word*)t0)[10])[1],lf[608]));}}}}}

/* k27569 in k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27571,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27534(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27561 in k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27563,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27534(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27532 in k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_27503(2,t6,t5);}

/* k27510 in k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27515,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[598],((C_word*)((C_word*)t0)[8])[1],lf[599]));}
else{
t3=t2;
f_27515(2,t3,C_SCHEME_UNDEFINED);}}

/* k27513 in k27510 in k27604 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_27503(2,t6,t5);}

/* k27501 in k27490 in do4488 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27482(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27432,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[597]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27472,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27480,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_27432(2,t3,C_SCHEME_UNDEFINED);}}}

/* k27478 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27480,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27432(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27470 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27472,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27432(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27430 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27439,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27443,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27441 in k27430 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27447,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27445 in k27441 in k27430 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27447,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[507],lf[596],lf[508],((C_word*)t0)[2],lf[510],t1));}

/* k27437 in k27430 in k27427 in parse-with in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27280,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27290,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27328,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li422),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_27328(t22,t18,C_SCHEME_FALSE);}

/* do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27328(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27328,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27338(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t5,t6,((C_word*)t0)[5]);}}

/* k27336 in do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27338,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[594]));}
else{
t7=t6;
f_27349(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27347 in k27336 in do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27349,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27352,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[433]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27361,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[589]));}
else{
t6=t5;
f_27361(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[590]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27386,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[591]));}
else{
t7=t6;
f_27386(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[592],((C_word*)((C_word*)t0)[12])[1],lf[593]));}}}

/* k27384 in k27347 in k27336 in do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27386,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_27352(2,t10,t9);}

/* k27359 in k27347 in k27336 in do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27361,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_27352(2,t8,t7);}

/* k27350 in k27347 in k27336 in do4450 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27328(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27288 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27297,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27326,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k27324 in k27288 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27326,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[507],lf[537],lf[508],t2,lf[510],t3,lf[512],t4,lf[513],t5));}

/* k27295 in k27288 in parse-general-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26929,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26936,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[587]);}

/* k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26936,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26942,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27170,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li420),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_27170(t25,t21,C_SCHEME_FALSE);}

/* do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27170(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27170,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27180(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t5,t6,((C_word*)t0)[4]);}}

/* k27178 in do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27180,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[586]));}
else{
t7=t6;
f_27191(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27189 in k27178 in do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27191,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27194,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[576]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27203,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27203(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[585]);
if(C_truep(t6)){
t7=t5;
f_27203(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[570]);
t8=t5;
f_27203(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[575])));}}}

/* k27201 in k27189 in k27178 in do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27203,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27206,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[578],((C_word*)((C_word*)t0)[9])[1],lf[579],((C_word*)((C_word*)t0)[10])[1],lf[580]));}
else{
t3=t2;
f_27206(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[561]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[581]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[570]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[582]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_27194(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[583],((C_word*)((C_word*)t0)[9])[1],lf[584]));}}}

/* k27204 in k27201 in k27189 in k27178 in do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27194(2,t7,t6);}

/* k27192 in k27189 in k27178 in do4383 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27170(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27168,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27164,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26953,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[570]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26970,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[574]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[575]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27046,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[301],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_27046(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[301],((C_word*)t0)[4]);
t9=t7;
f_27046(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27110,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_27110(t10,(C_word)C_eqp(t9,lf[577]));}
else{
t9=t8;
f_27110(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_27075(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k27108 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27110,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27075(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27075(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27073 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27075,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27091,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[576]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_27091(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_27091(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k27089 in k27073 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27091,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26953(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27044 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_27046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27046,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[299],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[451],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26953(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26968 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[573]);}

/* k26971 in k26968 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t2,((C_word*)t0)[7],C_fix(0));}

/* k27035 in k26971 in k26968 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27037,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k27031 in k27035 in k26971 in k26968 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_27033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27033,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[571],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[104],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[572],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[376],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[425],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_26953(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k26951 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26953(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26953,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26960,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26962 in k26951 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26964,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[507],lf[537],lf[508],t1,lf[511],((C_word*)((C_word*)t0)[5])[1],lf[510],((C_word*)((C_word*)t0)[4])[1],lf[512],((C_word*)((C_word*)t0)[3])[1],lf[513],((C_word*)((C_word*)t0)[2])[1]));}

/* k26958 in k26951 in k27162 in k27166 in k26940 in k26934 in parse-sequence-iteration in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26882,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[567]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26897,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li417),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26915,a[2]=t2,a[3]=((C_word)li418),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a26914 in parse-repeat in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26915,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,t1,t2,t4);}

/* a26896 in parse-repeat in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[568]);}

/* k26907 in a26896 in parse-repeat in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26909,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[537],t1,lf[542],t2);
C_trace("ChickenBridge.scm: 380  parse-numerical-for");
t4=C_retrieve2(lf[536],"parse-numerical-for");
f_26500(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26500,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26510,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26709,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li415),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_26709(t31,t27,C_SCHEME_FALSE);}

/* do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26709(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26709,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_26719(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t5,t6,((C_word*)t0)[6]);}}

/* k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26719,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[565]));}
else{
t7=t6;
f_26730(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26730,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26733,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[544]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[540]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26745,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[545],((C_word*)((C_word*)t0)[12])[1],lf[546],((C_word*)((C_word*)t0)[9])[1],lf[547]));}
else{
t7=t6;
f_26745(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[542]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26766,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[548],((C_word*)((C_word*)t0)[12])[1],lf[549],((C_word*)((C_word*)t0)[3])[1],lf[550]));}
else{
t8=t7;
f_26766(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[551]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26787,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[552],((C_word*)((C_word*)t0)[12])[1],lf[553],((C_word*)((C_word*)t0)[3])[1],lf[554]));}
else{
t9=t8;
f_26787(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[541]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26808,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[555],((C_word*)((C_word*)t0)[12])[1],lf[556],((C_word*)((C_word*)t0)[3])[1],lf[557]));}
else{
t10=t9;
f_26808(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[543]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26829,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[558],((C_word*)((C_word*)t0)[12])[1],lf[559],((C_word*)((C_word*)t0)[3])[1],lf[560]));}
else{
t11=t10;
f_26829(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[561]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26850,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[562]));}
else{
t12=t11;
f_26850(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[563],((C_word*)((C_word*)t0)[12])[1],lf[564]));}}}}}}}

/* k26848 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_26733(2,t6,t5);}

/* k26827 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26733(2,t7,t6);}

/* k26806 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26733(2,t7,t6);}

/* k26785 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26733(2,t7,t6);}

/* k26764 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26733(2,t7,t6);}

/* k26743 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26733(2,t7,t6);}

/* k26731 in k26728 in k26717 in do4284 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26709(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_26513(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[544]);
t5=t2;
f_26513(t5,t4);}}

/* k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26513,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26516,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[540]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26676,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_26676(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[543]);
t6=t4;
f_26676(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[541])));}}

/* k26674 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26676(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[106]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[541]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[242]);
t5=((C_word*)t0)[2];
f_26516(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[376]);
t5=((C_word*)t0)[2];
f_26516(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[104]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[542]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[448]);
t5=((C_word*)t0)[2];
f_26516(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[454]);
t5=((C_word*)t0)[2];
f_26516(t5,t4);}}}

/* k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26516,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26647,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26667,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k26665 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26667,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26519(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26645 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26647,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26519(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26519,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_26522(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26612,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[539]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_26522(t5,t4);}}

/* k26610 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t2,t1,C_SCHEME_FALSE);}

/* k26627 in k26610 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26629,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_26522(t8,t7);}

/* k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26522,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[538]);}
else{
t6=t5;
f_26529(t6,C_SCHEME_UNDEFINED);}}

/* k26559 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26564,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26579,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26595,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26252(t3,t1,C_SCHEME_FALSE);}}

/* k26593 in k26559 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26595,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26564(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26577 in k26559 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26579,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26564(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26562 in k26559 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26564,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26529(t4,t3);}

/* k26527 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26529(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26529,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26536,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26540,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26538 in k26527 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26544,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26542 in k26538 in k26527 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26544,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[507],lf[537],lf[508],((C_word*)t0)[2],lf[510],t1,lf[513],t2,lf[511],t4));}

/* k26534 in k26527 in k26520 in k26517 in k26514 in k26511 in k26508 in parse-numerical-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26418,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26422,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t5,t6,t4);}

/* k26420 in parse-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26422,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[529]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26440,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26246(t4,t3);}}

/* k26438 in k26420 in parse-for in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26440,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[530]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[531],t6,lf[532],lf[533]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26258(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[534],t2,lf[535]));}}

/* loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26258(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26258,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26314,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26266,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li412),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26266(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4235 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26266(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26266,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26276,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_26276(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_26276(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26240(t6,t8,((C_word*)t0)[2]);}}}

/* k26274 in do4235 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26276,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  reverse");
t2=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_26266(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26317,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[527]);}

/* k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26395,a[2]=t4,a[3]=((C_word)li411),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_26395(t6,t2,((C_word*)t0)[2]);}

/* do4245 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26395(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26395,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26405,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k26403 in do4245 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26395(t3,((C_word*)t0)[2],t2);}

/* k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[526]);}

/* k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26332,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[522]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26349,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li410),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26349(t6,t2,((C_word*)t0)[2]);}}

/* do4250 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26349(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26349,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26359,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[525]);}
else{
t5=t3;
f_26359(2,t5,C_SCHEME_UNDEFINED);}}}

/* k26357 in do4250 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26362,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k26360 in k26357 in do4250 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[523]:lf[524]);
C_trace("ChickenBridge.scm: 380  display");
t6=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k26363 in k26360 in k26357 in do4250 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26349(t3,((C_word*)t0)[2],t2);}

/* k26330 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26335,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26333 in k26330 in k26327 in k26324 in k26321 in k26318 in k26315 in k26312 in loop-error in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[521]);}

/* make-binding in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26252(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26252,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26246(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26246,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26240(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26240,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26169(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26169,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26171,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26210,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t5,t3,C_retrieve2(lf[497],"loop-bindings"));}

/* k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[498],"loop-collectors"));}

/* k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26218,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[499],"loop-initially"));}

/* k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26222,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[500],"loop-end-tests"));}

/* k26220 in k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[501],"loop-looping"));}

/* k26224 in k26220 in k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[503],"loop-stepping"));}

/* k26228 in k26224 in k26220 in k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[504],"loop-finally"));}

/* k26232 in k26228 in k26224 in k26220 in k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26238,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26171(t2,((C_word*)t0)[2],C_retrieve2(lf[505],"loop-returning"));}

/* k26236 in k26232 in k26228 in k26224 in k26220 in k26216 in k26212 in k26208 in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26238,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_26018(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[507],((C_word*)t0)[9],lf[508],((C_word*)t0)[8],lf[509],((C_word*)t0)[7],lf[510],((C_word*)t0)[6],lf[511],((C_word*)t0)[5],lf[512],((C_word*)t0)[4],lf[513],((C_word*)t0)[3],lf[514],((C_word*)t0)[2],lf[515],t1));}

/* gather-clause in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26171(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26171,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26177,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li404),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_26177(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4218 in gather-clause in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26177(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26177,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26188,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26199,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k26197 in do4218 in gather-clause in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26186 in do4218 in gather-clause in gather-clauses in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_26177(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26018(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26018,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26033,a[2]=t5,a[3]=t3,a[4]=((C_word)li402),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_26033(t7,t1,t2);}}

/* do4206 in make-loop-clause in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_26033(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26033,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26046,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[507]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25916(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[508]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_26046(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[509]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_26046(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[510]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_26046(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[511]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_26046(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[512]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25976(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[513]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_26046(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[514]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_26046(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[515]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_26046(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_26046(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k26044 in do4206 in make-loop-clause in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26033(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_26006(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26006,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25994,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25982(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25982,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25976(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25976,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25970(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25970,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25958(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25958,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25946(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25946,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25934(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25934,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25922(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25922,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k25906 in k25903 in k25900 in k25897 in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25916(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25916,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25880(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25880,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[495]);}

/* sal:open in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25874(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25874,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[493]);}

/* sal:load in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25827,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25831,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  file-exists?");
t4=C_retrieve(lf[491]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25829 in sal:load in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25834,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25856,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[487]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[488],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_25856(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25847,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[489],((C_word*)t0)[2],lf[490]);}}

/* k25845 in k25829 in sal:load in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25854 in k25829 in sal:load in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  load-sal-file");
t2=C_retrieve(lf[485]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  load");
t2=C_retrieve(lf[486]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k25832 in k25829 in sal:load in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25818(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25818,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25822,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25820 in sal:chdir in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25665(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_25665r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25665r(t0,t1,t2);}}

static void C_ccall f_25665r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25668,a[2]=t4,a[3]=((C_word)li385),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25787,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25792,a[2]=t4,a[3]=t8,a[4]=((C_word)li386),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_25792(t10,t6,t2);}

/* do4033 in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25792(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25792,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t3=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[482]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25805,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_25668(t5,t3,t4,C_fix(0));}}

/* k25803 in do4033 in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25792(t3,((C_word*)t0)[2],t2);}

/* k25785 in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25668(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25668,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[475]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25696,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[478]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[479]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25768,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25784,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[480],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[481]);}}

/* k25782 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25766 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25694 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25699,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li384),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_25704(t6,t2,((C_word*)t0)[2]);}

/* do4025 in k25694 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25704(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25704,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25714,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 379  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_25668(t6,t3,t4,t5);}}

/* k25712 in do4025 in k25694 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_25717(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t4=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[477]);}}

/* k25715 in k25712 in do4025 in k25694 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25704(t3,((C_word*)t0)[2],t2);}

/* k25697 in k25694 in printer in sal:print in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[476]);}

/* sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25488(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_25488,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25492,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[461]))){
C_trace("ChickenBridge.scm: 379  printf");
t8=C_retrieve(lf[442]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[472],t4);}
else{
t8=t7;
f_25492(2,t8,C_SCHEME_UNDEFINED);}}

/* k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25492,2,t0,t1);}
t2=C_mutate(&lf[458],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[387],"list->token"),t4);}

/* k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25497,2,t0,t1);}
t2=C_mutate(&lf[459],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_25500(t5,t4);}
else{
t4=t3;
f_25500(t4,C_SCHEME_FALSE);}}

/* k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25500,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[459],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23235,a[2]=t4,a[3]=t3,a[4]=((C_word)li382),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call/cc");
t7=*((C_word*)lf[471]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a23234 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23235(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23235,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23241,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li380),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23248,a[2]=t2,a[3]=((C_word)li381),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a23247 in a23234 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23248,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23255,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_23255(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_23255(t6,C_SCHEME_FALSE);}}

/* k23253 in a23247 in a23234 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23255,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23262,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22892(t2,lf[468],lf[469],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22712(((C_word*)t0)[4],lf[470],C_retrieve2(lf[436],"*maxtokpos*"));}}

/* k23260 in k23253 in a23247 in a23234 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23240 in a23234 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23241,2,t0,t1);}
t2=lf[436]=C_fix(0);;
C_trace("ChickenBridge.scm: 379  parser");
f_23273(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25504,2,t0,t1);}
t2=C_mutate(&lf[460],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25507,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[460],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[403]))){
t5=C_retrieve2(lf[458],"*sal-string*");
t6=C_retrieve2(lf[460],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25541,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22751(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 379  pp");
t5=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[460],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 379  eval");
t5=C_retrieve(lf[467]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[460],"*sal-output*"));}}}

/* k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25541,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25634,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_25634(t11,t7,C_SCHEME_FALSE);}

/* do3998 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25634(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25634,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25644,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25644(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_25644(t11,t10);}}}

/* k25642 in do3998 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25644(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25634(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25547,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25604,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li378),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25604(t9,t5,C_SCHEME_FALSE);}

/* do4005 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25604(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25604,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25614,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25614(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_25614(t11,t10);}}}

/* k25612 in do4005 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_25614(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25604(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25558,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25565,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22733(t4,((C_word*)t0)[2]);}

/* k25567 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25571 in k25567 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25577,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  substring");
t3=*((C_word*)lf[465]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25575 in k25571 in k25567 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25581,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25579 in k25575 in k25571 in k25567 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25581,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25588,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 379  make-string");
t5=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k25586 in k25579 in k25575 in k25571 in k25567 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25588,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 379  string-append");
t5=*((C_word*)lf[171]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[464],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k25563 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25556 in k25553 in k25545 in k25539 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k25505 in k25502 in k25498 in k25495 in k25490 in sal in k25479 in k25476 in k25473 in k25470 in k25467 in k24884 in k24881 in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_25507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24362,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24369,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24375,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t33,t34,C_fix(23296));}

/* k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24375,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24379,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_24425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(10756));}}

/* k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24425,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24429,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_24522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,t3,C_fix(22784));}}

/* k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24522,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24526,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24590,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24590,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24597,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24847,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_24597(t8,t7);}}

/* k24845 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24597(t3,t2);}

/* k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24597,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24600,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24786,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24835,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k24833 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24600(t3,t2);}

/* k24784 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24786,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24790 in k24784 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24792,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_24600(t4,t3);}}

/* k24814 in k24790 in k24784 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24816,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24800,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24812,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t6=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k24810 in k24814 in k24790 in k24784 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24798 in k24814 in k24790 in k24784 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24600(t3,t2);}

/* k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24600,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_24603(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24762,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[457]);}}

/* k24760 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24766,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24764 in k24760 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24603(t4,t3);}

/* k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24603,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_24606(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24739,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[456]);}}

/* k24737 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24743,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24741 in k24737 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24606(t4,t3);}

/* k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24606,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_24609(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24716,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[455]);}}
else{
t3=t2;
f_24609(t3,C_SCHEME_UNDEFINED);}}

/* k24714 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24720,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24718 in k24714 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24609(t4,t3);}

/* k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24609,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24612,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24641,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_24612(t7,t6);}}

/* k24639 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24641,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[448],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24612(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k24657 in k24639 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24659,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[454],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24612(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k24675 in k24657 in k24639 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24677,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[106],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24612(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k24693 in k24675 in k24657 in k24639 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24695,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[376],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[106],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24612(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_24612(t2,C_SCHEME_UNDEFINED);}}

/* k24610 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24612,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24616,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k24614 in k24610 in k24607 in k24604 in k24601 in k24598 in k24595 in k24588 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24369(t3,t2);}

/* k24524 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24526,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24530,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24528 in k24524 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24530,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[453]);}

/* k24532 in k24528 in k24524 in k24520 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24534,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24369(t12,t11);}

/* k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24429,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24433,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24435 in k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24437,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24440,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24456,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_24440(t6,t5);}}

/* k24454 in k24435 in k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24456,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[452]);}

/* k24458 in k24454 in k24435 in k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24460,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[451],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24440(t12,t11);}

/* k24438 in k24435 in k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24440(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24440,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24444,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k24442 in k24438 in k24435 in k24431 in k24427 in k24423 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24369(t3,t2);}

/* k24377 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24379,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[450]);}

/* k24381 in k24377 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24383,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24387,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[449]);}

/* k24385 in k24381 in k24377 in k24373 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24387,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[448],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_24369(t10,t9);}

/* k24367 in sal-parse-stepping in k24358 in k24355 in k24352 in k24349 in k24346 in k24343 in k24340 in k24337 in k24334 in k24331 in k24328 in k24325 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k24298 in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24184(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24184,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24196,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li375),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24196(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24196,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24215,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  is-op?");
f_24163(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24215,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24218,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24233,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li374),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_24233(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_24218(2,t5,t4);}}

/* do3628 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24233(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24233,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24247,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24261,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t12=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24265,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  is-op?");
f_24163(t10,t11);}}

/* k24263 in do3628 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24265,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24268,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_24268(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_24268(t10,t9);}}

/* k24266 in k24263 in do3628 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_24233(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24259 in do3628 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  inf->pre");
f_24184(((C_word*)t0)[2],t1);}

/* k24245 in do3628 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24247,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k24216 in k24213 in do3626 in inf->pre in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24196(t2,((C_word*)t0)[2]);}

/* is-op? in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24163(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24163,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24170,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22832(t3,t2);}

/* k24168 in is-op? in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24170,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24173,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k24171 in k24168 in is-op? in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24179,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23940(t2,t1);}

/* k24177 in k24171 in k24168 in is-op? in k24159 in k24156 in k24153 in k24150 in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24179,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24098(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24098,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24107,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li371),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_24107(t10,t1,t2);}

/* do3592 in remove-token-type in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24107(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24107,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24120,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24130,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22848(t4,t5,((C_word*)t0)[2]);}}

/* k24128 in do3592 in remove-token-type in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_24130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24130,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_24120(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_24120(t7,t6);}}

/* k24118 in do3592 in remove-token-type in k24094 in k24091 in k24088 in k24085 in k24082 in k24079 in k24076 in k24073 in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24107(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24054(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24054,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_24042(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24042,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23940(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23940,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23892(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23892,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23273(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23273,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23277,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 379  printf");
t10=C_retrieve(lf[442]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[443],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_23277(2,t10,C_SCHEME_UNDEFINED);}}

/* k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22452(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_23283(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23698,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23702,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23706,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_22440(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k23704 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  token-position");
f_22399(((C_word*)t0)[2],t1);}

/* k23700 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  max");
t2=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[436],"*maxtokpos*"),t1);}

/* k23696 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[436],t1);
t3=((C_word*)t0)[2];
f_23283(t3,t2);}

/* k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23283,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t4=C_retrieve2(lf[280],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23406,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t3,((C_word*)t0)[8]);}}

/* k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23406,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22639,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t4,t3);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[441],((C_word*)t0)[2]);}}

/* k22637 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23412(t3,(C_word)C_eqp(t2,lf[423]));}
else{
t2=((C_word*)t0)[2];
f_23412(t2,C_SCHEME_FALSE);}}

/* k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23412,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23421,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_22612(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22655,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t5,t4);}}

/* k22653 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23500(t3,(C_word)C_eqp(t2,lf[424]));}
else{
t2=((C_word*)t0)[2];
f_23500(t2,C_SCHEME_FALSE);}}

/* k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23500,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_22612(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22680(t2,((C_word*)t0)[2]);}}

/* k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_23573(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22671,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t4,t3);}}

/* k22669 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23573(t3,(C_word)C_eqp(t2,lf[104]));}
else{
t2=((C_word*)t0)[2];
f_23573(t2,C_SCHEME_FALSE);}}

/* k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23573,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23579,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23602,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li363),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_23602(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22703,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t4,t3);}}

/* k22701 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23651(t3,(C_word)C_eqp(t2,lf[440]));}
else{
t2=((C_word*)t0)[2];
f_23651(t2,C_SCHEME_FALSE);}}

/* k23649 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23651,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23660,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li364),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23677,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li365),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[439],t3);}}

/* a23676 in k23649 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23677,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23670 in k23649 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23671,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_23273(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23658 in k23649 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23602,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_23612(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22452(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23612,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23615,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li361),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23638,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li362),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a23637 in k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23638,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23631 in k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23632,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_23273(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23613 in k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23618,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23625,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_23618(t3,C_SCHEME_UNDEFINED);}}

/* k23623 in k23613 in k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23625,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23618(t6,t5);}

/* k23616 in k23613 in k23610 in do3329 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23618(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_23602(t2,((C_word*)t0)[2]);}

/* k23577 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23582,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23588,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22680(t3,((C_word*)t0)[2]);}

/* k23586 in k23577 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_23582(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_23582(t5,t4);}}

/* k23580 in k23577 in k23571 in k23568 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23582(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23509,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23524,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li360),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_23524(t6,t2,C_fix(0));}

/* do3309 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23524(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23524,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23534,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23543,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li358),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li359),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23556 in do3309 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23557,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23542 in do3309 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23551,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_22622(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23549 in a23542 in do3309 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23551,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23273(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23532 in do3309 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23534,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23524(t3,((C_word*)t0)[2],t2);}

/* k23507 in k23504 in k23498 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23421,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23424,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li357),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_23443(t8,t4,C_fix(0));}

/* do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23443(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23443,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23456,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23476,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li355),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23490,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li356),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23489 in do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23490,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23475 in do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23484,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_22622(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23482 in a23475 in do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23484,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23273(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23454 in do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23459,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_23459(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_23459(t5,t4);}}

/* k23457 in k23454 in do3287 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23459,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23443(t3,((C_word*)t0)[2],t2);}

/* k23422 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23427,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_23427(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23441,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t5=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23439 in k23422 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23427(t3,t2);}

/* k23425 in k23422 in k23419 in k23410 in k23404 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23892(t2,t1);}

/* k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23298,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23304,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22452(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23356,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_24042(t2,((C_word*)t0)[5]);}}

/* k23354 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23356,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_22570(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[438],((C_word*)t0)[2]);}}

/* k23357 in k23354 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23359,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[393]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li353),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23380,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li354),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a23379 in k23357 in k23354 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23380,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23391,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_23391(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k23389 in a23379 in k23357 in k23354 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23369 in k23357 in k23354 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23370,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23273(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23304,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_22440(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23320,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23350,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22363(t3,t1);}

/* k23348 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23318 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23320,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23335,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22363(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k23333 in k23318 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23339,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_22381(t2,((C_word*)t0)[2]);}

/* k23337 in k23333 in k23318 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23343,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-position");
f_22399(t2,((C_word*)t0)[2]);}

/* k23341 in k23337 in k23333 in k23318 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23325 in k23318 in k23312 in k23302 in k23296 in k23290 in k23281 in k23278 in k23275 in parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23169,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23171,a[2]=t2,a[3]=((C_word)li351),tmp=(C_word)a,a+=4,tmp));}

/* f_23171 in simple-unit-emitter in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23171,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23175,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23219,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t6,t2);}

/* k23217 */
static void C_ccall f_23219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23173 */
static void C_ccall f_23175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23175,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23178,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_23178(t9,t8);}
else{
t6=t5;
f_23178(t6,C_SCHEME_UNDEFINED);}}

/* k23176 in k23173 */
static void C_fcall f_23178(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23178,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23183,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li350),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23183(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3244 in k23176 in k23173 */
static void C_fcall f_23183(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23183,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23204,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23202 in do3244 in k23176 in k23173 */
static void C_ccall f_23204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23183(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_23161(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23161,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23163,a[2]=t2,a[3]=((C_word)li348),tmp=(C_word)a,a+=4,tmp));}

/* f_23163 in simple-unit-parser in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23163,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22763(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22984(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_22984r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22984r(t0,t1,t2);}}

static void C_ccall f_22984r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22992,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[433]+1),t2);}

/* k22990 in != in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22953(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22953,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22970,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22920(t5,t6,t3,t4);}}

/* k22968 in emit-list in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22974,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit-list");
f_22953(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22972 in k22968 in emit-list in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22974,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22920(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22920,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22927,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22832(t5,t2);}

/* k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22927,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22998,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22871,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22769(t4,t3);}}

/* k22869 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22871,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22878,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22936(2,t2,C_SCHEME_FALSE);}}

/* k22876 in k22869 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_24042(((C_word*)t0)[2],t1);}

/* k22934 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22936,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23136,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23159,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  emit-list");
f_22953(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[430],((C_word*)t0)[4]);}}}

/* k23157 in k22934 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  get-rule");
f_22570(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23134 in k22934 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23136,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[393]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23152,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t4,((C_word*)t0)[4]);}}

/* k23150 in k23134 in k22934 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22920(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22802(t2,((C_word*)t0)[2]);}

/* k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23001,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t8=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23940(t8,((C_word*)t0)[4]);}}}

/* k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23025,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23076,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23082,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23088,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k23086 in k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23088,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23097,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k23095 in k23086 in k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23097,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k23104 in k23095 in k23086 in k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23106,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k23113 in k23104 in k23095 in k23086 in k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23115,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[426],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23124,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k23122 in k23113 in k23104 in k23095 in k23086 in k23080 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[427],((C_word*)t0)[2]);}}

/* k23074 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23031,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[136]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k23035 in k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23037,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[114]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k23041 in k23035 in k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23043,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[422]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k23047 in k23041 in k23035 in k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23049,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[423]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k23053 in k23047 in k23041 in k23035 in k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23055,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[424]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k23059 in k23053 in k23047 in k23041 in k23035 in k23029 in k23023 in k22999 in k22996 in k22925 in emit in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_23061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[425]);}
else{
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22902(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22902,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22909,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_22909(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[419],t2);}}

/* k22907 in set-emit-info! in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22892(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22892,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22880(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22880,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22848,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22855,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22832(t4,t2);}

/* k22853 in token-unit-type=? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22855,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22860 in k22853 in token-unit-type=? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_24054(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22832(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22832,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22839,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22769(t3,t2);}

/* k22837 in token-unit? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22839,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22846,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22784(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22844 in k22837 in token-unit? in k22828 in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23892(((C_word*)t0)[2],t1);}

/* parse-unit-position in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22820(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22820,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22802(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22802,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22784(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22784,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22769(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22769,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[407]));}

/* make-parse-unit in k22759 in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22763(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22763,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[407],t2,t3,t4));}

/* parse-error-position in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22751(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22751,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[403]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22733(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22733,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[403]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22712(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22712,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[403],t2,t3));}

/* pattern-zero-or-more? in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22680(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22680,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22687,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22594(t3,t2);}

/* k22685 in pattern-zero-or-more? in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[108]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22622(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22622,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22630,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_22606(t4,t2);}

/* k22628 in pattern-sub in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22612(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22612,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22620,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_22606(t3,t2);}

/* k22618 in pattern-nsubs in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22606(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22606,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22594(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22594,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22591(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22591,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k22566 in k22563 in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22570(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22570,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[391],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 379  hash-table-ref/default");
t4=C_retrieve(lf[396]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[391],"*rules*"),t3);}}

/* rule-name in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22483(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22483,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k22458 in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22462(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22462,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[393],t2,t3,t4,t5,t6));}

/* null-tokens? in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22452,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22440(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22440,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k22407 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22411(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22411,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[388]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[382],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[382],"make-token"),t2);}}

/* token-position in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22399(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22399,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22381(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22381,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22363(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22363,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22342,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[383],t2,t3,t4));}

/* markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21320(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_21320r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21320r(t0,t1,t2,t3);}}

static void C_ccall f_21320r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_21330,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_21330(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[221]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22255,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[221]);}
else{
t31=t30;
f_22255(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[381]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22290,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[381]);}
else{
t32=t31;
f_22290(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22319,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_22319(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k22317 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22319,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22334,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22332 in k22317 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22326(2,t2,C_SCHEME_UNDEFINED);}}

/* k22324 in k22317 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21330(t5,t4);}

/* k22288 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22294(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22292 in k22288 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21330(t7,t6);}

/* k22253 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22257 in k22253 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21330(t7,t6);}

/* k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21330,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21333,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21333(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22155,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_22155(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22190,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[381]);}
else{
t7=t6;
f_22190(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22219,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22219(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22217 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22219,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22234,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22232 in k22217 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22226(2,t2,C_SCHEME_UNDEFINED);}}

/* k22224 in k22217 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21333(t5,t4);}

/* k22188 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22194(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22192 in k22188 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21333(t7,t6);}

/* k22153 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22159(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22157 in k22153 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21333(t7,t6);}

/* k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21333,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21336,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21336(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21336,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21341,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_21341(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[380],((C_word*)((C_word*)t0)[9])[1]);}}

/* k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21343,a[2]=((C_word*)t0)[9],a[3]=((C_word)li294),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21425,a[2]=t4,a[3]=((C_word)li297),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21535,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22048,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li314),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_22048(t10,t6,C_fix(0));}

/* do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22048(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22048,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22058,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22071,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li313),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_22071(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2896 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22071(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22071,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22081,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22099,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t9=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22124,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  modulo");
t9=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k22122 in do2896 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22124,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22106,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_22106(t7,t6);}
else{
t5=t4;
f_22106(t5,C_SCHEME_UNDEFINED);}}

/* k22104 in k22122 in do2896 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22106(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22106,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_22071(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22097 in do2896 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add-outcome");
t2=((C_word*)t0)[4];
f_21343(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k22079 in do2896 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22081,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k22056 in do2893 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22058,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22048(t3,((C_word*)t0)[2],t2);}

/* k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22004,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t5=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[376]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22010,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_22010(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_22010(t5,C_SCHEME_FALSE);}}}

/* k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_22010(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22010,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22016,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22030 in k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21538(t3,t2);}

/* a22015 in k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22016,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22024,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t5=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[379],t2);}

/* k22022 in a22015 in k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22028,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[378],((C_word*)t0)[2]);}

/* k22026 in k22022 in a22015 in k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-ci<?");
t2=*((C_word*)lf[377]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22012 in k22008 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21538(t3,t2);}

/* k22002 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_22004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21538(t3,t2);}

/* k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21538,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21881,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li311),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21881(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21881(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21881,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21892,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21905,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 378  max");
t10=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21905,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21967,a[2]=t5,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_21967(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2917 in k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21967(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21967,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k21906 in k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21908,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[375]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21924,a[2]=t3,a[3]=t8,a[4]=((C_word)li309),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_21924(t10,t6,((C_word*)t0)[2]);}

/* do2923 in k21906 in k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21924(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21924,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21949,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  decimals");
t9=C_retrieve(lf[112]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k21947 in do2923 in k21906 in k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21924(t4,((C_word*)t0)[2],t3);}

/* k21913 in k21906 in k21903 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_21881(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21890 in do2909 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21867,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li308),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a21866 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21867,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_21425(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21545,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21548,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[364];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21589,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t7=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_21548(2,t5,C_SCHEME_UNDEFINED);}}

/* k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21848,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li307),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21848(t6,t2,C_fix(0));}

/* do2936 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21848(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21848,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21858,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[368]+1));}}

/* k21856 in do2936 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21858,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21848(t3,((C_word*)t0)[2],t2);}

/* k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21786,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li306),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21786(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21786(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21786,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21796,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[373],t3);}

/* k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21799,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21805,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21819,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21817 in k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21819,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21821,a[2]=t3,a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21821(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2946 in k21817 in k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21821(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21821,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21831,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21829 in do2946 in k21817 in k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21831,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21821(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21803 in k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k21806 in k21803 in k21797 in k21794 in do2941 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21786(t3,((C_word*)t0)[2],t2);}

/* k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21601,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li304),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_21606(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21606(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21606,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21619,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t5=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21622(2,t4,lf[370]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21493,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[372],t5);}}

/* k21491 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21493,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21502,a[2]=t6,a[3]=t3,a[4]=((C_word)li303),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_21502(t8,((C_word*)t0)[2],t4);}

/* do2888 in k21491 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21502(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21502,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21513,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[371],t5);}}

/* k21522 in do2888 in k21491 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21511 in do2888 in k21491 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21502(t4,((C_word*)t0)[2],t3);}

/* k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21622,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21628,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21757,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21755 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21757,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21759,a[2]=t3,a[3]=((C_word)li302),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21759(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2962 in k21755 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21759(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21759,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21769,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21767 in do2962 in k21755 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21769,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21759(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21631,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21730,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  min");
t4=*((C_word*)lf[369]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21728 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21730,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21732,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li301),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21732(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2968 in k21728 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21732(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21732,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21742,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[368]+1));}}

/* k21740 in do2968 in k21728 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21742,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21732(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21634,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21643,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li300),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_21643(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21643(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21643,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21656,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21675,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21669,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  display");
t8=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k21667 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21675,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21681,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21679 in k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21691,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  max");
t5=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k21689 in k21679 in k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21691,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21693,a[2]=t3,a[3]=((C_word)li299),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21693(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2982 in k21689 in k21679 in k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21693(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21693,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21703,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21701 in do2982 in k21689 in k21679 in k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21703,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21693(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21682 in k21679 in k21673 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21654 in do2975 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21643(t3,((C_word*)t0)[2],t2);}

/* k21632 in k21629 in k21626 in k21620 in k21617 in do2956 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21606(t3,((C_word*)t0)[2],t2);}

/* k21599 in k21596 in k21593 in k21590 in k21587 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  newline");
t2=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k21546 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21548,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21571,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a21570 in k21546 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21571,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[363],t4);}

/* k21558 in k21546 in k21543 in k21539 in k21536 in k21533 in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 378  make-markov");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21425(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21425,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21435,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21473,a[2]=t2,a[3]=((C_word)li296),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t7=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a21472 in before? in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21473(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21473,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21433 in before? in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21463,a[2]=((C_word*)t0)[4],a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t4=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a21462 in k21433 in before? in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21463,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21436 in k21433 in before? in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_21425(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21343(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21343,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21347,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21415,a[2]=t2,a[3]=((C_word)li293),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-find");
t6=C_retrieve(lf[72]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a21414 in add-outcome in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21415,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k21345 in add-outcome in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21347,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21397,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  tail");
t7=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21365,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[362],((C_word*)t0)[3]);}}

/* k21363 in k21345 in add-outcome in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21365,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k21395 in k21345 in add-outcome in k21339 in k21334 in k21331 in k21328 in markov-analyze in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21397,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21226(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21226,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21230,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t3,t2);}

/* k21228 in next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21230,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21259,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[352]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20645(((C_word*)t0)[2],t6);}}

/* k21257 in k21228 in next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21259,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21264,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21264(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2811 in k21257 in k21228 in next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21264(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21264,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21274,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_21274(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[359],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21289,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[352]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_21289(t12,t11);}
else{
t10=t5;
f_21289(t10,C_SCHEME_UNDEFINED);}}}

/* k21287 in do2811 in k21257 in k21228 in next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21289(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21264(t3,((C_word*)t0)[2],t2);}

/* k21272 in do2811 in k21257 in k21228 in next-in-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20645(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20708(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_20708r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20708r(t0,t1,t2,t3);}}

static void C_ccall f_20708r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20712,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20970,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20979,a[2]=t9,a[3]=((C_word)li289),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[358],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20979(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20979,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20983,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_20983(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[357],t2);}}

/* k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20988,a[2]=((C_word*)t0)[4],a[3]=((C_word)li288),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20988(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_20988r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20988r(t0,t1,t2,t3);}}

static void C_ccall f_20988r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20992,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20992(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[355]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21130,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[355]);}
else{
t20=t19;
f_21130(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[356]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21165,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[356]);}
else{
t21=t20;
f_21165(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21194,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21194(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21192 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21194,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21209,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21207 in k21192 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21201(2,t2,C_SCHEME_UNDEFINED);}}

/* k21199 in k21192 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20992(t5,t4);}

/* k21163 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21167 in k21163 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20992(t7,t6);}

/* k21128 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21134(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21132 in k21128 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20992(t7,t6);}

/* k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20992,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20995,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20995(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[355]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21030,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[355]);}
else{
t6=t5;
f_21030(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[356]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21065,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[356]);}
else{
t7=t6;
f_21065(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21094,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21094(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21092 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21094,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21109,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21107 in k21092 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21101(2,t2,C_SCHEME_UNDEFINED);}}

/* k21099 in k21092 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20995(t5,t4);}

/* k21063 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21069(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21067 in k21063 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20995(t7,t6);}

/* k21028 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21034(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21032 in k21028 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_21034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20995(t7,t6);}

/* k20993 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20998,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20998(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20996 in k20993 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_21001(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_21001(t4,t3);}}

/* k20999 in k20996 in k20993 in k20990 in a20987 in k20981 in parse-graph-item in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_21001(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21001,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[352],t5,t6,t7));}

/* k20968 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20712(2,t3,t2);}

/* k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20712,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20715,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_20715(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20875,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_20875(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20910,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_20910(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20939,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_20939(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k20937 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20939,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20954,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20952 in k20937 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20946(2,t2,C_SCHEME_UNDEFINED);}}

/* k20944 in k20937 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20715(t5,t4);}

/* k20908 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20914(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20912 in k20908 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20715(t7,t6);}

/* k20873 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20879(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20877 in k20873 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20715(t7,t6);}

/* k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20715,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20718,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20718(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20775,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_20775(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20810,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_20810(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20839,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20839(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20837 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20839,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20854,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20852 in k20837 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20846(2,t2,C_SCHEME_UNDEFINED);}}

/* k20844 in k20837 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20718(t5,t4);}

/* k20808 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20814(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20812 in k20808 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20718(t7,t6);}

/* k20773 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20779(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20777 in k20773 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20718(t7,t6);}

/* k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20718,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20721,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20721(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k20722 in k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20724,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20730,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20736,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[354],"next-in-graph"),t5);}

/* a20735 in k20722 in k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20736(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20736,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20742,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20754,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t5,t3);}

/* k20752 in a20735 in k20722 in k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a20741 in a20735 in k20722 in k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20742,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20645(t1,t2);}

/* k20728 in k20722 in k20719 in k20716 in k20713 in k20710 in make-graph in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20645(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20645,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[352]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20305(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20305,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20308,a[2]=t4,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20487,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t6,t2);}

/* k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20491,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_15037(t2,((C_word*)t0)[4]);}

/* k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20491,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20493,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li283),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_20493(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20493(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20493,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_20503(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_20503(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20418,a[2]=t13,a[3]=((C_word)li282),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_20418(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2637 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20418(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20418,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20428,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_20428(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_20428(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k20426 in do2637 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20428,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[108]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20435,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_20435(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_20435(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_20435(t9,(C_word)C_eqp(t8,lf[108]));}}}}

/* k20433 in k20426 in do2637 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20418(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20503,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[350],((C_word*)t0)[6]);}
else{
t3=t2;
f_20506(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20493(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k20504 in k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20510,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_20308(t7,t2,t4,t6);}

/* k20508 in k20504 in k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20510,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20513,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_20513(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_20513(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20530,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li281),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_20530(t8,t3,((C_word*)t0)[3]);}}}

/* do2661 in k20508 in k20504 in k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20530(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20530,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20546,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k20544 in do2661 in k20508 in k20504 in k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k20511 in k20508 in k20504 in k20501 in do2652 in k20489 in k20485 in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20308(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20308,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20376,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_8025(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20320,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li279),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_20320(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2621 in select-output in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20320,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_20308(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20356,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_20356(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t9,t11);}}}

/* k20354 in do2621 in select-output in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20356,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_20320(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k20374 in select-output in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20376,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20381,a[2]=t3,a[3]=t1,a[4]=((C_word)li278),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20381(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2631 in k20374 in select-output in next-in-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_20381(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20381,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19818(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_19818r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19818r(t0,t1,t2,t3);}}

static void C_ccall f_19818r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19822,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20299,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19745,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li276),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_19745(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],((C_word*)t4)[1]);}}

/* do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19745(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19745,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19590,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_19590(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[348],((C_word*)t11)[1]);}}}

/* k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19590,2,t0,t1);}
t2=(C_word)C_i_member(lf[344],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19596,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_19596(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[346],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_19596(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 378  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[347],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19596,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19608,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19681,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li275),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_19681(t17,t13);}

/* do2500 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19681,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19624,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li274),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a19623 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19624(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19624,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19628,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_19628(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_19628(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_19628(t13,t12);}}

/* k19626 in a19623 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19628(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19628,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_19631(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_19631(t5,t4);}}

/* k19629 in k19626 in a19623 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19631,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k19609 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19620 in k19609 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19622,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_19762(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[345],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_19762(2,t10,t9);}}

/* k19760 in k19620 in k19609 in k19606 in k19594 in k19588 in do2522 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19762,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_19745(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k20297 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19822(2,t3,t2);}

/* k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19822,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19825,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19825(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20169,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_20169(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20204,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_20204(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[343]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20239,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[343]);}
else{
t24=t23;
f_20239(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20268,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20268(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20266 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20268,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20283,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20281 in k20266 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20275(2,t2,C_SCHEME_UNDEFINED);}}

/* k20273 in k20266 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19825(t5,t4);}

/* k20237 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20243(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20241 in k20237 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19825(t7,t6);}

/* k20202 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20208(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20206 in k20202 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19825(t7,t6);}

/* k20167 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20171 in k20167 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19825(t7,t6);}

/* k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19825,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19828(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20034,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_20034(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20069,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_20069(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20104,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[343]);}
else{
t8=t7;
f_20104(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20133,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20133(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20131 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20133,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20148,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20146 in k20131 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20140(2,t2,C_SCHEME_UNDEFINED);}}

/* k20138 in k20131 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19828(t5,t4);}

/* k20102 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20108,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20108(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20106 in k20102 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19828(t7,t6);}

/* k20067 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20073,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20073(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20071 in k20067 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19828(t7,t6);}

/* k20032 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20038(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20036 in k20032 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19828(t7,t6);}

/* k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19828,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19831,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19831(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19899,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_19899(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19934,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_19934(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19969,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[343]);}
else{
t8=t7;
f_19969(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19998,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19998(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19996 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19998,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20013,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20011 in k19996 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20005(2,t2,C_SCHEME_UNDEFINED);}}

/* k20003 in k19996 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_20005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19831(t5,t4);}

/* k19967 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19973(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19971 in k19967 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19831(t7,t6);}

/* k19932 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19938(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19936 in k19932 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19831(t7,t6);}

/* k19897 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19903(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19901 in k19897 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19831(t7,t6);}

/* k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19831,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19834,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19834(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19837,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19843,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19870,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[342],"next-in-markov"),t4);}

/* a19869 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19870,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19878,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k19876 in a19869 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19841 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19846(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19856,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 378  make-list");
t7=C_retrieve(lf[69]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[108]);}}

/* k19854 in k19841 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19846(t3,t2);}

/* k19844 in k19841 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19846(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19846,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19847 in k19844 in k19841 in k19835 in k19832 in k19829 in k19826 in k19823 in k19820 in make-markov in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19385(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19385,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19389,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t3,t2);}

/* k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19392,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}

/* k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19395,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14803(t2,((C_word*)t0)[2]);}

/* k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19395,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t4,t1,C_fix(4));}

/* k19562 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19564,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19401(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14653(t2,((C_word*)t0)[2]);}}

/* k19575 in k19562 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14671(t2,((C_word*)t0)[2]);}

/* k19579 in k19575 in k19562 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_19273(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_19401(2,t2,C_SCHEME_UNDEFINED);}}

/* k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_19407(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19538,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19557,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18423(t4,((C_word*)t0)[4]);}}

/* k19555 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19557,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_18414(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k19536 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18423(t2,((C_word*)t0)[2]);}

/* k19543 in k19536 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19549,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_18387(t2,((C_word*)t0)[2]);}

/* k19547 in k19543 in k19536 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19407(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19407,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18333(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19413,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_15037(t2,((C_word*)t0)[2]);}}

/* k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19413,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19417,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19455,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19497,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_19417(t7,t2,t1);}

/* k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19497,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li271),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_19499(t5,((C_word*)t0)[2],t1);}

/* do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19499(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19499,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19518,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19521,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18405(t4,t2);}

/* k19519 in do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19521,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18423(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_19518(t2,C_SCHEME_FALSE);}}

/* k19526 in k19519 in do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19532,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18405(t2,((C_word*)t0)[2]);}

/* k19530 in k19526 in k19519 in do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19518(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k19516 in do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19518(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19518,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19514,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_19417(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19512 in k19516 in do2474 in k19495 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_19499(t2,((C_word*)t0)[2],t1);}

/* k19453 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_19458(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19472,a[2]=t5,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19472(t7,t2,((C_word*)t0)[2]);}}

/* do2478 in k19453 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19472(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19472,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19482,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_18414(t3,t4,C_fix(0));}}

/* k19480 in do2478 in k19453 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19472(t3,((C_word*)t0)[2],t2);}

/* k19456 in k19453 in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18333(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19417(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19417,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19425,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_8025(t4,t3);}

/* k19423 in pick in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19425,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19427,a[2]=t3,a[3]=((C_word)li268),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19427(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2469 in k19423 in pick in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19427(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19427,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19448,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_18351(t4,t5);}

/* k19446 in do2469 in k19423 in pick in k19411 in k19405 in k19399 in k19393 in k19390 in k19387 in next-in-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_19427(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19273(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19273,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19383,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t2);}

/* k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19383,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[340];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19280,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19342,a[2]=t7,a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_19342(t9,t5,t2);}

/* do2441 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19342(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19342,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19371,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19375,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_18369(t4,t5);}}

/* k19373 in do2441 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(((C_word*)t0)[2],t1);}

/* k19369 in do2441 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19371,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_18342(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k19354 in k19369 in do2441 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19342(t3,((C_word*)t0)[2],t2);}

/* k19278 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19280,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19288,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li265),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19288(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2447 in k19278 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_19288(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19288,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19321,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19333,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_18351(t8,t9);}}

/* k19331 in do2447 in k19278 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19333,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 378  floor");
t4=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k19319 in do2447 in k19278 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19321,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_18342(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k19303 in k19319 in do2447 in k19278 in k19381 in recalc-weightings in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19288(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18506(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_18506r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18506r(t0,t1,t2,t3);}}

static void C_ccall f_18506r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18510,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18823,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18823(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18823,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18830,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_18830(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_18830(t9,t8);}}

/* k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18830,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18833,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18833(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[339]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19136,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[339]);}
else{
t22=t21;
f_19136(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[225]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19171,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[225]);}
else{
t23=t22;
f_19171(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[226]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19206,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[226]);}
else{
t24=t23;
f_19206(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19235,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19235(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19233 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19235,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19250,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19248 in k19233 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19242(2,t2,C_SCHEME_UNDEFINED);}}

/* k19240 in k19233 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18833(t5,t4);}

/* k19204 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19208 in k19204 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18833(t7,t6);}

/* k19169 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19173 in k19169 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18833(t7,t6);}

/* k19134 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19140,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19140(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19138 in k19134 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18833(t7,t6);}

/* k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18833(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18833,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18836(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[339]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19001,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[339]);}
else{
t6=t5;
f_19001(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19036,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[225]);}
else{
t7=t6;
f_19036(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19071,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[226]);}
else{
t8=t7;
f_19071(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19100,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19100(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19098 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19100,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19115,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19113 in k19098 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19107(2,t2,C_SCHEME_UNDEFINED);}}

/* k19105 in k19098 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18836(t5,t4);}

/* k19069 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19073 in k19069 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18836(t7,t6);}

/* k19034 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19038 in k19034 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18836(t7,t6);}

/* k18999 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19003 in k18999 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_19005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18836(t7,t6);}

/* k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18836,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18839,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18839(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[339]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18866,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[339]);}
else{
t6=t5;
f_18866(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18901,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[225]);}
else{
t7=t6;
f_18901(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18936,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[226]);}
else{
t8=t7;
f_18936(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18965,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18965(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18963 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18965,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18980,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18978 in k18963 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18972(2,t2,C_SCHEME_UNDEFINED);}}

/* k18970 in k18963 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18839(t5,t4);}

/* k18934 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18940(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18938 in k18934 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18839(t7,t6);}

/* k18899 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18905(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18903 in k18899 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18839(t7,t6);}

/* k18864 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18868 in k18864 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18839(t7,t6);}

/* k18837 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18842,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18842(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k18840 in k18837 in k18834 in k18831 in k18828 in %make-random-item in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18842,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[328],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18513,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18519,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18787,a[2]=t8,a[3]=t6,a[4]=((C_word)li262),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18787(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18787,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18791,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_18387(t3,t2);}

/* k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18405(t2,((C_word*)t0)[2]);}

/* k18792 in k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_18369(t2,((C_word*)t0)[2]);}

/* k18795 in k18792 in k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18333(t2,((C_word*)t0)[2]);}

/* k18798 in k18795 in k18792 in k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18813,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t1);}

/* k18811 in k18798 in k18795 in k18792 in k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18813,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18803(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18803(t2,C_SCHEME_UNDEFINED);}}

/* k18801 in k18798 in k18795 in k18792 in k18789 in a18786 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18519,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18526,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_18526(t8,t7);}
else{
t6=t5;
f_18526(t6,C_SCHEME_UNDEFINED);}}

/* k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18526(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18526,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_18529,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18529(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18693,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_18693(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18728,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_18728(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18757,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_18757(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18755 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18757,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18772,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18770 in k18755 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18764(2,t2,C_SCHEME_UNDEFINED);}}

/* k18762 in k18755 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18529(t5,t4);}

/* k18726 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18730 in k18726 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18529(t7,t6);}

/* k18691 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18695 in k18691 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18529(t7,t6);}

/* k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18529(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18529,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18532,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18532(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18593,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_18593(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18628,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_18628(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18657,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18657(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18655 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18657,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18672,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18670 in k18655 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18664(2,t2,C_SCHEME_UNDEFINED);}}

/* k18662 in k18655 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18532(t5,t4);}

/* k18626 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18630 in k18626 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18532(t7,t6);}

/* k18591 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18595 in k18591 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18532(t7,t6);}

/* k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18532,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18535,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18535(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18538,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18550,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[338],"next-in-weighting"),t4);}

/* a18549 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18550(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18550,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18556,a[2]=t2,a[3]=((C_word)li260),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18572,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t5,t3);}

/* k18570 in a18549 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18555 in a18549 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18556(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18556,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18564,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18333(t3,t2);}

/* k18562 in a18555 in a18549 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18536 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_19273(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_18541(2,t3,C_SCHEME_UNDEFINED);}}

/* k18539 in k18536 in k18533 in k18530 in k18527 in k18524 in k18517 in k18511 in k18508 in make-weighting in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18423(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18423,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18414(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18414,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[328]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18405(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18405,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18387(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18387,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18369(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18369,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18351(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18351,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18342(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18342,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[328]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18333(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18333,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18111(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18111,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18114,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18161,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t2);}

/* k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18164,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18187,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18306,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_15037(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_18164(t4,C_SCHEME_UNDEFINED);}}

/* k18304 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(((C_word*)t0)[2],t1);}

/* k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18194,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18241,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14839(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18268,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14839(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18287,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14839(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18302,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14839(t3,((C_word*)t0)[2]);}}

/* k18300 in k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18302,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_18114(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18285 in k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18287,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_18114(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18266 in k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18268,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[6];
f_18114(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18239 in k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18241,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 378  rotate-items");
t4=((C_word*)t0)[7];
f_18114(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18192 in k18185 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18164(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k18162 in k18159 in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_18114,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18120,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li249),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_18120(t10,t1,t3);}

/* do2209 in rotate-items in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_18120(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18120,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18136,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t7=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k18134 in do2209 in rotate-items in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18139,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  list-set!");
t4=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k18137 in k18134 in do2209 in rotate-items in next-in-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18139,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18120(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17637(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17637r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17637r(t0,t1,t2,t3);}}

static void C_ccall f_17637r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17641,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18101,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17641(t8,t7);}}

/* k18099 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17641(t3,t2);}

/* k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17641(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17641,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17644,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17644(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17974,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_17974(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18009,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_18009(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[326]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18044,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[326]);}
else{
t24=t23;
f_18044(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18073,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_18073(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18071 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18073,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18088,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18086 in k18071 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18080(2,t2,C_SCHEME_UNDEFINED);}}

/* k18078 in k18071 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17644(t5,t4);}

/* k18042 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18048(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18046 in k18042 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17644(t7,t6);}

/* k18007 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18013(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18011 in k18007 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_18013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17644(t7,t6);}

/* k17972 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17978(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17976 in k17972 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17644(t7,t6);}

/* k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17644(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17644,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17647(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17839,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17839(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17874,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17874(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17909,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_17909(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17938,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17938(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17936 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17938,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17945,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17953,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17951 in k17936 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17945(2,t2,C_SCHEME_UNDEFINED);}}

/* k17943 in k17936 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17647(t5,t4);}

/* k17907 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17913(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17911 in k17907 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17647(t7,t6);}

/* k17872 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17878(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17876 in k17872 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17647(t7,t6);}

/* k17837 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17843(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17841 in k17837 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17647(t7,t6);}

/* k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17647,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17650,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17650(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17704,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17704(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17739,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17739(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17774,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_17774(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17803,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17803(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17801 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17803,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17818,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17816 in k17801 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17810(2,t2,C_SCHEME_UNDEFINED);}}

/* k17808 in k17801 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17650(t5,t4);}

/* k17772 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17778(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17776 in k17772 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17650(t7,t6);}

/* k17737 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17743(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17741 in k17737 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17650(t7,t6);}

/* k17702 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17706 in k17702 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17650(t7,t6);}

/* k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17650,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17653,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17653(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k17654 in k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17656,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17662,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17671,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[325],"next-in-rotation"),t5);}

/* a17670 in k17654 in k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17671,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17683,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k17681 in a17670 in k17654 in k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17660 in k17654 in k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17663 in k17660 in k17654 in k17651 in k17648 in k17645 in k17642 in k17639 in make-rotation in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17565,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t3,t2);}

/* k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17568,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17584,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14839(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_17568(2,t4,C_SCHEME_UNDEFINED);}}

/* k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17584,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17594,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_8018(t3,t1);}

/* k17592 in k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17594,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17596,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li245),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_17596(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2109 in k17592 in k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17596(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17596,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17613,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  list-set!");
t10=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k17611 in do2109 in k17592 in k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17616,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t3=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k17614 in k17611 in do2109 in k17592 in k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17616,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17627,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_8018(t3,((C_word*)t0)[2]);}

/* k17625 in k17614 in k17611 in do2109 in k17592 in k17582 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_17596(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k17566 in k17563 in next-in-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17298(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17298r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17298r(t0,t1,t2,t3);}}

static void C_ccall f_17298r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17302,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17551,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17302(t8,t7);}}

/* k17549 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17302(t3,t2);}

/* k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17302(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17302,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17305,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17305(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17459,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_17459(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17494,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_17494(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17523,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17523(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17521 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17523,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17538,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17536 in k17521 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17530(2,t2,C_SCHEME_UNDEFINED);}}

/* k17528 in k17521 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17305(t5,t4);}

/* k17492 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17498(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17496 in k17492 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17305(t7,t6);}

/* k17457 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17461 in k17457 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17305(t7,t6);}

/* k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17305(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17305,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17308,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17308(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17359,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17359(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17394,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17394(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17423,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17423(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17421 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17423,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17430,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17438,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17436 in k17421 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17430(2,t2,C_SCHEME_UNDEFINED);}}

/* k17428 in k17421 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17308(t5,t4);}

/* k17392 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17398(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17396 in k17392 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17308(t7,t6);}

/* k17357 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17363,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17363(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17361 in k17357 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17308(t7,t6);}

/* k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17308,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17311,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17311(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17309 in k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k17312 in k17309 in k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17314,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17320,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17326,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[323],"next-in-heap"),t5);}

/* a17325 in k17312 in k17309 in k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17326,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17338,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k17336 in a17325 in k17312 in k17309 in k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17318 in k17312 in k17309 in k17306 in k17303 in k17300 in make-heap in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17262,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17266,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t3,t2);}

/* k17264 in next-in-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17266,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17275,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17282,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17288,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14812(t4,((C_word*)t0)[2],t5);}}

/* k17286 in k17264 in next-in-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k17280 in k17264 in next-in-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[2],t1,C_fix(1));}

/* k17273 in k17264 in next-in-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17015(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_17015r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17015r(t0,t1,t2,t3);}}

static void C_ccall f_17015r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17019,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_17019(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17019(t8,t7);}}

/* k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17019,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17022,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17022(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17168,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_17168(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17203,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_17203(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17232,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17232(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17230 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17232,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17247,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17245 in k17230 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17239(2,t2,C_SCHEME_UNDEFINED);}}

/* k17237 in k17230 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17022(t5,t4);}

/* k17201 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17207(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17205 in k17201 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17022(t7,t6);}

/* k17166 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17172(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17170 in k17166 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17022(t7,t6);}

/* k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17022,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17025,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17025(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17068,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17068(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17103,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17103(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17132,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17132(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17130 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17132,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17147,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17145 in k17130 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17139(2,t2,C_SCHEME_UNDEFINED);}}

/* k17137 in k17130 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17025(t5,t4);}

/* k17101 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17107(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17105 in k17101 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17025(t7,t6);}

/* k17066 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17072(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17070 in k17066 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17025(t7,t6);}

/* k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_17025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17025,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17028,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17028(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17026 in k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k17029 in k17026 in k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17031,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17037,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17039,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[321],"next-in-line"),t4);}

/* a17038 in k17029 in k17026 in k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17039,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17047,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k17045 in a17038 in k17029 in k17026 in k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17035 in k17029 in k17026 in k17023 in k17020 in k17017 in make-line in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16800(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16800,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16804,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_15037(t3,t2);}

/* k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16804,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16810,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16834,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[313]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17013,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_16241(t8,t1);}}

/* k17011 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_17013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17013,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_16250(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_16810(2,t2,C_SCHEME_UNDEFINED);}}

/* k16964 in k17011 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16966,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_16978(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_16978(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_16978(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_16978(t7,C_SCHEME_FALSE);}}}

/* k16976 in k16964 in k17011 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16978,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16810(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16810(2,t4,t3);}}

/* k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_16241(t2,((C_word*)t0)[2]);}

/* k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16837,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t7=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_16250(t2,((C_word*)t0)[2],C_fix(1));}

/* k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16934,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_16934(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_16934(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_16934(t5,C_SCHEME_FALSE);}}}

/* k16932 in k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16849(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_16849(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16849(t3,t2);}}

/* k16847 in k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16849,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16928,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14803(t3,((C_word*)t0)[2]);}

/* k16926 in k16847 in k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(((C_word*)t0)[2],t1,C_fix(2));}

/* k16853 in k16847 in k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16855,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16810(2,t2,C_SCHEME_UNDEFINED);}}

/* k16856 in k16853 in k16847 in k16844 in k16841 in k16835 in k16832 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16858,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[318]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[319]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],t1,t2);}}}}

/* k16808 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[313]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t9=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k16811 in k16808 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t2,((C_word*)t0)[2]);}

/* k16818 in k16811 in k16808 in k16802 in next-in-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16330(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16330r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16330r(t0,t1,t2,t3);}}

static void C_ccall f_16330r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16334,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16334(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16334(t8,t7);}}

/* k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16334(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16334,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16337,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16337(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16671,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_16671(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16706,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_16706(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[317]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16741,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[317]);}
else{
t24=t23;
f_16741(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16770,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_16770(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16768 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16770,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16785,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16783 in k16768 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16777(2,t2,C_SCHEME_UNDEFINED);}}

/* k16775 in k16768 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16337(t5,t4);}

/* k16739 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16745(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16743 in k16739 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16337(t7,t6);}

/* k16704 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16708 in k16704 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16337(t7,t6);}

/* k16669 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16673 in k16669 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16337(t7,t6);}

/* k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16337(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16337,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16340,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16340(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16536,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_16536(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16571,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16571(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[317]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16606,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[317]);}
else{
t8=t7;
f_16606(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16635,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16635(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16633 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16635,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16650,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16648 in k16633 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16642(2,t2,C_SCHEME_UNDEFINED);}}

/* k16640 in k16633 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16340(t5,t4);}

/* k16604 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16610(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16608 in k16604 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16340(t7,t6);}

/* k16569 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16575(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16573 in k16569 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16340(t7,t6);}

/* k16534 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16540(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16538 in k16534 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16340(t7,t6);}

/* k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16340(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16340,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16343,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16343(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16401,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_16401(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16436,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16436(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[317]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16471,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[317]);}
else{
t8=t7;
f_16471(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16500,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16500(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16498 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16500,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16515,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16513 in k16498 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16507(2,t2,C_SCHEME_UNDEFINED);}}

/* k16505 in k16498 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16343(t5,t4);}

/* k16469 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16473 in k16469 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16343(t7,t6);}

/* k16434 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16440,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16440(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16438 in k16434 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16343(t7,t6);}

/* k16399 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16405(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16403 in k16399 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16343(t7,t6);}

/* k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16343,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16346,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16346(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k16347 in k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16349,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16372,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[316],"next-in-palindrome"),t5);}

/* a16371 in k16347 in k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16372,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16380,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k16378 in a16371 in k16347 in k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16353 in k16347 in k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16358,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[313],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_15028(t2,((C_word*)t0)[4],t5);}

/* k16356 in k16353 in k16347 in k16344 in k16341 in k16338 in k16335 in k16332 in make-palindrome in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16250(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16250,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16241(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16241,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16169(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16169,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16173,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t3,t2);}

/* k16171 in next-in-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16176,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_16176(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_16176(t4,C_SCHEME_UNDEFINED);}}

/* k16174 in k16171 in next-in-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_16176(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15914(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15914r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15914r(t0,t1,t2,t3);}}

static void C_ccall f_15914r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15918,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15918(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15918(t8,t7);}}

/* k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15918,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15921,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15921(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16075,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_16075(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16110,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_16110(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16139,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16139(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16137 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16139,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16154,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16152 in k16137 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16146(2,t2,C_SCHEME_UNDEFINED);}}

/* k16144 in k16137 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15921(t5,t4);}

/* k16108 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16112 in k16108 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15921(t7,t6);}

/* k16073 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16077 in k16073 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15921(t7,t6);}

/* k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15924,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15924(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15975,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_15975(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16010,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16010(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16039,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16039(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16037 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16039,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16054,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16052 in k16037 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16046(2,t2,C_SCHEME_UNDEFINED);}}

/* k16044 in k16037 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15924(t5,t4);}

/* k16008 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16012 in k16008 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_16014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15924(t7,t6);}

/* k15973 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15977 in k15973 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15924(t7,t6);}

/* k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15924,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15927,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15927(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15925 in k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_15092(t2);}

/* k15928 in k15925 in k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15930,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15936,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15942,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_15102(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[309],"next-in-cycle"),t5);}

/* a15941 in k15928 in k15925 in k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15942,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15954,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14821(t4,t3);}

/* k15952 in a15941 in k15928 in k15925 in k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15934 in k15928 in k15925 in k15922 in k15919 in k15916 in make-cycle in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15799(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15799,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15912,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t2);}

/* k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15912,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15809,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15812,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15897,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14689(t7,t1);}

/* k15895 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15897,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15908,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14689(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_15812(2,t2,C_SCHEME_UNDEFINED);}}

/* k15906 in k15895 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(((C_word*)t0)[2],t1);}

/* k15902 in k15895 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15894,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14671(t2,((C_word*)t0)[3]);}

/* k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15894,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15820,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[262]);
t7=t4;
f_15820(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 378  period-length");
f_14671(t4,((C_word*)t0)[3]);}}

/* k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15820,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15823,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15829,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15884,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14803(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_15829(2,t5,C_SCHEME_FALSE);}}

/* k15882 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(((C_word*)t0)[2],t1,C_fix(8));}

/* k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15829,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15832,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15848,a[2]=t3,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15753(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15823(t2,C_SCHEME_UNDEFINED);}}

/* a15847 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15848(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15848,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15877,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15799(t3,t2);}

/* k15875 in a15847 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15877,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15856 in k15875 in a15847 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15873,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14725(t3,t1);}

/* k15871 in k15856 in k15875 in a15847 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15873,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14716(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15859 in k15856 in k15875 in a15847 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15861,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k15830 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15832,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  max");
t4=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_15823(t2,C_SCHEME_UNDEFINED);}}

/* k15840 in k15830 in k15827 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15823(t3,t2);}

/* k15821 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15823,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15824 in k15821 in k15818 in k15892 in k15810 in k15807 in k15910 in reset-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15753(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15753,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[271]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15744(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15744,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[271]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15443(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15443,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15450,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t2);}

/* k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15450,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 378  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  promise?");
t3=C_retrieve(lf[306]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k15737 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  force");
t2=C_retrieve(lf[305]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15453,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15456,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15724,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14653(t5,t1);}

/* k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15724,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15716,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14743(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15456(2,t2,C_SCHEME_UNDEFINED);}}

/* k15714 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15716,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15708,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14884(t5,((C_word*)t0)[4],lf[300]);}
else{
t5=((C_word*)t0)[2];
f_15679(t5,C_SCHEME_UNDEFINED);}}

/* k15706 in k15714 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14902(t2,((C_word*)t0)[2],lf[298]);}

/* k15709 in k15706 in k15714 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[300]);
t3=((C_word*)t0)[2];
f_15679(t3,t2);}

/* k15677 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15679(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15679,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_15685(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15702,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15799(t4,((C_word*)t0)[2]);}}

/* k15700 in k15677 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15685(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k15683 in k15677 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15685,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[286]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14884(t3,((C_word*)t0)[2],lf[286]);}
else{
t2=((C_word*)t0)[3];
f_15456(2,t2,C_SCHEME_UNDEFINED);}}

/* k15687 in k15683 in k15677 in k15722 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14902(((C_word*)t0)[3],((C_word*)t0)[2],lf[298]);}

/* k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15456,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14803(t2,((C_word*)t0)[3]);}}

/* k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15462,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15468,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15554,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t10,t1,C_fix(1));}

/* k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15554,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15557,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15570,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15744(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15577,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15666,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t3,((C_word*)t0)[2],C_fix(8));}}

/* k15664 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15666,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15673,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14671(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15577(t2,C_SCHEME_FALSE);}}

/* k15671 in k15664 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15577(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15577(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15577,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li226),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15579(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15579(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15579,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15628,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li225),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_15628(t9,t5);}}

/* do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15628(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15628,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14857(t2,((C_word*)t0)[3]);}

/* k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15663,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[286]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15638,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15645,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15652,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15744(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15744(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15797,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t2,t1);}

/* k15795 in k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15797,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14875(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15645(2,t2,((C_word*)t0)[2]);}}

/* k15770 in k15795 in k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15793,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14725(t2,t1);}

/* k15791 in k15770 in k15795 in k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15793,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15781,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15789,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14725(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_15645(2,t2,((C_word*)t0)[2]);}}

/* k15787 in k15791 in k15770 in k15795 in k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15789,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14716(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15779 in k15791 in k15770 in k15795 in k15650 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15645(2,t2,lf[286]);}

/* k15643 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14848(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15636 in k15661 in do1761 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_15628(t2,((C_word*)t0)[2]);}

/* k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15626,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14857(t3,((C_word*)t0)[3]);}

/* k15624 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(((C_word*)t0)[2],t1);}

/* k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15590,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15609,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15622,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14857(t5,((C_word*)t0)[3]);}

/* k15620 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(((C_word*)t0)[2],t1);}

/* k15607 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15609,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15617,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14857(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[298]);
t3=((C_word*)t0)[3];
f_15593(t3,t2);}}

/* k15615 in k15607 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14911(((C_word*)t0)[2],t1);}

/* k15611 in k15607 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15593(t3,t2);}

/* k15591 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15596,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[286]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14848(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_15596(2,t5,t4);}}

/* k15594 in k15591 in k15588 in k15584 in do1757 in k15575 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15579(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15568 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14848(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15555 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15566,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14857(t3,((C_word*)t0)[2]);}

/* k15564 in k15555 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(((C_word*)t0)[2],t1);}

/* k15559 in k15555 in k15552 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[298]);
t4=((C_word*)t0)[2];
f_15468(2,t4,t3);}

/* k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[298]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15513,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14653(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15548,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t5,((C_word*)t0)[2],C_fix(64));}}

/* k15546 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14848(((C_word*)t0)[3],((C_word*)t0)[2],lf[286]);}
else{
t2=((C_word*)t0)[3];
f_15528(2,t2,C_SCHEME_UNDEFINED);}}

/* k15526 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t2,((C_word*)t0)[2],C_fix(16));}

/* k15532 in k15526 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15534,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14653(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15471(2,t2,C_SCHEME_UNDEFINED);}}

/* k15543 in k15532 in k15526 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15545,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15523 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15525,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14644(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15511 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14848(t2,((C_word*)t0)[2],lf[286]);}

/* k15514 in k15511 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_15471(2,t3,t2);}

/* k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15507,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14653(t3,((C_word*)t0)[2]);}

/* k15505 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15507,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[298]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15502,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14743(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_15474(2,t3,t2);}}

/* k15500 in k15505 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15502,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k15472 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15477,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15487,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_15477(t3,C_SCHEME_UNDEFINED);}}

/* k15485 in k15472 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15477(t3,t2);}

/* k15475 in k15472 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15477(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15477,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14902(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15478 in k15475 in k15472 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15483,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14884(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15481 in k15478 in k15475 in k15472 in k15469 in k15466 in k15460 in k15454 in k15451 in k15448 in next-1 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15320(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_15320r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_15320r(t0,t1,t2,t3);}}

static void C_ccall f_15320r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15341,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li222),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_15341(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15379,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t1,t2);}}

/* k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15379,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k15387 in k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15389,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15391,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li223),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15391(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1733 in k15387 in k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15391(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15391,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[300]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15410,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15420,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  eop?");
t13=C_retrieve(lf[297]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k15418 in do1733 in k15387 in k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15420,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_15410(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t2,((C_word*)t0)[2]);}}

/* k15423 in k15418 in do1733 in k15387 in k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15410(t3,t2);}

/* k15408 in do1733 in k15387 in k15377 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15410(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_15391(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1726 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15341(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15341,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15373,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15443(t4,((C_word*)t0)[2]);}}

/* k15371 in do1726 in next in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15373,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_15341(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15301,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15308,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t2);}

/* k15306 in eod? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15308,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15315,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t3=C_retrieve2(lf[280],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[300]));}}

/* k15313 in k15306 in eod? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eod?");
t2=C_retrieve(lf[299]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15282,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15289,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t2);}

/* k15287 in eop? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15289,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15296,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14911(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[298]));}}

/* k15294 in k15287 in eop? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eop?");
t2=C_retrieve(lf[297]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15102(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15102,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15106,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14812(t12,t2,t3);}

/* k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15112,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15115,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15118,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15272,a[2]=t3,a[3]=((C_word)li218),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15753(t4,t5,((C_word*)t0)[7]);}

/* a15271 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15272(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15272,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15279,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14788(t3,t2);}

/* k15277 in a15271 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15121,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_15121(t5,t4);}
else{
t3=t2;
f_15121(t3,C_SCHEME_UNDEFINED);}}

/* k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15121,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[287]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15127(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[294]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15127(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[295],t4);}}}

/* k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15127,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[288]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15133(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[292]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15133(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[293],t4);}}}

/* k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15196,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15194 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15196,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[290]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15136(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7814(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15208 in k15194 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15210,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[291]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15136(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15136(t4,t3);}}

/* k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15136,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t8=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k15137 in k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15139,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15145,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_15145(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_15145(t8,t7);}}

/* k15143 in k15137 in k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15148,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15158,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  make-period");
f_14632(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  make-period");
f_14632(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k15156 in k15143 in k15137 in k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k15146 in k15143 in k15137 in k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15151,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k15149 in k15146 in k15143 in k15137 in k15134 in k15131 in k15125 in k15119 in k15116 in k15113 in k15110 in k15107 in k15104 in initialize-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_15151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15092(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15092,NULL,1,t1);}
t2=lf[286];
t3=lf[286];
t4=lf[286];
t5=lf[287];
t6=lf[288];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[271],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15037(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15037,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_15028(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15028,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14911(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14911,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14902(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14902,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_14893 in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14893(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14893,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14884(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14884,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14875(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14875,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14857(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14857,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14848,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14839(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14839,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14821(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14821,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14812(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14812,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14803(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14803,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14788(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14788,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[271]));}

/* period-reps in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14743(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14743,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14725(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14725,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14716(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14716,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14689(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14689,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14671(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14671,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14653(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14653,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14644(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14644,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14632(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14632,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[262],t2,t3,t4,t5,t6,t7));}

/* import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14506(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14506,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14512,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  with-input-from-file");
t4=C_retrieve(lf[260]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14516,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  current-input-port");
t3=*((C_word*)lf[259]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14517,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14534,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14517(t5,t1);}

/* k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14534,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[257]))){
t4=t3;
f_14537(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[258],((C_word*)t0)[4]);}}

/* k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14517(t2,((C_word*)t0)[4]);}

/* k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14541,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[255]))){
t4=t3;
f_14544(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[256],((C_word*)t0)[4]);}}

/* k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14547,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14596,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li192),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14596(t6,t2);}

/* do1481 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14596,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[254]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14607,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14517(t2,((C_word*)t0)[2]);}}

/* k14605 in do1481 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14596(t3,((C_word*)t0)[2]);}

/* k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14547,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14557,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t6=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14557,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li191),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14559(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14559(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14559,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14403,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  open-input-string");
t8=C_retrieve(lf[253]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14404,a[2]=((C_word*)t0)[3],a[3]=((C_word)li189),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14427,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t10=t2;
f_14404(t10,t9,t1);}

/* k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14427,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t4=((C_word*)t0)[3];
f_14404(t4,t3,((C_word*)t0)[2]);}

/* k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14431,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14434,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14457(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1460 in k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14457(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14457,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t8=((C_word*)t0)[3];
f_14404(t8,t7,((C_word*)t0)[2]);}}

/* k14465 in do1460 in k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t3=((C_word*)t0)[3];
f_14404(t3,t2,((C_word*)t0)[2]);}

/* k14502 in k14465 in do1460 in k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14504,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14496,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t7=((C_word*)t0)[3];
f_14404(t7,t6,((C_word*)t0)[2]);}

/* k14494 in k14502 in k14465 in do1460 in k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14496,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14457(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14432 in k14429 in k14425 in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_14573(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11169(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14404(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14404,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14408,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  read");
t4=*((C_word*)lf[252]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14406 in rdat in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14411,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[251],((C_word*)t0)[2]);}
else{
t3=t2;
f_14411(2,t3,C_SCHEME_UNDEFINED);}}

/* k14409 in k14406 in rdat in k14401 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14571 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14573,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_14576(t8,t7);}
else{
t4=t3;
f_14576(t4,C_SCHEME_UNDEFINED);}}

/* k14574 in k14571 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14583,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t3=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14581 in k14574 in k14571 in do1491 in k14555 in k14545 in k14542 in k14539 in k14535 in k14532 in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_14559(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14517(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14517,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14521,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t4=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14519 in rhdr in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14524,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[249],((C_word*)t0)[2]);}
else{
t3=t2;
f_14524(2,t3,C_SCHEME_UNDEFINED);}}

/* k14522 in k14519 in rhdr in k14514 in a14511 in import-spear-frames in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_13993r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_13993r(t0,t1,t2,t3,t4);}}

static void C_ccall f_13993r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13997,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 377  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[246]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14366,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14372,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14372(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14372(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_13997(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14370 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14372(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14366(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[247],t2);}}

/* k14364 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13997(2,t3,t2);}

/* k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14350,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14348 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14350,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14000(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[245],((C_word*)((C_word*)t0)[3])[1]);}}

/* k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14332,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14336,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14334 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14003(t3,t2);}

/* k14330 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14003(t3,t2);}

/* k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14321,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14325,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14323 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14006(t3,t2);}

/* k14319 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14006(t3,t2);}

/* k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_14009(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_14009(t4,t3);}}

/* k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14009,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14012,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14023,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li179),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14023(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14053,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li180),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14053(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14073,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14309,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  every?");
t5=C_retrieve(lf[73]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[244]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14309,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_14073(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14293,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minamp");
t12=C_retrieve(lf[214]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14301,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t12=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14299 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14301,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14303 in k14299 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14167(t3,t2);}

/* k14291 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14293,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxamp");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14295 in k14291 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14167(t3,t2);}

/* k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14170,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14274,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minamp");
t4=C_retrieve(lf[214]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14282,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t4=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14280 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14282,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14284 in k14280 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14170(t3,t2);}

/* k14272 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14274,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14278,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxamp");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14276 in k14272 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14170(t3,t2);}

/* k14168 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14170,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k14172 in k14168 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14174,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li186),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_14179(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1423 in k14172 in k14168 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14179(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14179,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14189,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14189(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14189(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14187 in do1423 in k14172 in k14168 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14189,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14192,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[243],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14192(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14192(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14192(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14190 in k14187 in do1423 in k14172 in k14168 in k14165 in k14307 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14179(t3,((C_word*)t0)[2],t2);}

/* k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14076,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14098,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li184),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14098(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14136,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li185),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14136(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1437 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14136(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14136,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14157,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  interp");
t5=C_retrieve(lf[128]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14155 in do1437 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_14136(t4,((C_word*)t0)[2],t3);}

/* do1432 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14098(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14098,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14127,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  interp");
t6=C_retrieve(lf[128]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14125 in do1432 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14127,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14098(t5,((C_word*)t0)[2],t4);}

/* k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14093,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14091 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[242]+1),t1);}

/* k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14089,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14012(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13456,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13531,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13539,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t6=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k13537 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13543,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13541 in k13537 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  map");
t2=*((C_word*)lf[241]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a13530 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13531,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13456,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13517,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort!");
t6=C_retrieve(lf[240]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a13516 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13517,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13458 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13460,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13468,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li181),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13468(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1308 in k13458 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13468(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13468,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13478,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11217(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13501,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[228]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k13499 in do1308 in k13458 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13468(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13476 in do1308 in k13458 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11235(t2,((C_word*)t0)[3],t3);}

/* k13479 in k13476 in do1308 in k13458 in k13454 in k14087 in k14074 in k14071 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1410 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14053(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14053,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1405 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_14023(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14023,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k14010 in k14007 in k14004 in k14001 in k13998 in k13995 in spectrum-rescale! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_14012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13936(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13936,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13944,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k13942 in spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13948,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t3=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k13946 in k13942 in spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13952,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t3=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k13950 in k13946 in k13942 in spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13952,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13958,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li177),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_13958(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1386 in k13950 in k13946 in k13942 in spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13958(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13958,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13968,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11217(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k13966 in do1386 in k13950 in k13946 in k13942 in spectrum-flip! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13724,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13726,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13743,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13760,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13792,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13726(t7,t2);}

/* k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13726(t2,((C_word*)t0)[4]);}

/* k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13743(t2,((C_word*)t0)[2]);}

/* k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13743(t2,((C_word*)t0)[2]);}

/* k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11169(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13807,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13821,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li173),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13821(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13870,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li174),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13870(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13902,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li175),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13902(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13760(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1379 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13902(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13902,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13912,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13760(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k13910 in do1379 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13902(t3,((C_word*)t0)[2],t2);}

/* do1374 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13870(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13870,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13880,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13760(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k13878 in do1374 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13870(t3,((C_word*)t0)[2],t2);}

/* do1364 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13821(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13821,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13831,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13840,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li172),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_13840(t7,t3,((C_word*)t0)[2]);}}

/* do1367 in do1364 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13840(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13840,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13850,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13760(t3,((C_word*)t0)[2],t4,t5);}}

/* k13848 in do1367 in do1364 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13840(t3,((C_word*)t0)[2],t2);}

/* k13829 in do1364 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13821(t3,((C_word*)t0)[2],t2);}

/* k13805 in k13802 in k13799 in k13796 in k13793 in k13790 in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13760(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13760,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13770,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t7=C_retrieve(lf[232]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[237]);}}

/* k13768 in sums-and-diffs in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13770,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t4=C_retrieve(lf[232]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[236]);}

/* getamps in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13743(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13743,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13750,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_11175(t3,t2);}

/* k13748 in getamps in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t2=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[234]:lf[235]));}}

/* getfreqs in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13726(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13726,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13733,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_11175(t3,t2);}

/* k13731 in getfreqs in rm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t2=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13545,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13553,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t6=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13557,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13557,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13559,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li167),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13559(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13559(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13559,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13569,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13569(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13569(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13569(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13569,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13572,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13584,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11217(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13615,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t8=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13572(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11217(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13700,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t11=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13559(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k13698 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13700,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11199(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13647 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13652,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11235(t2,((C_word*)t0)[4],t3);}

/* k13650 in k13647 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13661 in k13650 in k13647 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13663,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11199(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13613 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13615,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11199(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13582 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11235(t2,((C_word*)t0)[3],t3);}

/* k13585 in k13582 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11199(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13570 in k13567 in do1324 in k13555 in k13551 in spectrum-add! in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13133,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13450,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  round");
t7=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13450,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13146,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13379,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t10,t3);}

/* k13377 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13379,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li165),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13381(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1246 in k13377 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13381(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13381,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13400,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8120,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_8120 in do1246 in k13377 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8120,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub390(t4,t5,t6));}

/* k13398 in do1246 in k13377 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13400,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13403,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[230]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[231]));
if(C_truep(t5)){
t6=t3;
f_13403(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13403(t11,t10);}}

/* k13401 in k13398 in do1246 in k13377 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13403,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13381(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13222,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li163),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13222(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13222(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13222,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13375,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  caar");
t7=*((C_word*)lf[229]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13375,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13359,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13357 in k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13359,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13253(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13278,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13311,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li162),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13311(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1264 in k13357 in k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13311(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13311,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13325,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13325(t14,t13);}
else{
t13=t12;
f_13325(t13,C_SCHEME_UNDEFINED);}}}

/* k13323 in do1264 in k13357 in k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13325(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13325,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13311(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13276 in k13357 in k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13278,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13253(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13253(t5,t4);}}

/* k13251 in k13357 in k13373 in do1258 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13222(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13147 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13149,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13157,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_13157(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1286 in k13147 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_13157(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13157,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11169(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13190,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[228]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13188 in do1286 in k13147 in k13144 in k13448 in fm-spectrum in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13190,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_13157(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11660(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_11660r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11660r(t0,t1,t2,t3);}}

static void C_ccall f_11660r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11664,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_11664(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[221]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12906,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[221]);}
else{
t36=t35;
f_12906(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[222]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12941,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[222]);}
else{
t37=t36;
f_12941(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[223]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12976,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[223]);}
else{
t38=t37;
f_12976(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[224]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13011,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[224]);}
else{
t39=t38;
f_13011(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[225]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13046,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[225]);}
else{
t40=t39;
f_13046(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[226]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13081,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[226]);}
else{
t41=t40;
f_13081(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13110,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_13110(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13108 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13110,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13117,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13125,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13123 in k13108 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13117(2,t2,C_SCHEME_UNDEFINED);}}

/* k13115 in k13108 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11664(t5,t4);}

/* k13079 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13085(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13083 in k13079 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k13044 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13050(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13048 in k13044 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k13009 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13015(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13013 in k13009 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_13015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k12974 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12980(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12978 in k12974 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k12939 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12945(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12943 in k12939 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k12904 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12908 in k12904 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11664(t7,t6);}

/* k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11667(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12666,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12666(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12701,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12701(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12736,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12736(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12771,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12771(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12806,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12806(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12841,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12841(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12870,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12870(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12868 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12870,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12885,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12883 in k12868 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12877(2,t2,C_SCHEME_UNDEFINED);}}

/* k12875 in k12868 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11667(t5,t4);}

/* k12839 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12845(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12843 in k12839 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k12804 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12808 in k12804 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k12769 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12773 in k12769 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k12734 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12740(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12738 in k12734 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k12699 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12705,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12705(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12703 in k12699 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k12664 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12670(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12668 in k12664 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11667(t7,t6);}

/* k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11670(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12426,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12426(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12461,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12461(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12496,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12496(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12531,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12531(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12566,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12566(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12601,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12601(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12630,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12630(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12628 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12630,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12645,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12643 in k12628 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12637(2,t2,C_SCHEME_UNDEFINED);}}

/* k12635 in k12628 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11670(t5,t4);}

/* k12599 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12603 in k12599 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k12564 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12568 in k12564 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k12529 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12535(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12533 in k12529 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k12494 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12500(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12498 in k12494 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k12459 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12465(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12463 in k12459 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k12424 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12430,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12430(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12428 in k12424 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11670(t7,t6);}

/* k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11670,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11673(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12186,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12186(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12221,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12221(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12256,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12256(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12291,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12291(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12326,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12326(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12361,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12361(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12390,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12390(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12388 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12390,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12405,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12403 in k12388 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12397(2,t2,C_SCHEME_UNDEFINED);}}

/* k12395 in k12388 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11673(t5,t4);}

/* k12359 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12365(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12363 in k12359 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k12324 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12330,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12330(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12328 in k12324 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k12289 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12293 in k12289 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k12254 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12258 in k12254 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k12219 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12223 in k12219 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k12184 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12188 in k12184 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11673(t7,t6);}

/* k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11673(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11673,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11676(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11946,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11946(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11981,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11981(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12016,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12016(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12051,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12051(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12086,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12086(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12121,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12121(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12150,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12150(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12148 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12150,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12165,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12163 in k12148 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12157(2,t2,C_SCHEME_UNDEFINED);}}

/* k12155 in k12148 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11676(t5,t4);}

/* k12119 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12123 in k12119 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k12084 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12088 in k12084 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k12049 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12053 in k12049 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k12014 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12018 in k12014 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_12020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k11979 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11985(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11983 in k11979 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k11944 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11950(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11948 in k11944 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11676(t7,t6);}

/* k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11676(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11676,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11679,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11679(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11706,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11706(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11741,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11741(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11776,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_11776(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11811,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_11811(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11846,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_11846(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11881,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_11881(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11910,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11910(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11908 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11910,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11925,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11923 in k11908 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11917(2,t2,C_SCHEME_UNDEFINED);}}

/* k11915 in k11908 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11679(t5,t4);}

/* k11879 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11883 in k11879 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11844 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11848 in k11844 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11809 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11813 in k11809 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11774 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11780,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11780(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11778 in k11774 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11739 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11745(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11743 in k11739 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11704 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11708 in k11704 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11679(t7,t6);}

/* k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11679(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11679,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11682,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11682(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11682,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11441,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11441(t14,t13);}
else{
t13=t11;
f_11441(t13,C_SCHEME_UNDEFINED);}}

/* k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11441(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11441,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11450,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t19=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11450,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11454,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11454,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11456,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li154),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11528,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li155),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11561,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li156),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11571,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li157),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11591,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11626,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li158),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[220]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11641,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[220]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a11640 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11641(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11641,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11625 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11626,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11589 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  shuffle!");
t4=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11571 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11571,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11575,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11573 */
static void C_ccall f_11575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11561 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11569,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11567 */
static void C_ccall f_11569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11528 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11528(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11528,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11456 in k11452 in k11448 in k11439 in k11680 in k11677 in k11674 in k11671 in k11668 in k11665 in k11662 in spectrum-keys in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11456(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11456,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11460,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11523,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11521 */
static void C_ccall f_11523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  quantize");
t2=C_retrieve(lf[111]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11458 */
static void C_ccall f_11460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11460,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11471,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li152),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11471(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11496,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11496(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do999 in k11458 */
static void C_fcall f_11496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11496,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do995 in k11458 */
static void C_fcall f_11471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11471,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11412(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11412,3,t0,t1,t2);}
t3=lf[218];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11416,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11414 in spectrum-maxamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11416,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11427,a[2]=((C_word*)t0)[2],a[3]=((C_word)li150),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11426 in k11414 in spectrum-maxamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11427(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11427,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11423 in k11414 in spectrum-maxamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11381,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11385,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11383 in spectrum-minamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11385,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11396,a[2]=((C_word*)t0)[2],a[3]=((C_word)li148),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[216]);}}

/* a11395 in k11383 in spectrum-minamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11396(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11396,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11392 in k11383 in spectrum-minamp in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11363(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11363,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11371,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11369 in spectrum-maxfreq in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11379,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11377 in k11369 in spectrum-maxfreq in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11379,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11353(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11353,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11361,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11359 in spectrum-minfreq in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11294(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11294,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11301,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t7=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11299 in spectrum-pairs in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11302 in k11299 in spectrum-pairs in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11305 in k11302 in k11299 in spectrum-pairs in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11307,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11312,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li144),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11312(t5,((C_word*)t0)[2],C_fix(0));}

/* do958 in k11305 in k11302 in k11299 in spectrum-pairs in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11312(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11312,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[211]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11256(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11256,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11264,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-time");
t4=C_retrieve(lf[201]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11268,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11266 in k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11272,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11288,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11286 in k11266 in k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11270 in k11266 in k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11276,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11280,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11278 in k11270 in k11266 in k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11274 in k11270 in k11266 in k11262 in spectrum-copy in k11252 in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11169(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11244,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11235(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11235,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11226(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11226,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11217(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11217,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11208(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11208,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11199(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11199,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11190,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11175(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11175,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[199]));}

/* make-spectrum in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11169(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11169,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[199],t2,t3,t4,t5));}

/* scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11027(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11027r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11027r(t0,t1,t2,t3);}}

static void C_ccall f_11027r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11031,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_11031(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11031(t8,t7);}}

/* k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_11031(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11031,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11042,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11100,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 376  shuffle");
t2=C_retrieve(lf[149]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[197],((C_word*)((C_word*)t0)[4])[1]);}}

/* a11099 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11100,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11123,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11136,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11143,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11141 in a11099 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11147,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11145 in k11141 in a11099 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k11134 in a11099 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k11121 in a11099 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a11041 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11042,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11065,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11078,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11085,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11083 in a11041 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11089,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11087 in k11083 in a11041 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k11076 in a11041 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k11063 in a11041 in k11029 in scale-order in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10861,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10907,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10914,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10962,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10962(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 376  key");
t6=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[192],t2);}}}

/* k10960 in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10962,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10979,a[2]=t1,a[3]=((C_word)li129),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10914(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11007,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11011,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k11009 in k10960 in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10914(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11005 in k10960 in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_11007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10978 in k10960 in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10979(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10979,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10914(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10914,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10923,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li127),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10923(t8,t1,t2,t4);}

/* do822 in transpkeys in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10923(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10923,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10905 in transpose in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10907,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  note");
t3=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10726,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[189],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10756,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10826,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 376  invkeys");
f_10756(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10848,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10852,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t7=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[190],t2);}}}

/* k10850 in invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  invkeys");
f_10756(((C_word*)t0)[2],t1);}

/* k10846 in invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10825 in invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10826(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10826,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10756(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10756,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10772,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li123),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10772(t9,t1,t5,t4);}

/* do807 in invkeys in invert in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10772(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10772,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10681(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10681,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  modulo");
t3=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[187]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10713,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10724,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10722 in pc in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  modulo");
t2=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10711 in pc in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[187]),t1);}

/* hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10565,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10580,a[2]=t5,a[3]=t3,a[4]=((C_word)li120),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10580(t7,t1,t2,lf[186],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7994(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10679,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10677 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do787 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10580(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10580,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10593,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10610,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10610(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10610(t14,(C_word)C_i_listp(t13));}}}

/* k10608 in do787 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10610,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10614,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  hz");
t4=C_retrieve(lf[185]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10629,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10627 in k10608 in do787 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10629,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10593(t9,t8);}

/* k10612 in k10608 in do787 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10614,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10593(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10591 in do787 in hz in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10580(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10443(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10443,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10458,a[2]=t5,a[3]=t3,a[4]=((C_word)li118),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10458(t7,t1,t2,lf[184],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub310(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10563,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10561 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do771 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10458(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10458,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10471,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10488,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10488(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10488(t14,(C_word)C_i_numberp(t13));}}}

/* k10486 in do771 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10488,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10492,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10507,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10505 in k10486 in do771 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10507,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10471(t9,t8);}

/* k10490 in k10486 in do771 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10492,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10471(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10469 in do771 in key in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10458(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10346,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10361,a[2]=t5,a[3]=t3,a[4]=((C_word)li116),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10361(t7,t1,t2,lf[182],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10441,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10439 in note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do757 in note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10361(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10361,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10374,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10392,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note");
t13=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10407,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10293(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10405 in do757 in note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10407,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10374(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10390 in do757 in note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10392,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10374(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10372 in do757 in note in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10361(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10293(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10293,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10243,a[2]=t6,a[3]=t7,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[168],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10291,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  floor");
t9=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10316,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10191(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10331,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10329 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10331,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[180],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10336 in k10329 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10191(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10314 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10191(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10289 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10291,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[176]))){
t5=t4;
f_10263(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[177]);
t6=t4;
f_10263(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[178]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10261 in k10289 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10263,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li114),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[168],"*notes*"),t1,t2);}

/* a10264 in k10261 in k10289 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10265,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[175],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10242 in note-aux in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10243,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[174],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10191(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10191,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10195,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10228,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[168],"*notes*"),t2,t6);}

/* a10227 in string->note-entry in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10228,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10193 in string->note-entry in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10195,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10211,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[172],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10209 in k10193 in string->note-entry in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li110),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[168],"*notes*"),t1,t2);}

/* a10212 in k10209 in k10193 in string->note-entry in k10187 in k10184 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10213,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[170],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9977r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9977r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9990,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9990(t13,t12);}
else{
t9=t8;
f_9990(t9,C_SCHEME_UNDEFINED);}}}

/* k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9990,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[83],"tb:explseg"):C_retrieve2(lf[84],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10011,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[166],t7);}
else{
t12=t11;
f_10011(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[131]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_10072(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_10072(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[167],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k10073 in k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10075,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10083,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li108),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_10083(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do687 in k10073 in k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10083(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10083,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10124,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li107),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_10095(t8,t1,((C_word*)t0)[3]);}}

/* do691 in do687 in k10073 in k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10095(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10095,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10116,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7855(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k10114 in do691 in do687 in k10073 in k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_10095(t4,((C_word*)t0)[2],t3);}

/* k10122 in do687 in k10073 in k10070 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10124,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_10083(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k10009 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10011,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li106),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_10016(t5,((C_word*)t0)[2],C_fix(0));}

/* do675 in k10009 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_10016(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10016,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10048,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k10046 in do675 in k10009 in k9988 in segs in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_10048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10048,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_10016(t7,((C_word*)t0)[2],t6);}

/* rangamma in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9956(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9956r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9956r(t0,t1,t2);}}

static void C_ccall f_9956r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_8092(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_8092(t1,t3);}}

/* ranpoisson in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9937(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9937r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9937r(t0,t1,t2);}}

static void C_ccall f_9937r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[161])))){
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_8102(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_8102(t1,t3);}}

/* rangauss in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9896(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9896r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9896r(t0,t1,t2);}}

static void C_ccall f_9896r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_8063(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_8063(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_8063(t1,t4,t5);}}}

/* ranexp in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9877(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9877r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9877r(t0,t1,t2);}}

static void C_ccall f_9877r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_8074(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_8074(t1,t3);}}

/* ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9649(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9649r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9649r(t0,t1,t2);}}

static void C_ccall f_9649r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[154];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9653,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9653(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[155]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9790,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[155]);}
else{
t19=t18;
f_9790(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[156]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9825,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[156]);}
else{
t20=t19;
f_9825(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9854,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9854(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9852 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9854,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9869,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9867 in k9852 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9861(2,t2,C_SCHEME_UNDEFINED);}}

/* k9859 in k9852 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9653(t5,t4);}

/* k9823 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9829(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9827 in k9823 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9653(t7,t6);}

/* k9788 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9794,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9794(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9792 in k9788 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9653(t7,t6);}

/* k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9653,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9656,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9656(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[155]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9690,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[155]);}
else{
t6=t5;
f_9690(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[156]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9725,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[156]);}
else{
t7=t6;
f_9725(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9754,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9754(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9752 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9754,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9769,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9767 in k9752 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9761(2,t2,C_SCHEME_UNDEFINED);}}

/* k9759 in k9752 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9656(t5,t4);}

/* k9723 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9727 in k9723 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9656(t7,t6);}

/* k9688 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9694(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9692 in k9688 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9656(t7,t6);}

/* k9654 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9656,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9659(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9657 in k9654 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9662(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9662(t5,t4);}}

/* k9660 in k9657 in k9654 in k9651 in ranbeta in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9662(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9662,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub363(t5,t6,t7));}

/* shuffle in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9607(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9607r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9607r(t0,t1,t2);}}

static void C_ccall f_9607r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9621,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9636,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9634 in shuffle in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9619 in shuffle in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9552(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9552,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9563,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_8018(t4,t3);}

/* k9561 in shuffle! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9563,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9565,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li98),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9565(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do607 in k9561 in shuffle! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9565,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9593,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_8018(t14,((C_word*)t0)[4]);}}

/* k9591 in do607 in k9561 in shuffle! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9565(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9453(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9453r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9453r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9453r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9457,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9457(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9457(t9,t8);}}

/* k9455 in vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9457,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9460(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[147],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9458 in k9455 in vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9460,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9462,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  vary1");
f_9462(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9524 in k9458 in k9455 in vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9525(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9525,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  vary1");
f_9462(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9458 in k9455 in vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9462(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9462,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9478,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_8025(t9,t8);}}

/* k9476 in vary1 in k9458 in k9455 in vary in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9478,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[146]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9225(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9225r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9225r(t0,t1,t2,t3);}}

static void C_ccall f_9225r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9229,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9229(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[143]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9366,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[143]);}
else{
t20=t19;
f_9366(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[144]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9401,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[144]);}
else{
t21=t20;
f_9401(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9430,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9430(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9428 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9430,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9445,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9443 in k9428 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9437(2,t2,C_SCHEME_UNDEFINED);}}

/* k9435 in k9428 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9229(t5,t4);}

/* k9399 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9405(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9403 in k9399 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9229(t7,t6);}

/* k9364 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9368 in k9364 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9229(t7,t6);}

/* k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9229(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9229,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9232,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9232(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9266,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[143]);}
else{
t6=t5;
f_9266(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9301,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[144]);}
else{
t7=t6;
f_9301(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9330,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9330(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9328 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9330,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9337,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9345,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9343 in k9328 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9337(2,t2,C_SCHEME_UNDEFINED);}}

/* k9335 in k9328 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9232(t5,t4);}

/* k9299 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9305(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9303 in k9299 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9232(t7,t6);}

/* k9264 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9270,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9270(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9268 in k9264 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9232(t7,t6);}

/* k9230 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9232,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9235,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9235(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9233 in k9230 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_8025(t2,lf[142]);}

/* k9243 in k9233 in k9230 in k9227 in odds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9182(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9182r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9182r(t0,t1,t2);}}

static void C_ccall f_9182r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9200,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_8018(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9215,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_8018(t4,t5);}}

/* k9213 in pick in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9198 in pick in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9161,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub329(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub335(t9,t10,t11));}}

/* ran in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9126(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9126r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9126r(t0,t1,t2);}}

static void C_ccall f_9126r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9130,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_9130(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_9130(t7,t6);}}

/* k9128 in ran in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 376  tb:rani");
f_8018(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_8025(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_8025(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_9018r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9018r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9018r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9025,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_9025(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9105,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 376  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[137],((C_word*)t8)[1]);}
else{
t15=t14;
f_9105(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_9025(t11,C_SCHEME_UNDEFINED);}}

/* k9103 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9025(t4,t3);}

/* k9023 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9025,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li89),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_9034(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do530 in k9023 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9034(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9034,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9047,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9081,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  fit");
t10=C_retrieve(lf[132]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_9047(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k9079 in do530 in k9023 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9047(t3,t2);}

/* k9045 in do530 in k9023 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_9047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9047,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9073,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k9071 in k9045 in do530 in k9023 in scale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_9073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9073,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_9034(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8885(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8885r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8885r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8885r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8889,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8889(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8889(t12,t11);}}

/* k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8889(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8889,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8892(t6,t5);}
else{
t3=t2;
f_8892(t3,C_SCHEME_UNDEFINED);}}

/* k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8892,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8894,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li87),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 376  fit1");
f_8894(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8995 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8996(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8996,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  fit1");
f_8894(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8894(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8894,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8901,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8899 in fit1 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8901,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8924,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t9=*((C_word*)lf[133]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8943,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t8=*((C_word*)lf[133]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[134],((C_word*)t0)[2]);}}}

/* k8941 in k8899 in fit1 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8950,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[106]+1):*((C_word*)lf[104]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t2,t1);}}

/* k8948 in k8941 in k8899 in fit1 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8950,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8922 in k8899 in fit1 in k8890 in k8887 in fit in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8924,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8818r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8818r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8818r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[131]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8822,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8822(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8822(t16,t15);}}

/* k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8822(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8822,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8868,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8686(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8825(t3,C_SCHEME_UNDEFINED);}}

/* k8866 in k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8825(t3,t2);}

/* k8823 in k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8825,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8861,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8686(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8828(t3,C_SCHEME_UNDEFINED);}}

/* k8859 in k8823 in k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8828(t3,t2);}

/* k8826 in k8823 in k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8828,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8841,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8839 in k8826 in k8823 in k8820 in tendency in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8841,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8772(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8772r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8772r(t0,t1,t2,t3);}}

static void C_ccall f_8772r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8776,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[129]);}
else{
t5=t4;
f_8776(2,t5,C_SCHEME_UNDEFINED);}}

/* k8774 in interp in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 376  interp1");
f_8686(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 376  interp1");
f_8686(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8686(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8686,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8690,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[127],t3);}
else{
t6=t5;
f_8690(2,t6,(C_word)C_i_car(t3));}}

/* k8688 in interp1 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8690,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 376  err");
t6=C_retrieve(lf[125]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[126],((C_word*)t0)[4]);}
else{
t6=t4;
f_8693(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8691 in k8688 in interp1 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8693,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8702,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li82),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8702(t13,((C_word*)t0)[2],t9);}

/* do481 in k8691 in k8688 in interp1 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8702(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8702,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7855(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8724,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 376  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[124],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8724(2,t13,t12);}}}

/* k8722 in do481 in k8691 in k8688 in interp1 in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8702(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8671(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8671,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[82],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:scaler->cents");
t3=C_retrieve2(lf[82],"tb:scaler->cents");
f_7949(3,t3,t1,t2);}}

/* cents->ratio in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8656(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8656,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[81],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:cents->scaler");
t3=C_retrieve2(lf[81],"tb:cents->scaler");
f_7942(3,t3,t1,t2);}}

/* rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8420(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8420r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8420r(t0,t1,t2,t3);}}

static void C_ccall f_8420r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[117];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[118];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8424,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8424(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[119]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8569,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[119]);}
else{
t20=t19;
f_8569(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[120]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8604,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[120]);}
else{
t21=t20;
f_8604(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8633,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8633(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8631 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8633,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8648,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8646 in k8631 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8640(2,t2,C_SCHEME_UNDEFINED);}}

/* k8638 in k8631 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8424(t5,t4);}

/* k8602 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8608(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8606 in k8602 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8424(t7,t6);}

/* k8567 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8573(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8571 in k8567 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8424(t7,t6);}

/* k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8424(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8424,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8427,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8427(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[119]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8469,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[119]);}
else{
t6=t5;
f_8469(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[120]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8504,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[120]);}
else{
t7=t6;
f_8504(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8533,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8533(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8531 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8533,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8548,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8546 in k8531 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8540(2,t2,C_SCHEME_UNDEFINED);}}

/* k8538 in k8531 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8427(t5,t4);}

/* k8502 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8506 in k8502 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8427(t7,t6);}

/* k8467 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8471 in k8467 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8427(t7,t6);}

/* k8425 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8427,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8430,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8430(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8428 in k8425 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8430,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li78),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7927(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8440 in k8428 in k8425 in k8422 in rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8441(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8441,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7927(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8380,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8384,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  expt");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[115],t3);}

/* k8382 in decimals in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8384,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8395,a[2]=t1,a[3]=((C_word)li76),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8414,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  round");
t4=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8412 in k8382 in decimals in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8414,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8394 in k8382 in decimals in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8395(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8395,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8403,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  round");
t5=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8401 in a8394 in k8382 in decimals in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8403,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8359,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8371,a[2]=t3,a[3]=((C_word)li74),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7916(t1,t2,t3);}}

/* a8370 in quantize in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8371(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8371,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7916(t1,t2,((C_word*)t0)[2]);}

/* minus in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8333(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_8333r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8333r(t0,t1,t2,t3);}}

static void C_ccall f_8333r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[106]+1),t2);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[106]+1),t2,t3);}}

/* plus in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8291(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8291r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8291r(t0,t1,t2);}}

static void C_ccall f_8291r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[104]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[104]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[104]+1),t2);}}}

/* int in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8276(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8276,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[78],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:int");
t3=C_retrieve2(lf[78],"tb:int");
f_7909(3,t3,t1,t2);}}

/* discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_8165r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_8165r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_8165r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8169,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_8169(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8240,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 376  not?");
t20=C_retrieve(lf[101]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_8169(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_8169(t19,t18);}}}

/* k8238 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8169(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8169(t2,C_SCHEME_UNDEFINED);}}

/* k8167 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8169,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8183,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li68),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8198,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7882(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8209,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li69),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7882(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8208 in k8167 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8209,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7882(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8196 in k8167 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8182 in k8167 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8183(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8183,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8191,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7882(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8189 in a8182 in k8167 in discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_8131r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_8131r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_8131r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8143,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li66),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7855(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7855(t1,t2,t3,t4,t5,t6,t8);}}}

/* a8142 in rescale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8143(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8143,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[99]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8112,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub383(t2));}

/* tb:ranpink in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8109,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub380(t2));}

/* tb:ranpoisson in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8102(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8102,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub377(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8099,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub373(t2));}

/* tb:rangamma in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8092(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8092,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub369(t3,t4));}

/* tb:ranexp in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8074(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8074,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub357(t3,t4));}

/* tb:rangauss in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8063(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8063,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub351(t4,t5,t6));}

/* tb:ranmiddle in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8060,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub346(t2));}

/* tb:ranhigh in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8057,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub343(t2));}

/* tb:ranlow in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8054,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub340(t2));}

/* tb:ranf in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8025(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8025,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub323(t3,t4));}

/* tb:rani in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_8018(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8018,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub319(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_8015(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8015,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub315(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7994(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7994,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub301(t3,t4));}

/* tb:geoseg in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7975,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub293(t6,t7,t8,t9,t10));}

/* tb:explseg in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7956,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub282(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7949(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7949,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub275(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7942(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7942,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub270(t3,t4));}

/* tb:rhythm->seconds in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7927(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7927,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub263(t5,t6,t7,t8));}

/* tb:quantize in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7916(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7916,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub255(t4,t5,t6));}

/* tb:int in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7909,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub250(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7882(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7882,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub241(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7855(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7855,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub226(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7814(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7814,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7820,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li41),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7820(t9,t1,C_SCHEME_FALSE);}

/* do187 in bitwise-test in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7820(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7820,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7830,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7830(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7830(t7,t6);}}
else{
t5=t4;
f_7830(t5,C_SCHEME_UNDEFINED);}}}

/* k7828 in do187 in bitwise-test in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7830,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7820(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7728r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7728r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7728r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[74],"list-prop"),t7,t3,t4);}}}

/* every? in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7689,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7695,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7695(t7,t1,t3,C_SCHEME_TRUE);}

/* do171 in every? in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7695(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7695,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7708,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7718,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7716 in do171 in every? in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7708(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7708(t3,t2);}}

/* k7706 in do171 in every? in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7695(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7650,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7656,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7656(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7656(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7656,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7666,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7676,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7674 in do160 in list-find in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7666(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7666(t2,C_SCHEME_UNDEFINED);}}

/* k7664 in do160 in list-find in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7656(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7610,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7616,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7616(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7616(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7616,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7626,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7640,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7638 in do149 in list-index in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7626(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7626(t2,C_SCHEME_UNDEFINED);}}

/* k7624 in do149 in list-index in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7626(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7626,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7616(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7511(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7511r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7511r(t0,t1,t2,t3);}}

static void C_ccall f_7511r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7515,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[70],t2);}
else{
t5=t4;
f_7515(2,t5,C_SCHEME_UNDEFINED);}}

/* k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7515,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7517,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7540,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 375  l1");
t8=((C_word*)t3)[1];
f_7517(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 375  l2");
t9=((C_word*)t5)[1];
f_7540(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  l1");
t10=((C_word*)t3)[1];
f_7517(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7540(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7540,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7557,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7555 in l2 in k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7561,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 375  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7540(t4,t2,t3,((C_word*)t0)[2]);}

/* k7559 in k7555 in l2 in k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7561,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7517(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7517,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7534,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 375  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7532 in l1 in k7513 in make-list in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7534,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7450(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7450,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7463,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7463(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_7463(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7463,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7440,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7400(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7400r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7400r(t0,t1,t2);}}

static void C_ccall f_7400r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[66]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7430,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[65]),t6);}}}

/* k7428 in list* in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7430,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7310(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7310,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tail");
t5=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7262,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7296,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  butlast");
t8=C_retrieve(lf[63]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7294 in butlast in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7296,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7239(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7239,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  last");
t5=C_retrieve(lf[62]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7233(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7233,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7218(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7218,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7204(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7204,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7194(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7194,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7184(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7184,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7174,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7164,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7131(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7131r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7131r(t0,t1,t2);}}

static void C_ccall f_7131r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7140,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_7140 in chdir in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7140,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7145,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7145(2,t4,C_SCHEME_FALSE);}}

/* k7143 */
static void C_ccall f_7145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7125,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_7125 in cwd in k7116 in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7125,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6827,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7107,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7096,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7105,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6837,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 281  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6837(2,t11,t2);}}

/* k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6840,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7088,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 282  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a7087 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7088,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6843(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 283  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6843,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6858,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6858(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6858(t9,C_SCHEME_FALSE);}}

/* k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_6858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6858,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6868,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 297  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6868,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6870(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_6870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6870,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6882,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6882(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6923,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6929(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 312  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6929,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6923(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6983,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7056,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 333  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6939,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 323  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6939(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6937 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6939,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6923(t9,t8);}

/* k7054 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7056,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7029,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 338  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6983(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7042,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7044,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a7043 in k7054 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7044(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7044,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 342  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k7040 in k7054 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 340  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7027 in k7054 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 337  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6981 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6983,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6989,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6989(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7010,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 349  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k7008 in k6981 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 348  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6987 in k6981 in k6927 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6923(t6,t5);}

/* k6921 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_6923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6870(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_6882(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6882,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6895,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6895(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6895(t5,C_SCHEME_UNDEFINED);}}}

/* k6893 in do69 in do63 in k6866 in k6856 in k6841 in k6838 in k6835 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_fcall f_6895(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6882(t3,((C_word*)t0)[2],t2);}

/* f_7105 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7105,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_7096 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7096,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7104,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 279  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7102 */
static void C_ccall f_7104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 279  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_7107 in expand-send in k6823 in k6820 in k6816 in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_7107(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_7107r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7107r(t0,t1,t2,t3);}}

static void C_ccall f_7107r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7115,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k7113 */
static void C_ccall f_7115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 275  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6529,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6690,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6782,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6781 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6782,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6796,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6800,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 227  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6811,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6815,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 228  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6813 in a6781 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 228  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6809 in a6781 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6811,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6798 in a6781 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6794 in a6781 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6796,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6693,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 231  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6699,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6776,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6775 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6776(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6776,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6542,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6601,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 191  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6599 in a6775 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 191  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6540 in a6775 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6542,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6706,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6752,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6766,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6765 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6766(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6766,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6750 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6752,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 237  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6716 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6722,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6726,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6744,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6743 in k6716 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6744,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6679,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6677 in a6743 in k6716 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6679,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6724 in k6716 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6726,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6720 in k6716 in k6704 in k6697 in k6694 in k6691 in k6688 in expand-optkeys in k6525 in k6522 in k6519 in k6516 */
static void C_ccall f_6722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6722,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2814] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6518ChickenBridge.scm",(void*)f_6518},
{"f_6521ChickenBridge.scm",(void*)f_6521},
{"f_6524ChickenBridge.scm",(void*)f_6524},
{"f_6527ChickenBridge.scm",(void*)f_6527},
{"f_41314ChickenBridge.scm",(void*)f_41314},
{"f_6818ChickenBridge.scm",(void*)f_6818},
{"f_6822ChickenBridge.scm",(void*)f_6822},
{"f_41262ChickenBridge.scm",(void*)f_41262},
{"f_41309ChickenBridge.scm",(void*)f_41309},
{"f_41299ChickenBridge.scm",(void*)f_41299},
{"f_41266ChickenBridge.scm",(void*)f_41266},
{"f_6825ChickenBridge.scm",(void*)f_6825},
{"f_41256ChickenBridge.scm",(void*)f_41256},
{"f_7118ChickenBridge.scm",(void*)f_7118},
{"f_10186ChickenBridge.scm",(void*)f_10186},
{"f_41040ChickenBridge.scm",(void*)f_41040},
{"f_41254ChickenBridge.scm",(void*)f_41254},
{"f_41074ChickenBridge.scm",(void*)f_41074},
{"f_41086ChickenBridge.scm",(void*)f_41086},
{"f_41090ChickenBridge.scm",(void*)f_41090},
{"f_41094ChickenBridge.scm",(void*)f_41094},
{"f_41238ChickenBridge.scm",(void*)f_41238},
{"f_41100ChickenBridge.scm",(void*)f_41100},
{"f_41120ChickenBridge.scm",(void*)f_41120},
{"f_41123ChickenBridge.scm",(void*)f_41123},
{"f_41131ChickenBridge.scm",(void*)f_41131},
{"f_41138ChickenBridge.scm",(void*)f_41138},
{"f_41141ChickenBridge.scm",(void*)f_41141},
{"f_41145ChickenBridge.scm",(void*)f_41145},
{"f_41152ChickenBridge.scm",(void*)f_41152},
{"f_41155ChickenBridge.scm",(void*)f_41155},
{"f_41159ChickenBridge.scm",(void*)f_41159},
{"f_41166ChickenBridge.scm",(void*)f_41166},
{"f_41110ChickenBridge.scm",(void*)f_41110},
{"f_41063ChickenBridge.scm",(void*)f_41063},
{"f_41053ChickenBridge.scm",(void*)f_41053},
{"f_41056ChickenBridge.scm",(void*)f_41056},
{"f_10189ChickenBridge.scm",(void*)f_10189},
{"f_41030ChickenBridge.scm",(void*)f_41030},
{"f_41038ChickenBridge.scm",(void*)f_41038},
{"f_11254ChickenBridge.scm",(void*)f_11254},
{"f_41016ChickenBridge.scm",(void*)f_41016},
{"f_41024ChickenBridge.scm",(void*)f_41024},
{"f_41028ChickenBridge.scm",(void*)f_41028},
{"f_22409ChickenBridge.scm",(void*)f_22409},
{"f_22460ChickenBridge.scm",(void*)f_22460},
{"f_41006ChickenBridge.scm",(void*)f_41006},
{"f_41014ChickenBridge.scm",(void*)f_41014},
{"f_22565ChickenBridge.scm",(void*)f_22565},
{"f_40903ChickenBridge.scm",(void*)f_40903},
{"f_40966ChickenBridge.scm",(void*)f_40966},
{"f_40970ChickenBridge.scm",(void*)f_40970},
{"f_40984ChickenBridge.scm",(void*)f_40984},
{"f_40906ChickenBridge.scm",(void*)f_40906},
{"f_40926ChickenBridge.scm",(void*)f_40926},
{"f_40930ChickenBridge.scm",(void*)f_40930},
{"f_22568ChickenBridge.scm",(void*)f_22568},
{"f_40889ChickenBridge.scm",(void*)f_40889},
{"f_40897ChickenBridge.scm",(void*)f_40897},
{"f_40901ChickenBridge.scm",(void*)f_40901},
{"f_22761ChickenBridge.scm",(void*)f_22761},
{"f_40863ChickenBridge.scm",(void*)f_40863},
{"f_40867ChickenBridge.scm",(void*)f_40867},
{"f_40873ChickenBridge.scm",(void*)f_40873},
{"f_40884ChickenBridge.scm",(void*)f_40884},
{"f_40880ChickenBridge.scm",(void*)f_40880},
{"f_22830ChickenBridge.scm",(void*)f_22830},
{"f_40841ChickenBridge.scm",(void*)f_40841},
{"f_24075ChickenBridge.scm",(void*)f_24075},
{"f_40821ChickenBridge.scm",(void*)f_40821},
{"f_24078ChickenBridge.scm",(void*)f_24078},
{"f_40781ChickenBridge.scm",(void*)f_40781},
{"f_24081ChickenBridge.scm",(void*)f_24081},
{"f_40687ChickenBridge.scm",(void*)f_40687},
{"f_40691ChickenBridge.scm",(void*)f_40691},
{"f_40694ChickenBridge.scm",(void*)f_40694},
{"f_40712ChickenBridge.scm",(void*)f_40712},
{"f_40715ChickenBridge.scm",(void*)f_40715},
{"f_40746ChickenBridge.scm",(void*)f_40746},
{"f_40718ChickenBridge.scm",(void*)f_40718},
{"f_40724ChickenBridge.scm",(void*)f_40724},
{"f_40677ChickenBridge.scm",(void*)f_40677},
{"f_40671ChickenBridge.scm",(void*)f_40671},
{"f_24084ChickenBridge.scm",(void*)f_24084},
{"f_40579ChickenBridge.scm",(void*)f_40579},
{"f_40581ChickenBridge.scm",(void*)f_40581},
{"f_40585ChickenBridge.scm",(void*)f_40585},
{"f_40588ChickenBridge.scm",(void*)f_40588},
{"f_40591ChickenBridge.scm",(void*)f_40591},
{"f_40631ChickenBridge.scm",(void*)f_40631},
{"f_40623ChickenBridge.scm",(void*)f_40623},
{"f_40594ChickenBridge.scm",(void*)f_40594},
{"f_40597ChickenBridge.scm",(void*)f_40597},
{"f_40600ChickenBridge.scm",(void*)f_40600},
{"f_40571ChickenBridge.scm",(void*)f_40571},
{"f_24087ChickenBridge.scm",(void*)f_24087},
{"f_40543ChickenBridge.scm",(void*)f_40543},
{"f_24090ChickenBridge.scm",(void*)f_24090},
{"f_40507ChickenBridge.scm",(void*)f_40507},
{"f_40519ChickenBridge.scm",(void*)f_40519},
{"f_40515ChickenBridge.scm",(void*)f_40515},
{"f_40489ChickenBridge.scm",(void*)f_40489},
{"f_40483ChickenBridge.scm",(void*)f_40483},
{"f_24093ChickenBridge.scm",(void*)f_24093},
{"f_40397ChickenBridge.scm",(void*)f_40397},
{"f_40401ChickenBridge.scm",(void*)f_40401},
{"f_40404ChickenBridge.scm",(void*)f_40404},
{"f_40407ChickenBridge.scm",(void*)f_40407},
{"f_40420ChickenBridge.scm",(void*)f_40420},
{"f_40366ChickenBridge.scm",(void*)f_40366},
{"f_40370ChickenBridge.scm",(void*)f_40370},
{"f_40385ChickenBridge.scm",(void*)f_40385},
{"f_40360ChickenBridge.scm",(void*)f_40360},
{"f_24096ChickenBridge.scm",(void*)f_24096},
{"f_40246ChickenBridge.scm",(void*)f_40246},
{"f_40262ChickenBridge.scm",(void*)f_40262},
{"f_40273ChickenBridge.scm",(void*)f_40273},
{"f_40240ChickenBridge.scm",(void*)f_40240},
{"f_24152ChickenBridge.scm",(void*)f_24152},
{"f_40107ChickenBridge.scm",(void*)f_40107},
{"f_40130ChickenBridge.scm",(void*)f_40130},
{"f_40127ChickenBridge.scm",(void*)f_40127},
{"f_40101ChickenBridge.scm",(void*)f_40101},
{"f_24155ChickenBridge.scm",(void*)f_24155},
{"f_39955ChickenBridge.scm",(void*)f_39955},
{"f_39973ChickenBridge.scm",(void*)f_39973},
{"f_39982ChickenBridge.scm",(void*)f_39982},
{"f_39949ChickenBridge.scm",(void*)f_39949},
{"f_24158ChickenBridge.scm",(void*)f_24158},
{"f_39902ChickenBridge.scm",(void*)f_39902},
{"f_39906ChickenBridge.scm",(void*)f_39906},
{"f_39909ChickenBridge.scm",(void*)f_39909},
{"f_39925ChickenBridge.scm",(void*)f_39925},
{"f_39884ChickenBridge.scm",(void*)f_39884},
{"f_39878ChickenBridge.scm",(void*)f_39878},
{"f_24161ChickenBridge.scm",(void*)f_24161},
{"f_39802ChickenBridge.scm",(void*)f_39802},
{"f_24300ChickenBridge.scm",(void*)f_24300},
{"f_39728ChickenBridge.scm",(void*)f_39728},
{"f_39735ChickenBridge.scm",(void*)f_39735},
{"f_39722ChickenBridge.scm",(void*)f_39722},
{"f_24303ChickenBridge.scm",(void*)f_24303},
{"f_39618ChickenBridge.scm",(void*)f_39618},
{"f_39626ChickenBridge.scm",(void*)f_39626},
{"f_39592ChickenBridge.scm",(void*)f_39592},
{"f_39609ChickenBridge.scm",(void*)f_39609},
{"f_39600ChickenBridge.scm",(void*)f_39600},
{"f_39586ChickenBridge.scm",(void*)f_39586},
{"f_24306ChickenBridge.scm",(void*)f_24306},
{"f_39542ChickenBridge.scm",(void*)f_39542},
{"f_24309ChickenBridge.scm",(void*)f_24309},
{"f_39460ChickenBridge.scm",(void*)f_39460},
{"f_39471ChickenBridge.scm",(void*)f_39471},
{"f_39473ChickenBridge.scm",(void*)f_39473},
{"f_39502ChickenBridge.scm",(void*)f_39502},
{"f_39438ChickenBridge.scm",(void*)f_39438},
{"f_39454ChickenBridge.scm",(void*)f_39454},
{"f_39432ChickenBridge.scm",(void*)f_39432},
{"f_24312ChickenBridge.scm",(void*)f_24312},
{"f_39385ChickenBridge.scm",(void*)f_39385},
{"f_39389ChickenBridge.scm",(void*)f_39389},
{"f_39396ChickenBridge.scm",(void*)f_39396},
{"f_39363ChickenBridge.scm",(void*)f_39363},
{"f_39379ChickenBridge.scm",(void*)f_39379},
{"f_39357ChickenBridge.scm",(void*)f_39357},
{"f_24315ChickenBridge.scm",(void*)f_24315},
{"f_39225ChickenBridge.scm",(void*)f_39225},
{"f_39265ChickenBridge.scm",(void*)f_39265},
{"f_39229ChickenBridge.scm",(void*)f_39229},
{"f_39245ChickenBridge.scm",(void*)f_39245},
{"f_39257ChickenBridge.scm",(void*)f_39257},
{"f_39261ChickenBridge.scm",(void*)f_39261},
{"f_39253ChickenBridge.scm",(void*)f_39253},
{"f_39150ChickenBridge.scm",(void*)f_39150},
{"f_39193ChickenBridge.scm",(void*)f_39193},
{"f_39197ChickenBridge.scm",(void*)f_39197},
{"f_39157ChickenBridge.scm",(void*)f_39157},
{"f_39168ChickenBridge.scm",(void*)f_39168},
{"f_39144ChickenBridge.scm",(void*)f_39144},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_39124ChickenBridge.scm",(void*)f_39124},
{"f_39118ChickenBridge.scm",(void*)f_39118},
{"f_24321ChickenBridge.scm",(void*)f_24321},
{"f_39098ChickenBridge.scm",(void*)f_39098},
{"f_39102ChickenBridge.scm",(void*)f_39102},
{"f_39090ChickenBridge.scm",(void*)f_39090},
{"f_24324ChickenBridge.scm",(void*)f_24324},
{"f_39070ChickenBridge.scm",(void*)f_39070},
{"f_39074ChickenBridge.scm",(void*)f_39074},
{"f_39062ChickenBridge.scm",(void*)f_39062},
{"f_24327ChickenBridge.scm",(void*)f_24327},
{"f_39042ChickenBridge.scm",(void*)f_39042},
{"f_39046ChickenBridge.scm",(void*)f_39046},
{"f_39034ChickenBridge.scm",(void*)f_39034},
{"f_24330ChickenBridge.scm",(void*)f_24330},
{"f_39014ChickenBridge.scm",(void*)f_39014},
{"f_39018ChickenBridge.scm",(void*)f_39018},
{"f_39006ChickenBridge.scm",(void*)f_39006},
{"f_24333ChickenBridge.scm",(void*)f_24333},
{"f_38905ChickenBridge.scm",(void*)f_38905},
{"f_38875ChickenBridge.scm",(void*)f_38875},
{"f_38899ChickenBridge.scm",(void*)f_38899},
{"f_38869ChickenBridge.scm",(void*)f_38869},
{"f_24336ChickenBridge.scm",(void*)f_24336},
{"f_38819ChickenBridge.scm",(void*)f_38819},
{"f_38821ChickenBridge.scm",(void*)f_38821},
{"f_38825ChickenBridge.scm",(void*)f_38825},
{"f_38853ChickenBridge.scm",(void*)f_38853},
{"f_38845ChickenBridge.scm",(void*)f_38845},
{"f_38841ChickenBridge.scm",(void*)f_38841},
{"f_38828ChickenBridge.scm",(void*)f_38828},
{"f_38811ChickenBridge.scm",(void*)f_38811},
{"f_24339ChickenBridge.scm",(void*)f_24339},
{"f_38758ChickenBridge.scm",(void*)f_38758},
{"f_38760ChickenBridge.scm",(void*)f_38760},
{"f_38764ChickenBridge.scm",(void*)f_38764},
{"f_38795ChickenBridge.scm",(void*)f_38795},
{"f_38787ChickenBridge.scm",(void*)f_38787},
{"f_38783ChickenBridge.scm",(void*)f_38783},
{"f_38767ChickenBridge.scm",(void*)f_38767},
{"f_38770ChickenBridge.scm",(void*)f_38770},
{"f_38750ChickenBridge.scm",(void*)f_38750},
{"f_24342ChickenBridge.scm",(void*)f_24342},
{"f_38700ChickenBridge.scm",(void*)f_38700},
{"f_38714ChickenBridge.scm",(void*)f_38714},
{"f_38706ChickenBridge.scm",(void*)f_38706},
{"f_38665ChickenBridge.scm",(void*)f_38665},
{"f_38698ChickenBridge.scm",(void*)f_38698},
{"f_38659ChickenBridge.scm",(void*)f_38659},
{"f_24345ChickenBridge.scm",(void*)f_24345},
{"f_38606ChickenBridge.scm",(void*)f_38606},
{"f_38610ChickenBridge.scm",(void*)f_38610},
{"f_38623ChickenBridge.scm",(void*)f_38623},
{"f_38615ChickenBridge.scm",(void*)f_38615},
{"f_38563ChickenBridge.scm",(void*)f_38563},
{"f_38596ChickenBridge.scm",(void*)f_38596},
{"f_38557ChickenBridge.scm",(void*)f_38557},
{"f_24348ChickenBridge.scm",(void*)f_24348},
{"f_38477ChickenBridge.scm",(void*)f_38477},
{"f_38471ChickenBridge.scm",(void*)f_38471},
{"f_24351ChickenBridge.scm",(void*)f_24351},
{"f_38240ChickenBridge.scm",(void*)f_38240},
{"f_38244ChickenBridge.scm",(void*)f_38244},
{"f_38252ChickenBridge.scm",(void*)f_38252},
{"f_38275ChickenBridge.scm",(void*)f_38275},
{"f_38278ChickenBridge.scm",(void*)f_38278},
{"f_38281ChickenBridge.scm",(void*)f_38281},
{"f_38284ChickenBridge.scm",(void*)f_38284},
{"f_38344ChickenBridge.scm",(void*)f_38344},
{"f_38351ChickenBridge.scm",(void*)f_38351},
{"f_38361ChickenBridge.scm",(void*)f_38361},
{"f_38371ChickenBridge.scm",(void*)f_38371},
{"f_38385ChickenBridge.scm",(void*)f_38385},
{"f_38395ChickenBridge.scm",(void*)f_38395},
{"f_38405ChickenBridge.scm",(void*)f_38405},
{"f_38415ChickenBridge.scm",(void*)f_38415},
{"f_38287ChickenBridge.scm",(void*)f_38287},
{"f_38311ChickenBridge.scm",(void*)f_38311},
{"f_38290ChickenBridge.scm",(void*)f_38290},
{"f_38197ChickenBridge.scm",(void*)f_38197},
{"f_38230ChickenBridge.scm",(void*)f_38230},
{"f_38191ChickenBridge.scm",(void*)f_38191},
{"f_24354ChickenBridge.scm",(void*)f_24354},
{"f_38109ChickenBridge.scm",(void*)f_38109},
{"f_38113ChickenBridge.scm",(void*)f_38113},
{"f_38119ChickenBridge.scm",(void*)f_38119},
{"f_38139ChickenBridge.scm",(void*)f_38139},
{"f_38083ChickenBridge.scm",(void*)f_38083},
{"f_38093ChickenBridge.scm",(void*)f_38093},
{"f_38077ChickenBridge.scm",(void*)f_38077},
{"f_24357ChickenBridge.scm",(void*)f_24357},
{"f_37892ChickenBridge.scm",(void*)f_37892},
{"f_37896ChickenBridge.scm",(void*)f_37896},
{"f_37902ChickenBridge.scm",(void*)f_37902},
{"f_37911ChickenBridge.scm",(void*)f_37911},
{"f_37949ChickenBridge.scm",(void*)f_37949},
{"f_37941ChickenBridge.scm",(void*)f_37941},
{"f_37918ChickenBridge.scm",(void*)f_37918},
{"f_37922ChickenBridge.scm",(void*)f_37922},
{"f_37824ChickenBridge.scm",(void*)f_37824},
{"f_37843ChickenBridge.scm",(void*)f_37843},
{"f_37878ChickenBridge.scm",(void*)f_37878},
{"f_37849ChickenBridge.scm",(void*)f_37849},
{"f_37853ChickenBridge.scm",(void*)f_37853},
{"f_37867ChickenBridge.scm",(void*)f_37867},
{"f_37856ChickenBridge.scm",(void*)f_37856},
{"f_37837ChickenBridge.scm",(void*)f_37837},
{"f_37818ChickenBridge.scm",(void*)f_37818},
{"f_24360ChickenBridge.scm",(void*)f_24360},
{"f_37546ChickenBridge.scm",(void*)f_37546},
{"f_24883ChickenBridge.scm",(void*)f_24883},
{"f_37498ChickenBridge.scm",(void*)f_37498},
{"f_37490ChickenBridge.scm",(void*)f_37490},
{"f_24886ChickenBridge.scm",(void*)f_24886},
{"f_37370ChickenBridge.scm",(void*)f_37370},
{"f_24892ChickenBridge.scm",(void*)f_24892},
{"f_25428ChickenBridge.scm",(void*)f_25428},
{"f_25462ChickenBridge.scm",(void*)f_25462},
{"f_25454ChickenBridge.scm",(void*)f_25454},
{"f_25450ChickenBridge.scm",(void*)f_25450},
{"f_25435ChickenBridge.scm",(void*)f_25435},
{"f_25439ChickenBridge.scm",(void*)f_25439},
{"f_25432ChickenBridge.scm",(void*)f_25432},
{"f_24910ChickenBridge.scm",(void*)f_24910},
{"f_25421ChickenBridge.scm",(void*)f_25421},
{"f_25417ChickenBridge.scm",(void*)f_25417},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_25292ChickenBridge.scm",(void*)f_25292},
{"f_25313ChickenBridge.scm",(void*)f_25313},
{"f_25315ChickenBridge.scm",(void*)f_25315},
{"f_25329ChickenBridge.scm",(void*)f_25329},
{"f_25382ChickenBridge.scm",(void*)f_25382},
{"f_25332ChickenBridge.scm",(void*)f_25332},
{"f_25367ChickenBridge.scm",(void*)f_25367},
{"f_25335ChickenBridge.scm",(void*)f_25335},
{"f_25348ChickenBridge.scm",(void*)f_25348},
{"f_25360ChickenBridge.scm",(void*)f_25360},
{"f_25352ChickenBridge.scm",(void*)f_25352},
{"f_25338ChickenBridge.scm",(void*)f_25338},
{"f_25302ChickenBridge.scm",(void*)f_25302},
{"f_24920ChickenBridge.scm",(void*)f_24920},
{"f_25256ChickenBridge.scm",(void*)f_25256},
{"f_25282ChickenBridge.scm",(void*)f_25282},
{"f_25267ChickenBridge.scm",(void*)f_25267},
{"f_24926ChickenBridge.scm",(void*)f_24926},
{"f_24930ChickenBridge.scm",(void*)f_24930},
{"f_25133ChickenBridge.scm",(void*)f_25133},
{"f_25137ChickenBridge.scm",(void*)f_25137},
{"f_25141ChickenBridge.scm",(void*)f_25141},
{"f_25184ChickenBridge.scm",(void*)f_25184},
{"f_25194ChickenBridge.scm",(void*)f_25194},
{"f_25197ChickenBridge.scm",(void*)f_25197},
{"f_25218ChickenBridge.scm",(void*)f_25218},
{"f_25200ChickenBridge.scm",(void*)f_25200},
{"f_25204ChickenBridge.scm",(void*)f_25204},
{"f_25144ChickenBridge.scm",(void*)f_25144},
{"f_25147ChickenBridge.scm",(void*)f_25147},
{"f_24933ChickenBridge.scm",(void*)f_24933},
{"f_24937ChickenBridge.scm",(void*)f_24937},
{"f_24940ChickenBridge.scm",(void*)f_24940},
{"f_25093ChickenBridge.scm",(void*)f_25093},
{"f_25101ChickenBridge.scm",(void*)f_25101},
{"f_25097ChickenBridge.scm",(void*)f_25097},
{"f_24943ChickenBridge.scm",(void*)f_24943},
{"f_24971ChickenBridge.scm",(void*)f_24971},
{"f_24974ChickenBridge.scm",(void*)f_24974},
{"f_24977ChickenBridge.scm",(void*)f_24977},
{"f_24980ChickenBridge.scm",(void*)f_24980},
{"f_24983ChickenBridge.scm",(void*)f_24983},
{"f_25042ChickenBridge.scm",(void*)f_25042},
{"f_37324ChickenBridge.scm",(void*)f_37324},
{"f_37340ChickenBridge.scm",(void*)f_37340},
{"f_37343ChickenBridge.scm",(void*)f_37343},
{"f_37346ChickenBridge.scm",(void*)f_37346},
{"f_37349ChickenBridge.scm",(void*)f_37349},
{"f_37360ChickenBridge.scm",(void*)f_37360},
{"f_37318ChickenBridge.scm",(void*)f_37318},
{"f_25469ChickenBridge.scm",(void*)f_25469},
{"f_37179ChickenBridge.scm",(void*)f_37179},
{"f_37218ChickenBridge.scm",(void*)f_37218},
{"f_37192ChickenBridge.scm",(void*)f_37192},
{"f_37173ChickenBridge.scm",(void*)f_37173},
{"f_25472ChickenBridge.scm",(void*)f_25472},
{"f_36761ChickenBridge.scm",(void*)f_36761},
{"f_36765ChickenBridge.scm",(void*)f_36765},
{"f_36777ChickenBridge.scm",(void*)f_36777},
{"f_36835ChickenBridge.scm",(void*)f_36835},
{"f_36838ChickenBridge.scm",(void*)f_36838},
{"f_36841ChickenBridge.scm",(void*)f_36841},
{"f_37053ChickenBridge.scm",(void*)f_37053},
{"f_36991ChickenBridge.scm",(void*)f_36991},
{"f_37025ChickenBridge.scm",(void*)f_37025},
{"f_37000ChickenBridge.scm",(void*)f_37000},
{"f_37011ChickenBridge.scm",(void*)f_37011},
{"f_37007ChickenBridge.scm",(void*)f_37007},
{"f_36850ChickenBridge.scm",(void*)f_36850},
{"f_36928ChickenBridge.scm",(void*)f_36928},
{"f_36969ChickenBridge.scm",(void*)f_36969},
{"f_36973ChickenBridge.scm",(void*)f_36973},
{"f_36977ChickenBridge.scm",(void*)f_36977},
{"f_36932ChickenBridge.scm",(void*)f_36932},
{"f_36936ChickenBridge.scm",(void*)f_36936},
{"f_36963ChickenBridge.scm",(void*)f_36963},
{"f_36939ChickenBridge.scm",(void*)f_36939},
{"f_36853ChickenBridge.scm",(void*)f_36853},
{"f_36925ChickenBridge.scm",(void*)f_36925},
{"f_36867ChickenBridge.scm",(void*)f_36867},
{"f_36869ChickenBridge.scm",(void*)f_36869},
{"f_36917ChickenBridge.scm",(void*)f_36917},
{"f_36888ChickenBridge.scm",(void*)f_36888},
{"f_36905ChickenBridge.scm",(void*)f_36905},
{"f_36891ChickenBridge.scm",(void*)f_36891},
{"f_36884ChickenBridge.scm",(void*)f_36884},
{"f_36856ChickenBridge.scm",(void*)f_36856},
{"f_36786ChickenBridge.scm",(void*)f_36786},
{"f_36796ChickenBridge.scm",(void*)f_36796},
{"f_36802ChickenBridge.scm",(void*)f_36802},
{"f_36774ChickenBridge.scm",(void*)f_36774},
{"f_36722ChickenBridge.scm",(void*)f_36722},
{"f_36739ChickenBridge.scm",(void*)f_36739},
{"f_36755ChickenBridge.scm",(void*)f_36755},
{"f_36733ChickenBridge.scm",(void*)f_36733},
{"f_36716ChickenBridge.scm",(void*)f_36716},
{"f_25475ChickenBridge.scm",(void*)f_25475},
{"f_36640ChickenBridge.scm",(void*)f_36640},
{"f_25478ChickenBridge.scm",(void*)f_25478},
{"f_36616ChickenBridge.scm",(void*)f_36616},
{"f_36628ChickenBridge.scm",(void*)f_36628},
{"f_36624ChickenBridge.scm",(void*)f_36624},
{"f_36602ChickenBridge.scm",(void*)f_36602},
{"f_36610ChickenBridge.scm",(void*)f_36610},
{"f_36596ChickenBridge.scm",(void*)f_36596},
{"f_25481ChickenBridge.scm",(void*)f_25481},
{"f_36588ChickenBridge.scm",(void*)f_36588},
{"f_29252ChickenBridge.scm",(void*)f_29252},
{"f_29255ChickenBridge.scm",(void*)f_29255},
{"f_29421ChickenBridge.scm",(void*)f_29421},
{"f_29417ChickenBridge.scm",(void*)f_29417},
{"f_29407ChickenBridge.scm",(void*)f_29407},
{"f_29262ChickenBridge.scm",(void*)f_29262},
{"f_29266ChickenBridge.scm",(void*)f_29266},
{"f_29269ChickenBridge.scm",(void*)f_29269},
{"f_29280ChickenBridge.scm",(void*)f_29280},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29360ChickenBridge.scm",(void*)f_29360},
{"f_29368ChickenBridge.scm",(void*)f_29368},
{"f_29364ChickenBridge.scm",(void*)f_29364},
{"f_29356ChickenBridge.scm",(void*)f_29356},
{"f_29352ChickenBridge.scm",(void*)f_29352},
{"f_29324ChickenBridge.scm",(void*)f_29324},
{"f_29320ChickenBridge.scm",(void*)f_29320},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_25899ChickenBridge.scm",(void*)f_25899},
{"f_36574ChickenBridge.scm",(void*)f_36574},
{"f_25902ChickenBridge.scm",(void*)f_25902},
{"f_36545ChickenBridge.scm",(void*)f_36545},
{"f_36549ChickenBridge.scm",(void*)f_36549},
{"f_25905ChickenBridge.scm",(void*)f_25905},
{"f_36542ChickenBridge.scm",(void*)f_36542},
{"f_25908ChickenBridge.scm",(void*)f_25908},
{"f_36400ChickenBridge.scm",(void*)f_36400},
{"f_29434ChickenBridge.scm",(void*)f_29434},
{"f_29566ChickenBridge.scm",(void*)f_29566},
{"f_29437ChickenBridge.scm",(void*)f_29437},
{"f_29448ChickenBridge.scm",(void*)f_29448},
{"f_29456ChickenBridge.scm",(void*)f_29456},
{"f_29480ChickenBridge.scm",(void*)f_29480},
{"f_29483ChickenBridge.scm",(void*)f_29483},
{"f_29491ChickenBridge.scm",(void*)f_29491},
{"f_29499ChickenBridge.scm",(void*)f_29499},
{"f_29519ChickenBridge.scm",(void*)f_29519},
{"f_29515ChickenBridge.scm",(void*)f_29515},
{"f_29495ChickenBridge.scm",(void*)f_29495},
{"f_29487ChickenBridge.scm",(void*)f_29487},
{"f_29476ChickenBridge.scm",(void*)f_29476},
{"f_29452ChickenBridge.scm",(void*)f_29452},
{"f_29428ChickenBridge.scm",(void*)f_29428},
{"f_34350ChickenBridge.scm",(void*)f_34350},
{"f_34353ChickenBridge.scm",(void*)f_34353},
{"f_34356ChickenBridge.scm",(void*)f_34356},
{"f_34359ChickenBridge.scm",(void*)f_34359},
{"f_34362ChickenBridge.scm",(void*)f_34362},
{"f_34365ChickenBridge.scm",(void*)f_34365},
{"f_34368ChickenBridge.scm",(void*)f_34368},
{"f_34371ChickenBridge.scm",(void*)f_34371},
{"f_34374ChickenBridge.scm",(void*)f_34374},
{"f_34377ChickenBridge.scm",(void*)f_34377},
{"f_34380ChickenBridge.scm",(void*)f_34380},
{"f_35252ChickenBridge.scm",(void*)f_35252},
{"f_35255ChickenBridge.scm",(void*)f_35255},
{"f_35258ChickenBridge.scm",(void*)f_35258},
{"f_35261ChickenBridge.scm",(void*)f_35261},
{"f_35264ChickenBridge.scm",(void*)f_35264},
{"f_35267ChickenBridge.scm",(void*)f_35267},
{"f_35270ChickenBridge.scm",(void*)f_35270},
{"f_35273ChickenBridge.scm",(void*)f_35273},
{"f_36337ChickenBridge.scm",(void*)f_36337},
{"f_36365ChickenBridge.scm",(void*)f_36365},
{"f_36004ChickenBridge.scm",(void*)f_36004},
{"f_36331ChickenBridge.scm",(void*)f_36331},
{"f_36049ChickenBridge.scm",(void*)f_36049},
{"f_36055ChickenBridge.scm",(void*)f_36055},
{"f_36058ChickenBridge.scm",(void*)f_36058},
{"f_36061ChickenBridge.scm",(void*)f_36061},
{"f_36065ChickenBridge.scm",(void*)f_36065},
{"f_36275ChickenBridge.scm",(void*)f_36275},
{"f_36287ChickenBridge.scm",(void*)f_36287},
{"f_36283ChickenBridge.scm",(void*)f_36283},
{"f_36068ChickenBridge.scm",(void*)f_36068},
{"f_36232ChickenBridge.scm",(void*)f_36232},
{"f_36268ChickenBridge.scm",(void*)f_36268},
{"f_36261ChickenBridge.scm",(void*)f_36261},
{"f_36071ChickenBridge.scm",(void*)f_36071},
{"f_36170ChickenBridge.scm",(void*)f_36170},
{"f_36178ChickenBridge.scm",(void*)f_36178},
{"f_36174ChickenBridge.scm",(void*)f_36174},
{"f_36166ChickenBridge.scm",(void*)f_36166},
{"f_36162ChickenBridge.scm",(void*)f_36162},
{"f_36118ChickenBridge.scm",(void*)f_36118},
{"f_36114ChickenBridge.scm",(void*)f_36114},
{"f_36081ChickenBridge.scm",(void*)f_36081},
{"f_36092ChickenBridge.scm",(void*)f_36092},
{"f_36100ChickenBridge.scm",(void*)f_36100},
{"f_36096ChickenBridge.scm",(void*)f_36096},
{"f_36294ChickenBridge.scm",(void*)f_36294},
{"f_36302ChickenBridge.scm",(void*)f_36302},
{"f_36316ChickenBridge.scm",(void*)f_36316},
{"f_36306ChickenBridge.scm",(void*)f_36306},
{"f_36297ChickenBridge.scm",(void*)f_36297},
{"f_36300ChickenBridge.scm",(void*)f_36300},
{"f_36006ChickenBridge.scm",(void*)f_36006},
{"f_36022ChickenBridge.scm",(void*)f_36022},
{"f_35933ChickenBridge.scm",(void*)f_35933},
{"f_35944ChickenBridge.scm",(void*)f_35944},
{"f_35947ChickenBridge.scm",(void*)f_35947},
{"f_35954ChickenBridge.scm",(void*)f_35954},
{"f_35923ChickenBridge.scm",(void*)f_35923},
{"f_35578ChickenBridge.scm",(void*)f_35578},
{"f_35927ChickenBridge.scm",(void*)f_35927},
{"f_35865ChickenBridge.scm",(void*)f_35865},
{"f_35883ChickenBridge.scm",(void*)f_35883},
{"f_35893ChickenBridge.scm",(void*)f_35893},
{"f_35869ChickenBridge.scm",(void*)f_35869},
{"f_35856ChickenBridge.scm",(void*)f_35856},
{"f_35556ChickenBridge.scm",(void*)f_35556},
{"f_35860ChickenBridge.scm",(void*)f_35860},
{"f_35850ChickenBridge.scm",(void*)f_35850},
{"f_35538ChickenBridge.scm",(void*)f_35538},
{"f_35841ChickenBridge.scm",(void*)f_35841},
{"f_35547ChickenBridge.scm",(void*)f_35547},
{"f_35845ChickenBridge.scm",(void*)f_35845},
{"f_35778ChickenBridge.scm",(void*)f_35778},
{"f_35803ChickenBridge.scm",(void*)f_35803},
{"f_35503ChickenBridge.scm",(void*)f_35503},
{"f_35791ChickenBridge.scm",(void*)f_35791},
{"f_35602ChickenBridge.scm",(void*)f_35602},
{"f_35729ChickenBridge.scm",(void*)f_35729},
{"f_35724ChickenBridge.scm",(void*)f_35724},
{"f_35604ChickenBridge.scm",(void*)f_35604},
{"f_35723ChickenBridge.scm",(void*)f_35723},
{"f_35719ChickenBridge.scm",(void*)f_35719},
{"f_35711ChickenBridge.scm",(void*)f_35711},
{"f_35675ChickenBridge.scm",(void*)f_35675},
{"f_35708ChickenBridge.scm",(void*)f_35708},
{"f_35704ChickenBridge.scm",(void*)f_35704},
{"f_35685ChickenBridge.scm",(void*)f_35685},
{"f_35664ChickenBridge.scm",(void*)f_35664},
{"f_35634ChickenBridge.scm",(void*)f_35634},
{"f_35606ChickenBridge.scm",(void*)f_35606},
{"f_35583ChickenBridge.scm",(void*)f_35583},
{"f_35588ChickenBridge.scm",(void*)f_35588},
{"f_35593ChickenBridge.scm",(void*)f_35593},
{"f_35561ChickenBridge.scm",(void*)f_35561},
{"f_35565ChickenBridge.scm",(void*)f_35565},
{"f_35517ChickenBridge.scm",(void*)f_35517},
{"f_35521ChickenBridge.scm",(void*)f_35521},
{"f_35508ChickenBridge.scm",(void*)f_35508},
{"f_35512ChickenBridge.scm",(void*)f_35512},
{"f_35496ChickenBridge.scm",(void*)f_35496},
{"f_35493ChickenBridge.scm",(void*)f_35493},
{"f_35479ChickenBridge.scm",(void*)f_35479},
{"f_35484ChickenBridge.scm",(void*)f_35484},
{"f_35465ChickenBridge.scm",(void*)f_35465},
{"f_35470ChickenBridge.scm",(void*)f_35470},
{"f_35275ChickenBridge.scm",(void*)f_35275},
{"f_35336ChickenBridge.scm",(void*)f_35336},
{"f_35338ChickenBridge.scm",(void*)f_35338},
{"f_35348ChickenBridge.scm",(void*)f_35348},
{"f_35367ChickenBridge.scm",(void*)f_35367},
{"f_35407ChickenBridge.scm",(void*)f_35407},
{"f_35449ChickenBridge.scm",(void*)f_35449},
{"f_35419ChickenBridge.scm",(void*)f_35419},
{"f_35404ChickenBridge.scm",(void*)f_35404},
{"f_35322ChickenBridge.scm",(void*)f_35322},
{"f_35287ChickenBridge.scm",(void*)f_35287},
{"f_35314ChickenBridge.scm",(void*)f_35314},
{"f_35295ChickenBridge.scm",(void*)f_35295},
{"f_35302ChickenBridge.scm",(void*)f_35302},
{"f_35306ChickenBridge.scm",(void*)f_35306},
{"f_35310ChickenBridge.scm",(void*)f_35310},
{"f_35387ChickenBridge.scm",(void*)f_35387},
{"f_35365ChickenBridge.scm",(void*)f_35365},
{"f_35351ChickenBridge.scm",(void*)f_35351},
{"f_35354ChickenBridge.scm",(void*)f_35354},
{"f_35329ChickenBridge.scm",(void*)f_35329},
{"f_34801ChickenBridge.scm",(void*)f_34801},
{"f_35228ChickenBridge.scm",(void*)f_35228},
{"f_35243ChickenBridge.scm",(void*)f_35243},
{"f_35235ChickenBridge.scm",(void*)f_35235},
{"f_35199ChickenBridge.scm",(void*)f_35199},
{"f_35203ChickenBridge.scm",(void*)f_35203},
{"f_35164ChickenBridge.scm",(void*)f_35164},
{"f_35168ChickenBridge.scm",(void*)f_35168},
{"f_35129ChickenBridge.scm",(void*)f_35129},
{"f_35133ChickenBridge.scm",(void*)f_35133},
{"f_34805ChickenBridge.scm",(void*)f_34805},
{"f_35093ChickenBridge.scm",(void*)f_35093},
{"f_35108ChickenBridge.scm",(void*)f_35108},
{"f_35100ChickenBridge.scm",(void*)f_35100},
{"f_35064ChickenBridge.scm",(void*)f_35064},
{"f_35068ChickenBridge.scm",(void*)f_35068},
{"f_35029ChickenBridge.scm",(void*)f_35029},
{"f_35033ChickenBridge.scm",(void*)f_35033},
{"f_34994ChickenBridge.scm",(void*)f_34994},
{"f_34998ChickenBridge.scm",(void*)f_34998},
{"f_34808ChickenBridge.scm",(void*)f_34808},
{"f_34958ChickenBridge.scm",(void*)f_34958},
{"f_34973ChickenBridge.scm",(void*)f_34973},
{"f_34965ChickenBridge.scm",(void*)f_34965},
{"f_34929ChickenBridge.scm",(void*)f_34929},
{"f_34933ChickenBridge.scm",(void*)f_34933},
{"f_34894ChickenBridge.scm",(void*)f_34894},
{"f_34898ChickenBridge.scm",(void*)f_34898},
{"f_34859ChickenBridge.scm",(void*)f_34859},
{"f_34863ChickenBridge.scm",(void*)f_34863},
{"f_34811ChickenBridge.scm",(void*)f_34811},
{"f_34814ChickenBridge.scm",(void*)f_34814},
{"f_34817ChickenBridge.scm",(void*)f_34817},
{"f_34821ChickenBridge.scm",(void*)f_34821},
{"f_34563ChickenBridge.scm",(void*)f_34563},
{"f_34778ChickenBridge.scm",(void*)f_34778},
{"f_34793ChickenBridge.scm",(void*)f_34793},
{"f_34785ChickenBridge.scm",(void*)f_34785},
{"f_34749ChickenBridge.scm",(void*)f_34749},
{"f_34753ChickenBridge.scm",(void*)f_34753},
{"f_34714ChickenBridge.scm",(void*)f_34714},
{"f_34718ChickenBridge.scm",(void*)f_34718},
{"f_34567ChickenBridge.scm",(void*)f_34567},
{"f_34678ChickenBridge.scm",(void*)f_34678},
{"f_34693ChickenBridge.scm",(void*)f_34693},
{"f_34685ChickenBridge.scm",(void*)f_34685},
{"f_34649ChickenBridge.scm",(void*)f_34649},
{"f_34653ChickenBridge.scm",(void*)f_34653},
{"f_34614ChickenBridge.scm",(void*)f_34614},
{"f_34618ChickenBridge.scm",(void*)f_34618},
{"f_34570ChickenBridge.scm",(void*)f_34570},
{"f_34573ChickenBridge.scm",(void*)f_34573},
{"f_34576ChickenBridge.scm",(void*)f_34576},
{"f_34580ChickenBridge.scm",(void*)f_34580},
{"f_34506ChickenBridge.scm",(void*)f_34506},
{"f_34539ChickenBridge.scm",(void*)f_34539},
{"f_34519ChickenBridge.scm",(void*)f_34519},
{"f_34527ChickenBridge.scm",(void*)f_34527},
{"f_34510ChickenBridge.scm",(void*)f_34510},
{"f_34449ChickenBridge.scm",(void*)f_34449},
{"f_34482ChickenBridge.scm",(void*)f_34482},
{"f_34462ChickenBridge.scm",(void*)f_34462},
{"f_34470ChickenBridge.scm",(void*)f_34470},
{"f_34453ChickenBridge.scm",(void*)f_34453},
{"f_34441ChickenBridge.scm",(void*)f_34441},
{"f_34446ChickenBridge.scm",(void*)f_34446},
{"f_34433ChickenBridge.scm",(void*)f_34433},
{"f_34438ChickenBridge.scm",(void*)f_34438},
{"f_34390ChickenBridge.scm",(void*)f_34390},
{"f_34417ChickenBridge.scm",(void*)f_34417},
{"f_34411ChickenBridge.scm",(void*)f_34411},
{"f_34415ChickenBridge.scm",(void*)f_34415},
{"f_34401ChickenBridge.scm",(void*)f_34401},
{"f_34382ChickenBridge.scm",(void*)f_34382},
{"f_34387ChickenBridge.scm",(void*)f_34387},
{"f_34292ChickenBridge.scm",(void*)f_34292},
{"f_34346ChickenBridge.scm",(void*)f_34346},
{"f_34341ChickenBridge.scm",(void*)f_34341},
{"f_34304ChickenBridge.scm",(void*)f_34304},
{"f_34310ChickenBridge.scm",(void*)f_34310},
{"f_34336ChickenBridge.scm",(void*)f_34336},
{"f_34340ChickenBridge.scm",(void*)f_34340},
{"f_34316ChickenBridge.scm",(void*)f_34316},
{"f_34334ChickenBridge.scm",(void*)f_34334},
{"f_34331ChickenBridge.scm",(void*)f_34331},
{"f_34327ChickenBridge.scm",(void*)f_34327},
{"f_34320ChickenBridge.scm",(void*)f_34320},
{"f_34277ChickenBridge.scm",(void*)f_34277},
{"f_34282ChickenBridge.scm",(void*)f_34282},
{"f_34249ChickenBridge.scm",(void*)f_34249},
{"f_34254ChickenBridge.scm",(void*)f_34254},
{"f_34221ChickenBridge.scm",(void*)f_34221},
{"f_34226ChickenBridge.scm",(void*)f_34226},
{"f_34193ChickenBridge.scm",(void*)f_34193},
{"f_34198ChickenBridge.scm",(void*)f_34198},
{"f_34165ChickenBridge.scm",(void*)f_34165},
{"f_34170ChickenBridge.scm",(void*)f_34170},
{"f_34137ChickenBridge.scm",(void*)f_34137},
{"f_34142ChickenBridge.scm",(void*)f_34142},
{"f_34109ChickenBridge.scm",(void*)f_34109},
{"f_34114ChickenBridge.scm",(void*)f_34114},
{"f_34081ChickenBridge.scm",(void*)f_34081},
{"f_34086ChickenBridge.scm",(void*)f_34086},
{"f_34053ChickenBridge.scm",(void*)f_34053},
{"f_34058ChickenBridge.scm",(void*)f_34058},
{"f_34025ChickenBridge.scm",(void*)f_34025},
{"f_34030ChickenBridge.scm",(void*)f_34030},
{"f_34002ChickenBridge.scm",(void*)f_34002},
{"f_34007ChickenBridge.scm",(void*)f_34007},
{"f_34006ChickenBridge.scm",(void*)f_34006},
{"f_33983ChickenBridge.scm",(void*)f_33983},
{"f_33988ChickenBridge.scm",(void*)f_33988},
{"f_33928ChickenBridge.scm",(void*)f_33928},
{"f_33935ChickenBridge.scm",(void*)f_33935},
{"f_33938ChickenBridge.scm",(void*)f_33938},
{"f_33962ChickenBridge.scm",(void*)f_33962},
{"f_33942ChickenBridge.scm",(void*)f_33942},
{"f_33932ChickenBridge.scm",(void*)f_33932},
{"f_33881ChickenBridge.scm",(void*)f_33881},
{"f_33888ChickenBridge.scm",(void*)f_33888},
{"f_33891ChickenBridge.scm",(void*)f_33891},
{"f_33911ChickenBridge.scm",(void*)f_33911},
{"f_33895ChickenBridge.scm",(void*)f_33895},
{"f_33858ChickenBridge.scm",(void*)f_33858},
{"f_33863ChickenBridge.scm",(void*)f_33863},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33839ChickenBridge.scm",(void*)f_33839},
{"f_33844ChickenBridge.scm",(void*)f_33844},
{"f_33816ChickenBridge.scm",(void*)f_33816},
{"f_33821ChickenBridge.scm",(void*)f_33821},
{"f_33820ChickenBridge.scm",(void*)f_33820},
{"f_33797ChickenBridge.scm",(void*)f_33797},
{"f_33802ChickenBridge.scm",(void*)f_33802},
{"f_33778ChickenBridge.scm",(void*)f_33778},
{"f_33783ChickenBridge.scm",(void*)f_33783},
{"f_33782ChickenBridge.scm",(void*)f_33782},
{"f_33763ChickenBridge.scm",(void*)f_33763},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_33744ChickenBridge.scm",(void*)f_33744},
{"f_33749ChickenBridge.scm",(void*)f_33749},
{"f_33748ChickenBridge.scm",(void*)f_33748},
{"f_33729ChickenBridge.scm",(void*)f_33729},
{"f_33734ChickenBridge.scm",(void*)f_33734},
{"f_33714ChickenBridge.scm",(void*)f_33714},
{"f_33719ChickenBridge.scm",(void*)f_33719},
{"f_33696ChickenBridge.scm",(void*)f_33696},
{"f_33704ChickenBridge.scm",(void*)f_33704},
{"f_33700ChickenBridge.scm",(void*)f_33700},
{"f_33226ChickenBridge.scm",(void*)f_33226},
{"f_33654ChickenBridge.scm",(void*)f_33654},
{"f_33669ChickenBridge.scm",(void*)f_33669},
{"f_33661ChickenBridge.scm",(void*)f_33661},
{"f_33625ChickenBridge.scm",(void*)f_33625},
{"f_33629ChickenBridge.scm",(void*)f_33629},
{"f_33590ChickenBridge.scm",(void*)f_33590},
{"f_33594ChickenBridge.scm",(void*)f_33594},
{"f_33555ChickenBridge.scm",(void*)f_33555},
{"f_33559ChickenBridge.scm",(void*)f_33559},
{"f_33230ChickenBridge.scm",(void*)f_33230},
{"f_33519ChickenBridge.scm",(void*)f_33519},
{"f_33534ChickenBridge.scm",(void*)f_33534},
{"f_33526ChickenBridge.scm",(void*)f_33526},
{"f_33490ChickenBridge.scm",(void*)f_33490},
{"f_33494ChickenBridge.scm",(void*)f_33494},
{"f_33455ChickenBridge.scm",(void*)f_33455},
{"f_33459ChickenBridge.scm",(void*)f_33459},
{"f_33420ChickenBridge.scm",(void*)f_33420},
{"f_33424ChickenBridge.scm",(void*)f_33424},
{"f_33233ChickenBridge.scm",(void*)f_33233},
{"f_33384ChickenBridge.scm",(void*)f_33384},
{"f_33399ChickenBridge.scm",(void*)f_33399},
{"f_33391ChickenBridge.scm",(void*)f_33391},
{"f_33355ChickenBridge.scm",(void*)f_33355},
{"f_33359ChickenBridge.scm",(void*)f_33359},
{"f_33320ChickenBridge.scm",(void*)f_33320},
{"f_33324ChickenBridge.scm",(void*)f_33324},
{"f_33285ChickenBridge.scm",(void*)f_33285},
{"f_33289ChickenBridge.scm",(void*)f_33289},
{"f_33236ChickenBridge.scm",(void*)f_33236},
{"f_33239ChickenBridge.scm",(void*)f_33239},
{"f_33243ChickenBridge.scm",(void*)f_33243},
{"f_33207ChickenBridge.scm",(void*)f_33207},
{"f_33212ChickenBridge.scm",(void*)f_33212},
{"f_32756ChickenBridge.scm",(void*)f_32756},
{"f_33184ChickenBridge.scm",(void*)f_33184},
{"f_33199ChickenBridge.scm",(void*)f_33199},
{"f_33191ChickenBridge.scm",(void*)f_33191},
{"f_33155ChickenBridge.scm",(void*)f_33155},
{"f_33159ChickenBridge.scm",(void*)f_33159},
{"f_33120ChickenBridge.scm",(void*)f_33120},
{"f_33124ChickenBridge.scm",(void*)f_33124},
{"f_33085ChickenBridge.scm",(void*)f_33085},
{"f_33089ChickenBridge.scm",(void*)f_33089},
{"f_32760ChickenBridge.scm",(void*)f_32760},
{"f_33049ChickenBridge.scm",(void*)f_33049},
{"f_33064ChickenBridge.scm",(void*)f_33064},
{"f_33056ChickenBridge.scm",(void*)f_33056},
{"f_33020ChickenBridge.scm",(void*)f_33020},
{"f_33024ChickenBridge.scm",(void*)f_33024},
{"f_32985ChickenBridge.scm",(void*)f_32985},
{"f_32989ChickenBridge.scm",(void*)f_32989},
{"f_32950ChickenBridge.scm",(void*)f_32950},
{"f_32954ChickenBridge.scm",(void*)f_32954},
{"f_32763ChickenBridge.scm",(void*)f_32763},
{"f_32914ChickenBridge.scm",(void*)f_32914},
{"f_32929ChickenBridge.scm",(void*)f_32929},
{"f_32921ChickenBridge.scm",(void*)f_32921},
{"f_32885ChickenBridge.scm",(void*)f_32885},
{"f_32889ChickenBridge.scm",(void*)f_32889},
{"f_32850ChickenBridge.scm",(void*)f_32850},
{"f_32854ChickenBridge.scm",(void*)f_32854},
{"f_32815ChickenBridge.scm",(void*)f_32815},
{"f_32819ChickenBridge.scm",(void*)f_32819},
{"f_32766ChickenBridge.scm",(void*)f_32766},
{"f_32769ChickenBridge.scm",(void*)f_32769},
{"f_32773ChickenBridge.scm",(void*)f_32773},
{"f_32737ChickenBridge.scm",(void*)f_32737},
{"f_32742ChickenBridge.scm",(void*)f_32742},
{"f_32286ChickenBridge.scm",(void*)f_32286},
{"f_32714ChickenBridge.scm",(void*)f_32714},
{"f_32729ChickenBridge.scm",(void*)f_32729},
{"f_32721ChickenBridge.scm",(void*)f_32721},
{"f_32685ChickenBridge.scm",(void*)f_32685},
{"f_32689ChickenBridge.scm",(void*)f_32689},
{"f_32650ChickenBridge.scm",(void*)f_32650},
{"f_32654ChickenBridge.scm",(void*)f_32654},
{"f_32615ChickenBridge.scm",(void*)f_32615},
{"f_32619ChickenBridge.scm",(void*)f_32619},
{"f_32290ChickenBridge.scm",(void*)f_32290},
{"f_32579ChickenBridge.scm",(void*)f_32579},
{"f_32594ChickenBridge.scm",(void*)f_32594},
{"f_32586ChickenBridge.scm",(void*)f_32586},
{"f_32550ChickenBridge.scm",(void*)f_32550},
{"f_32554ChickenBridge.scm",(void*)f_32554},
{"f_32515ChickenBridge.scm",(void*)f_32515},
{"f_32519ChickenBridge.scm",(void*)f_32519},
{"f_32480ChickenBridge.scm",(void*)f_32480},
{"f_32484ChickenBridge.scm",(void*)f_32484},
{"f_32293ChickenBridge.scm",(void*)f_32293},
{"f_32444ChickenBridge.scm",(void*)f_32444},
{"f_32459ChickenBridge.scm",(void*)f_32459},
{"f_32451ChickenBridge.scm",(void*)f_32451},
{"f_32415ChickenBridge.scm",(void*)f_32415},
{"f_32419ChickenBridge.scm",(void*)f_32419},
{"f_32380ChickenBridge.scm",(void*)f_32380},
{"f_32384ChickenBridge.scm",(void*)f_32384},
{"f_32345ChickenBridge.scm",(void*)f_32345},
{"f_32349ChickenBridge.scm",(void*)f_32349},
{"f_32296ChickenBridge.scm",(void*)f_32296},
{"f_32299ChickenBridge.scm",(void*)f_32299},
{"f_32303ChickenBridge.scm",(void*)f_32303},
{"f_32267ChickenBridge.scm",(void*)f_32267},
{"f_32272ChickenBridge.scm",(void*)f_32272},
{"f_31538ChickenBridge.scm",(void*)f_31538},
{"f_32244ChickenBridge.scm",(void*)f_32244},
{"f_32259ChickenBridge.scm",(void*)f_32259},
{"f_32251ChickenBridge.scm",(void*)f_32251},
{"f_32215ChickenBridge.scm",(void*)f_32215},
{"f_32219ChickenBridge.scm",(void*)f_32219},
{"f_32180ChickenBridge.scm",(void*)f_32180},
{"f_32184ChickenBridge.scm",(void*)f_32184},
{"f_32145ChickenBridge.scm",(void*)f_32145},
{"f_32149ChickenBridge.scm",(void*)f_32149},
{"f_32110ChickenBridge.scm",(void*)f_32110},
{"f_32114ChickenBridge.scm",(void*)f_32114},
{"f_31542ChickenBridge.scm",(void*)f_31542},
{"f_32074ChickenBridge.scm",(void*)f_32074},
{"f_32089ChickenBridge.scm",(void*)f_32089},
{"f_32081ChickenBridge.scm",(void*)f_32081},
{"f_32045ChickenBridge.scm",(void*)f_32045},
{"f_32049ChickenBridge.scm",(void*)f_32049},
{"f_32010ChickenBridge.scm",(void*)f_32010},
{"f_32014ChickenBridge.scm",(void*)f_32014},
{"f_31975ChickenBridge.scm",(void*)f_31975},
{"f_31979ChickenBridge.scm",(void*)f_31979},
{"f_31940ChickenBridge.scm",(void*)f_31940},
{"f_31944ChickenBridge.scm",(void*)f_31944},
{"f_31545ChickenBridge.scm",(void*)f_31545},
{"f_31904ChickenBridge.scm",(void*)f_31904},
{"f_31919ChickenBridge.scm",(void*)f_31919},
{"f_31911ChickenBridge.scm",(void*)f_31911},
{"f_31875ChickenBridge.scm",(void*)f_31875},
{"f_31879ChickenBridge.scm",(void*)f_31879},
{"f_31840ChickenBridge.scm",(void*)f_31840},
{"f_31844ChickenBridge.scm",(void*)f_31844},
{"f_31805ChickenBridge.scm",(void*)f_31805},
{"f_31809ChickenBridge.scm",(void*)f_31809},
{"f_31770ChickenBridge.scm",(void*)f_31770},
{"f_31774ChickenBridge.scm",(void*)f_31774},
{"f_31548ChickenBridge.scm",(void*)f_31548},
{"f_31734ChickenBridge.scm",(void*)f_31734},
{"f_31749ChickenBridge.scm",(void*)f_31749},
{"f_31741ChickenBridge.scm",(void*)f_31741},
{"f_31705ChickenBridge.scm",(void*)f_31705},
{"f_31709ChickenBridge.scm",(void*)f_31709},
{"f_31670ChickenBridge.scm",(void*)f_31670},
{"f_31674ChickenBridge.scm",(void*)f_31674},
{"f_31635ChickenBridge.scm",(void*)f_31635},
{"f_31639ChickenBridge.scm",(void*)f_31639},
{"f_31600ChickenBridge.scm",(void*)f_31600},
{"f_31604ChickenBridge.scm",(void*)f_31604},
{"f_31551ChickenBridge.scm",(void*)f_31551},
{"f_31554ChickenBridge.scm",(void*)f_31554},
{"f_31558ChickenBridge.scm",(void*)f_31558},
{"f_31519ChickenBridge.scm",(void*)f_31519},
{"f_31524ChickenBridge.scm",(void*)f_31524},
{"f_30790ChickenBridge.scm",(void*)f_30790},
{"f_31496ChickenBridge.scm",(void*)f_31496},
{"f_31511ChickenBridge.scm",(void*)f_31511},
{"f_31503ChickenBridge.scm",(void*)f_31503},
{"f_31467ChickenBridge.scm",(void*)f_31467},
{"f_31471ChickenBridge.scm",(void*)f_31471},
{"f_31432ChickenBridge.scm",(void*)f_31432},
{"f_31436ChickenBridge.scm",(void*)f_31436},
{"f_31397ChickenBridge.scm",(void*)f_31397},
{"f_31401ChickenBridge.scm",(void*)f_31401},
{"f_31362ChickenBridge.scm",(void*)f_31362},
{"f_31366ChickenBridge.scm",(void*)f_31366},
{"f_30794ChickenBridge.scm",(void*)f_30794},
{"f_31326ChickenBridge.scm",(void*)f_31326},
{"f_31341ChickenBridge.scm",(void*)f_31341},
{"f_31333ChickenBridge.scm",(void*)f_31333},
{"f_31297ChickenBridge.scm",(void*)f_31297},
{"f_31301ChickenBridge.scm",(void*)f_31301},
{"f_31262ChickenBridge.scm",(void*)f_31262},
{"f_31266ChickenBridge.scm",(void*)f_31266},
{"f_31227ChickenBridge.scm",(void*)f_31227},
{"f_31231ChickenBridge.scm",(void*)f_31231},
{"f_31192ChickenBridge.scm",(void*)f_31192},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_30797ChickenBridge.scm",(void*)f_30797},
{"f_31156ChickenBridge.scm",(void*)f_31156},
{"f_31171ChickenBridge.scm",(void*)f_31171},
{"f_31163ChickenBridge.scm",(void*)f_31163},
{"f_31127ChickenBridge.scm",(void*)f_31127},
{"f_31131ChickenBridge.scm",(void*)f_31131},
{"f_31092ChickenBridge.scm",(void*)f_31092},
{"f_31096ChickenBridge.scm",(void*)f_31096},
{"f_31057ChickenBridge.scm",(void*)f_31057},
{"f_31061ChickenBridge.scm",(void*)f_31061},
{"f_31022ChickenBridge.scm",(void*)f_31022},
{"f_31026ChickenBridge.scm",(void*)f_31026},
{"f_30800ChickenBridge.scm",(void*)f_30800},
{"f_30986ChickenBridge.scm",(void*)f_30986},
{"f_31001ChickenBridge.scm",(void*)f_31001},
{"f_30993ChickenBridge.scm",(void*)f_30993},
{"f_30957ChickenBridge.scm",(void*)f_30957},
{"f_30961ChickenBridge.scm",(void*)f_30961},
{"f_30922ChickenBridge.scm",(void*)f_30922},
{"f_30926ChickenBridge.scm",(void*)f_30926},
{"f_30887ChickenBridge.scm",(void*)f_30887},
{"f_30891ChickenBridge.scm",(void*)f_30891},
{"f_30852ChickenBridge.scm",(void*)f_30852},
{"f_30856ChickenBridge.scm",(void*)f_30856},
{"f_30803ChickenBridge.scm",(void*)f_30803},
{"f_30806ChickenBridge.scm",(void*)f_30806},
{"f_30810ChickenBridge.scm",(void*)f_30810},
{"f_30771ChickenBridge.scm",(void*)f_30771},
{"f_30776ChickenBridge.scm",(void*)f_30776},
{"f_30320ChickenBridge.scm",(void*)f_30320},
{"f_30748ChickenBridge.scm",(void*)f_30748},
{"f_30763ChickenBridge.scm",(void*)f_30763},
{"f_30755ChickenBridge.scm",(void*)f_30755},
{"f_30719ChickenBridge.scm",(void*)f_30719},
{"f_30723ChickenBridge.scm",(void*)f_30723},
{"f_30684ChickenBridge.scm",(void*)f_30684},
{"f_30688ChickenBridge.scm",(void*)f_30688},
{"f_30649ChickenBridge.scm",(void*)f_30649},
{"f_30653ChickenBridge.scm",(void*)f_30653},
{"f_30324ChickenBridge.scm",(void*)f_30324},
{"f_30613ChickenBridge.scm",(void*)f_30613},
{"f_30628ChickenBridge.scm",(void*)f_30628},
{"f_30620ChickenBridge.scm",(void*)f_30620},
{"f_30584ChickenBridge.scm",(void*)f_30584},
{"f_30588ChickenBridge.scm",(void*)f_30588},
{"f_30549ChickenBridge.scm",(void*)f_30549},
{"f_30553ChickenBridge.scm",(void*)f_30553},
{"f_30514ChickenBridge.scm",(void*)f_30514},
{"f_30518ChickenBridge.scm",(void*)f_30518},
{"f_30327ChickenBridge.scm",(void*)f_30327},
{"f_30478ChickenBridge.scm",(void*)f_30478},
{"f_30493ChickenBridge.scm",(void*)f_30493},
{"f_30485ChickenBridge.scm",(void*)f_30485},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30453ChickenBridge.scm",(void*)f_30453},
{"f_30414ChickenBridge.scm",(void*)f_30414},
{"f_30418ChickenBridge.scm",(void*)f_30418},
{"f_30379ChickenBridge.scm",(void*)f_30379},
{"f_30383ChickenBridge.scm",(void*)f_30383},
{"f_30330ChickenBridge.scm",(void*)f_30330},
{"f_30333ChickenBridge.scm",(void*)f_30333},
{"f_30337ChickenBridge.scm",(void*)f_30337},
{"f_30301ChickenBridge.scm",(void*)f_30301},
{"f_30306ChickenBridge.scm",(void*)f_30306},
{"f_29572ChickenBridge.scm",(void*)f_29572},
{"f_30278ChickenBridge.scm",(void*)f_30278},
{"f_30293ChickenBridge.scm",(void*)f_30293},
{"f_30285ChickenBridge.scm",(void*)f_30285},
{"f_30249ChickenBridge.scm",(void*)f_30249},
{"f_30253ChickenBridge.scm",(void*)f_30253},
{"f_30214ChickenBridge.scm",(void*)f_30214},
{"f_30218ChickenBridge.scm",(void*)f_30218},
{"f_30179ChickenBridge.scm",(void*)f_30179},
{"f_30183ChickenBridge.scm",(void*)f_30183},
{"f_30144ChickenBridge.scm",(void*)f_30144},
{"f_30148ChickenBridge.scm",(void*)f_30148},
{"f_29576ChickenBridge.scm",(void*)f_29576},
{"f_30108ChickenBridge.scm",(void*)f_30108},
{"f_30123ChickenBridge.scm",(void*)f_30123},
{"f_30115ChickenBridge.scm",(void*)f_30115},
{"f_30079ChickenBridge.scm",(void*)f_30079},
{"f_30083ChickenBridge.scm",(void*)f_30083},
{"f_30044ChickenBridge.scm",(void*)f_30044},
{"f_30048ChickenBridge.scm",(void*)f_30048},
{"f_30009ChickenBridge.scm",(void*)f_30009},
{"f_30013ChickenBridge.scm",(void*)f_30013},
{"f_29974ChickenBridge.scm",(void*)f_29974},
{"f_29978ChickenBridge.scm",(void*)f_29978},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29938ChickenBridge.scm",(void*)f_29938},
{"f_29953ChickenBridge.scm",(void*)f_29953},
{"f_29945ChickenBridge.scm",(void*)f_29945},
{"f_29909ChickenBridge.scm",(void*)f_29909},
{"f_29913ChickenBridge.scm",(void*)f_29913},
{"f_29874ChickenBridge.scm",(void*)f_29874},
{"f_29878ChickenBridge.scm",(void*)f_29878},
{"f_29839ChickenBridge.scm",(void*)f_29839},
{"f_29843ChickenBridge.scm",(void*)f_29843},
{"f_29804ChickenBridge.scm",(void*)f_29804},
{"f_29808ChickenBridge.scm",(void*)f_29808},
{"f_29582ChickenBridge.scm",(void*)f_29582},
{"f_29768ChickenBridge.scm",(void*)f_29768},
{"f_29783ChickenBridge.scm",(void*)f_29783},
{"f_29775ChickenBridge.scm",(void*)f_29775},
{"f_29739ChickenBridge.scm",(void*)f_29739},
{"f_29743ChickenBridge.scm",(void*)f_29743},
{"f_29704ChickenBridge.scm",(void*)f_29704},
{"f_29708ChickenBridge.scm",(void*)f_29708},
{"f_29669ChickenBridge.scm",(void*)f_29669},
{"f_29673ChickenBridge.scm",(void*)f_29673},
{"f_29634ChickenBridge.scm",(void*)f_29634},
{"f_29638ChickenBridge.scm",(void*)f_29638},
{"f_29585ChickenBridge.scm",(void*)f_29585},
{"f_29588ChickenBridge.scm",(void*)f_29588},
{"f_29592ChickenBridge.scm",(void*)f_29592},
{"f_29234ChickenBridge.scm",(void*)f_29234},
{"f_29074ChickenBridge.scm",(void*)f_29074},
{"f_29109ChickenBridge.scm",(void*)f_29109},
{"f_29119ChickenBridge.scm",(void*)f_29119},
{"f_29123ChickenBridge.scm",(void*)f_29123},
{"f_29126ChickenBridge.scm",(void*)f_29126},
{"f_29187ChickenBridge.scm",(void*)f_29187},
{"f_29178ChickenBridge.scm",(void*)f_29178},
{"f_29129ChickenBridge.scm",(void*)f_29129},
{"f_29148ChickenBridge.scm",(void*)f_29148},
{"f_29155ChickenBridge.scm",(void*)f_29155},
{"f_29132ChickenBridge.scm",(void*)f_29132},
{"f_29138ChickenBridge.scm",(void*)f_29138},
{"f_29107ChickenBridge.scm",(void*)f_29107},
{"f_29082ChickenBridge.scm",(void*)f_29082},
{"f_29081ChickenBridge.scm",(void*)f_29081},
{"f_29242ChickenBridge.scm",(void*)f_29242},
{"f_28820ChickenBridge.scm",(void*)f_28820},
{"f_28842ChickenBridge.scm",(void*)f_28842},
{"f_28857ChickenBridge.scm",(void*)f_28857},
{"f_28860ChickenBridge.scm",(void*)f_28860},
{"f_29036ChickenBridge.scm",(void*)f_29036},
{"f_29030ChickenBridge.scm",(void*)f_29030},
{"f_28863ChickenBridge.scm",(void*)f_28863},
{"f_29012ChickenBridge.scm",(void*)f_29012},
{"f_28866ChickenBridge.scm",(void*)f_28866},
{"f_28869ChickenBridge.scm",(void*)f_28869},
{"f_29005ChickenBridge.scm",(void*)f_29005},
{"f_28993ChickenBridge.scm",(void*)f_28993},
{"f_28889ChickenBridge.scm",(void*)f_28889},
{"f_28896ChickenBridge.scm",(void*)f_28896},
{"f_28966ChickenBridge.scm",(void*)f_28966},
{"f_28952ChickenBridge.scm",(void*)f_28952},
{"f_28960ChickenBridge.scm",(void*)f_28960},
{"f_28899ChickenBridge.scm",(void*)f_28899},
{"f_28938ChickenBridge.scm",(void*)f_28938},
{"f_28902ChickenBridge.scm",(void*)f_28902},
{"f_28931ChickenBridge.scm",(void*)f_28931},
{"f_28908ChickenBridge.scm",(void*)f_28908},
{"f_28911ChickenBridge.scm",(void*)f_28911},
{"f_28915ChickenBridge.scm",(void*)f_28915},
{"f_28876ChickenBridge.scm",(void*)f_28876},
{"f_28879ChickenBridge.scm",(void*)f_28879},
{"f_28689ChickenBridge.scm",(void*)f_28689},
{"f_28698ChickenBridge.scm",(void*)f_28698},
{"f_28646ChickenBridge.scm",(void*)f_28646},
{"f_28652ChickenBridge.scm",(void*)f_28652},
{"f_28715ChickenBridge.scm",(void*)f_28715},
{"f_28801ChickenBridge.scm",(void*)f_28801},
{"f_28788ChickenBridge.scm",(void*)f_28788},
{"f_28796ChickenBridge.scm",(void*)f_28796},
{"f_28718ChickenBridge.scm",(void*)f_28718},
{"f_28722ChickenBridge.scm",(void*)f_28722},
{"f_28765ChickenBridge.scm",(void*)f_28765},
{"f_28727ChickenBridge.scm",(void*)f_28727},
{"f_28693ChickenBridge.scm",(void*)f_28693},
{"f_28588ChickenBridge.scm",(void*)f_28588},
{"f_28595ChickenBridge.scm",(void*)f_28595},
{"f_28626ChickenBridge.scm",(void*)f_28626},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28614ChickenBridge.scm",(void*)f_28614},
{"f_28497ChickenBridge.scm",(void*)f_28497},
{"f_28504ChickenBridge.scm",(void*)f_28504},
{"f_28572ChickenBridge.scm",(void*)f_28572},
{"f_28515ChickenBridge.scm",(void*)f_28515},
{"f_28542ChickenBridge.scm",(void*)f_28542},
{"f_28526ChickenBridge.scm",(void*)f_28526},
{"f_28431ChickenBridge.scm",(void*)f_28431},
{"f_28442ChickenBridge.scm",(void*)f_28442},
{"f_28445ChickenBridge.scm",(void*)f_28445},
{"f_28452ChickenBridge.scm",(void*)f_28452},
{"f_28425ChickenBridge.scm",(void*)f_28425},
{"f_27879ChickenBridge.scm",(void*)f_27879},
{"f_27910ChickenBridge.scm",(void*)f_27910},
{"f_28374ChickenBridge.scm",(void*)f_28374},
{"f_28380ChickenBridge.scm",(void*)f_28380},
{"f_27921ChickenBridge.scm",(void*)f_27921},
{"f_27806ChickenBridge.scm",(void*)f_27806},
{"f_27831ChickenBridge.scm",(void*)f_27831},
{"f_27766ChickenBridge.scm",(void*)f_27766},
{"f_27779ChickenBridge.scm",(void*)f_27779},
{"f_27820ChickenBridge.scm",(void*)f_27820},
{"f_27925ChickenBridge.scm",(void*)f_27925},
{"f_28362ChickenBridge.scm",(void*)f_28362},
{"f_28358ChickenBridge.scm",(void*)f_28358},
{"f_28354ChickenBridge.scm",(void*)f_28354},
{"f_27928ChickenBridge.scm",(void*)f_27928},
{"f_28148ChickenBridge.scm",(void*)f_28148},
{"f_28257ChickenBridge.scm",(void*)f_28257},
{"f_28322ChickenBridge.scm",(void*)f_28322},
{"f_28264ChickenBridge.scm",(void*)f_28264},
{"f_28268ChickenBridge.scm",(void*)f_28268},
{"f_28272ChickenBridge.scm",(void*)f_28272},
{"f_28314ChickenBridge.scm",(void*)f_28314},
{"f_28310ChickenBridge.scm",(void*)f_28310},
{"f_28288ChickenBridge.scm",(void*)f_28288},
{"f_28151ChickenBridge.scm",(void*)f_28151},
{"f_28154ChickenBridge.scm",(void*)f_28154},
{"f_28053ChickenBridge.scm",(void*)f_28053},
{"f_28136ChickenBridge.scm",(void*)f_28136},
{"f_28103ChickenBridge.scm",(void*)f_28103},
{"f_28129ChickenBridge.scm",(void*)f_28129},
{"f_28111ChickenBridge.scm",(void*)f_28111},
{"f_28059ChickenBridge.scm",(void*)f_28059},
{"f_28099ChickenBridge.scm",(void*)f_28099},
{"f_28041ChickenBridge.scm",(void*)f_28041},
{"f_28012ChickenBridge.scm",(void*)f_28012},
{"f_28034ChickenBridge.scm",(void*)f_28034},
{"f_28020ChickenBridge.scm",(void*)f_28020},
{"f_27974ChickenBridge.scm",(void*)f_27974},
{"f_27931ChickenBridge.scm",(void*)f_27931},
{"f_27942ChickenBridge.scm",(void*)f_27942},
{"f_27946ChickenBridge.scm",(void*)f_27946},
{"f_27950ChickenBridge.scm",(void*)f_27950},
{"f_27954ChickenBridge.scm",(void*)f_27954},
{"f_27938ChickenBridge.scm",(void*)f_27938},
{"f_27898ChickenBridge.scm",(void*)f_27898},
{"f_27893ChickenBridge.scm",(void*)f_27893},
{"f_27888ChickenBridge.scm",(void*)f_27888},
{"f_27720ChickenBridge.scm",(void*)f_27720},
{"f_27731ChickenBridge.scm",(void*)f_27731},
{"f_27746ChickenBridge.scm",(void*)f_27746},
{"f_27682ChickenBridge.scm",(void*)f_27682},
{"f_27693ChickenBridge.scm",(void*)f_27693},
{"f_27708ChickenBridge.scm",(void*)f_27708},
{"f_27615ChickenBridge.scm",(void*)f_27615},
{"f_27635ChickenBridge.scm",(void*)f_27635},
{"f_27645ChickenBridge.scm",(void*)f_27645},
{"f_27658ChickenBridge.scm",(void*)f_27658},
{"f_27626ChickenBridge.scm",(void*)f_27626},
{"f_27633ChickenBridge.scm",(void*)f_27633},
{"f_27422ChickenBridge.scm",(void*)f_27422},
{"f_27482ChickenBridge.scm",(void*)f_27482},
{"f_27492ChickenBridge.scm",(void*)f_27492},
{"f_27606ChickenBridge.scm",(void*)f_27606},
{"f_27571ChickenBridge.scm",(void*)f_27571},
{"f_27563ChickenBridge.scm",(void*)f_27563},
{"f_27534ChickenBridge.scm",(void*)f_27534},
{"f_27512ChickenBridge.scm",(void*)f_27512},
{"f_27515ChickenBridge.scm",(void*)f_27515},
{"f_27503ChickenBridge.scm",(void*)f_27503},
{"f_27429ChickenBridge.scm",(void*)f_27429},
{"f_27480ChickenBridge.scm",(void*)f_27480},
{"f_27472ChickenBridge.scm",(void*)f_27472},
{"f_27432ChickenBridge.scm",(void*)f_27432},
{"f_27443ChickenBridge.scm",(void*)f_27443},
{"f_27447ChickenBridge.scm",(void*)f_27447},
{"f_27439ChickenBridge.scm",(void*)f_27439},
{"f_27280ChickenBridge.scm",(void*)f_27280},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27338ChickenBridge.scm",(void*)f_27338},
{"f_27349ChickenBridge.scm",(void*)f_27349},
{"f_27386ChickenBridge.scm",(void*)f_27386},
{"f_27361ChickenBridge.scm",(void*)f_27361},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27290ChickenBridge.scm",(void*)f_27290},
{"f_27326ChickenBridge.scm",(void*)f_27326},
{"f_27297ChickenBridge.scm",(void*)f_27297},
{"f_26929ChickenBridge.scm",(void*)f_26929},
{"f_26936ChickenBridge.scm",(void*)f_26936},
{"f_27170ChickenBridge.scm",(void*)f_27170},
{"f_27180ChickenBridge.scm",(void*)f_27180},
{"f_27191ChickenBridge.scm",(void*)f_27191},
{"f_27203ChickenBridge.scm",(void*)f_27203},
{"f_27206ChickenBridge.scm",(void*)f_27206},
{"f_27194ChickenBridge.scm",(void*)f_27194},
{"f_26942ChickenBridge.scm",(void*)f_26942},
{"f_27168ChickenBridge.scm",(void*)f_27168},
{"f_27164ChickenBridge.scm",(void*)f_27164},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27075ChickenBridge.scm",(void*)f_27075},
{"f_27091ChickenBridge.scm",(void*)f_27091},
{"f_27046ChickenBridge.scm",(void*)f_27046},
{"f_26970ChickenBridge.scm",(void*)f_26970},
{"f_26973ChickenBridge.scm",(void*)f_26973},
{"f_27037ChickenBridge.scm",(void*)f_27037},
{"f_27033ChickenBridge.scm",(void*)f_27033},
{"f_26953ChickenBridge.scm",(void*)f_26953},
{"f_26964ChickenBridge.scm",(void*)f_26964},
{"f_26960ChickenBridge.scm",(void*)f_26960},
{"f_26882ChickenBridge.scm",(void*)f_26882},
{"f_26915ChickenBridge.scm",(void*)f_26915},
{"f_26897ChickenBridge.scm",(void*)f_26897},
{"f_26909ChickenBridge.scm",(void*)f_26909},
{"f_26500ChickenBridge.scm",(void*)f_26500},
{"f_26709ChickenBridge.scm",(void*)f_26709},
{"f_26719ChickenBridge.scm",(void*)f_26719},
{"f_26730ChickenBridge.scm",(void*)f_26730},
{"f_26850ChickenBridge.scm",(void*)f_26850},
{"f_26829ChickenBridge.scm",(void*)f_26829},
{"f_26808ChickenBridge.scm",(void*)f_26808},
{"f_26787ChickenBridge.scm",(void*)f_26787},
{"f_26766ChickenBridge.scm",(void*)f_26766},
{"f_26745ChickenBridge.scm",(void*)f_26745},
{"f_26733ChickenBridge.scm",(void*)f_26733},
{"f_26510ChickenBridge.scm",(void*)f_26510},
{"f_26513ChickenBridge.scm",(void*)f_26513},
{"f_26676ChickenBridge.scm",(void*)f_26676},
{"f_26516ChickenBridge.scm",(void*)f_26516},
{"f_26667ChickenBridge.scm",(void*)f_26667},
{"f_26647ChickenBridge.scm",(void*)f_26647},
{"f_26519ChickenBridge.scm",(void*)f_26519},
{"f_26612ChickenBridge.scm",(void*)f_26612},
{"f_26629ChickenBridge.scm",(void*)f_26629},
{"f_26522ChickenBridge.scm",(void*)f_26522},
{"f_26561ChickenBridge.scm",(void*)f_26561},
{"f_26595ChickenBridge.scm",(void*)f_26595},
{"f_26579ChickenBridge.scm",(void*)f_26579},
{"f_26564ChickenBridge.scm",(void*)f_26564},
{"f_26529ChickenBridge.scm",(void*)f_26529},
{"f_26540ChickenBridge.scm",(void*)f_26540},
{"f_26544ChickenBridge.scm",(void*)f_26544},
{"f_26536ChickenBridge.scm",(void*)f_26536},
{"f_26418ChickenBridge.scm",(void*)f_26418},
{"f_26422ChickenBridge.scm",(void*)f_26422},
{"f_26440ChickenBridge.scm",(void*)f_26440},
{"f_26258ChickenBridge.scm",(void*)f_26258},
{"f_26266ChickenBridge.scm",(void*)f_26266},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26314ChickenBridge.scm",(void*)f_26314},
{"f_26317ChickenBridge.scm",(void*)f_26317},
{"f_26320ChickenBridge.scm",(void*)f_26320},
{"f_26395ChickenBridge.scm",(void*)f_26395},
{"f_26405ChickenBridge.scm",(void*)f_26405},
{"f_26323ChickenBridge.scm",(void*)f_26323},
{"f_26326ChickenBridge.scm",(void*)f_26326},
{"f_26329ChickenBridge.scm",(void*)f_26329},
{"f_26349ChickenBridge.scm",(void*)f_26349},
{"f_26359ChickenBridge.scm",(void*)f_26359},
{"f_26362ChickenBridge.scm",(void*)f_26362},
{"f_26365ChickenBridge.scm",(void*)f_26365},
{"f_26332ChickenBridge.scm",(void*)f_26332},
{"f_26335ChickenBridge.scm",(void*)f_26335},
{"f_26252ChickenBridge.scm",(void*)f_26252},
{"f_26246ChickenBridge.scm",(void*)f_26246},
{"f_26240ChickenBridge.scm",(void*)f_26240},
{"f_26169ChickenBridge.scm",(void*)f_26169},
{"f_26210ChickenBridge.scm",(void*)f_26210},
{"f_26214ChickenBridge.scm",(void*)f_26214},
{"f_26218ChickenBridge.scm",(void*)f_26218},
{"f_26222ChickenBridge.scm",(void*)f_26222},
{"f_26226ChickenBridge.scm",(void*)f_26226},
{"f_26230ChickenBridge.scm",(void*)f_26230},
{"f_26234ChickenBridge.scm",(void*)f_26234},
{"f_26238ChickenBridge.scm",(void*)f_26238},
{"f_26171ChickenBridge.scm",(void*)f_26171},
{"f_26177ChickenBridge.scm",(void*)f_26177},
{"f_26199ChickenBridge.scm",(void*)f_26199},
{"f_26188ChickenBridge.scm",(void*)f_26188},
{"f_26018ChickenBridge.scm",(void*)f_26018},
{"f_26033ChickenBridge.scm",(void*)f_26033},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26006ChickenBridge.scm",(void*)f_26006},
{"f_25994ChickenBridge.scm",(void*)f_25994},
{"f_25982ChickenBridge.scm",(void*)f_25982},
{"f_25976ChickenBridge.scm",(void*)f_25976},
{"f_25970ChickenBridge.scm",(void*)f_25970},
{"f_25958ChickenBridge.scm",(void*)f_25958},
{"f_25946ChickenBridge.scm",(void*)f_25946},
{"f_25934ChickenBridge.scm",(void*)f_25934},
{"f_25922ChickenBridge.scm",(void*)f_25922},
{"f_25916ChickenBridge.scm",(void*)f_25916},
{"f_25880ChickenBridge.scm",(void*)f_25880},
{"f_25874ChickenBridge.scm",(void*)f_25874},
{"f_25827ChickenBridge.scm",(void*)f_25827},
{"f_25831ChickenBridge.scm",(void*)f_25831},
{"f_25847ChickenBridge.scm",(void*)f_25847},
{"f_25856ChickenBridge.scm",(void*)f_25856},
{"f_25834ChickenBridge.scm",(void*)f_25834},
{"f_25818ChickenBridge.scm",(void*)f_25818},
{"f_25822ChickenBridge.scm",(void*)f_25822},
{"f_25665ChickenBridge.scm",(void*)f_25665},
{"f_25792ChickenBridge.scm",(void*)f_25792},
{"f_25805ChickenBridge.scm",(void*)f_25805},
{"f_25787ChickenBridge.scm",(void*)f_25787},
{"f_25668ChickenBridge.scm",(void*)f_25668},
{"f_25784ChickenBridge.scm",(void*)f_25784},
{"f_25768ChickenBridge.scm",(void*)f_25768},
{"f_25696ChickenBridge.scm",(void*)f_25696},
{"f_25704ChickenBridge.scm",(void*)f_25704},
{"f_25714ChickenBridge.scm",(void*)f_25714},
{"f_25717ChickenBridge.scm",(void*)f_25717},
{"f_25699ChickenBridge.scm",(void*)f_25699},
{"f_25488ChickenBridge.scm",(void*)f_25488},
{"f_25492ChickenBridge.scm",(void*)f_25492},
{"f_25497ChickenBridge.scm",(void*)f_25497},
{"f_25500ChickenBridge.scm",(void*)f_25500},
{"f_23235ChickenBridge.scm",(void*)f_23235},
{"f_23248ChickenBridge.scm",(void*)f_23248},
{"f_23255ChickenBridge.scm",(void*)f_23255},
{"f_23262ChickenBridge.scm",(void*)f_23262},
{"f_23241ChickenBridge.scm",(void*)f_23241},
{"f_25504ChickenBridge.scm",(void*)f_25504},
{"f_25541ChickenBridge.scm",(void*)f_25541},
{"f_25634ChickenBridge.scm",(void*)f_25634},
{"f_25644ChickenBridge.scm",(void*)f_25644},
{"f_25547ChickenBridge.scm",(void*)f_25547},
{"f_25604ChickenBridge.scm",(void*)f_25604},
{"f_25614ChickenBridge.scm",(void*)f_25614},
{"f_25555ChickenBridge.scm",(void*)f_25555},
{"f_25569ChickenBridge.scm",(void*)f_25569},
{"f_25573ChickenBridge.scm",(void*)f_25573},
{"f_25577ChickenBridge.scm",(void*)f_25577},
{"f_25581ChickenBridge.scm",(void*)f_25581},
{"f_25588ChickenBridge.scm",(void*)f_25588},
{"f_25565ChickenBridge.scm",(void*)f_25565},
{"f_25558ChickenBridge.scm",(void*)f_25558},
{"f_25507ChickenBridge.scm",(void*)f_25507},
{"f_24362ChickenBridge.scm",(void*)f_24362},
{"f_24375ChickenBridge.scm",(void*)f_24375},
{"f_24425ChickenBridge.scm",(void*)f_24425},
{"f_24522ChickenBridge.scm",(void*)f_24522},
{"f_24590ChickenBridge.scm",(void*)f_24590},
{"f_24847ChickenBridge.scm",(void*)f_24847},
{"f_24597ChickenBridge.scm",(void*)f_24597},
{"f_24835ChickenBridge.scm",(void*)f_24835},
{"f_24786ChickenBridge.scm",(void*)f_24786},
{"f_24792ChickenBridge.scm",(void*)f_24792},
{"f_24816ChickenBridge.scm",(void*)f_24816},
{"f_24812ChickenBridge.scm",(void*)f_24812},
{"f_24800ChickenBridge.scm",(void*)f_24800},
{"f_24600ChickenBridge.scm",(void*)f_24600},
{"f_24762ChickenBridge.scm",(void*)f_24762},
{"f_24766ChickenBridge.scm",(void*)f_24766},
{"f_24603ChickenBridge.scm",(void*)f_24603},
{"f_24739ChickenBridge.scm",(void*)f_24739},
{"f_24743ChickenBridge.scm",(void*)f_24743},
{"f_24606ChickenBridge.scm",(void*)f_24606},
{"f_24716ChickenBridge.scm",(void*)f_24716},
{"f_24720ChickenBridge.scm",(void*)f_24720},
{"f_24609ChickenBridge.scm",(void*)f_24609},
{"f_24641ChickenBridge.scm",(void*)f_24641},
{"f_24659ChickenBridge.scm",(void*)f_24659},
{"f_24677ChickenBridge.scm",(void*)f_24677},
{"f_24695ChickenBridge.scm",(void*)f_24695},
{"f_24612ChickenBridge.scm",(void*)f_24612},
{"f_24616ChickenBridge.scm",(void*)f_24616},
{"f_24526ChickenBridge.scm",(void*)f_24526},
{"f_24530ChickenBridge.scm",(void*)f_24530},
{"f_24534ChickenBridge.scm",(void*)f_24534},
{"f_24429ChickenBridge.scm",(void*)f_24429},
{"f_24433ChickenBridge.scm",(void*)f_24433},
{"f_24437ChickenBridge.scm",(void*)f_24437},
{"f_24456ChickenBridge.scm",(void*)f_24456},
{"f_24460ChickenBridge.scm",(void*)f_24460},
{"f_24440ChickenBridge.scm",(void*)f_24440},
{"f_24444ChickenBridge.scm",(void*)f_24444},
{"f_24379ChickenBridge.scm",(void*)f_24379},
{"f_24383ChickenBridge.scm",(void*)f_24383},
{"f_24387ChickenBridge.scm",(void*)f_24387},
{"f_24369ChickenBridge.scm",(void*)f_24369},
{"f_24184ChickenBridge.scm",(void*)f_24184},
{"f_24196ChickenBridge.scm",(void*)f_24196},
{"f_24215ChickenBridge.scm",(void*)f_24215},
{"f_24233ChickenBridge.scm",(void*)f_24233},
{"f_24265ChickenBridge.scm",(void*)f_24265},
{"f_24268ChickenBridge.scm",(void*)f_24268},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24247ChickenBridge.scm",(void*)f_24247},
{"f_24218ChickenBridge.scm",(void*)f_24218},
{"f_24163ChickenBridge.scm",(void*)f_24163},
{"f_24170ChickenBridge.scm",(void*)f_24170},
{"f_24173ChickenBridge.scm",(void*)f_24173},
{"f_24179ChickenBridge.scm",(void*)f_24179},
{"f_24098ChickenBridge.scm",(void*)f_24098},
{"f_24107ChickenBridge.scm",(void*)f_24107},
{"f_24130ChickenBridge.scm",(void*)f_24130},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_24054ChickenBridge.scm",(void*)f_24054},
{"f_24042ChickenBridge.scm",(void*)f_24042},
{"f_23940ChickenBridge.scm",(void*)f_23940},
{"f_23892ChickenBridge.scm",(void*)f_23892},
{"f_23273ChickenBridge.scm",(void*)f_23273},
{"f_23277ChickenBridge.scm",(void*)f_23277},
{"f_23280ChickenBridge.scm",(void*)f_23280},
{"f_23706ChickenBridge.scm",(void*)f_23706},
{"f_23702ChickenBridge.scm",(void*)f_23702},
{"f_23698ChickenBridge.scm",(void*)f_23698},
{"f_23283ChickenBridge.scm",(void*)f_23283},
{"f_23406ChickenBridge.scm",(void*)f_23406},
{"f_22639ChickenBridge.scm",(void*)f_22639},
{"f_23412ChickenBridge.scm",(void*)f_23412},
{"f_22655ChickenBridge.scm",(void*)f_22655},
{"f_23500ChickenBridge.scm",(void*)f_23500},
{"f_23570ChickenBridge.scm",(void*)f_23570},
{"f_22671ChickenBridge.scm",(void*)f_22671},
{"f_23573ChickenBridge.scm",(void*)f_23573},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_23651ChickenBridge.scm",(void*)f_23651},
{"f_23677ChickenBridge.scm",(void*)f_23677},
{"f_23671ChickenBridge.scm",(void*)f_23671},
{"f_23660ChickenBridge.scm",(void*)f_23660},
{"f_23602ChickenBridge.scm",(void*)f_23602},
{"f_23612ChickenBridge.scm",(void*)f_23612},
{"f_23638ChickenBridge.scm",(void*)f_23638},
{"f_23632ChickenBridge.scm",(void*)f_23632},
{"f_23615ChickenBridge.scm",(void*)f_23615},
{"f_23625ChickenBridge.scm",(void*)f_23625},
{"f_23618ChickenBridge.scm",(void*)f_23618},
{"f_23579ChickenBridge.scm",(void*)f_23579},
{"f_23588ChickenBridge.scm",(void*)f_23588},
{"f_23582ChickenBridge.scm",(void*)f_23582},
{"f_23506ChickenBridge.scm",(void*)f_23506},
{"f_23524ChickenBridge.scm",(void*)f_23524},
{"f_23557ChickenBridge.scm",(void*)f_23557},
{"f_23543ChickenBridge.scm",(void*)f_23543},
{"f_23551ChickenBridge.scm",(void*)f_23551},
{"f_23534ChickenBridge.scm",(void*)f_23534},
{"f_23509ChickenBridge.scm",(void*)f_23509},
{"f_23421ChickenBridge.scm",(void*)f_23421},
{"f_23443ChickenBridge.scm",(void*)f_23443},
{"f_23490ChickenBridge.scm",(void*)f_23490},
{"f_23476ChickenBridge.scm",(void*)f_23476},
{"f_23484ChickenBridge.scm",(void*)f_23484},
{"f_23456ChickenBridge.scm",(void*)f_23456},
{"f_23459ChickenBridge.scm",(void*)f_23459},
{"f_23424ChickenBridge.scm",(void*)f_23424},
{"f_23441ChickenBridge.scm",(void*)f_23441},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_23292ChickenBridge.scm",(void*)f_23292},
{"f_23298ChickenBridge.scm",(void*)f_23298},
{"f_23356ChickenBridge.scm",(void*)f_23356},
{"f_23359ChickenBridge.scm",(void*)f_23359},
{"f_23380ChickenBridge.scm",(void*)f_23380},
{"f_23391ChickenBridge.scm",(void*)f_23391},
{"f_23370ChickenBridge.scm",(void*)f_23370},
{"f_23304ChickenBridge.scm",(void*)f_23304},
{"f_23314ChickenBridge.scm",(void*)f_23314},
{"f_23350ChickenBridge.scm",(void*)f_23350},
{"f_23320ChickenBridge.scm",(void*)f_23320},
{"f_23335ChickenBridge.scm",(void*)f_23335},
{"f_23339ChickenBridge.scm",(void*)f_23339},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_23327ChickenBridge.scm",(void*)f_23327},
{"f_23169ChickenBridge.scm",(void*)f_23169},
{"f_23171ChickenBridge.scm",(void*)f_23171},
{"f_23219ChickenBridge.scm",(void*)f_23219},
{"f_23175ChickenBridge.scm",(void*)f_23175},
{"f_23178ChickenBridge.scm",(void*)f_23178},
{"f_23183ChickenBridge.scm",(void*)f_23183},
{"f_23204ChickenBridge.scm",(void*)f_23204},
{"f_23161ChickenBridge.scm",(void*)f_23161},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_22984ChickenBridge.scm",(void*)f_22984},
{"f_22992ChickenBridge.scm",(void*)f_22992},
{"f_22953ChickenBridge.scm",(void*)f_22953},
{"f_22970ChickenBridge.scm",(void*)f_22970},
{"f_22974ChickenBridge.scm",(void*)f_22974},
{"f_22920ChickenBridge.scm",(void*)f_22920},
{"f_22927ChickenBridge.scm",(void*)f_22927},
{"f_22871ChickenBridge.scm",(void*)f_22871},
{"f_22878ChickenBridge.scm",(void*)f_22878},
{"f_22936ChickenBridge.scm",(void*)f_22936},
{"f_23159ChickenBridge.scm",(void*)f_23159},
{"f_23136ChickenBridge.scm",(void*)f_23136},
{"f_23152ChickenBridge.scm",(void*)f_23152},
{"f_22998ChickenBridge.scm",(void*)f_22998},
{"f_23001ChickenBridge.scm",(void*)f_23001},
{"f_23025ChickenBridge.scm",(void*)f_23025},
{"f_23082ChickenBridge.scm",(void*)f_23082},
{"f_23088ChickenBridge.scm",(void*)f_23088},
{"f_23097ChickenBridge.scm",(void*)f_23097},
{"f_23106ChickenBridge.scm",(void*)f_23106},
{"f_23115ChickenBridge.scm",(void*)f_23115},
{"f_23124ChickenBridge.scm",(void*)f_23124},
{"f_23076ChickenBridge.scm",(void*)f_23076},
{"f_23031ChickenBridge.scm",(void*)f_23031},
{"f_23037ChickenBridge.scm",(void*)f_23037},
{"f_23043ChickenBridge.scm",(void*)f_23043},
{"f_23049ChickenBridge.scm",(void*)f_23049},
{"f_23055ChickenBridge.scm",(void*)f_23055},
{"f_23061ChickenBridge.scm",(void*)f_23061},
{"f_22902ChickenBridge.scm",(void*)f_22902},
{"f_22909ChickenBridge.scm",(void*)f_22909},
{"f_22892ChickenBridge.scm",(void*)f_22892},
{"f_22880ChickenBridge.scm",(void*)f_22880},
{"f_22848ChickenBridge.scm",(void*)f_22848},
{"f_22855ChickenBridge.scm",(void*)f_22855},
{"f_22862ChickenBridge.scm",(void*)f_22862},
{"f_22832ChickenBridge.scm",(void*)f_22832},
{"f_22839ChickenBridge.scm",(void*)f_22839},
{"f_22846ChickenBridge.scm",(void*)f_22846},
{"f_22820ChickenBridge.scm",(void*)f_22820},
{"f_22802ChickenBridge.scm",(void*)f_22802},
{"f_22784ChickenBridge.scm",(void*)f_22784},
{"f_22769ChickenBridge.scm",(void*)f_22769},
{"f_22763ChickenBridge.scm",(void*)f_22763},
{"f_22751ChickenBridge.scm",(void*)f_22751},
{"f_22733ChickenBridge.scm",(void*)f_22733},
{"f_22712ChickenBridge.scm",(void*)f_22712},
{"f_22680ChickenBridge.scm",(void*)f_22680},
{"f_22687ChickenBridge.scm",(void*)f_22687},
{"f_22622ChickenBridge.scm",(void*)f_22622},
{"f_22630ChickenBridge.scm",(void*)f_22630},
{"f_22612ChickenBridge.scm",(void*)f_22612},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22606ChickenBridge.scm",(void*)f_22606},
{"f_22594ChickenBridge.scm",(void*)f_22594},
{"f_22591ChickenBridge.scm",(void*)f_22591},
{"f_22570ChickenBridge.scm",(void*)f_22570},
{"f_22483ChickenBridge.scm",(void*)f_22483},
{"f_22462ChickenBridge.scm",(void*)f_22462},
{"f_22452ChickenBridge.scm",(void*)f_22452},
{"f_22440ChickenBridge.scm",(void*)f_22440},
{"f_22411ChickenBridge.scm",(void*)f_22411},
{"f_22399ChickenBridge.scm",(void*)f_22399},
{"f_22381ChickenBridge.scm",(void*)f_22381},
{"f_22363ChickenBridge.scm",(void*)f_22363},
{"f_22342ChickenBridge.scm",(void*)f_22342},
{"f_21320ChickenBridge.scm",(void*)f_21320},
{"f_22319ChickenBridge.scm",(void*)f_22319},
{"f_22334ChickenBridge.scm",(void*)f_22334},
{"f_22326ChickenBridge.scm",(void*)f_22326},
{"f_22290ChickenBridge.scm",(void*)f_22290},
{"f_22294ChickenBridge.scm",(void*)f_22294},
{"f_22255ChickenBridge.scm",(void*)f_22255},
{"f_22259ChickenBridge.scm",(void*)f_22259},
{"f_21330ChickenBridge.scm",(void*)f_21330},
{"f_22219ChickenBridge.scm",(void*)f_22219},
{"f_22234ChickenBridge.scm",(void*)f_22234},
{"f_22226ChickenBridge.scm",(void*)f_22226},
{"f_22190ChickenBridge.scm",(void*)f_22190},
{"f_22194ChickenBridge.scm",(void*)f_22194},
{"f_22155ChickenBridge.scm",(void*)f_22155},
{"f_22159ChickenBridge.scm",(void*)f_22159},
{"f_21333ChickenBridge.scm",(void*)f_21333},
{"f_21336ChickenBridge.scm",(void*)f_21336},
{"f_21341ChickenBridge.scm",(void*)f_21341},
{"f_22048ChickenBridge.scm",(void*)f_22048},
{"f_22071ChickenBridge.scm",(void*)f_22071},
{"f_22124ChickenBridge.scm",(void*)f_22124},
{"f_22106ChickenBridge.scm",(void*)f_22106},
{"f_22099ChickenBridge.scm",(void*)f_22099},
{"f_22081ChickenBridge.scm",(void*)f_22081},
{"f_22058ChickenBridge.scm",(void*)f_22058},
{"f_21535ChickenBridge.scm",(void*)f_21535},
{"f_22010ChickenBridge.scm",(void*)f_22010},
{"f_22032ChickenBridge.scm",(void*)f_22032},
{"f_22016ChickenBridge.scm",(void*)f_22016},
{"f_22024ChickenBridge.scm",(void*)f_22024},
{"f_22028ChickenBridge.scm",(void*)f_22028},
{"f_22014ChickenBridge.scm",(void*)f_22014},
{"f_22004ChickenBridge.scm",(void*)f_22004},
{"f_21538ChickenBridge.scm",(void*)f_21538},
{"f_21881ChickenBridge.scm",(void*)f_21881},
{"f_21905ChickenBridge.scm",(void*)f_21905},
{"f_21967ChickenBridge.scm",(void*)f_21967},
{"f_21908ChickenBridge.scm",(void*)f_21908},
{"f_21924ChickenBridge.scm",(void*)f_21924},
{"f_21949ChickenBridge.scm",(void*)f_21949},
{"f_21915ChickenBridge.scm",(void*)f_21915},
{"f_21892ChickenBridge.scm",(void*)f_21892},
{"f_21541ChickenBridge.scm",(void*)f_21541},
{"f_21867ChickenBridge.scm",(void*)f_21867},
{"f_21545ChickenBridge.scm",(void*)f_21545},
{"f_21589ChickenBridge.scm",(void*)f_21589},
{"f_21592ChickenBridge.scm",(void*)f_21592},
{"f_21848ChickenBridge.scm",(void*)f_21848},
{"f_21858ChickenBridge.scm",(void*)f_21858},
{"f_21595ChickenBridge.scm",(void*)f_21595},
{"f_21786ChickenBridge.scm",(void*)f_21786},
{"f_21796ChickenBridge.scm",(void*)f_21796},
{"f_21799ChickenBridge.scm",(void*)f_21799},
{"f_21819ChickenBridge.scm",(void*)f_21819},
{"f_21821ChickenBridge.scm",(void*)f_21821},
{"f_21831ChickenBridge.scm",(void*)f_21831},
{"f_21805ChickenBridge.scm",(void*)f_21805},
{"f_21808ChickenBridge.scm",(void*)f_21808},
{"f_21598ChickenBridge.scm",(void*)f_21598},
{"f_21606ChickenBridge.scm",(void*)f_21606},
{"f_21619ChickenBridge.scm",(void*)f_21619},
{"f_21493ChickenBridge.scm",(void*)f_21493},
{"f_21502ChickenBridge.scm",(void*)f_21502},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21513ChickenBridge.scm",(void*)f_21513},
{"f_21622ChickenBridge.scm",(void*)f_21622},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21759ChickenBridge.scm",(void*)f_21759},
{"f_21769ChickenBridge.scm",(void*)f_21769},
{"f_21628ChickenBridge.scm",(void*)f_21628},
{"f_21730ChickenBridge.scm",(void*)f_21730},
{"f_21732ChickenBridge.scm",(void*)f_21732},
{"f_21742ChickenBridge.scm",(void*)f_21742},
{"f_21631ChickenBridge.scm",(void*)f_21631},
{"f_21643ChickenBridge.scm",(void*)f_21643},
{"f_21669ChickenBridge.scm",(void*)f_21669},
{"f_21675ChickenBridge.scm",(void*)f_21675},
{"f_21681ChickenBridge.scm",(void*)f_21681},
{"f_21691ChickenBridge.scm",(void*)f_21691},
{"f_21693ChickenBridge.scm",(void*)f_21693},
{"f_21703ChickenBridge.scm",(void*)f_21703},
{"f_21684ChickenBridge.scm",(void*)f_21684},
{"f_21656ChickenBridge.scm",(void*)f_21656},
{"f_21634ChickenBridge.scm",(void*)f_21634},
{"f_21601ChickenBridge.scm",(void*)f_21601},
{"f_21548ChickenBridge.scm",(void*)f_21548},
{"f_21571ChickenBridge.scm",(void*)f_21571},
{"f_21560ChickenBridge.scm",(void*)f_21560},
{"f_21425ChickenBridge.scm",(void*)f_21425},
{"f_21473ChickenBridge.scm",(void*)f_21473},
{"f_21435ChickenBridge.scm",(void*)f_21435},
{"f_21463ChickenBridge.scm",(void*)f_21463},
{"f_21438ChickenBridge.scm",(void*)f_21438},
{"f_21343ChickenBridge.scm",(void*)f_21343},
{"f_21415ChickenBridge.scm",(void*)f_21415},
{"f_21347ChickenBridge.scm",(void*)f_21347},
{"f_21365ChickenBridge.scm",(void*)f_21365},
{"f_21397ChickenBridge.scm",(void*)f_21397},
{"f_21226ChickenBridge.scm",(void*)f_21226},
{"f_21230ChickenBridge.scm",(void*)f_21230},
{"f_21259ChickenBridge.scm",(void*)f_21259},
{"f_21264ChickenBridge.scm",(void*)f_21264},
{"f_21289ChickenBridge.scm",(void*)f_21289},
{"f_21274ChickenBridge.scm",(void*)f_21274},
{"f_20708ChickenBridge.scm",(void*)f_20708},
{"f_20979ChickenBridge.scm",(void*)f_20979},
{"f_20983ChickenBridge.scm",(void*)f_20983},
{"f_20988ChickenBridge.scm",(void*)f_20988},
{"f_21194ChickenBridge.scm",(void*)f_21194},
{"f_21209ChickenBridge.scm",(void*)f_21209},
{"f_21201ChickenBridge.scm",(void*)f_21201},
{"f_21165ChickenBridge.scm",(void*)f_21165},
{"f_21169ChickenBridge.scm",(void*)f_21169},
{"f_21130ChickenBridge.scm",(void*)f_21130},
{"f_21134ChickenBridge.scm",(void*)f_21134},
{"f_20992ChickenBridge.scm",(void*)f_20992},
{"f_21094ChickenBridge.scm",(void*)f_21094},
{"f_21109ChickenBridge.scm",(void*)f_21109},
{"f_21101ChickenBridge.scm",(void*)f_21101},
{"f_21065ChickenBridge.scm",(void*)f_21065},
{"f_21069ChickenBridge.scm",(void*)f_21069},
{"f_21030ChickenBridge.scm",(void*)f_21030},
{"f_21034ChickenBridge.scm",(void*)f_21034},
{"f_20995ChickenBridge.scm",(void*)f_20995},
{"f_20998ChickenBridge.scm",(void*)f_20998},
{"f_21001ChickenBridge.scm",(void*)f_21001},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_20712ChickenBridge.scm",(void*)f_20712},
{"f_20939ChickenBridge.scm",(void*)f_20939},
{"f_20954ChickenBridge.scm",(void*)f_20954},
{"f_20946ChickenBridge.scm",(void*)f_20946},
{"f_20910ChickenBridge.scm",(void*)f_20910},
{"f_20914ChickenBridge.scm",(void*)f_20914},
{"f_20875ChickenBridge.scm",(void*)f_20875},
{"f_20879ChickenBridge.scm",(void*)f_20879},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20839ChickenBridge.scm",(void*)f_20839},
{"f_20854ChickenBridge.scm",(void*)f_20854},
{"f_20846ChickenBridge.scm",(void*)f_20846},
{"f_20810ChickenBridge.scm",(void*)f_20810},
{"f_20814ChickenBridge.scm",(void*)f_20814},
{"f_20775ChickenBridge.scm",(void*)f_20775},
{"f_20779ChickenBridge.scm",(void*)f_20779},
{"f_20718ChickenBridge.scm",(void*)f_20718},
{"f_20721ChickenBridge.scm",(void*)f_20721},
{"f_20724ChickenBridge.scm",(void*)f_20724},
{"f_20736ChickenBridge.scm",(void*)f_20736},
{"f_20754ChickenBridge.scm",(void*)f_20754},
{"f_20742ChickenBridge.scm",(void*)f_20742},
{"f_20730ChickenBridge.scm",(void*)f_20730},
{"f_20645ChickenBridge.scm",(void*)f_20645},
{"f_20305ChickenBridge.scm",(void*)f_20305},
{"f_20487ChickenBridge.scm",(void*)f_20487},
{"f_20491ChickenBridge.scm",(void*)f_20491},
{"f_20493ChickenBridge.scm",(void*)f_20493},
{"f_20418ChickenBridge.scm",(void*)f_20418},
{"f_20428ChickenBridge.scm",(void*)f_20428},
{"f_20435ChickenBridge.scm",(void*)f_20435},
{"f_20503ChickenBridge.scm",(void*)f_20503},
{"f_20506ChickenBridge.scm",(void*)f_20506},
{"f_20510ChickenBridge.scm",(void*)f_20510},
{"f_20530ChickenBridge.scm",(void*)f_20530},
{"f_20546ChickenBridge.scm",(void*)f_20546},
{"f_20513ChickenBridge.scm",(void*)f_20513},
{"f_20308ChickenBridge.scm",(void*)f_20308},
{"f_20320ChickenBridge.scm",(void*)f_20320},
{"f_20356ChickenBridge.scm",(void*)f_20356},
{"f_20376ChickenBridge.scm",(void*)f_20376},
{"f_20381ChickenBridge.scm",(void*)f_20381},
{"f_19818ChickenBridge.scm",(void*)f_19818},
{"f_19745ChickenBridge.scm",(void*)f_19745},
{"f_19590ChickenBridge.scm",(void*)f_19590},
{"f_19596ChickenBridge.scm",(void*)f_19596},
{"f_19681ChickenBridge.scm",(void*)f_19681},
{"f_19608ChickenBridge.scm",(void*)f_19608},
{"f_19624ChickenBridge.scm",(void*)f_19624},
{"f_19628ChickenBridge.scm",(void*)f_19628},
{"f_19631ChickenBridge.scm",(void*)f_19631},
{"f_19611ChickenBridge.scm",(void*)f_19611},
{"f_19622ChickenBridge.scm",(void*)f_19622},
{"f_19762ChickenBridge.scm",(void*)f_19762},
{"f_20299ChickenBridge.scm",(void*)f_20299},
{"f_19822ChickenBridge.scm",(void*)f_19822},
{"f_20268ChickenBridge.scm",(void*)f_20268},
{"f_20283ChickenBridge.scm",(void*)f_20283},
{"f_20275ChickenBridge.scm",(void*)f_20275},
{"f_20239ChickenBridge.scm",(void*)f_20239},
{"f_20243ChickenBridge.scm",(void*)f_20243},
{"f_20204ChickenBridge.scm",(void*)f_20204},
{"f_20208ChickenBridge.scm",(void*)f_20208},
{"f_20169ChickenBridge.scm",(void*)f_20169},
{"f_20173ChickenBridge.scm",(void*)f_20173},
{"f_19825ChickenBridge.scm",(void*)f_19825},
{"f_20133ChickenBridge.scm",(void*)f_20133},
{"f_20148ChickenBridge.scm",(void*)f_20148},
{"f_20140ChickenBridge.scm",(void*)f_20140},
{"f_20104ChickenBridge.scm",(void*)f_20104},
{"f_20108ChickenBridge.scm",(void*)f_20108},
{"f_20069ChickenBridge.scm",(void*)f_20069},
{"f_20073ChickenBridge.scm",(void*)f_20073},
{"f_20034ChickenBridge.scm",(void*)f_20034},
{"f_20038ChickenBridge.scm",(void*)f_20038},
{"f_19828ChickenBridge.scm",(void*)f_19828},
{"f_19998ChickenBridge.scm",(void*)f_19998},
{"f_20013ChickenBridge.scm",(void*)f_20013},
{"f_20005ChickenBridge.scm",(void*)f_20005},
{"f_19969ChickenBridge.scm",(void*)f_19969},
{"f_19973ChickenBridge.scm",(void*)f_19973},
{"f_19934ChickenBridge.scm",(void*)f_19934},
{"f_19938ChickenBridge.scm",(void*)f_19938},
{"f_19899ChickenBridge.scm",(void*)f_19899},
{"f_19903ChickenBridge.scm",(void*)f_19903},
{"f_19831ChickenBridge.scm",(void*)f_19831},
{"f_19834ChickenBridge.scm",(void*)f_19834},
{"f_19837ChickenBridge.scm",(void*)f_19837},
{"f_19870ChickenBridge.scm",(void*)f_19870},
{"f_19878ChickenBridge.scm",(void*)f_19878},
{"f_19843ChickenBridge.scm",(void*)f_19843},
{"f_19856ChickenBridge.scm",(void*)f_19856},
{"f_19846ChickenBridge.scm",(void*)f_19846},
{"f_19849ChickenBridge.scm",(void*)f_19849},
{"f_19385ChickenBridge.scm",(void*)f_19385},
{"f_19389ChickenBridge.scm",(void*)f_19389},
{"f_19392ChickenBridge.scm",(void*)f_19392},
{"f_19395ChickenBridge.scm",(void*)f_19395},
{"f_19564ChickenBridge.scm",(void*)f_19564},
{"f_19577ChickenBridge.scm",(void*)f_19577},
{"f_19581ChickenBridge.scm",(void*)f_19581},
{"f_19401ChickenBridge.scm",(void*)f_19401},
{"f_19557ChickenBridge.scm",(void*)f_19557},
{"f_19538ChickenBridge.scm",(void*)f_19538},
{"f_19545ChickenBridge.scm",(void*)f_19545},
{"f_19549ChickenBridge.scm",(void*)f_19549},
{"f_19407ChickenBridge.scm",(void*)f_19407},
{"f_19413ChickenBridge.scm",(void*)f_19413},
{"f_19497ChickenBridge.scm",(void*)f_19497},
{"f_19499ChickenBridge.scm",(void*)f_19499},
{"f_19521ChickenBridge.scm",(void*)f_19521},
{"f_19528ChickenBridge.scm",(void*)f_19528},
{"f_19532ChickenBridge.scm",(void*)f_19532},
{"f_19518ChickenBridge.scm",(void*)f_19518},
{"f_19514ChickenBridge.scm",(void*)f_19514},
{"f_19455ChickenBridge.scm",(void*)f_19455},
{"f_19472ChickenBridge.scm",(void*)f_19472},
{"f_19482ChickenBridge.scm",(void*)f_19482},
{"f_19458ChickenBridge.scm",(void*)f_19458},
{"f_19417ChickenBridge.scm",(void*)f_19417},
{"f_19425ChickenBridge.scm",(void*)f_19425},
{"f_19427ChickenBridge.scm",(void*)f_19427},
{"f_19448ChickenBridge.scm",(void*)f_19448},
{"f_19273ChickenBridge.scm",(void*)f_19273},
{"f_19383ChickenBridge.scm",(void*)f_19383},
{"f_19342ChickenBridge.scm",(void*)f_19342},
{"f_19375ChickenBridge.scm",(void*)f_19375},
{"f_19371ChickenBridge.scm",(void*)f_19371},
{"f_19356ChickenBridge.scm",(void*)f_19356},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_19288ChickenBridge.scm",(void*)f_19288},
{"f_19333ChickenBridge.scm",(void*)f_19333},
{"f_19321ChickenBridge.scm",(void*)f_19321},
{"f_19305ChickenBridge.scm",(void*)f_19305},
{"f_18506ChickenBridge.scm",(void*)f_18506},
{"f_18823ChickenBridge.scm",(void*)f_18823},
{"f_18830ChickenBridge.scm",(void*)f_18830},
{"f_19235ChickenBridge.scm",(void*)f_19235},
{"f_19250ChickenBridge.scm",(void*)f_19250},
{"f_19242ChickenBridge.scm",(void*)f_19242},
{"f_19206ChickenBridge.scm",(void*)f_19206},
{"f_19210ChickenBridge.scm",(void*)f_19210},
{"f_19171ChickenBridge.scm",(void*)f_19171},
{"f_19175ChickenBridge.scm",(void*)f_19175},
{"f_19136ChickenBridge.scm",(void*)f_19136},
{"f_19140ChickenBridge.scm",(void*)f_19140},
{"f_18833ChickenBridge.scm",(void*)f_18833},
{"f_19100ChickenBridge.scm",(void*)f_19100},
{"f_19115ChickenBridge.scm",(void*)f_19115},
{"f_19107ChickenBridge.scm",(void*)f_19107},
{"f_19071ChickenBridge.scm",(void*)f_19071},
{"f_19075ChickenBridge.scm",(void*)f_19075},
{"f_19036ChickenBridge.scm",(void*)f_19036},
{"f_19040ChickenBridge.scm",(void*)f_19040},
{"f_19001ChickenBridge.scm",(void*)f_19001},
{"f_19005ChickenBridge.scm",(void*)f_19005},
{"f_18836ChickenBridge.scm",(void*)f_18836},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_18980ChickenBridge.scm",(void*)f_18980},
{"f_18972ChickenBridge.scm",(void*)f_18972},
{"f_18936ChickenBridge.scm",(void*)f_18936},
{"f_18940ChickenBridge.scm",(void*)f_18940},
{"f_18901ChickenBridge.scm",(void*)f_18901},
{"f_18905ChickenBridge.scm",(void*)f_18905},
{"f_18866ChickenBridge.scm",(void*)f_18866},
{"f_18870ChickenBridge.scm",(void*)f_18870},
{"f_18839ChickenBridge.scm",(void*)f_18839},
{"f_18842ChickenBridge.scm",(void*)f_18842},
{"f_18510ChickenBridge.scm",(void*)f_18510},
{"f_18513ChickenBridge.scm",(void*)f_18513},
{"f_18787ChickenBridge.scm",(void*)f_18787},
{"f_18791ChickenBridge.scm",(void*)f_18791},
{"f_18794ChickenBridge.scm",(void*)f_18794},
{"f_18797ChickenBridge.scm",(void*)f_18797},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18813ChickenBridge.scm",(void*)f_18813},
{"f_18803ChickenBridge.scm",(void*)f_18803},
{"f_18519ChickenBridge.scm",(void*)f_18519},
{"f_18526ChickenBridge.scm",(void*)f_18526},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_18772ChickenBridge.scm",(void*)f_18772},
{"f_18764ChickenBridge.scm",(void*)f_18764},
{"f_18728ChickenBridge.scm",(void*)f_18728},
{"f_18732ChickenBridge.scm",(void*)f_18732},
{"f_18693ChickenBridge.scm",(void*)f_18693},
{"f_18697ChickenBridge.scm",(void*)f_18697},
{"f_18529ChickenBridge.scm",(void*)f_18529},
{"f_18657ChickenBridge.scm",(void*)f_18657},
{"f_18672ChickenBridge.scm",(void*)f_18672},
{"f_18664ChickenBridge.scm",(void*)f_18664},
{"f_18628ChickenBridge.scm",(void*)f_18628},
{"f_18632ChickenBridge.scm",(void*)f_18632},
{"f_18593ChickenBridge.scm",(void*)f_18593},
{"f_18597ChickenBridge.scm",(void*)f_18597},
{"f_18532ChickenBridge.scm",(void*)f_18532},
{"f_18535ChickenBridge.scm",(void*)f_18535},
{"f_18550ChickenBridge.scm",(void*)f_18550},
{"f_18572ChickenBridge.scm",(void*)f_18572},
{"f_18556ChickenBridge.scm",(void*)f_18556},
{"f_18564ChickenBridge.scm",(void*)f_18564},
{"f_18538ChickenBridge.scm",(void*)f_18538},
{"f_18541ChickenBridge.scm",(void*)f_18541},
{"f_18423ChickenBridge.scm",(void*)f_18423},
{"f_18414ChickenBridge.scm",(void*)f_18414},
{"f_18405ChickenBridge.scm",(void*)f_18405},
{"f_18387ChickenBridge.scm",(void*)f_18387},
{"f_18369ChickenBridge.scm",(void*)f_18369},
{"f_18351ChickenBridge.scm",(void*)f_18351},
{"f_18342ChickenBridge.scm",(void*)f_18342},
{"f_18333ChickenBridge.scm",(void*)f_18333},
{"f_18111ChickenBridge.scm",(void*)f_18111},
{"f_18161ChickenBridge.scm",(void*)f_18161},
{"f_18306ChickenBridge.scm",(void*)f_18306},
{"f_18187ChickenBridge.scm",(void*)f_18187},
{"f_18302ChickenBridge.scm",(void*)f_18302},
{"f_18287ChickenBridge.scm",(void*)f_18287},
{"f_18268ChickenBridge.scm",(void*)f_18268},
{"f_18241ChickenBridge.scm",(void*)f_18241},
{"f_18194ChickenBridge.scm",(void*)f_18194},
{"f_18164ChickenBridge.scm",(void*)f_18164},
{"f_18114ChickenBridge.scm",(void*)f_18114},
{"f_18120ChickenBridge.scm",(void*)f_18120},
{"f_18136ChickenBridge.scm",(void*)f_18136},
{"f_18139ChickenBridge.scm",(void*)f_18139},
{"f_17637ChickenBridge.scm",(void*)f_17637},
{"f_18101ChickenBridge.scm",(void*)f_18101},
{"f_17641ChickenBridge.scm",(void*)f_17641},
{"f_18073ChickenBridge.scm",(void*)f_18073},
{"f_18088ChickenBridge.scm",(void*)f_18088},
{"f_18080ChickenBridge.scm",(void*)f_18080},
{"f_18044ChickenBridge.scm",(void*)f_18044},
{"f_18048ChickenBridge.scm",(void*)f_18048},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_18013ChickenBridge.scm",(void*)f_18013},
{"f_17974ChickenBridge.scm",(void*)f_17974},
{"f_17978ChickenBridge.scm",(void*)f_17978},
{"f_17644ChickenBridge.scm",(void*)f_17644},
{"f_17938ChickenBridge.scm",(void*)f_17938},
{"f_17953ChickenBridge.scm",(void*)f_17953},
{"f_17945ChickenBridge.scm",(void*)f_17945},
{"f_17909ChickenBridge.scm",(void*)f_17909},
{"f_17913ChickenBridge.scm",(void*)f_17913},
{"f_17874ChickenBridge.scm",(void*)f_17874},
{"f_17878ChickenBridge.scm",(void*)f_17878},
{"f_17839ChickenBridge.scm",(void*)f_17839},
{"f_17843ChickenBridge.scm",(void*)f_17843},
{"f_17647ChickenBridge.scm",(void*)f_17647},
{"f_17803ChickenBridge.scm",(void*)f_17803},
{"f_17818ChickenBridge.scm",(void*)f_17818},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17774ChickenBridge.scm",(void*)f_17774},
{"f_17778ChickenBridge.scm",(void*)f_17778},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_17743ChickenBridge.scm",(void*)f_17743},
{"f_17704ChickenBridge.scm",(void*)f_17704},
{"f_17708ChickenBridge.scm",(void*)f_17708},
{"f_17650ChickenBridge.scm",(void*)f_17650},
{"f_17653ChickenBridge.scm",(void*)f_17653},
{"f_17656ChickenBridge.scm",(void*)f_17656},
{"f_17671ChickenBridge.scm",(void*)f_17671},
{"f_17683ChickenBridge.scm",(void*)f_17683},
{"f_17662ChickenBridge.scm",(void*)f_17662},
{"f_17665ChickenBridge.scm",(void*)f_17665},
{"f_17561ChickenBridge.scm",(void*)f_17561},
{"f_17565ChickenBridge.scm",(void*)f_17565},
{"f_17584ChickenBridge.scm",(void*)f_17584},
{"f_17594ChickenBridge.scm",(void*)f_17594},
{"f_17596ChickenBridge.scm",(void*)f_17596},
{"f_17613ChickenBridge.scm",(void*)f_17613},
{"f_17616ChickenBridge.scm",(void*)f_17616},
{"f_17627ChickenBridge.scm",(void*)f_17627},
{"f_17568ChickenBridge.scm",(void*)f_17568},
{"f_17298ChickenBridge.scm",(void*)f_17298},
{"f_17551ChickenBridge.scm",(void*)f_17551},
{"f_17302ChickenBridge.scm",(void*)f_17302},
{"f_17523ChickenBridge.scm",(void*)f_17523},
{"f_17538ChickenBridge.scm",(void*)f_17538},
{"f_17530ChickenBridge.scm",(void*)f_17530},
{"f_17494ChickenBridge.scm",(void*)f_17494},
{"f_17498ChickenBridge.scm",(void*)f_17498},
{"f_17459ChickenBridge.scm",(void*)f_17459},
{"f_17463ChickenBridge.scm",(void*)f_17463},
{"f_17305ChickenBridge.scm",(void*)f_17305},
{"f_17423ChickenBridge.scm",(void*)f_17423},
{"f_17438ChickenBridge.scm",(void*)f_17438},
{"f_17430ChickenBridge.scm",(void*)f_17430},
{"f_17394ChickenBridge.scm",(void*)f_17394},
{"f_17398ChickenBridge.scm",(void*)f_17398},
{"f_17359ChickenBridge.scm",(void*)f_17359},
{"f_17363ChickenBridge.scm",(void*)f_17363},
{"f_17308ChickenBridge.scm",(void*)f_17308},
{"f_17311ChickenBridge.scm",(void*)f_17311},
{"f_17314ChickenBridge.scm",(void*)f_17314},
{"f_17326ChickenBridge.scm",(void*)f_17326},
{"f_17338ChickenBridge.scm",(void*)f_17338},
{"f_17320ChickenBridge.scm",(void*)f_17320},
{"f_17262ChickenBridge.scm",(void*)f_17262},
{"f_17266ChickenBridge.scm",(void*)f_17266},
{"f_17288ChickenBridge.scm",(void*)f_17288},
{"f_17282ChickenBridge.scm",(void*)f_17282},
{"f_17275ChickenBridge.scm",(void*)f_17275},
{"f_17015ChickenBridge.scm",(void*)f_17015},
{"f_17019ChickenBridge.scm",(void*)f_17019},
{"f_17232ChickenBridge.scm",(void*)f_17232},
{"f_17247ChickenBridge.scm",(void*)f_17247},
{"f_17239ChickenBridge.scm",(void*)f_17239},
{"f_17203ChickenBridge.scm",(void*)f_17203},
{"f_17207ChickenBridge.scm",(void*)f_17207},
{"f_17168ChickenBridge.scm",(void*)f_17168},
{"f_17172ChickenBridge.scm",(void*)f_17172},
{"f_17022ChickenBridge.scm",(void*)f_17022},
{"f_17132ChickenBridge.scm",(void*)f_17132},
{"f_17147ChickenBridge.scm",(void*)f_17147},
{"f_17139ChickenBridge.scm",(void*)f_17139},
{"f_17103ChickenBridge.scm",(void*)f_17103},
{"f_17107ChickenBridge.scm",(void*)f_17107},
{"f_17068ChickenBridge.scm",(void*)f_17068},
{"f_17072ChickenBridge.scm",(void*)f_17072},
{"f_17025ChickenBridge.scm",(void*)f_17025},
{"f_17028ChickenBridge.scm",(void*)f_17028},
{"f_17031ChickenBridge.scm",(void*)f_17031},
{"f_17039ChickenBridge.scm",(void*)f_17039},
{"f_17047ChickenBridge.scm",(void*)f_17047},
{"f_17037ChickenBridge.scm",(void*)f_17037},
{"f_16800ChickenBridge.scm",(void*)f_16800},
{"f_16804ChickenBridge.scm",(void*)f_16804},
{"f_17013ChickenBridge.scm",(void*)f_17013},
{"f_16966ChickenBridge.scm",(void*)f_16966},
{"f_16978ChickenBridge.scm",(void*)f_16978},
{"f_16834ChickenBridge.scm",(void*)f_16834},
{"f_16837ChickenBridge.scm",(void*)f_16837},
{"f_16843ChickenBridge.scm",(void*)f_16843},
{"f_16846ChickenBridge.scm",(void*)f_16846},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16849ChickenBridge.scm",(void*)f_16849},
{"f_16928ChickenBridge.scm",(void*)f_16928},
{"f_16855ChickenBridge.scm",(void*)f_16855},
{"f_16858ChickenBridge.scm",(void*)f_16858},
{"f_16810ChickenBridge.scm",(void*)f_16810},
{"f_16813ChickenBridge.scm",(void*)f_16813},
{"f_16820ChickenBridge.scm",(void*)f_16820},
{"f_16330ChickenBridge.scm",(void*)f_16330},
{"f_16334ChickenBridge.scm",(void*)f_16334},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_16785ChickenBridge.scm",(void*)f_16785},
{"f_16777ChickenBridge.scm",(void*)f_16777},
{"f_16741ChickenBridge.scm",(void*)f_16741},
{"f_16745ChickenBridge.scm",(void*)f_16745},
{"f_16706ChickenBridge.scm",(void*)f_16706},
{"f_16710ChickenBridge.scm",(void*)f_16710},
{"f_16671ChickenBridge.scm",(void*)f_16671},
{"f_16675ChickenBridge.scm",(void*)f_16675},
{"f_16337ChickenBridge.scm",(void*)f_16337},
{"f_16635ChickenBridge.scm",(void*)f_16635},
{"f_16650ChickenBridge.scm",(void*)f_16650},
{"f_16642ChickenBridge.scm",(void*)f_16642},
{"f_16606ChickenBridge.scm",(void*)f_16606},
{"f_16610ChickenBridge.scm",(void*)f_16610},
{"f_16571ChickenBridge.scm",(void*)f_16571},
{"f_16575ChickenBridge.scm",(void*)f_16575},
{"f_16536ChickenBridge.scm",(void*)f_16536},
{"f_16540ChickenBridge.scm",(void*)f_16540},
{"f_16340ChickenBridge.scm",(void*)f_16340},
{"f_16500ChickenBridge.scm",(void*)f_16500},
{"f_16515ChickenBridge.scm",(void*)f_16515},
{"f_16507ChickenBridge.scm",(void*)f_16507},
{"f_16471ChickenBridge.scm",(void*)f_16471},
{"f_16475ChickenBridge.scm",(void*)f_16475},
{"f_16436ChickenBridge.scm",(void*)f_16436},
{"f_16440ChickenBridge.scm",(void*)f_16440},
{"f_16401ChickenBridge.scm",(void*)f_16401},
{"f_16405ChickenBridge.scm",(void*)f_16405},
{"f_16343ChickenBridge.scm",(void*)f_16343},
{"f_16346ChickenBridge.scm",(void*)f_16346},
{"f_16349ChickenBridge.scm",(void*)f_16349},
{"f_16372ChickenBridge.scm",(void*)f_16372},
{"f_16380ChickenBridge.scm",(void*)f_16380},
{"f_16355ChickenBridge.scm",(void*)f_16355},
{"f_16358ChickenBridge.scm",(void*)f_16358},
{"f_16250ChickenBridge.scm",(void*)f_16250},
{"f_16241ChickenBridge.scm",(void*)f_16241},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16173ChickenBridge.scm",(void*)f_16173},
{"f_16176ChickenBridge.scm",(void*)f_16176},
{"f_15914ChickenBridge.scm",(void*)f_15914},
{"f_15918ChickenBridge.scm",(void*)f_15918},
{"f_16139ChickenBridge.scm",(void*)f_16139},
{"f_16154ChickenBridge.scm",(void*)f_16154},
{"f_16146ChickenBridge.scm",(void*)f_16146},
{"f_16110ChickenBridge.scm",(void*)f_16110},
{"f_16114ChickenBridge.scm",(void*)f_16114},
{"f_16075ChickenBridge.scm",(void*)f_16075},
{"f_16079ChickenBridge.scm",(void*)f_16079},
{"f_15921ChickenBridge.scm",(void*)f_15921},
{"f_16039ChickenBridge.scm",(void*)f_16039},
{"f_16054ChickenBridge.scm",(void*)f_16054},
{"f_16046ChickenBridge.scm",(void*)f_16046},
{"f_16010ChickenBridge.scm",(void*)f_16010},
{"f_16014ChickenBridge.scm",(void*)f_16014},
{"f_15975ChickenBridge.scm",(void*)f_15975},
{"f_15979ChickenBridge.scm",(void*)f_15979},
{"f_15924ChickenBridge.scm",(void*)f_15924},
{"f_15927ChickenBridge.scm",(void*)f_15927},
{"f_15930ChickenBridge.scm",(void*)f_15930},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15954ChickenBridge.scm",(void*)f_15954},
{"f_15936ChickenBridge.scm",(void*)f_15936},
{"f_15799ChickenBridge.scm",(void*)f_15799},
{"f_15912ChickenBridge.scm",(void*)f_15912},
{"f_15809ChickenBridge.scm",(void*)f_15809},
{"f_15897ChickenBridge.scm",(void*)f_15897},
{"f_15908ChickenBridge.scm",(void*)f_15908},
{"f_15904ChickenBridge.scm",(void*)f_15904},
{"f_15812ChickenBridge.scm",(void*)f_15812},
{"f_15894ChickenBridge.scm",(void*)f_15894},
{"f_15820ChickenBridge.scm",(void*)f_15820},
{"f_15884ChickenBridge.scm",(void*)f_15884},
{"f_15829ChickenBridge.scm",(void*)f_15829},
{"f_15848ChickenBridge.scm",(void*)f_15848},
{"f_15877ChickenBridge.scm",(void*)f_15877},
{"f_15858ChickenBridge.scm",(void*)f_15858},
{"f_15873ChickenBridge.scm",(void*)f_15873},
{"f_15861ChickenBridge.scm",(void*)f_15861},
{"f_15832ChickenBridge.scm",(void*)f_15832},
{"f_15842ChickenBridge.scm",(void*)f_15842},
{"f_15823ChickenBridge.scm",(void*)f_15823},
{"f_15826ChickenBridge.scm",(void*)f_15826},
{"f_15753ChickenBridge.scm",(void*)f_15753},
{"f_15744ChickenBridge.scm",(void*)f_15744},
{"f_15443ChickenBridge.scm",(void*)f_15443},
{"f_15450ChickenBridge.scm",(void*)f_15450},
{"f_15739ChickenBridge.scm",(void*)f_15739},
{"f_15453ChickenBridge.scm",(void*)f_15453},
{"f_15724ChickenBridge.scm",(void*)f_15724},
{"f_15716ChickenBridge.scm",(void*)f_15716},
{"f_15708ChickenBridge.scm",(void*)f_15708},
{"f_15711ChickenBridge.scm",(void*)f_15711},
{"f_15679ChickenBridge.scm",(void*)f_15679},
{"f_15702ChickenBridge.scm",(void*)f_15702},
{"f_15685ChickenBridge.scm",(void*)f_15685},
{"f_15689ChickenBridge.scm",(void*)f_15689},
{"f_15456ChickenBridge.scm",(void*)f_15456},
{"f_15462ChickenBridge.scm",(void*)f_15462},
{"f_15554ChickenBridge.scm",(void*)f_15554},
{"f_15666ChickenBridge.scm",(void*)f_15666},
{"f_15673ChickenBridge.scm",(void*)f_15673},
{"f_15577ChickenBridge.scm",(void*)f_15577},
{"f_15579ChickenBridge.scm",(void*)f_15579},
{"f_15628ChickenBridge.scm",(void*)f_15628},
{"f_15663ChickenBridge.scm",(void*)f_15663},
{"f_15652ChickenBridge.scm",(void*)f_15652},
{"f_15797ChickenBridge.scm",(void*)f_15797},
{"f_15772ChickenBridge.scm",(void*)f_15772},
{"f_15793ChickenBridge.scm",(void*)f_15793},
{"f_15789ChickenBridge.scm",(void*)f_15789},
{"f_15781ChickenBridge.scm",(void*)f_15781},
{"f_15645ChickenBridge.scm",(void*)f_15645},
{"f_15638ChickenBridge.scm",(void*)f_15638},
{"f_15586ChickenBridge.scm",(void*)f_15586},
{"f_15626ChickenBridge.scm",(void*)f_15626},
{"f_15590ChickenBridge.scm",(void*)f_15590},
{"f_15622ChickenBridge.scm",(void*)f_15622},
{"f_15609ChickenBridge.scm",(void*)f_15609},
{"f_15617ChickenBridge.scm",(void*)f_15617},
{"f_15613ChickenBridge.scm",(void*)f_15613},
{"f_15593ChickenBridge.scm",(void*)f_15593},
{"f_15596ChickenBridge.scm",(void*)f_15596},
{"f_15570ChickenBridge.scm",(void*)f_15570},
{"f_15557ChickenBridge.scm",(void*)f_15557},
{"f_15566ChickenBridge.scm",(void*)f_15566},
{"f_15561ChickenBridge.scm",(void*)f_15561},
{"f_15468ChickenBridge.scm",(void*)f_15468},
{"f_15548ChickenBridge.scm",(void*)f_15548},
{"f_15528ChickenBridge.scm",(void*)f_15528},
{"f_15534ChickenBridge.scm",(void*)f_15534},
{"f_15545ChickenBridge.scm",(void*)f_15545},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15513ChickenBridge.scm",(void*)f_15513},
{"f_15516ChickenBridge.scm",(void*)f_15516},
{"f_15471ChickenBridge.scm",(void*)f_15471},
{"f_15507ChickenBridge.scm",(void*)f_15507},
{"f_15502ChickenBridge.scm",(void*)f_15502},
{"f_15474ChickenBridge.scm",(void*)f_15474},
{"f_15487ChickenBridge.scm",(void*)f_15487},
{"f_15477ChickenBridge.scm",(void*)f_15477},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15483ChickenBridge.scm",(void*)f_15483},
{"f_15320ChickenBridge.scm",(void*)f_15320},
{"f_15379ChickenBridge.scm",(void*)f_15379},
{"f_15389ChickenBridge.scm",(void*)f_15389},
{"f_15391ChickenBridge.scm",(void*)f_15391},
{"f_15420ChickenBridge.scm",(void*)f_15420},
{"f_15425ChickenBridge.scm",(void*)f_15425},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15341ChickenBridge.scm",(void*)f_15341},
{"f_15373ChickenBridge.scm",(void*)f_15373},
{"f_15301ChickenBridge.scm",(void*)f_15301},
{"f_15308ChickenBridge.scm",(void*)f_15308},
{"f_15315ChickenBridge.scm",(void*)f_15315},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_15289ChickenBridge.scm",(void*)f_15289},
{"f_15296ChickenBridge.scm",(void*)f_15296},
{"f_15102ChickenBridge.scm",(void*)f_15102},
{"f_15106ChickenBridge.scm",(void*)f_15106},
{"f_15109ChickenBridge.scm",(void*)f_15109},
{"f_15112ChickenBridge.scm",(void*)f_15112},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_15272ChickenBridge.scm",(void*)f_15272},
{"f_15279ChickenBridge.scm",(void*)f_15279},
{"f_15118ChickenBridge.scm",(void*)f_15118},
{"f_15121ChickenBridge.scm",(void*)f_15121},
{"f_15127ChickenBridge.scm",(void*)f_15127},
{"f_15133ChickenBridge.scm",(void*)f_15133},
{"f_15196ChickenBridge.scm",(void*)f_15196},
{"f_15210ChickenBridge.scm",(void*)f_15210},
{"f_15136ChickenBridge.scm",(void*)f_15136},
{"f_15139ChickenBridge.scm",(void*)f_15139},
{"f_15145ChickenBridge.scm",(void*)f_15145},
{"f_15158ChickenBridge.scm",(void*)f_15158},
{"f_15148ChickenBridge.scm",(void*)f_15148},
{"f_15151ChickenBridge.scm",(void*)f_15151},
{"f_15092ChickenBridge.scm",(void*)f_15092},
{"f_15037ChickenBridge.scm",(void*)f_15037},
{"f_15028ChickenBridge.scm",(void*)f_15028},
{"f_14911ChickenBridge.scm",(void*)f_14911},
{"f_14902ChickenBridge.scm",(void*)f_14902},
{"f_14893ChickenBridge.scm",(void*)f_14893},
{"f_14884ChickenBridge.scm",(void*)f_14884},
{"f_14875ChickenBridge.scm",(void*)f_14875},
{"f_14857ChickenBridge.scm",(void*)f_14857},
{"f_14848ChickenBridge.scm",(void*)f_14848},
{"f_14839ChickenBridge.scm",(void*)f_14839},
{"f_14821ChickenBridge.scm",(void*)f_14821},
{"f_14812ChickenBridge.scm",(void*)f_14812},
{"f_14803ChickenBridge.scm",(void*)f_14803},
{"f_14788ChickenBridge.scm",(void*)f_14788},
{"f_14743ChickenBridge.scm",(void*)f_14743},
{"f_14725ChickenBridge.scm",(void*)f_14725},
{"f_14716ChickenBridge.scm",(void*)f_14716},
{"f_14689ChickenBridge.scm",(void*)f_14689},
{"f_14671ChickenBridge.scm",(void*)f_14671},
{"f_14653ChickenBridge.scm",(void*)f_14653},
{"f_14644ChickenBridge.scm",(void*)f_14644},
{"f_14632ChickenBridge.scm",(void*)f_14632},
{"f_14506ChickenBridge.scm",(void*)f_14506},
{"f_14512ChickenBridge.scm",(void*)f_14512},
{"f_14516ChickenBridge.scm",(void*)f_14516},
{"f_14534ChickenBridge.scm",(void*)f_14534},
{"f_14537ChickenBridge.scm",(void*)f_14537},
{"f_14541ChickenBridge.scm",(void*)f_14541},
{"f_14544ChickenBridge.scm",(void*)f_14544},
{"f_14596ChickenBridge.scm",(void*)f_14596},
{"f_14607ChickenBridge.scm",(void*)f_14607},
{"f_14547ChickenBridge.scm",(void*)f_14547},
{"f_14557ChickenBridge.scm",(void*)f_14557},
{"f_14559ChickenBridge.scm",(void*)f_14559},
{"f_14403ChickenBridge.scm",(void*)f_14403},
{"f_14427ChickenBridge.scm",(void*)f_14427},
{"f_14431ChickenBridge.scm",(void*)f_14431},
{"f_14457ChickenBridge.scm",(void*)f_14457},
{"f_14467ChickenBridge.scm",(void*)f_14467},
{"f_14504ChickenBridge.scm",(void*)f_14504},
{"f_14496ChickenBridge.scm",(void*)f_14496},
{"f_14434ChickenBridge.scm",(void*)f_14434},
{"f_14404ChickenBridge.scm",(void*)f_14404},
{"f_14408ChickenBridge.scm",(void*)f_14408},
{"f_14411ChickenBridge.scm",(void*)f_14411},
{"f_14573ChickenBridge.scm",(void*)f_14573},
{"f_14576ChickenBridge.scm",(void*)f_14576},
{"f_14583ChickenBridge.scm",(void*)f_14583},
{"f_14517ChickenBridge.scm",(void*)f_14517},
{"f_14521ChickenBridge.scm",(void*)f_14521},
{"f_14524ChickenBridge.scm",(void*)f_14524},
{"f_13993ChickenBridge.scm",(void*)f_13993},
{"f_14372ChickenBridge.scm",(void*)f_14372},
{"f_14366ChickenBridge.scm",(void*)f_14366},
{"f_13997ChickenBridge.scm",(void*)f_13997},
{"f_14350ChickenBridge.scm",(void*)f_14350},
{"f_14000ChickenBridge.scm",(void*)f_14000},
{"f_14336ChickenBridge.scm",(void*)f_14336},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_14325ChickenBridge.scm",(void*)f_14325},
{"f_14321ChickenBridge.scm",(void*)f_14321},
{"f_14006ChickenBridge.scm",(void*)f_14006},
{"f_14009ChickenBridge.scm",(void*)f_14009},
{"f_14309ChickenBridge.scm",(void*)f_14309},
{"f_14301ChickenBridge.scm",(void*)f_14301},
{"f_14305ChickenBridge.scm",(void*)f_14305},
{"f_14293ChickenBridge.scm",(void*)f_14293},
{"f_14297ChickenBridge.scm",(void*)f_14297},
{"f_14167ChickenBridge.scm",(void*)f_14167},
{"f_14282ChickenBridge.scm",(void*)f_14282},
{"f_14286ChickenBridge.scm",(void*)f_14286},
{"f_14274ChickenBridge.scm",(void*)f_14274},
{"f_14278ChickenBridge.scm",(void*)f_14278},
{"f_14170ChickenBridge.scm",(void*)f_14170},
{"f_14174ChickenBridge.scm",(void*)f_14174},
{"f_14179ChickenBridge.scm",(void*)f_14179},
{"f_14189ChickenBridge.scm",(void*)f_14189},
{"f_14192ChickenBridge.scm",(void*)f_14192},
{"f_14073ChickenBridge.scm",(void*)f_14073},
{"f_14136ChickenBridge.scm",(void*)f_14136},
{"f_14157ChickenBridge.scm",(void*)f_14157},
{"f_14098ChickenBridge.scm",(void*)f_14098},
{"f_14127ChickenBridge.scm",(void*)f_14127},
{"f_14076ChickenBridge.scm",(void*)f_14076},
{"f_14093ChickenBridge.scm",(void*)f_14093},
{"f_14089ChickenBridge.scm",(void*)f_14089},
{"f_13539ChickenBridge.scm",(void*)f_13539},
{"f_13543ChickenBridge.scm",(void*)f_13543},
{"f_13531ChickenBridge.scm",(void*)f_13531},
{"f_13456ChickenBridge.scm",(void*)f_13456},
{"f_13517ChickenBridge.scm",(void*)f_13517},
{"f_13460ChickenBridge.scm",(void*)f_13460},
{"f_13468ChickenBridge.scm",(void*)f_13468},
{"f_13501ChickenBridge.scm",(void*)f_13501},
{"f_13478ChickenBridge.scm",(void*)f_13478},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_14053ChickenBridge.scm",(void*)f_14053},
{"f_14023ChickenBridge.scm",(void*)f_14023},
{"f_14012ChickenBridge.scm",(void*)f_14012},
{"f_13936ChickenBridge.scm",(void*)f_13936},
{"f_13944ChickenBridge.scm",(void*)f_13944},
{"f_13948ChickenBridge.scm",(void*)f_13948},
{"f_13952ChickenBridge.scm",(void*)f_13952},
{"f_13958ChickenBridge.scm",(void*)f_13958},
{"f_13968ChickenBridge.scm",(void*)f_13968},
{"f_13724ChickenBridge.scm",(void*)f_13724},
{"f_13792ChickenBridge.scm",(void*)f_13792},
{"f_13795ChickenBridge.scm",(void*)f_13795},
{"f_13798ChickenBridge.scm",(void*)f_13798},
{"f_13801ChickenBridge.scm",(void*)f_13801},
{"f_13804ChickenBridge.scm",(void*)f_13804},
{"f_13902ChickenBridge.scm",(void*)f_13902},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13870ChickenBridge.scm",(void*)f_13870},
{"f_13880ChickenBridge.scm",(void*)f_13880},
{"f_13821ChickenBridge.scm",(void*)f_13821},
{"f_13840ChickenBridge.scm",(void*)f_13840},
{"f_13850ChickenBridge.scm",(void*)f_13850},
{"f_13831ChickenBridge.scm",(void*)f_13831},
{"f_13807ChickenBridge.scm",(void*)f_13807},
{"f_13760ChickenBridge.scm",(void*)f_13760},
{"f_13770ChickenBridge.scm",(void*)f_13770},
{"f_13743ChickenBridge.scm",(void*)f_13743},
{"f_13750ChickenBridge.scm",(void*)f_13750},
{"f_13726ChickenBridge.scm",(void*)f_13726},
{"f_13733ChickenBridge.scm",(void*)f_13733},
{"f_13545ChickenBridge.scm",(void*)f_13545},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13557ChickenBridge.scm",(void*)f_13557},
{"f_13559ChickenBridge.scm",(void*)f_13559},
{"f_13569ChickenBridge.scm",(void*)f_13569},
{"f_13700ChickenBridge.scm",(void*)f_13700},
{"f_13649ChickenBridge.scm",(void*)f_13649},
{"f_13652ChickenBridge.scm",(void*)f_13652},
{"f_13663ChickenBridge.scm",(void*)f_13663},
{"f_13615ChickenBridge.scm",(void*)f_13615},
{"f_13584ChickenBridge.scm",(void*)f_13584},
{"f_13587ChickenBridge.scm",(void*)f_13587},
{"f_13572ChickenBridge.scm",(void*)f_13572},
{"f_13133ChickenBridge.scm",(void*)f_13133},
{"f_13450ChickenBridge.scm",(void*)f_13450},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13381ChickenBridge.scm",(void*)f_13381},
{"f_8120ChickenBridge.scm",(void*)f_8120},
{"f_13400ChickenBridge.scm",(void*)f_13400},
{"f_13403ChickenBridge.scm",(void*)f_13403},
{"f_13146ChickenBridge.scm",(void*)f_13146},
{"f_13222ChickenBridge.scm",(void*)f_13222},
{"f_13375ChickenBridge.scm",(void*)f_13375},
{"f_13359ChickenBridge.scm",(void*)f_13359},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13325ChickenBridge.scm",(void*)f_13325},
{"f_13278ChickenBridge.scm",(void*)f_13278},
{"f_13253ChickenBridge.scm",(void*)f_13253},
{"f_13149ChickenBridge.scm",(void*)f_13149},
{"f_13157ChickenBridge.scm",(void*)f_13157},
{"f_13190ChickenBridge.scm",(void*)f_13190},
{"f_11660ChickenBridge.scm",(void*)f_11660},
{"f_13110ChickenBridge.scm",(void*)f_13110},
{"f_13125ChickenBridge.scm",(void*)f_13125},
{"f_13117ChickenBridge.scm",(void*)f_13117},
{"f_13081ChickenBridge.scm",(void*)f_13081},
{"f_13085ChickenBridge.scm",(void*)f_13085},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_13050ChickenBridge.scm",(void*)f_13050},
{"f_13011ChickenBridge.scm",(void*)f_13011},
{"f_13015ChickenBridge.scm",(void*)f_13015},
{"f_12976ChickenBridge.scm",(void*)f_12976},
{"f_12980ChickenBridge.scm",(void*)f_12980},
{"f_12941ChickenBridge.scm",(void*)f_12941},
{"f_12945ChickenBridge.scm",(void*)f_12945},
{"f_12906ChickenBridge.scm",(void*)f_12906},
{"f_12910ChickenBridge.scm",(void*)f_12910},
{"f_11664ChickenBridge.scm",(void*)f_11664},
{"f_12870ChickenBridge.scm",(void*)f_12870},
{"f_12885ChickenBridge.scm",(void*)f_12885},
{"f_12877ChickenBridge.scm",(void*)f_12877},
{"f_12841ChickenBridge.scm",(void*)f_12841},
{"f_12845ChickenBridge.scm",(void*)f_12845},
{"f_12806ChickenBridge.scm",(void*)f_12806},
{"f_12810ChickenBridge.scm",(void*)f_12810},
{"f_12771ChickenBridge.scm",(void*)f_12771},
{"f_12775ChickenBridge.scm",(void*)f_12775},
{"f_12736ChickenBridge.scm",(void*)f_12736},
{"f_12740ChickenBridge.scm",(void*)f_12740},
{"f_12701ChickenBridge.scm",(void*)f_12701},
{"f_12705ChickenBridge.scm",(void*)f_12705},
{"f_12666ChickenBridge.scm",(void*)f_12666},
{"f_12670ChickenBridge.scm",(void*)f_12670},
{"f_11667ChickenBridge.scm",(void*)f_11667},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12645ChickenBridge.scm",(void*)f_12645},
{"f_12637ChickenBridge.scm",(void*)f_12637},
{"f_12601ChickenBridge.scm",(void*)f_12601},
{"f_12605ChickenBridge.scm",(void*)f_12605},
{"f_12566ChickenBridge.scm",(void*)f_12566},
{"f_12570ChickenBridge.scm",(void*)f_12570},
{"f_12531ChickenBridge.scm",(void*)f_12531},
{"f_12535ChickenBridge.scm",(void*)f_12535},
{"f_12496ChickenBridge.scm",(void*)f_12496},
{"f_12500ChickenBridge.scm",(void*)f_12500},
{"f_12461ChickenBridge.scm",(void*)f_12461},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12426ChickenBridge.scm",(void*)f_12426},
{"f_12430ChickenBridge.scm",(void*)f_12430},
{"f_11670ChickenBridge.scm",(void*)f_11670},
{"f_12390ChickenBridge.scm",(void*)f_12390},
{"f_12405ChickenBridge.scm",(void*)f_12405},
{"f_12397ChickenBridge.scm",(void*)f_12397},
{"f_12361ChickenBridge.scm",(void*)f_12361},
{"f_12365ChickenBridge.scm",(void*)f_12365},
{"f_12326ChickenBridge.scm",(void*)f_12326},
{"f_12330ChickenBridge.scm",(void*)f_12330},
{"f_12291ChickenBridge.scm",(void*)f_12291},
{"f_12295ChickenBridge.scm",(void*)f_12295},
{"f_12256ChickenBridge.scm",(void*)f_12256},
{"f_12260ChickenBridge.scm",(void*)f_12260},
{"f_12221ChickenBridge.scm",(void*)f_12221},
{"f_12225ChickenBridge.scm",(void*)f_12225},
{"f_12186ChickenBridge.scm",(void*)f_12186},
{"f_12190ChickenBridge.scm",(void*)f_12190},
{"f_11673ChickenBridge.scm",(void*)f_11673},
{"f_12150ChickenBridge.scm",(void*)f_12150},
{"f_12165ChickenBridge.scm",(void*)f_12165},
{"f_12157ChickenBridge.scm",(void*)f_12157},
{"f_12121ChickenBridge.scm",(void*)f_12121},
{"f_12125ChickenBridge.scm",(void*)f_12125},
{"f_12086ChickenBridge.scm",(void*)f_12086},
{"f_12090ChickenBridge.scm",(void*)f_12090},
{"f_12051ChickenBridge.scm",(void*)f_12051},
{"f_12055ChickenBridge.scm",(void*)f_12055},
{"f_12016ChickenBridge.scm",(void*)f_12016},
{"f_12020ChickenBridge.scm",(void*)f_12020},
{"f_11981ChickenBridge.scm",(void*)f_11981},
{"f_11985ChickenBridge.scm",(void*)f_11985},
{"f_11946ChickenBridge.scm",(void*)f_11946},
{"f_11950ChickenBridge.scm",(void*)f_11950},
{"f_11676ChickenBridge.scm",(void*)f_11676},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11925ChickenBridge.scm",(void*)f_11925},
{"f_11917ChickenBridge.scm",(void*)f_11917},
{"f_11881ChickenBridge.scm",(void*)f_11881},
{"f_11885ChickenBridge.scm",(void*)f_11885},
{"f_11846ChickenBridge.scm",(void*)f_11846},
{"f_11850ChickenBridge.scm",(void*)f_11850},
{"f_11811ChickenBridge.scm",(void*)f_11811},
{"f_11815ChickenBridge.scm",(void*)f_11815},
{"f_11776ChickenBridge.scm",(void*)f_11776},
{"f_11780ChickenBridge.scm",(void*)f_11780},
{"f_11741ChickenBridge.scm",(void*)f_11741},
{"f_11745ChickenBridge.scm",(void*)f_11745},
{"f_11706ChickenBridge.scm",(void*)f_11706},
{"f_11710ChickenBridge.scm",(void*)f_11710},
{"f_11679ChickenBridge.scm",(void*)f_11679},
{"f_11682ChickenBridge.scm",(void*)f_11682},
{"f_11441ChickenBridge.scm",(void*)f_11441},
{"f_11450ChickenBridge.scm",(void*)f_11450},
{"f_11454ChickenBridge.scm",(void*)f_11454},
{"f_11641ChickenBridge.scm",(void*)f_11641},
{"f_11626ChickenBridge.scm",(void*)f_11626},
{"f_11591ChickenBridge.scm",(void*)f_11591},
{"f_11571ChickenBridge.scm",(void*)f_11571},
{"f_11575ChickenBridge.scm",(void*)f_11575},
{"f_11561ChickenBridge.scm",(void*)f_11561},
{"f_11569ChickenBridge.scm",(void*)f_11569},
{"f_11528ChickenBridge.scm",(void*)f_11528},
{"f_11456ChickenBridge.scm",(void*)f_11456},
{"f_11523ChickenBridge.scm",(void*)f_11523},
{"f_11460ChickenBridge.scm",(void*)f_11460},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11471ChickenBridge.scm",(void*)f_11471},
{"f_11412ChickenBridge.scm",(void*)f_11412},
{"f_11416ChickenBridge.scm",(void*)f_11416},
{"f_11427ChickenBridge.scm",(void*)f_11427},
{"f_11425ChickenBridge.scm",(void*)f_11425},
{"f_11381ChickenBridge.scm",(void*)f_11381},
{"f_11385ChickenBridge.scm",(void*)f_11385},
{"f_11396ChickenBridge.scm",(void*)f_11396},
{"f_11394ChickenBridge.scm",(void*)f_11394},
{"f_11363ChickenBridge.scm",(void*)f_11363},
{"f_11371ChickenBridge.scm",(void*)f_11371},
{"f_11379ChickenBridge.scm",(void*)f_11379},
{"f_11353ChickenBridge.scm",(void*)f_11353},
{"f_11361ChickenBridge.scm",(void*)f_11361},
{"f_11294ChickenBridge.scm",(void*)f_11294},
{"f_11301ChickenBridge.scm",(void*)f_11301},
{"f_11304ChickenBridge.scm",(void*)f_11304},
{"f_11307ChickenBridge.scm",(void*)f_11307},
{"f_11312ChickenBridge.scm",(void*)f_11312},
{"f_11256ChickenBridge.scm",(void*)f_11256},
{"f_11264ChickenBridge.scm",(void*)f_11264},
{"f_11268ChickenBridge.scm",(void*)f_11268},
{"f_11288ChickenBridge.scm",(void*)f_11288},
{"f_11272ChickenBridge.scm",(void*)f_11272},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_11276ChickenBridge.scm",(void*)f_11276},
{"f_11244ChickenBridge.scm",(void*)f_11244},
{"f_11235ChickenBridge.scm",(void*)f_11235},
{"f_11226ChickenBridge.scm",(void*)f_11226},
{"f_11217ChickenBridge.scm",(void*)f_11217},
{"f_11208ChickenBridge.scm",(void*)f_11208},
{"f_11199ChickenBridge.scm",(void*)f_11199},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11175ChickenBridge.scm",(void*)f_11175},
{"f_11169ChickenBridge.scm",(void*)f_11169},
{"f_11027ChickenBridge.scm",(void*)f_11027},
{"f_11031ChickenBridge.scm",(void*)f_11031},
{"f_11100ChickenBridge.scm",(void*)f_11100},
{"f_11143ChickenBridge.scm",(void*)f_11143},
{"f_11147ChickenBridge.scm",(void*)f_11147},
{"f_11136ChickenBridge.scm",(void*)f_11136},
{"f_11123ChickenBridge.scm",(void*)f_11123},
{"f_11042ChickenBridge.scm",(void*)f_11042},
{"f_11085ChickenBridge.scm",(void*)f_11085},
{"f_11089ChickenBridge.scm",(void*)f_11089},
{"f_11078ChickenBridge.scm",(void*)f_11078},
{"f_11065ChickenBridge.scm",(void*)f_11065},
{"f_10861ChickenBridge.scm",(void*)f_10861},
{"f_10962ChickenBridge.scm",(void*)f_10962},
{"f_11011ChickenBridge.scm",(void*)f_11011},
{"f_11007ChickenBridge.scm",(void*)f_11007},
{"f_10979ChickenBridge.scm",(void*)f_10979},
{"f_10914ChickenBridge.scm",(void*)f_10914},
{"f_10923ChickenBridge.scm",(void*)f_10923},
{"f_10907ChickenBridge.scm",(void*)f_10907},
{"f_10726ChickenBridge.scm",(void*)f_10726},
{"f_10852ChickenBridge.scm",(void*)f_10852},
{"f_10848ChickenBridge.scm",(void*)f_10848},
{"f_10826ChickenBridge.scm",(void*)f_10826},
{"f_10756ChickenBridge.scm",(void*)f_10756},
{"f_10772ChickenBridge.scm",(void*)f_10772},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10724ChickenBridge.scm",(void*)f_10724},
{"f_10713ChickenBridge.scm",(void*)f_10713},
{"f_10565ChickenBridge.scm",(void*)f_10565},
{"f_10679ChickenBridge.scm",(void*)f_10679},
{"f_10580ChickenBridge.scm",(void*)f_10580},
{"f_10610ChickenBridge.scm",(void*)f_10610},
{"f_10629ChickenBridge.scm",(void*)f_10629},
{"f_10614ChickenBridge.scm",(void*)f_10614},
{"f_10593ChickenBridge.scm",(void*)f_10593},
{"f_10443ChickenBridge.scm",(void*)f_10443},
{"f_10563ChickenBridge.scm",(void*)f_10563},
{"f_10458ChickenBridge.scm",(void*)f_10458},
{"f_10488ChickenBridge.scm",(void*)f_10488},
{"f_10507ChickenBridge.scm",(void*)f_10507},
{"f_10492ChickenBridge.scm",(void*)f_10492},
{"f_10471ChickenBridge.scm",(void*)f_10471},
{"f_10346ChickenBridge.scm",(void*)f_10346},
{"f_10441ChickenBridge.scm",(void*)f_10441},
{"f_10361ChickenBridge.scm",(void*)f_10361},
{"f_10407ChickenBridge.scm",(void*)f_10407},
{"f_10392ChickenBridge.scm",(void*)f_10392},
{"f_10374ChickenBridge.scm",(void*)f_10374},
{"f_10293ChickenBridge.scm",(void*)f_10293},
{"f_10331ChickenBridge.scm",(void*)f_10331},
{"f_10338ChickenBridge.scm",(void*)f_10338},
{"f_10316ChickenBridge.scm",(void*)f_10316},
{"f_10291ChickenBridge.scm",(void*)f_10291},
{"f_10263ChickenBridge.scm",(void*)f_10263},
{"f_10265ChickenBridge.scm",(void*)f_10265},
{"f_10243ChickenBridge.scm",(void*)f_10243},
{"f_10191ChickenBridge.scm",(void*)f_10191},
{"f_10228ChickenBridge.scm",(void*)f_10228},
{"f_10195ChickenBridge.scm",(void*)f_10195},
{"f_10211ChickenBridge.scm",(void*)f_10211},
{"f_10213ChickenBridge.scm",(void*)f_10213},
{"f_9977ChickenBridge.scm",(void*)f_9977},
{"f_9990ChickenBridge.scm",(void*)f_9990},
{"f_10072ChickenBridge.scm",(void*)f_10072},
{"f_10075ChickenBridge.scm",(void*)f_10075},
{"f_10083ChickenBridge.scm",(void*)f_10083},
{"f_10095ChickenBridge.scm",(void*)f_10095},
{"f_10116ChickenBridge.scm",(void*)f_10116},
{"f_10124ChickenBridge.scm",(void*)f_10124},
{"f_10011ChickenBridge.scm",(void*)f_10011},
{"f_10016ChickenBridge.scm",(void*)f_10016},
{"f_10048ChickenBridge.scm",(void*)f_10048},
{"f_9956ChickenBridge.scm",(void*)f_9956},
{"f_9937ChickenBridge.scm",(void*)f_9937},
{"f_9896ChickenBridge.scm",(void*)f_9896},
{"f_9877ChickenBridge.scm",(void*)f_9877},
{"f_9649ChickenBridge.scm",(void*)f_9649},
{"f_9854ChickenBridge.scm",(void*)f_9854},
{"f_9869ChickenBridge.scm",(void*)f_9869},
{"f_9861ChickenBridge.scm",(void*)f_9861},
{"f_9825ChickenBridge.scm",(void*)f_9825},
{"f_9829ChickenBridge.scm",(void*)f_9829},
{"f_9790ChickenBridge.scm",(void*)f_9790},
{"f_9794ChickenBridge.scm",(void*)f_9794},
{"f_9653ChickenBridge.scm",(void*)f_9653},
{"f_9754ChickenBridge.scm",(void*)f_9754},
{"f_9769ChickenBridge.scm",(void*)f_9769},
{"f_9761ChickenBridge.scm",(void*)f_9761},
{"f_9725ChickenBridge.scm",(void*)f_9725},
{"f_9729ChickenBridge.scm",(void*)f_9729},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9694ChickenBridge.scm",(void*)f_9694},
{"f_9656ChickenBridge.scm",(void*)f_9656},
{"f_9659ChickenBridge.scm",(void*)f_9659},
{"f_9662ChickenBridge.scm",(void*)f_9662},
{"f_9607ChickenBridge.scm",(void*)f_9607},
{"f_9636ChickenBridge.scm",(void*)f_9636},
{"f_9621ChickenBridge.scm",(void*)f_9621},
{"f_9552ChickenBridge.scm",(void*)f_9552},
{"f_9563ChickenBridge.scm",(void*)f_9563},
{"f_9565ChickenBridge.scm",(void*)f_9565},
{"f_9593ChickenBridge.scm",(void*)f_9593},
{"f_9453ChickenBridge.scm",(void*)f_9453},
{"f_9457ChickenBridge.scm",(void*)f_9457},
{"f_9460ChickenBridge.scm",(void*)f_9460},
{"f_9525ChickenBridge.scm",(void*)f_9525},
{"f_9462ChickenBridge.scm",(void*)f_9462},
{"f_9478ChickenBridge.scm",(void*)f_9478},
{"f_9225ChickenBridge.scm",(void*)f_9225},
{"f_9430ChickenBridge.scm",(void*)f_9430},
{"f_9445ChickenBridge.scm",(void*)f_9445},
{"f_9437ChickenBridge.scm",(void*)f_9437},
{"f_9401ChickenBridge.scm",(void*)f_9401},
{"f_9405ChickenBridge.scm",(void*)f_9405},
{"f_9366ChickenBridge.scm",(void*)f_9366},
{"f_9370ChickenBridge.scm",(void*)f_9370},
{"f_9229ChickenBridge.scm",(void*)f_9229},
{"f_9330ChickenBridge.scm",(void*)f_9330},
{"f_9345ChickenBridge.scm",(void*)f_9345},
{"f_9337ChickenBridge.scm",(void*)f_9337},
{"f_9301ChickenBridge.scm",(void*)f_9301},
{"f_9305ChickenBridge.scm",(void*)f_9305},
{"f_9266ChickenBridge.scm",(void*)f_9266},
{"f_9270ChickenBridge.scm",(void*)f_9270},
{"f_9232ChickenBridge.scm",(void*)f_9232},
{"f_9235ChickenBridge.scm",(void*)f_9235},
{"f_9245ChickenBridge.scm",(void*)f_9245},
{"f_9182ChickenBridge.scm",(void*)f_9182},
{"f_9215ChickenBridge.scm",(void*)f_9215},
{"f_9200ChickenBridge.scm",(void*)f_9200},
{"f_9161ChickenBridge.scm",(void*)f_9161},
{"f_9126ChickenBridge.scm",(void*)f_9126},
{"f_9130ChickenBridge.scm",(void*)f_9130},
{"f_9018ChickenBridge.scm",(void*)f_9018},
{"f_9105ChickenBridge.scm",(void*)f_9105},
{"f_9025ChickenBridge.scm",(void*)f_9025},
{"f_9034ChickenBridge.scm",(void*)f_9034},
{"f_9081ChickenBridge.scm",(void*)f_9081},
{"f_9047ChickenBridge.scm",(void*)f_9047},
{"f_9073ChickenBridge.scm",(void*)f_9073},
{"f_8885ChickenBridge.scm",(void*)f_8885},
{"f_8889ChickenBridge.scm",(void*)f_8889},
{"f_8892ChickenBridge.scm",(void*)f_8892},
{"f_8996ChickenBridge.scm",(void*)f_8996},
{"f_8894ChickenBridge.scm",(void*)f_8894},
{"f_8901ChickenBridge.scm",(void*)f_8901},
{"f_8943ChickenBridge.scm",(void*)f_8943},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_8924ChickenBridge.scm",(void*)f_8924},
{"f_8818ChickenBridge.scm",(void*)f_8818},
{"f_8822ChickenBridge.scm",(void*)f_8822},
{"f_8868ChickenBridge.scm",(void*)f_8868},
{"f_8825ChickenBridge.scm",(void*)f_8825},
{"f_8861ChickenBridge.scm",(void*)f_8861},
{"f_8828ChickenBridge.scm",(void*)f_8828},
{"f_8841ChickenBridge.scm",(void*)f_8841},
{"f_8772ChickenBridge.scm",(void*)f_8772},
{"f_8776ChickenBridge.scm",(void*)f_8776},
{"f_8686ChickenBridge.scm",(void*)f_8686},
{"f_8690ChickenBridge.scm",(void*)f_8690},
{"f_8693ChickenBridge.scm",(void*)f_8693},
{"f_8702ChickenBridge.scm",(void*)f_8702},
{"f_8724ChickenBridge.scm",(void*)f_8724},
{"f_8671ChickenBridge.scm",(void*)f_8671},
{"f_8656ChickenBridge.scm",(void*)f_8656},
{"f_8420ChickenBridge.scm",(void*)f_8420},
{"f_8633ChickenBridge.scm",(void*)f_8633},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8640ChickenBridge.scm",(void*)f_8640},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8608ChickenBridge.scm",(void*)f_8608},
{"f_8569ChickenBridge.scm",(void*)f_8569},
{"f_8573ChickenBridge.scm",(void*)f_8573},
{"f_8424ChickenBridge.scm",(void*)f_8424},
{"f_8533ChickenBridge.scm",(void*)f_8533},
{"f_8548ChickenBridge.scm",(void*)f_8548},
{"f_8540ChickenBridge.scm",(void*)f_8540},
{"f_8504ChickenBridge.scm",(void*)f_8504},
{"f_8508ChickenBridge.scm",(void*)f_8508},
{"f_8469ChickenBridge.scm",(void*)f_8469},
{"f_8473ChickenBridge.scm",(void*)f_8473},
{"f_8427ChickenBridge.scm",(void*)f_8427},
{"f_8430ChickenBridge.scm",(void*)f_8430},
{"f_8441ChickenBridge.scm",(void*)f_8441},
{"f_8380ChickenBridge.scm",(void*)f_8380},
{"f_8384ChickenBridge.scm",(void*)f_8384},
{"f_8414ChickenBridge.scm",(void*)f_8414},
{"f_8395ChickenBridge.scm",(void*)f_8395},
{"f_8403ChickenBridge.scm",(void*)f_8403},
{"f_8359ChickenBridge.scm",(void*)f_8359},
{"f_8371ChickenBridge.scm",(void*)f_8371},
{"f_8333ChickenBridge.scm",(void*)f_8333},
{"f_8291ChickenBridge.scm",(void*)f_8291},
{"f_8276ChickenBridge.scm",(void*)f_8276},
{"f_8165ChickenBridge.scm",(void*)f_8165},
{"f_8240ChickenBridge.scm",(void*)f_8240},
{"f_8169ChickenBridge.scm",(void*)f_8169},
{"f_8209ChickenBridge.scm",(void*)f_8209},
{"f_8198ChickenBridge.scm",(void*)f_8198},
{"f_8183ChickenBridge.scm",(void*)f_8183},
{"f_8191ChickenBridge.scm",(void*)f_8191},
{"f_8131ChickenBridge.scm",(void*)f_8131},
{"f_8143ChickenBridge.scm",(void*)f_8143},
{"f_8112ChickenBridge.scm",(void*)f_8112},
{"f_8109ChickenBridge.scm",(void*)f_8109},
{"f_8102ChickenBridge.scm",(void*)f_8102},
{"f_8099ChickenBridge.scm",(void*)f_8099},
{"f_8092ChickenBridge.scm",(void*)f_8092},
{"f_8074ChickenBridge.scm",(void*)f_8074},
{"f_8063ChickenBridge.scm",(void*)f_8063},
{"f_8060ChickenBridge.scm",(void*)f_8060},
{"f_8057ChickenBridge.scm",(void*)f_8057},
{"f_8054ChickenBridge.scm",(void*)f_8054},
{"f_8025ChickenBridge.scm",(void*)f_8025},
{"f_8018ChickenBridge.scm",(void*)f_8018},
{"f_8015ChickenBridge.scm",(void*)f_8015},
{"f_7994ChickenBridge.scm",(void*)f_7994},
{"f_7975ChickenBridge.scm",(void*)f_7975},
{"f_7956ChickenBridge.scm",(void*)f_7956},
{"f_7949ChickenBridge.scm",(void*)f_7949},
{"f_7942ChickenBridge.scm",(void*)f_7942},
{"f_7927ChickenBridge.scm",(void*)f_7927},
{"f_7916ChickenBridge.scm",(void*)f_7916},
{"f_7909ChickenBridge.scm",(void*)f_7909},
{"f_7882ChickenBridge.scm",(void*)f_7882},
{"f_7855ChickenBridge.scm",(void*)f_7855},
{"f_7814ChickenBridge.scm",(void*)f_7814},
{"f_7820ChickenBridge.scm",(void*)f_7820},
{"f_7830ChickenBridge.scm",(void*)f_7830},
{"f_7728ChickenBridge.scm",(void*)f_7728},
{"f_7689ChickenBridge.scm",(void*)f_7689},
{"f_7695ChickenBridge.scm",(void*)f_7695},
{"f_7718ChickenBridge.scm",(void*)f_7718},
{"f_7708ChickenBridge.scm",(void*)f_7708},
{"f_7650ChickenBridge.scm",(void*)f_7650},
{"f_7656ChickenBridge.scm",(void*)f_7656},
{"f_7676ChickenBridge.scm",(void*)f_7676},
{"f_7666ChickenBridge.scm",(void*)f_7666},
{"f_7610ChickenBridge.scm",(void*)f_7610},
{"f_7616ChickenBridge.scm",(void*)f_7616},
{"f_7640ChickenBridge.scm",(void*)f_7640},
{"f_7626ChickenBridge.scm",(void*)f_7626},
{"f_7511ChickenBridge.scm",(void*)f_7511},
{"f_7515ChickenBridge.scm",(void*)f_7515},
{"f_7540ChickenBridge.scm",(void*)f_7540},
{"f_7557ChickenBridge.scm",(void*)f_7557},
{"f_7561ChickenBridge.scm",(void*)f_7561},
{"f_7517ChickenBridge.scm",(void*)f_7517},
{"f_7534ChickenBridge.scm",(void*)f_7534},
{"f_7450ChickenBridge.scm",(void*)f_7450},
{"f_7463ChickenBridge.scm",(void*)f_7463},
{"f_7440ChickenBridge.scm",(void*)f_7440},
{"f_7400ChickenBridge.scm",(void*)f_7400},
{"f_7430ChickenBridge.scm",(void*)f_7430},
{"f_7310ChickenBridge.scm",(void*)f_7310},
{"f_7262ChickenBridge.scm",(void*)f_7262},
{"f_7296ChickenBridge.scm",(void*)f_7296},
{"f_7239ChickenBridge.scm",(void*)f_7239},
{"f_7233ChickenBridge.scm",(void*)f_7233},
{"f_7218ChickenBridge.scm",(void*)f_7218},
{"f_7204ChickenBridge.scm",(void*)f_7204},
{"f_7194ChickenBridge.scm",(void*)f_7194},
{"f_7184ChickenBridge.scm",(void*)f_7184},
{"f_7174ChickenBridge.scm",(void*)f_7174},
{"f_7164ChickenBridge.scm",(void*)f_7164},
{"f_7131ChickenBridge.scm",(void*)f_7131},
{"f_7140ChickenBridge.scm",(void*)f_7140},
{"f_7145ChickenBridge.scm",(void*)f_7145},
{"f_7120ChickenBridge.scm",(void*)f_7120},
{"f_7125ChickenBridge.scm",(void*)f_7125},
{"f_6827ChickenBridge.scm",(void*)f_6827},
{"f_6837ChickenBridge.scm",(void*)f_6837},
{"f_7088ChickenBridge.scm",(void*)f_7088},
{"f_6840ChickenBridge.scm",(void*)f_6840},
{"f_6843ChickenBridge.scm",(void*)f_6843},
{"f_6858ChickenBridge.scm",(void*)f_6858},
{"f_6868ChickenBridge.scm",(void*)f_6868},
{"f_6870ChickenBridge.scm",(void*)f_6870},
{"f_6929ChickenBridge.scm",(void*)f_6929},
{"f_6939ChickenBridge.scm",(void*)f_6939},
{"f_7056ChickenBridge.scm",(void*)f_7056},
{"f_7044ChickenBridge.scm",(void*)f_7044},
{"f_7042ChickenBridge.scm",(void*)f_7042},
{"f_7029ChickenBridge.scm",(void*)f_7029},
{"f_6983ChickenBridge.scm",(void*)f_6983},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_6989ChickenBridge.scm",(void*)f_6989},
{"f_6923ChickenBridge.scm",(void*)f_6923},
{"f_6882ChickenBridge.scm",(void*)f_6882},
{"f_6895ChickenBridge.scm",(void*)f_6895},
{"f_7105ChickenBridge.scm",(void*)f_7105},
{"f_7096ChickenBridge.scm",(void*)f_7096},
{"f_7104ChickenBridge.scm",(void*)f_7104},
{"f_7107ChickenBridge.scm",(void*)f_7107},
{"f_7115ChickenBridge.scm",(void*)f_7115},
{"f_6529ChickenBridge.scm",(void*)f_6529},
{"f_6782ChickenBridge.scm",(void*)f_6782},
{"f_6815ChickenBridge.scm",(void*)f_6815},
{"f_6811ChickenBridge.scm",(void*)f_6811},
{"f_6800ChickenBridge.scm",(void*)f_6800},
{"f_6796ChickenBridge.scm",(void*)f_6796},
{"f_6690ChickenBridge.scm",(void*)f_6690},
{"f_6693ChickenBridge.scm",(void*)f_6693},
{"f_6696ChickenBridge.scm",(void*)f_6696},
{"f_6776ChickenBridge.scm",(void*)f_6776},
{"f_6601ChickenBridge.scm",(void*)f_6601},
{"f_6542ChickenBridge.scm",(void*)f_6542},
{"f_6699ChickenBridge.scm",(void*)f_6699},
{"f_6706ChickenBridge.scm",(void*)f_6706},
{"f_6766ChickenBridge.scm",(void*)f_6766},
{"f_6752ChickenBridge.scm",(void*)f_6752},
{"f_6718ChickenBridge.scm",(void*)f_6718},
{"f_6744ChickenBridge.scm",(void*)f_6744},
{"f_6679ChickenBridge.scm",(void*)f_6679},
{"f_6726ChickenBridge.scm",(void*)f_6726},
{"f_6722ChickenBridge.scm",(void*)f_6722},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
