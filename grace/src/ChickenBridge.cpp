/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-02 20:12
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[878];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,56,54,48,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,56,56,50,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,56,57,50,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,56,57,56,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,50,50,52,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,50,49,51,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,50,50,50,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,49,54,48,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,50,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,50,52,50,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,50,53,55,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,50,56,32,98,49,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,51,48,32,98,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,50,52,32,46,32,111,98,106,49,50,53,41,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,51,53,32,112,114,111,112,49,51,54,32,46,32,100,101,102,49,51,55,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,51,32,102,49,52,53,41,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,52,49,32,98,49,52,50,41};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,55,51,49,55,54,32,97,49,55,50,49,55,55,32,97,49,55,49,49,55,56,32,97,49,55,48,49,55,57,32,97,49,54,57,49,56,48,32,97,49,54,56,49,56,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,32,97,49,56,54,49,57,51,32,97,49,56,53,49,57,52,32,97,49,56,52,49,57,53,32,97,49,56,51,49,57,54,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,49,57,55,50,48,48,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,48,57,50,49,50,32,97,50,48,56,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,49,55,50,50,48,32,97,50,49,54,50,50,49,32,97,50,49,53,50,50,50,41,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,50,52,50,50,55,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,50,57,50,51,50,41,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,51,54,50,51,57,32,97,50,51,53,50,52,48,32,97,50,51,52,50,52,49,32,97,50,51,51,50,52,50,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,52,55,50,53,48,32,97,50,52,54,50,53,49,32,97,50,52,53,50,53,50,32,97,50,52,52,50,53,51,41,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,53,53,50,53,56,41,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,54,57,50,55,50,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,55,51,50,55,54,41,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,55,55,50,56,48,41,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,48,53,51,48,56,32,97,51,48,52,51,48,57,41,0,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,49,49,51,49,52,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,50,51,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,51,49,51,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,97,55,48,55,49,32,122,51,52,55,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,52,49,32,120,49,51,52,50,32,120,50,51,52,51,32,121,49,51,52,52,32,121,50,51,52,53,32,46,32,98,51,52,54,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,97,55,49,49,49,32,122,51,53,57,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,12),40,97,55,49,51,55,32,122,51,54,48,41,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,52,56,32,120,49,51,52,57,32,120,50,51,53,48,32,105,49,51,53,49,32,46,32,97,114,103,115,51,53,50,41,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,54,50,41,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,54,51,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,54,52,32,46,32,97,114,103,115,51,54,53,41};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,12),40,97,55,50,57,57,32,110,51,54,56,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,54,54,32,115,116,101,112,115,51,54,55,41,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,51,50,51,32,118,51,55,50,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,54,57,32,112,108,97,99,101,115,51,55,48,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,55,51,54,57,32,120,52,49,51,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,55,51,32,46,32,97,114,103,115,51,55,52,41,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,49,56,41,0,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,15),40,100,111,52,50,55,32,116,97,105,108,52,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,49,57,32,99,111,111,114,100,115,52,50,48,32,98,97,115,101,52,50,49,41};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,51,55,32,46,32,97,114,103,115,52,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,52,48,32,108,111,119,52,52,49,32,104,105,103,104,52,52,50,32,46,32,97,114,103,115,52,52,51,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,52,53,54,32,108,98,52,53,55,32,117,98,52,53,56,32,109,111,100,101,52,53,57,41,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,55,57,50,52,32,110,52,54,52,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,52,57,32,108,98,52,53,48,32,117,98,52,53,49,32,46,32,109,111,100,101,52,53,50,41,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,27),40,100,111,52,55,54,32,105,52,55,56,32,107,52,55,57,32,108,52,56,48,32,116,52,56,49,41,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,54,56,32,107,101,121,110,117,109,52,54,57,32,46,32,97,114,103,115,52,55,48,41,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,52,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,52,57,48,32,98,52,57,49,41,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,52,57,50,41};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,52,57,51,32,46,32,97,114,103,115,52,57,52,41,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,52,48,32,118,97,114,105,53,52,49,32,109,111,100,101,53,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,52,53,51,32,118,53,52,55,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,51,54,32,118,97,114,105,53,51,55,32,46,32,109,111,100,101,53,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,53,53,49,41,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,53,57,52,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,53,57,53,41,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,53,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,53,57,55,41,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,12),40,100,111,54,48,57,32,105,54,49,49,41,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,15),40,100,111,54,50,53,32,116,97,105,108,54,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,17),40,100,111,54,50,49,32,105,54,50,51,32,110,54,50,52,41,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,53,57,56,32,115,117,109,53,57,57,32,46,32,97,114,103,115,54,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,7),40,97,57,48,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,7),40,97,57,48,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,54,55,56,32,111,99,116,54,55,57,32,101,114,114,54,56,48,41,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,7),40,97,57,48,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,7),40,97,57,48,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,54,56,54,32,100,111,99,116,54,56,55,32,101,114,114,63,54,56,56,41,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,39),40,100,111,54,57,49,32,116,97,105,108,54,57,51,32,100,101,102,111,54,57,52,32,116,104,105,115,54,57,53,32,114,101,115,108,54,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,54,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,39),40,100,111,55,48,53,32,116,97,105,108,55,48,55,32,100,101,102,111,55,48,56,32,116,104,105,115,55,48,57,32,114,101,115,108,55,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,48,51,41,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,39),40,100,111,55,50,49,32,116,97,105,108,55,50,51,32,100,101,102,111,55,50,52,32,116,104,105,115,55,50,53,32,114,101,115,108,55,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,49,57,41,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,51,53,41,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,23),40,100,111,55,52,49,32,116,97,105,108,55,52,51,32,108,97,115,116,55,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,55,51,56,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,12),40,97,57,54,54,48,32,122,55,52,56,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,51,54,41,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,23),40,100,111,55,53,54,32,116,97,105,108,55,53,56,32,108,97,115,116,55,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,55,53,51,32,111,114,105,103,55,53,52,41,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,12),40,97,57,56,49,51,32,122,55,54,51,41,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,55,52,57,32,121,55,53,48,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,56,52,55,32,108,101,110,103,116,104,56,52,56,32,115,116,114,101,97,109,56,52,57,32,100,101,102,97,117,108,116,56,53,48,32,111,109,105,116,56,53,49,32,114,101,112,115,56,53,50,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,56,53,52,32,118,97,108,56,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,56,53,55,41,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,56,54,51,41,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,56,54,57,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,56,55,56,32,118,97,108,56,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,56,56,49,41,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,56,56,55,41,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,57,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,57,49,55,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,57,50,48,32,118,97,108,57,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,57,50,51,41,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,57,50,57,41,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,57,51,50,32,118,97,108,57,51,51,41};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,57,51,53,41,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,57,52,49,41,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,57,52,52,32,118,97,108,57,52,53,41};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,50,54,53,32,120,57,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,57,53,48,32,118,97,108,57,53,49,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,57,53,51,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,57,57,50,32,118,97,108,57,57,51,41};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,57,57,53,41,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,14),40,97,49,48,54,52,51,32,120,49,48,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,48,49,53,32,100,97,116,97,49,48,49,54,32,102,111,114,49,48,49,55,32,114,101,112,49,48,49,56,32,102,108,97,103,115,49,48,49,57,32,108,101,110,49,48,50,48,32,100,112,101,114,49,48,50,49,32,103,101,116,114,49,48,50,50,32,109,97,112,114,49,48,50,51,41,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,48,53,48,41,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,48,53,49,41,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,20),40,100,111,49,48,53,54,32,105,49,48,53,56,32,101,49,48,53,57,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,26),40,100,111,49,48,54,51,32,110,49,48,54,53,32,101,49,48,54,54,32,102,49,48,54,55,41,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,48,53,50,32,46,32,97,114,103,115,49,48,53,51,41,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,57,49,41};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,26),40,100,111,49,48,56,55,32,100,121,110,63,49,48,56,57,32,115,116,111,112,49,48,57,48,41,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,48,55,51,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,49,49,49,41,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,49,49,50,32,111,98,106,49,49,49,51,41,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,14),40,97,49,49,50,49,57,32,120,49,49,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,49,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,23),40,97,49,49,51,49,51,32,102,110,49,49,55,52,32,111,98,106,49,49,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,49,51,49,32,46,32,97,114,103,115,49,49,51,50,41};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,49,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,50,48,49,41,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,50,48,52,32,118,97,108,49,50,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,23),40,97,49,49,55,52,51,32,102,110,49,51,48,50,32,111,98,106,49,51,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,50,51,48,32,46,32,97,114,103,115,49,50,51,49,41,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,51,49,49,41,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,23),40,97,49,50,52,49,48,32,102,110,49,51,55,51,32,111,98,106,49,51,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,51,51,48,32,46,32,97,114,103,115,49,51,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,51,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,23),40,97,49,50,54,57,55,32,102,110,49,52,50,56,32,111,98,106,49,52,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,51,56,53,32,46,32,97,114,103,115,49,51,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,51,57,32,105,49,52,52,49,32,106,49,52,52,50,32,118,49,52,52,51,41,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,52,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,23),40,97,49,51,48,52,50,32,102,110,49,53,50,51,32,111,98,106,49,53,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,52,53,49,32,46,32,97,114,103,115,49,52,53,50,41,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,14),40,100,111,49,53,51,57,32,105,49,53,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,53,51,52,32,115,116,97,114,116,49,53,51,53,32,115,116,101,112,49,53,51,54,32,119,105,100,116,104,49,53,51,55,32,101,110,100,49,53,51,56,41,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,53,51,50,41,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,53,54,54,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,53,54,57,32,118,97,108,49,53,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,53,55,50,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,53,55,56,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,53,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,53,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,57,51,32,118,97,108,49,53,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,53,57,54,41,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,14),40,97,49,51,57,50,55,32,105,49,54,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,23),40,97,49,51,57,50,49,32,102,110,49,54,55,55,32,111,98,106,49,54,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,17),40,97,49,52,49,53,56,32,105,116,101,109,49,54,51,50,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,54,57,48,41,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,54,50,50,32,46,32,97,114,103,115,49,54,50,51,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,37),40,100,111,49,55,55,55,32,116,97,105,108,49,55,55,57,32,105,110,100,101,120,49,55,56,48,32,116,111,116,97,108,49,55,56,49,41,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,55,49,32,116,97,105,108,49,55,55,51,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,55,54,55,32,102,105,120,63,49,55,54,56,41,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,27),40,100,111,49,55,57,57,32,116,97,105,108,49,56,48,49,32,105,110,100,101,120,49,56,48,50,41,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,55,57,55,32,114,49,55,57,56,41,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,48,56,32,116,97,105,108,49,56,49,48,41,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,48,52,32,105,116,101,109,49,56,48,54,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,55,56,55,41,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,23),40,97,49,53,50,52,49,32,102,110,49,57,51,54,32,111,98,106,49,57,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,14),40,97,49,52,57,57,53,32,115,49,56,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,51,48,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,41),40,100,111,49,56,53,50,32,116,97,105,108,49,56,53,52,32,111,114,100,101,114,49,56,53,53,32,108,105,115,49,56,53,54,32,112,49,56,53,55,41,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,56,54,52,32,46,32,97,114,103,115,49,56,54,53,41,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,17),40,100,111,49,57,54,49,32,116,97,105,108,49,57,54,51,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,33),40,100,111,49,57,53,49,32,116,97,105,108,49,57,53,51,32,111,117,116,49,57,53,52,32,115,117,109,49,57,53,53,41,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,57,52,57,32,111,117,116,112,117,116,115,49,57,53,48,41,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,17),40,100,111,49,57,57,49,32,108,97,115,116,49,57,57,51,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,26),40,100,111,49,57,54,55,32,105,49,57,54,57,32,106,49,57,55,48,32,102,49,57,55,49,41,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,35),40,100,111,49,57,56,50,32,116,97,105,108,49,57,56,52,32,112,97,115,116,49,57,56,53,32,105,116,101,109,49,57,56,54,41,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,57,52,54,41};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,48,49,49,41};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,14),40,97,49,54,49,49,51,32,110,50,48,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,23),40,97,49,54,49,48,55,32,102,110,50,48,55,53,32,111,98,106,50,48,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,28),40,97,49,54,51,53,57,32,105,116,101,109,50,48,56,55,32,46,32,97,114,103,115,50,48,56,56,41,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,48,56,54,41,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,48,51,50,32,46,32,97,114,103,115,50,48,51,51,41};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,52,49,32,116,97,105,108,50,49,52,51,41,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,49,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,14),40,97,49,54,55,56,49,32,120,50,49,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,49,54,53,32,110,101,120,116,50,49,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,14),40,97,49,54,56,50,57,32,122,50,49,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,14),40,97,49,54,56,51,57,32,122,50,49,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,49,55,48,32,121,50,49,55,49,32,108,50,49,55,50,41,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,16),40,97,49,54,57,52,52,32,114,111,119,50,50,57,56,41};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,20),40,100,111,50,50,55,51,32,105,50,50,55,53,32,109,50,50,55,54,41,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,54,54,32,108,50,50,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,20),40,100,111,50,50,53,57,32,105,50,50,54,49,32,109,50,50,54,50,41,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,20),40,100,111,50,50,53,51,32,105,50,50,53,53,32,109,50,50,53,54,41,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,55,57,32,120,50,49,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,52,55,32,116,97,105,108,50,50,52,57,41,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,20),40,100,111,50,50,51,55,32,105,50,50,51,57,32,109,50,50,52,48,41,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,51,50,32,108,50,50,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,50,55,32,105,50,50,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,20),40,97,49,55,50,52,48,32,120,50,50,50,51,32,121,50,50,50,52,41,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,49,52,32,101,50,50,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,20),40,100,111,50,50,48,56,32,101,50,50,49,48,32,115,50,50,49,49,41,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,25),40,100,111,50,50,48,48,32,116,97,105,108,50,50,48,50,32,108,101,110,50,50,48,51,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,20),40,97,49,55,51,56,57,32,120,50,49,57,56,32,121,50,49,57,57,41,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,29),40,100,111,50,49,56,55,32,112,114,101,118,50,49,56,57,32,106,50,49,57,48,32,120,50,49,57,49,41,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,56,52,32,105,50,49,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,49,52,57,32,46,32,97,114,103,115,50,49,53,48,41,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,51,52,50,32,115,116,114,105,110,103,50,51,52,51,32,112,111,115,105,116,105,111,110,50,51,52,52,41,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,51,52,57,41,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,51,53,53,41,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,51,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,51,55,48,41,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,51,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,51,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,51,55,53,32,116,121,112,101,50,51,55,54,32,112,97,116,116,101,114,110,50,51,55,55,32,112,97,114,115,101,114,50,51,55,56,32,101,109,105,116,101,114,50,51,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,51,56,52,41,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,52,50,56,32,100,101,102,50,52,50,57,41,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,52,51,49,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,52,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,52,51,52,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,52,51,53,41,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,52,51,54,32,105,50,52,51,55,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,52,52,49,41,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,52,52,51,32,112,111,115,105,116,105,111,110,50,52,52,52,41,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,52,52,57,41,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,52,53,53,41,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,52,54,51,32,112,97,114,115,101,100,50,52,54,52,32,112,111,115,105,116,105,111,110,50,52,54,53,41,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,52,54,54,41,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,52,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,52,55,54,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,52,56,50,41,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,52,57,50,41,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,52,57,51,32,116,121,112,50,52,57,52,41,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,52,57,54,32,105,110,102,111,50,52,57,55,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,52,57,57,32,100,97,116,97,50,53,48,48,32,105,110,102,111,50,53,48,49,41,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,53,48,50,32,100,97,116,97,50,53,48,51,32,105,110,102,111,50,53,48,52,41,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,53,48,55,32,105,110,102,111,50,53,48,56,32,101,114,114,102,50,53,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,53,49,48,32,105,110,102,111,50,53,49,49,32,101,114,114,102,50,53,49,50,41,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,27),40,102,95,49,56,51,53,51,32,97,114,103,115,50,53,50,53,32,101,114,114,102,50,53,50,54,41,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,53,50,52,41,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,51,52,32,116,97,105,108,50,53,51,54,41,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,36),40,102,95,49,56,51,54,49,32,117,110,105,116,50,53,50,56,32,105,110,102,111,50,53,50,57,32,101,114,114,102,50,53,51,48,41,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,53,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,8),40,97,49,56,53,53,57,41};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,26),40,97,49,56,53,54,57,32,97,50,53,54,54,32,98,50,53,54,55,32,99,50,53,54,56,41,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,8),40,97,49,56,54,54,53,41};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,26),40,97,49,56,54,55,57,32,97,50,53,56,50,32,98,50,53,56,51,32,99,50,53,56,52,41,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,55,55,32,105,50,53,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,8),40,97,49,56,55,51,50,41};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,26),40,97,49,56,55,52,54,32,97,50,54,48,52,32,98,50,54,48,53,32,99,50,54,48,54,41,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,57,57,32,105,50,54,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,8),40,97,49,56,56,50,49,41};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,26),40,97,49,56,56,50,55,32,97,50,54,50,51,32,98,50,54,50,52,32,99,50,54,50,53,41,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,49,57,41};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,8),40,97,49,56,56,54,48,41};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,26),40,97,49,56,56,54,54,32,97,50,54,52,49,32,98,50,54,52,50,32,99,50,54,52,51,41,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,53,53,51,32,116,111,107,101,110,115,50,53,53,52,32,102,111,114,99,101,45,97,110,100,50,53,53,53,32,108,101,118,101,108,50,53,53,54,32,116,114,97,99,101,50,53,53,55,32,101,114,114,102,50,53,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,56,49,56,41,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,56,50,50,41,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,56,51,49,41,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,56,51,50,32,116,121,112,50,50,56,51,51,41,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,50,32,116,111,107,115,50,56,56,52,41,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,56,55,56,32,116,121,112,50,56,55,57,41,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,57,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,49,56,32,119,50,50,57,50,48,32,111,107,50,57,50,49,32,108,105,50,57,50,50,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,8),40,100,111,50,57,49,54,41};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,57,49,49,41,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,48,55,55,32,101,114,114,102,51,48,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,56,55,32,102,51,50,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,56,48,32,102,51,50,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,8),40,97,49,56,52,51,48,41};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,44),40,97,49,56,52,51,55,32,115,117,99,99,101,115,115,50,53,52,56,32,114,101,115,117,108,116,115,50,53,52,57,32,114,101,109,97,105,110,115,50,53,53,48,41,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,17),40,97,49,56,52,50,52,32,101,114,114,102,50,53,52,54,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,50,54,52,32,114,117,108,101,51,50,54,53,32,116,111,107,101,110,115,51,50,54,54,32,116,114,97,99,101,63,51,50,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,48,55,32,116,97,105,108,51,51,48,57,41,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,51,48,53,32,108,101,118,51,51,48,54,41,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,49,53,32,116,97,105,108,51,51,49,55,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,51,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,51,50,50,41,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,51,50,52,41,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,51,50,56,41,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,51,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,52,54,48,32,120,51,52,54,49,41};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,52,54,50,41,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,52,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,52,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,52,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,52,55,52,41,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,52,55,53,32,120,51,52,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,52,55,55,41,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,52,56,48,41,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,52,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,56,56,32,97,51,52,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,52,56,54,41,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,48,48,32,108,51,53,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,52,57,56,32,97,99,99,101,115,115,111,114,51,52,57,57,41};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,52,57,53,32,99,108,97,117,115,101,115,51,52,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,53,48,54,32,111,112,115,51,53,48,55,41};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,53,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,53,48,57,32,118,97,108,51,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,51,50,32,116,97,105,108,51,53,51,52,41,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,50,55,32,116,97,105,108,51,53,50,57,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,20),40,100,111,51,53,49,55,32,104,51,53,49,57,32,108,51,53,50,48,41,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,53,49,49,32,102,111,114,109,115,51,53,49,50,32,97,114,103,115,51,53,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,53,52,54,32,99,108,97,117,115,101,115,51,53,52,55,32,111,112,115,51,53,52,56,41,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,54,54,32,110,101,120,116,51,53,54,56,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,53,53,50,32,99,108,97,117,115,101,115,51,53,53,51,32,111,112,115,51,53,53,52,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,8),40,97,50,50,48,48,57,41};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,30),40,97,50,50,48,50,55,32,99,108,97,117,115,101,51,54,52,55,32,105,103,110,111,114,101,51,54,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,54,52,52,32,99,108,97,117,115,101,115,51,54,52,53,32,111,112,115,51,54,52,54,41,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,54,53,32,110,101,120,116,51,54,54,55,41,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,54,53,48,32,99,108,97,117,115,101,115,51,54,53,49,32,111,112,115,51,54,53,50,41};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,51,50,32,110,101,120,116,51,55,51,52,41,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,55,50,50,32,99,108,97,117,115,101,115,51,55,50,51,32,111,112,115,51,55,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,26),40,100,111,51,55,55,48,32,110,101,101,100,51,55,55,50,32,110,101,120,116,51,55,55,51,41,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,55,54,48,32,99,108,97,117,115,101,115,51,55,54,49,32,111,112,115,51,55,54,50,41,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,8),40,100,111,51,56,49,52,41};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,56,48,53,32,99,108,97,117,115,101,115,51,56,48,54,32,111,112,115,51,56,48,55,41};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,56,50,52,32,99,108,97,117,115,101,115,51,56,50,53,32,111,112,115,51,56,50,54,41,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,56,51,56,32,99,108,97,117,115,101,115,51,56,51,57,32,111,112,115,51,56,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,57,48,53,32,116,121,112,101,51,57,48,54,32,97,99,99,51,57,48,55,32,104,101,97,100,51,57,48,56,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,57,48,57,41};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,57,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,53,55,32,97,51,56,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,54,53,32,99,51,56,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,56,56,52,32,99,108,97,117,115,101,115,51,56,56,53,32,111,112,115,51,56,56,54,41,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,57,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,57,56,54,32,99,108,97,117,115,101,115,51,57,56,55,32,111,112,115,51,57,56,56,41,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,48,48,55,32,99,108,97,117,115,101,115,52,48,48,56,32,111,112,115,52,48,48,57,41,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,48,50,51,32,99,108,97,117,115,101,115,52,48,50,52,32,111,112,115,52,48,50,53,41,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,97,50,51,57,48,48,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,20),40,97,50,51,57,49,51,32,97,52,48,53,48,32,98,52,48,53,49,41,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,38),40,100,111,52,48,52,51,32,111,112,52,48,52,53,32,99,108,97,117,115,101,52,48,52,54,32,114,101,109,97,105,110,115,52,48,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,48,51,55,32,99,108,97,117,115,101,115,52,48,51,56,32,111,112,115,52,48,51,57,41,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,8),40,97,50,52,48,54,52,41};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,20),40,97,50,52,48,55,56,32,97,52,48,55,57,32,98,52,48,56,48,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,8),40,97,50,52,49,52,50,41};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,20),40,97,50,52,49,52,56,32,97,52,48,55,54,32,98,52,48,55,55,41,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,48,54,51,32,99,108,97,117,115,101,115,52,48,54,52,32,111,112,115,52,48,54,53,41,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,49,48,54,32,116,121,112,101,52,49,48,55,41,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,8),40,97,50,52,50,57,48,41};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,20),40,97,50,52,50,57,57,32,97,52,49,49,57,32,98,52,49,50,48,41,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,47),40,100,111,52,49,49,48,32,111,112,52,49,49,50,32,99,108,97,117,115,101,52,49,49,51,32,114,101,109,97,105,110,115,52,49,49,52,32,98,111,100,121,52,49,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,49,51,50,32,102,111,114,109,115,52,49,51,51,32,111,112,115,52,49,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,55,48,53,32,97,52,51,49,49,52,51,49,52,32,97,52,51,49,48,52,51,49,53,32,97,52,51,48,57,52,51,49,54,32,97,52,51,48,56,52,51,49,55,32,97,52,51,48,55,52,51,49,56,41,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,50,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,52,49,57,32,97,52,51,50,55,52,51,51,49,32,97,52,51,50,54,52,51,51,50,41,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,51,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,52,53,48,32,97,52,52,48,54,52,52,48,57,32,97,52,52,48,53,52,52,49,48,32,97,52,52,48,52,52,52,49,49,32,97,52,52,48,51,52,52,49,50,32,97,52,52,48,50,52,52,49,51,41,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,51,51,52,41};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,56,56,57,32,97,52,52,50,49,52,52,50,53,32,97,52,52,50,48,52,52,50,54,41,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,52,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,57,50,51,32,97,52,53,51,55,52,53,52,48,32,97,52,53,51,54,52,53,52,49,32,97,52,53,51,53,52,53,52,50,32,97,52,53,51,52,52,53,52,51,32,97,52,53,51,51,52,53,52,52,41,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,52,50,56,41,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,54,51,55,32,97,52,53,53,51,52,53,53,55,32,97,52,53,53,50,52,53,53,56,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,53,53,49,41,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,54,55,49,32,97,52,54,54,57,52,54,55,50,32,97,52,54,54,56,52,54,55,51,32,97,52,54,54,55,52,54,55,52,32,97,52,54,54,54,52,54,55,53,32,97,52,54,54,53,52,54,55,54,41,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,53,54,48,41,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,56,53,32,97,52,54,56,53,52,54,56,57,32,97,52,54,56,52,52,54,57,48,41,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,54,56,51,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,49,54,32,97,52,55,54,52,52,55,54,55,32,97,52,55,54,51,52,55,54,56,32,97,52,55,54,50,52,55,54,57,32,97,52,55,54,49,52,55,55,48,32,97,52,55,54,48,52,55,55,49,41,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,54,57,50,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,56,53,53,32,97,52,55,55,57,52,55,56,51,32,97,52,55,55,56,52,55,56,52,41,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,55,55,55,41};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,56,56,54,32,97,52,56,53,56,52,56,54,49,32,97,52,56,53,55,52,56,54,50,32,97,52,56,53,54,52,56,54,51,32,97,52,56,53,53,52,56,54,52,32,97,52,56,53,52,52,56,54,53,41,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,55,56,54,41,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,51,50,53,32,97,52,56,55,51,52,56,55,55,32,97,52,56,55,50,52,56,55,56,41,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,56,55,49,41,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,51,53,54,32,97,52,57,53,50,52,57,53,53,32,97,52,57,53,49,52,57,53,54,32,97,52,57,53,48,52,57,53,55,32,97,52,57,52,57,52,57,53,56,32,97,52,57,52,56,52,57,53,57,41,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,56,56,48,41,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,56,49,55,32,97,52,57,55,53,52,57,55,57,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,57,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,56,51,50,32,97,52,57,56,51,52,57,56,55,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,57,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,56,52,55,32,97,52,57,57,49,52,57,57,53,41,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,57,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,56,54,50,32,97,53,48,48,49,53,48,48,53,32,97,53,48,48,48,53,48,48,54,41,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,57,57,56,32,116,52,57,57,57,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,56,56,49,32,97,53,48,49,48,53,48,49,52,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,48,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,56,57,54,32,97,53,48,49,57,53,48,50,51,32,97,53,48,49,56,53,48,50,52,41,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,48,49,54,32,99,53,48,49,55,41,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,57,49,53,32,97,53,48,50,57,53,48,51,51,32,97,53,48,50,56,53,48,51,52,41,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,48,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,39),40,102,95,50,56,57,51,52,32,97,53,48,52,48,53,48,52,52,32,97,53,48,51,57,53,48,52,53,32,97,53,48,51,56,53,48,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,48,51,54,32,107,53,48,51,55,41,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,57,53,55,32,97,53,48,53,49,53,48,53,53,32,97,53,48,53,48,53,48,53,54,41,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,48,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,39),40,102,95,50,56,57,55,54,32,97,53,48,54,50,53,48,54,54,32,97,53,48,54,49,53,48,54,55,32,97,53,48,54,48,53,48,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,48,53,56,32,118,53,48,53,57,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,48,48,56,32,97,53,48,55,53,53,48,55,57,32,97,53,48,55,52,53,48,56,48,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,48,50,52,32,97,53,48,56,51,53,48,56,55,32,97,53,48,56,50,53,48,56,56,41,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,48,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,39),40,102,95,50,57,48,53,53,32,97,53,48,57,54,53,49,48,48,32,97,53,48,57,53,53,49,48,49,32,97,53,48,57,52,53,49,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,39),40,102,95,50,57,48,55,53,32,97,53,49,48,54,53,49,49,48,32,97,53,49,48,53,53,49,49,49,32,97,53,49,48,52,53,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,48,57,48,32,118,53,48,57,49,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,49,48,49,32,97,53,49,49,55,53,49,50,49,32,97,53,49,49,54,53,49,50,50,41,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,49,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,39),40,102,95,50,57,49,50,48,32,97,53,49,50,56,53,49,51,50,32,97,53,49,50,55,53,49,51,51,32,97,53,49,50,54,53,49,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,49,50,52,32,118,53,49,50,53,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,49,52,51,32,97,53,49,52,54,53,49,52,57,32,97,53,49,52,53,53,49,53,48,32,97,53,49,52,52,53,49,53,49,32,97,53,49,52,51,53,49,53,50,32,97,53,49,52,50,53,49,53,51,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,49,51,55,32,100,117,114,53,49,51,56,32,107,101,121,53,49,51,57,32,97,109,112,53,49,52,48,32,99,104,97,110,53,49,52,49,41,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,49,55,49,32,97,53,49,54,51,53,49,54,54,32,97,53,49,54,50,53,49,54,55,32,97,53,49,54,49,53,49,54,56,32,97,53,49,54,48,53,49,54,57,32,97,53,49,53,57,53,49,55,48,41,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,49,53,52,32,100,117,114,53,49,53,53,32,107,101,121,53,49,53,54,32,97,109,112,53,49,53,55,32,99,104,97,110,53,49,53,56,41,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,49,57,57,32,97,53,49,55,56,53,49,56,49,32,97,53,49,55,55,53,49,56,50,32,97,53,49,55,54,53,49,56,51,32,97,53,49,55,53,53,49,56,52,32,97,53,49,55,52,53,49,56,53,41,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,49,55,49,32,107,101,121,53,49,55,50,32,99,104,97,110,53,49,55,51,41,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,50,50,55,32,97,53,49,57,52,53,49,57,55,32,97,53,49,57,51,53,49,57,56,32,97,53,49,57,50,53,49,57,57,32,97,53,49,57,49,53,50,48,48,32,97,53,49,57,48,53,50,48,49,41,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,49,56,54,32,107,101,121,53,49,56,55,32,118,101,108,53,49,56,56,32,99,104,97,110,53,49,56,57,41,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,50,53,53,32,97,53,50,49,48,53,50,49,51,32,97,53,50,48,57,53,50,49,52,32,97,53,50,48,56,53,50,49,53,32,97,53,50,48,55,53,50,49,54,32,97,53,50,48,54,53,50,49,55,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,50,48,50,32,107,101,121,53,50,48,51,32,118,97,108,53,50,48,52,32,99,104,97,110,53,50,48,53,41,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,50,56,51,32,97,53,50,50,54,53,50,50,57,32,97,53,50,50,53,53,50,51,48,32,97,53,50,50,52,53,50,51,49,32,97,53,50,50,51,53,50,51,50,32,97,53,50,50,50,53,50,51,51,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,50,49,56,32,110,117,109,53,50,49,57,32,118,97,108,53,50,50,48,32,99,104,97,110,53,50,50,49,41,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,51,49,49,32,97,53,50,52,49,53,50,52,52,32,97,53,50,52,48,53,50,52,53,32,97,53,50,51,57,53,50,52,54,32,97,53,50,51,56,53,50,52,55,32,97,53,50,51,55,53,50,52,56,41,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,50,51,52,32,118,97,108,53,50,51,53,32,99,104,97,110,53,50,51,54,41,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,51,51,57,32,97,53,50,53,54,53,50,53,57,32,97,53,50,53,53,53,50,54,48,32,97,53,50,53,52,53,50,54,49,32,97,53,50,53,51,53,50,54,50,32,97,53,50,53,50,53,50,54,51,41,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,50,52,57,32,118,97,108,53,50,53,48,32,99,104,97,110,53,50,53,49,41,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,51,54,55,32,97,53,50,55,49,53,50,55,52,32,97,53,50,55,48,53,50,55,53,32,97,53,50,54,57,53,50,55,54,32,97,53,50,54,56,53,50,55,55,32,97,53,50,54,55,53,50,55,56,41,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,50,54,52,32,118,97,108,53,50,54,53,32,99,104,97,110,53,50,54,54,41,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,19),40,102,95,50,57,51,57,53,32,97,53,50,56,48,53,50,56,52,41,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,50,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,17),40,97,50,57,52,50,56,32,37,101,114,114,53,50,57,51,41,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,8),40,97,50,57,52,52,56,41};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,18),40,97,50,57,52,50,50,32,37,99,111,110,116,53,50,57,50,41,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,17),40,97,50,57,52,49,54,32,37,109,115,103,53,50,57,49,41,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,19),40,102,95,50,57,52,53,52,32,97,53,50,56,55,53,50,57,48,41,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,19),40,102,95,50,57,52,53,57,32,97,53,50,57,54,53,50,57,57,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,50,56,54,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,39),40,102,95,50,57,53,49,54,32,97,53,51,53,50,53,51,53,53,32,97,53,51,53,49,53,51,53,54,32,97,53,51,53,48,53,51,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,51,52,57,41,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,39),40,102,95,50,57,53,55,51,32,97,53,51,54,51,53,51,54,54,32,97,53,51,54,50,53,51,54,55,32,97,53,51,54,49,53,51,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,51,54,48,41,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,9),40,102,95,50,57,54,49,52,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,14),40,100,111,53,51,57,51,32,120,53,51,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,26),40,100,111,53,51,55,57,32,101,53,51,57,48,32,118,53,51,57,49,32,121,53,51,57,50,41,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,51,55,56,41,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,52,48,52,53,52,48,56,41,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,52,49,48,53,52,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,52,50,54,53,52,50,57,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,52,51,52,53,52,51,55,32,97,53,52,51,51,53,52,51,56,32,97,53,52,51,50,53,52,51,57,41};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,52,53,52,53,52,53,55,41,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,19),40,102,95,50,57,57,51,57,32,97,53,52,54,53,53,52,54,57,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,52,54,52,41};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,14),40,100,111,53,52,56,57,32,112,53,52,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,52,55,53,32,115,116,97,114,116,53,52,56,49,32,105,100,53,52,56,50,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,52,55,56,32,37,115,116,97,114,116,53,52,55,51,53,52,57,55,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,52,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,52,55,49,32,46,32,97,114,103,115,53,52,55,50,41,0,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,53,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,49,56,32,116,97,105,108,53,53,50,48,41,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,53,49,55,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,53,53,50,53,32,99,108,97,117,115,101,115,53,53,50,54,32,111,112,115,53,53,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,53,53,53,53,32,115,116,111,112,53,53,53,54,41,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,31),40,97,51,48,54,52,52,32,102,111,114,109,97,108,115,53,53,55,54,32,46,32,98,111,100,121,53,53,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,17),40,97,51,48,54,55,51,32,97,114,103,115,53,53,55,53,41,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,16),40,100,111,53,53,52,56,32,111,112,115,53,53,53,48,41};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,17),40,97,51,48,55,52,50,32,97,114,103,115,52,49,52,53,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,16),40,97,51,48,56,56,52,32,115,121,109,51,52,53,56,41};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,16),40,97,51,48,56,56,55,32,115,121,109,51,52,53,54,41};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,24),40,97,51,48,57,49,54,32,118,97,108,51,52,53,52,32,115,121,109,51,52,53,53,41};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,17),40,97,51,48,57,51,48,32,97,114,103,115,51,52,53,51,41,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,52,52,32,97,114,103,115,51,50,53,57,32,101,114,114,102,51,50,54,48,41,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,53,56,32,117,110,105,116,51,50,54,49,32,105,110,102,111,51,50,54,50,32,101,114,114,102,51,50,54,51,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,54,52,32,97,114,103,115,51,50,48,56,32,101,114,114,102,51,50,48,57,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,48,32,114,101,115,116,51,50,50,50,41,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,100,111,51,50,52,54,32,97,114,103,115,51,50,52,56,32,116,97,105,108,51,50,52,57,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,48,51,32,117,110,105,116,51,50,49,51,32,105,110,102,111,51,50,49,52,32,101,114,114,102,51,50,49,53,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,26),40,97,51,49,53,50,49,32,97,114,103,115,51,50,48,49,32,101,114,114,102,51,50,48,50,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,54,54,32,97,114,103,115,51,49,56,55,32,101,114,114,102,51,49,56,56,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,54,52,32,116,97,105,108,51,49,54,54,41,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,53,57,32,116,97,105,108,51,49,54,49,41,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,20),40,100,111,51,49,52,56,32,99,108,97,117,115,101,115,51,49,53,48,41,0,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,52,53,32,116,97,105,108,51,49,52,55,41,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,35),40,97,51,49,55,49,50,32,117,110,105,116,51,49,57,55,32,105,110,102,111,51,49,57,56,32,101,114,114,102,51,49,57,57,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,54,54,32,97,114,103,115,51,48,54,49,32,101,114,114,102,51,48,54,50,41,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,35),40,97,51,50,50,51,52,32,117,110,105,116,51,48,55,51,32,105,110,102,111,51,48,55,52,32,101,114,114,102,51,48,55,53,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,26),40,97,51,50,51,54,51,32,97,114,103,115,51,48,52,57,32,101,114,114,102,51,48,53,48,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,35),40,97,51,50,51,56,57,32,117,110,105,116,51,48,53,52,32,105,110,102,111,51,48,53,53,32,101,114,114,102,51,48,53,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,55,55,32,97,114,103,115,51,48,50,55,32,101,114,114,102,51,48,50,56,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,51,53,32,105,116,101,114,51,48,51,55,41,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,35),40,97,51,50,53,50,48,32,117,110,105,116,51,48,50,57,32,105,110,102,111,51,48,51,48,32,101,114,114,102,51,48,51,49,41,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,26),40,97,51,50,55,53,55,32,97,114,103,115,51,48,50,52,32,101,114,114,102,51,48,50,53,41,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,26),40,97,51,50,56,52,51,32,97,114,103,115,51,48,49,54,32,101,114,114,102,51,48,49,55,41,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,14),40,97,51,50,56,57,53,32,101,51,48,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,35),40,97,51,50,56,56,54,32,117,110,105,116,51,48,49,56,32,105,110,102,111,51,48,49,57,32,101,114,114,102,51,48,50,48,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,26),40,97,51,50,57,52,53,32,97,114,103,115,51,48,48,57,32,101,114,114,102,51,48,49,48,41,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,14),40,97,51,50,57,56,54,32,101,51,48,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,35),40,97,51,50,57,56,48,32,117,110,105,116,51,48,49,49,32,105,110,102,111,51,48,49,50,32,101,114,114,102,51,48,49,51,41,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,35),40,97,51,51,48,52,48,32,117,110,105,116,51,48,48,50,32,105,110,102,111,51,48,48,51,32,101,114,114,102,51,48,48,52,41,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,48,49,32,117,110,105,116,50,57,57,54,32,105,110,102,111,50,57,57,55,32,101,114,114,102,50,57,57,56,41,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,26),40,97,51,51,49,53,53,32,97,114,103,115,50,57,57,48,32,101,114,114,102,50,57,57,49,41,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,56,53,32,117,110,105,116,50,57,57,50,32,105,110,102,111,50,57,57,51,32,101,114,114,102,50,57,57,52,41,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,26),40,97,51,51,52,48,52,32,97,114,103,115,50,57,56,51,32,101,114,114,102,50,57,56,52,41,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,26),40,97,51,51,52,51,48,32,97,114,103,115,50,57,55,48,32,101,114,114,102,50,57,55,49,41,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,27),40,97,51,51,53,50,53,32,115,116,114,50,57,56,48,32,46,32,97,114,103,115,50,57,56,49,41,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,35),40,97,51,51,53,48,53,32,117,110,105,116,50,57,55,53,32,105,110,102,111,50,57,55,54,32,101,114,114,102,50,57,55,55,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,26),40,97,51,51,54,52,51,32,97,114,103,115,50,57,54,51,32,101,114,114,102,50,57,54,52,41,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,35),40,97,51,51,54,54,53,32,117,110,105,116,50,57,54,53,32,105,110,102,111,50,57,54,54,32,101,114,114,102,50,57,54,55,41,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,26),40,97,51,51,55,49,56,32,97,114,103,115,50,57,52,57,32,101,114,114,102,50,57,53,48,41,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,53,54,32,97,114,103,115,50,57,53,56,41,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,35),40,97,51,51,55,52,48,32,117,110,105,116,50,57,53,49,32,105,110,102,111,50,57,53,50,32,101,114,114,102,50,57,53,51,41,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,26),40,97,51,51,56,55,50,32,97,114,103,115,50,57,52,50,32,101,114,114,102,50,57,52,51,41,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,35),40,97,51,51,56,57,56,32,117,110,105,116,50,57,52,52,32,105,110,102,111,50,57,52,53,32,101,114,114,102,50,57,52,54,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,26),40,97,51,52,48,48,56,32,97,114,103,115,50,57,51,56,32,101,114,114,102,50,57,51,57,41,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,51,52,49,54,52,32,97,114,103,115,50,57,48,49,32,101,114,114,102,50,57,48,50,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,35),40,97,51,52,49,56,50,32,117,110,105,116,50,57,48,51,32,105,110,102,111,50,57,48,52,32,101,114,114,102,50,57,48,53,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,97,51,52,50,51,53,32,97,114,103,115,50,56,57,53,32,101,114,114,102,50,56,57,54,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,26),40,97,51,52,51,56,55,32,97,114,103,115,50,56,57,50,32,101,114,114,102,50,56,57,51,41,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,26),40,97,51,52,53,50,54,32,97,114,103,115,50,56,56,57,32,101,114,114,102,50,56,57,48,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,26),40,97,51,52,54,52,54,32,97,114,103,115,50,56,54,56,32,101,114,114,102,50,56,54,57,41,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,35),40,97,51,52,54,55,55,32,117,110,105,116,50,56,55,49,32,105,110,102,111,50,56,55,50,32,101,114,114,102,50,56,55,51,41,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,26),40,97,51,52,55,54,57,32,97,114,103,115,50,56,54,50,32,101,114,114,102,50,56,54,51,41,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,35),40,97,51,52,55,56,55,32,117,110,105,116,50,56,54,52,32,105,110,102,111,50,56,54,53,32,101,114,114,102,50,56,54,54,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,35),40,97,51,52,56,54,49,32,117,110,105,116,50,56,53,49,32,105,110,102,111,50,56,53,50,32,101,114,114,102,50,56,53,51,41,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,26),40,97,51,52,57,53,55,32,97,114,103,115,50,56,51,57,32,101,114,114,102,50,56,52,48,41,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,35),40,97,51,52,57,54,55,32,117,110,105,116,50,56,52,49,32,105,110,102,111,50,56,52,50,32,101,114,114,102,50,56,52,51,41,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,20),40,97,51,53,49,52,51,32,117,50,52,56,57,32,112,50,52,57,48,41,0,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,20),40,97,51,53,49,54,57,32,101,50,52,54,49,32,112,50,52,54,50,41,0,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,52,50,52,41,0,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,35),40,97,51,53,49,56,51,32,116,121,112,50,52,50,48,32,112,97,116,50,52,50,49,32,46,32,97,114,103,115,50,52,50,50,41,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,20),40,97,51,53,50,56,54,32,114,50,52,49,55,32,112,50,52,49,56,41,0,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,20),40,97,51,53,50,57,54,32,116,50,51,54,56,32,112,50,51,54,57,41,0,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,71),40,100,111,54,52,54,32,100,54,52,56,32,107,54,52,57,32,112,54,53,48,32,107,60,54,53,49,32,107,62,54,53,50,32,102,54,53,51,32,102,62,54,53,52,32,102,60,54,53,53,32,111,54,53,54,32,120,54,53,55,32,110,54,53,56,32,101,54,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,14),40,100,111,54,52,48,32,107,101,121,54,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,24),40,97,51,53,53,50,54,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,22),40,97,51,53,53,51,50,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,24),40,97,51,53,53,56,52,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k29942 */
static C_word C_fcall stub5466(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5466(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k29927 in hush in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5460)
static void C_ccall stub5460(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5460(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29921 */
C_noret_decl(stub5455)
static void C_ccall stub5455(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5455(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29905 in cont in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5450)
static void C_ccall stub5450(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5450(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29896 in pause in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5446)
static void C_ccall stub5446(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5446(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29887 in paused? in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5442)
static void C_ccall stub5442(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5442(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29881 */
C_noret_decl(stub5435)
static void C_ccall stub5435(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5435(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29861 in scheduler-set-time-milliseconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5427)
static void C_ccall stub5427(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5427(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k29852 in time-format in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
C_noret_decl(stub5422)
static void C_ccall stub5422(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5422(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5419(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5419(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5416(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5416(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k29833 in print-error in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub5411(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5411(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k29819 in print-message in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub5405(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5405(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_29614 in cs:clear in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub5371(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5371(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k29580 */
static C_word C_fcall stub5364(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5364(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k29523 */
static C_word C_fcall stub5353(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5353(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_29459 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub5297(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5297(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_29454 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub5288(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5288(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k29398 */
static C_word C_fcall stub5281(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5281(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k29386 */
static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29358 */
static C_word C_fcall stub5257(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5257(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29330 */
static C_word C_fcall stub5242(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5242(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29302 */
static C_word C_fcall stub5227(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5227(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29274 */
static C_word C_fcall stub5211(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5211(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29246 */
static C_word C_fcall stub5195(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5195(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29218 */
static C_word C_fcall stub5179(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5179(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k29190 */
static C_word C_fcall stub5164(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5164(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k29162 */
static C_word C_fcall stub5147(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5147(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k29131 */
static C_word C_fcall stub5129(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5129(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k29108 */
static C_word C_fcall stub5118(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5118(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k29086 */
static C_word C_fcall stub5107(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5107(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k29066 */
static C_word C_fcall stub5097(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5097(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k29031 */
static C_word C_fcall stub5084(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5084(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k29015 */
static C_word C_fcall stub5076(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5076(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k28987 */
static C_word C_fcall stub5063(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5063(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k28964 */
static C_word C_fcall stub5052(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5052(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k28945 */
static C_word C_fcall stub5041(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5041(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k28922 */
static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k28903 */
static C_word C_fcall stub5020(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5020(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k28884 */
static C_word C_fcall stub5011(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5011(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k28869 */
static C_word C_fcall stub5002(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5002(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k28850 */
static C_word C_fcall stub4992(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4992(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k28835 */
static C_word C_fcall stub4984(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4984(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k28820 */
static C_word C_fcall stub4976(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4976(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k28802 */
static C_word C_fcall stub4968(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4968(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28375 */
static C_word C_fcall stub4953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28332 */
static C_word C_fcall stub4874(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4874(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27905 */
static C_word C_fcall stub4859(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4859(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27862 */
static C_word C_fcall stub4780(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4780(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27435 */
static C_word C_fcall stub4765(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4765(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27392 */
static C_word C_fcall stub4686(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4686(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26690 */
static C_word C_fcall stub4670(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4670(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26644 */
static C_word C_fcall stub4554(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4554(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25942 */
static C_word C_fcall stub4538(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4538(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25896 */
static C_word C_fcall stub4422(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4422(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25469 */
static C_word C_fcall stub4407(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4407(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25426 */
static C_word C_fcall stub4328(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4328(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24724 */
static C_word C_fcall stub4312(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4312(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub338(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub338(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub335(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub335(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7050 */
static C_word C_fcall stub332(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub332(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub328(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub328(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7040 */
static C_word C_fcall stub324(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub324(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7033 */
static C_word C_fcall stub318(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub318(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7022 */
static C_word C_fcall stub312(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub312(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7015 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub301(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub301(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub298(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub298(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub295(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub295(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6995 */
static C_word C_fcall stub290(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6984 */
static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6973 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6966 */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6956 */
static C_word C_fcall stub265(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub265(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6949 */
static C_word C_fcall stub261(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub261(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6942 */
static C_word C_fcall stub256(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6935 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k6916 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k6897 */
static C_word C_fcall stub230(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub230(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6890 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6883 */
static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6868 */
static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6857 */
static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6846 */
static C_word C_fcall stub198(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub198(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6839 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6812 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6260 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6242 in cwd in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5635)
static void C_ccall f_5635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5638)
static void C_ccall f_5638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5641)
static void C_ccall f_5641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5644)
static void C_ccall f_5644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35585)
static void C_ccall f_35585(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35585)
static void C_ccall f_35585r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5935)
static void C_ccall f_5935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5939)
static void C_ccall f_5939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35533)
static void C_ccall f_35533(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35580)
static void C_ccall f_35580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35570)
static void C_ccall f_35570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35537)
static void C_ccall f_35537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5942)
static void C_ccall f_5942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35527)
static void C_ccall f_35527(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35527)
static void C_ccall f_35527r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6235)
static void C_ccall f_6235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9021)
static void C_ccall f_9021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35311)
static void C_fcall f_35311(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35525)
static void C_ccall f_35525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35345)
static void C_ccall f_35345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35357)
static void C_ccall f_35357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35361)
static void C_ccall f_35361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35365)
static void C_ccall f_35365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35509)
static void C_ccall f_35509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35371)
static void C_fcall f_35371(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_35391)
static void C_fcall f_35391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35394)
static void C_fcall f_35394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35402)
static void C_ccall f_35402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35409)
static void C_ccall f_35409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35412)
static void C_ccall f_35412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35416)
static void C_ccall f_35416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35423)
static void C_ccall f_35423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35426)
static void C_ccall f_35426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35430)
static void C_ccall f_35430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35437)
static void C_ccall f_35437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35381)
static void C_ccall f_35381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35334)
static void C_ccall f_35334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35324)
static void C_ccall f_35324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35327)
static void C_ccall f_35327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9024)
static void C_ccall f_9024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35297)
static void C_ccall f_35297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35305)
static void C_ccall f_35305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35309)
static void C_ccall f_35309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17599)
static void C_ccall f_17599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17650)
static void C_ccall f_17650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35287)
static void C_ccall f_35287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35295)
static void C_ccall f_35295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17755)
static void C_ccall f_17755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35184)
static void C_ccall f_35184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_35184)
static void C_ccall f_35184r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_35247)
static void C_ccall f_35247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35251)
static void C_ccall f_35251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35265)
static void C_fcall f_35265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35187)
static void C_fcall f_35187(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35207)
static void C_ccall f_35207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35211)
static void C_ccall f_35211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17758)
static void C_ccall f_17758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35170)
static void C_ccall f_35170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35178)
static void C_ccall f_35178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35182)
static void C_ccall f_35182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17951)
static void C_ccall f_17951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35144)
static void C_ccall f_35144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35148)
static void C_ccall f_35148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35154)
static void C_ccall f_35154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35165)
static void C_ccall f_35165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35161)
static void C_ccall f_35161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18020)
static void C_ccall f_18020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35122)
static void C_ccall f_35122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19265)
static void C_ccall f_19265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35102)
static void C_ccall f_35102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35062)
static void C_ccall f_35062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19271)
static void C_ccall f_19271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34968)
static void C_ccall f_34968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34972)
static void C_ccall f_34972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34975)
static void C_ccall f_34975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34993)
static void C_ccall f_34993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34996)
static void C_ccall f_34996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35027)
static void C_ccall f_35027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34999)
static void C_fcall f_34999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35005)
static void C_ccall f_35005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34958)
static void C_ccall f_34958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34952)
static void C_ccall f_34952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19274)
static void C_ccall f_19274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34860)
static void C_ccall f_34860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34862)
static void C_ccall f_34862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34866)
static void C_ccall f_34866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34869)
static void C_ccall f_34869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34872)
static void C_ccall f_34872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34912)
static void C_ccall f_34912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34904)
static void C_ccall f_34904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34875)
static void C_ccall f_34875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34878)
static void C_ccall f_34878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34881)
static void C_ccall f_34881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34852)
static void C_ccall f_34852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19277)
static void C_ccall f_19277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34824)
static void C_ccall f_34824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_ccall f_19280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34788)
static void C_ccall f_34788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34800)
static void C_ccall f_34800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34796)
static void C_ccall f_34796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34770)
static void C_ccall f_34770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34764)
static void C_ccall f_34764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19283)
static void C_ccall f_19283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34678)
static void C_ccall f_34678(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34682)
static void C_ccall f_34682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34685)
static void C_ccall f_34685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34688)
static void C_ccall f_34688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34701)
static void C_ccall f_34701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34647)
static void C_ccall f_34647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34651)
static void C_ccall f_34651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34666)
static void C_ccall f_34666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34641)
static void C_ccall f_34641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19286)
static void C_ccall f_19286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34527)
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34543)
static void C_ccall f_34543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34554)
static void C_ccall f_34554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34521)
static void C_ccall f_34521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19342)
static void C_ccall f_19342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34411)
static void C_ccall f_34411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34408)
static void C_ccall f_34408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34382)
static void C_ccall f_34382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19345)
static void C_ccall f_19345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34236)
static void C_ccall f_34236(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34254)
static void C_ccall f_34254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34263)
static void C_ccall f_34263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34230)
static void C_ccall f_34230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19348)
static void C_ccall f_19348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34183)
static void C_ccall f_34183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34187)
static void C_ccall f_34187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34190)
static void C_ccall f_34190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34206)
static void C_ccall f_34206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34165)
static void C_ccall f_34165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34159)
static void C_ccall f_34159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19351)
static void C_ccall f_19351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34083)
static void C_ccall f_34083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19490)
static void C_ccall f_19490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34009)
static void C_ccall f_34009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34016)
static void C_ccall f_34016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34003)
static void C_ccall f_34003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19493)
static void C_ccall f_19493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33899)
static void C_ccall f_33899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33907)
static void C_ccall f_33907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33873)
static void C_ccall f_33873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33890)
static void C_ccall f_33890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33881)
static void C_fcall f_33881(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33867)
static void C_ccall f_33867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19496)
static void C_ccall f_19496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33823)
static void C_ccall f_33823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19499)
static void C_ccall f_19499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33741)
static void C_ccall f_33741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33752)
static void C_ccall f_33752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33754)
static void C_fcall f_33754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33783)
static void C_ccall f_33783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33719)
static void C_ccall f_33719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33735)
static void C_ccall f_33735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33713)
static void C_ccall f_33713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19502)
static void C_ccall f_19502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33666)
static void C_ccall f_33666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33670)
static void C_ccall f_33670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33677)
static void C_ccall f_33677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33644)
static void C_ccall f_33644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33660)
static void C_ccall f_33660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33638)
static void C_ccall f_33638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19505)
static void C_ccall f_19505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33506)
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33546)
static void C_ccall f_33546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33510)
static void C_ccall f_33510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33526)
static void C_ccall f_33526(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33526)
static void C_ccall f_33526r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_33538)
static void C_ccall f_33538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33542)
static void C_ccall f_33542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33534)
static void C_ccall f_33534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33431)
static void C_ccall f_33431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33474)
static void C_ccall f_33474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33478)
static void C_ccall f_33478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33438)
static void C_fcall f_33438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33449)
static void C_ccall f_33449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33425)
static void C_ccall f_33425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19508)
static void C_ccall f_19508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33405)
static void C_ccall f_33405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33399)
static void C_ccall f_33399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19511)
static void C_ccall f_19511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33379)
static void C_ccall f_33379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33383)
static void C_ccall f_33383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33371)
static void C_ccall f_33371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19514)
static void C_ccall f_19514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33351)
static void C_ccall f_33351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33355)
static void C_ccall f_33355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33343)
static void C_ccall f_33343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19517)
static void C_ccall f_19517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33323)
static void C_ccall f_33323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33327)
static void C_ccall f_33327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33315)
static void C_ccall f_33315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19520)
static void C_ccall f_19520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33295)
static void C_ccall f_33295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33299)
static void C_ccall f_33299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33287)
static void C_ccall f_33287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19523)
static void C_ccall f_19523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33186)
static void C_ccall f_33186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33156)
static void C_ccall f_33156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33180)
static void C_ccall f_33180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33150)
static void C_ccall f_33150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19526)
static void C_ccall f_19526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33100)
static void C_ccall f_33100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33102)
static void C_ccall f_33102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33106)
static void C_ccall f_33106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33134)
static void C_ccall f_33134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33126)
static void C_ccall f_33126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33122)
static void C_ccall f_33122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33109)
static void C_ccall f_33109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33092)
static void C_ccall f_33092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19529)
static void C_ccall f_19529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33039)
static void C_ccall f_33039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33041)
static void C_ccall f_33041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33045)
static void C_ccall f_33045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33076)
static void C_ccall f_33076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33068)
static void C_ccall f_33068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33064)
static void C_ccall f_33064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33048)
static void C_ccall f_33048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33051)
static void C_ccall f_33051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33031)
static void C_ccall f_33031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19532)
static void C_ccall f_19532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32981)
static void C_ccall f_32981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32995)
static void C_ccall f_32995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32987)
static void C_ccall f_32987(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32946)
static void C_ccall f_32946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32979)
static void C_ccall f_32979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32940)
static void C_ccall f_32940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19535)
static void C_ccall f_19535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32887)
static void C_ccall f_32887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32891)
static void C_ccall f_32891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32904)
static void C_ccall f_32904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32896)
static void C_ccall f_32896(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32844)
static void C_ccall f_32844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32877)
static void C_ccall f_32877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32838)
static void C_ccall f_32838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19538)
static void C_ccall f_19538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32758)
static void C_ccall f_32758(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32752)
static void C_ccall f_32752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19541)
static void C_ccall f_19541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32521)
static void C_ccall f_32521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32525)
static void C_ccall f_32525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32533)
static void C_fcall f_32533(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32556)
static void C_ccall f_32556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32559)
static void C_ccall f_32559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32562)
static void C_ccall f_32562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32565)
static void C_ccall f_32565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32625)
static void C_ccall f_32625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32632)
static void C_ccall f_32632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32642)
static void C_ccall f_32642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32652)
static void C_ccall f_32652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32666)
static void C_ccall f_32666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32676)
static void C_ccall f_32676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32686)
static void C_ccall f_32686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32696)
static void C_ccall f_32696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32568)
static void C_fcall f_32568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32592)
static void C_fcall f_32592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32571)
static void C_fcall f_32571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32478)
static void C_ccall f_32478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32511)
static void C_ccall f_32511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32472)
static void C_ccall f_32472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19544)
static void C_ccall f_19544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32390)
static void C_ccall f_32390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32394)
static void C_ccall f_32394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32400)
static void C_ccall f_32400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32420)
static void C_ccall f_32420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32364)
static void C_ccall f_32364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32374)
static void C_fcall f_32374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32358)
static void C_ccall f_32358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19547)
static void C_ccall f_19547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32235)
static void C_ccall f_32235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32239)
static void C_ccall f_32239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32167)
static void C_ccall f_32167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32186)
static void C_ccall f_32186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32221)
static void C_ccall f_32221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32192)
static void C_fcall f_32192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32196)
static void C_ccall f_32196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32210)
static void C_ccall f_32210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_fcall f_32199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32180)
static void C_fcall f_32180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32161)
static void C_ccall f_32161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19550)
static void C_ccall f_19550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31889)
static void C_ccall f_31889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20073)
static void C_ccall f_20073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31841)
static void C_ccall f_31841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31833)
static void C_ccall f_31833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20076)
static void C_ccall f_20076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31713)
static void C_ccall f_31713(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20082)
static void C_ccall f_20082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20541)
static void C_ccall f_20541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20575)
static void C_ccall f_20575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20567)
static void C_ccall f_20567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20563)
static void C_ccall f_20563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20548)
static void C_ccall f_20548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20552)
static void C_ccall f_20552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20100)
static void C_fcall f_20100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20534)
static void C_ccall f_20534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20530)
static void C_ccall f_20530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20107)
static void C_fcall f_20107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20405)
static void C_fcall f_20405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20426)
static void C_ccall f_20426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20428)
static void C_fcall f_20428(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20442)
static void C_ccall f_20442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20495)
static void C_ccall f_20495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20445)
static void C_fcall f_20445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20480)
static void C_ccall f_20480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20448)
static void C_fcall f_20448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20461)
static void C_ccall f_20461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20473)
static void C_ccall f_20473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20465)
static void C_ccall f_20465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20451)
static void C_fcall f_20451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20415)
static void C_ccall f_20415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20110)
static void C_ccall f_20110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20369)
static void C_fcall f_20369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20395)
static void C_ccall f_20395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20380)
static void C_ccall f_20380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20113)
static void C_ccall f_20113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20117)
static void C_ccall f_20117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20313)
static void C_fcall f_20313(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20323)
static void C_ccall f_20323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20326)
static void C_ccall f_20326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20347)
static void C_ccall f_20347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_fcall f_20329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20333)
static void C_ccall f_20333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20120)
static void C_ccall f_20120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20123)
static void C_fcall f_20123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20276)
static void C_ccall f_20276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20284)
static void C_ccall f_20284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20280)
static void C_ccall f_20280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20126)
static void C_fcall f_20126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20154)
static void C_ccall f_20154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20157)
static void C_ccall f_20157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20160)
static void C_ccall f_20160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20163)
static void C_ccall f_20163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20166)
static void C_ccall f_20166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20225)
static void C_ccall f_20225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31683)
static void C_ccall f_31683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31686)
static void C_ccall f_31686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31689)
static void C_fcall f_31689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31692)
static void C_fcall f_31692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31703)
static void C_ccall f_31703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31661)
static void C_ccall f_31661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20582)
static void C_ccall f_20582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31522)
static void C_ccall f_31522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31561)
static void C_ccall f_31561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31535)
static void C_fcall f_31535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31516)
static void C_ccall f_31516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20585)
static void C_ccall f_20585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31104)
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31108)
static void C_ccall f_31108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31120)
static void C_ccall f_31120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31178)
static void C_ccall f_31178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31181)
static void C_ccall f_31181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31184)
static void C_ccall f_31184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31396)
static void C_ccall f_31396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31334)
static void C_ccall f_31334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31368)
static void C_ccall f_31368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31343)
static void C_fcall f_31343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31354)
static void C_ccall f_31354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31350)
static void C_ccall f_31350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31193)
static void C_fcall f_31193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31271)
static void C_ccall f_31271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31312)
static void C_ccall f_31312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31316)
static void C_ccall f_31316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31320)
static void C_ccall f_31320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31275)
static void C_ccall f_31275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31279)
static void C_ccall f_31279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31306)
static void C_ccall f_31306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31282)
static void C_fcall f_31282(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31196)
static void C_fcall f_31196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31268)
static void C_ccall f_31268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31210)
static void C_ccall f_31210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31212)
static void C_fcall f_31212(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31260)
static void C_ccall f_31260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31231)
static void C_ccall f_31231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31248)
static void C_ccall f_31248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31234)
static void C_fcall f_31234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31227)
static void C_ccall f_31227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31199)
static void C_ccall f_31199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31129)
static void C_fcall f_31129(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31139)
static void C_ccall f_31139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31145)
static void C_ccall f_31145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31117)
static void C_ccall f_31117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31065)
static void C_ccall f_31065(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31082)
static void C_ccall f_31082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31098)
static void C_ccall f_31098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31076)
static void C_fcall f_31076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31059)
static void C_ccall f_31059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20588)
static void C_ccall f_20588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30983)
static void C_ccall f_30983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20591)
static void C_ccall f_20591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30959)
static void C_ccall f_30959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30971)
static void C_ccall f_30971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30967)
static void C_ccall f_30967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30945)
static void C_ccall f_30945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30953)
static void C_ccall f_30953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30939)
static void C_ccall f_30939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20594)
static void C_ccall f_20594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30931)
static void C_ccall f_30931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24365)
static void C_ccall f_24365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24368)
static void C_ccall f_24368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24534)
static void C_ccall f_24534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24530)
static void C_ccall f_24530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24520)
static void C_fcall f_24520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24375)
static void C_ccall f_24375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24379)
static void C_ccall f_24379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24382)
static void C_fcall f_24382(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24393)
static void C_ccall f_24393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24401)
static void C_ccall f_24401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24473)
static void C_ccall f_24473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24481)
static void C_ccall f_24481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24477)
static void C_ccall f_24477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24469)
static void C_ccall f_24469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24465)
static void C_ccall f_24465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24437)
static void C_ccall f_24437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24433)
static void C_ccall f_24433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24397)
static void C_ccall f_24397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21012)
static void C_ccall f_21012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30917)
static void C_ccall f_30917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21015)
static void C_ccall f_21015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30888)
static void C_ccall f_30888(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30892)
static void C_ccall f_30892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21018)
static void C_ccall f_21018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30885)
static void C_ccall f_30885(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21021)
static void C_ccall f_21021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30743)
static void C_ccall f_30743(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24547)
static void C_ccall f_24547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24679)
static void C_ccall f_24679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24550)
static void C_ccall f_24550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24561)
static void C_ccall f_24561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24569)
static void C_ccall f_24569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24593)
static void C_ccall f_24593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24596)
static void C_fcall f_24596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24604)
static void C_ccall f_24604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24612)
static void C_ccall f_24612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24632)
static void C_ccall f_24632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24628)
static void C_ccall f_24628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24608)
static void C_ccall f_24608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24600)
static void C_ccall f_24600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24589)
static void C_ccall f_24589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24565)
static void C_ccall f_24565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24541)
static void C_ccall f_24541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29463)
static void C_ccall f_29463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29466)
static void C_ccall f_29466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29469)
static void C_ccall f_29469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29472)
static void C_ccall f_29472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29475)
static void C_ccall f_29475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29478)
static void C_ccall f_29478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29481)
static void C_ccall f_29481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29484)
static void C_ccall f_29484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29487)
static void C_ccall f_29487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29490)
static void C_ccall f_29490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29493)
static void C_ccall f_29493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29618)
static void C_ccall f_29618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29621)
static void C_ccall f_29621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29624)
static void C_ccall f_29624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30680)
static void C_fcall f_30680(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30708)
static void C_fcall f_30708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30347)
static void C_ccall f_30347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30674)
static void C_ccall f_30674(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30392)
static void C_ccall f_30392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30398)
static void C_ccall f_30398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30401)
static void C_ccall f_30401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30404)
static void C_ccall f_30404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30408)
static void C_ccall f_30408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30618)
static void C_ccall f_30618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30630)
static void C_ccall f_30630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30626)
static void C_ccall f_30626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30411)
static void C_fcall f_30411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30575)
static void C_fcall f_30575(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30611)
static void C_ccall f_30611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30604)
static void C_ccall f_30604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30414)
static void C_ccall f_30414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30513)
static void C_ccall f_30513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30521)
static void C_ccall f_30521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30517)
static void C_ccall f_30517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30509)
static void C_ccall f_30509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30505)
static void C_ccall f_30505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30461)
static void C_ccall f_30461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30457)
static void C_ccall f_30457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30424)
static void C_fcall f_30424(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30435)
static void C_ccall f_30435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30443)
static void C_ccall f_30443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30439)
static void C_ccall f_30439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30637)
static void C_ccall f_30637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30645)
static void C_ccall f_30645(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_30645)
static void C_ccall f_30645r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_30659)
static void C_fcall f_30659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30649)
static void C_ccall f_30649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30640)
static void C_ccall f_30640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30643)
static void C_ccall f_30643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30349)
static void C_fcall f_30349(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30365)
static void C_ccall f_30365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30276)
static void C_ccall f_30276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30287)
static void C_ccall f_30287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30290)
static void C_fcall f_30290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30297)
static void C_ccall f_30297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30266)
static void C_ccall f_30266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29929)
static void C_ccall f_29929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30270)
static void C_ccall f_30270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30208)
static void C_ccall f_30208(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30208)
static void C_ccall f_30208r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30226)
static void C_fcall f_30226(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30236)
static void C_ccall f_30236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30212)
static void C_ccall f_30212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30199)
static void C_ccall f_30199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29907)
static void C_ccall f_29907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30203)
static void C_ccall f_30203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30193)
static void C_ccall f_30193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29889)
static void C_ccall f_29889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30184)
static void C_ccall f_30184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29898)
static void C_ccall f_29898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30188)
static void C_ccall f_30188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30121)
static void C_ccall f_30121(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30121)
static void C_ccall f_30121r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30146)
static void C_fcall f_30146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29854)
static void C_ccall f_29854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30134)
static void C_ccall f_30134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29953)
static void C_ccall f_29953(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_29953)
static void C_ccall f_29953r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_30072)
static void C_fcall f_30072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30067)
static void C_fcall f_30067(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29955)
static void C_fcall f_29955(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30062)
static void C_ccall f_30062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30066)
static void C_ccall f_30066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30058)
static void C_ccall f_30058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30026)
static void C_fcall f_30026(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30051)
static void C_ccall f_30051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30055)
static void C_ccall f_30055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30036)
static void C_ccall f_30036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30015)
static void C_ccall f_30015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29985)
static void C_fcall f_29985(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29957)
static void C_fcall f_29957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29934)
static void C_ccall f_29934(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29939)
static void C_ccall f_29939(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29944)
static void C_ccall f_29944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29912)
static void C_fcall f_29912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29916)
static void C_ccall f_29916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29868)
static void C_fcall f_29868(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29872)
static void C_ccall f_29872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29859)
static void C_fcall f_29859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29863)
static void C_ccall f_29863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29847)
static void C_ccall f_29847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29844)
static void C_ccall f_29844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29830)
static void C_ccall f_29830(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29835)
static void C_ccall f_29835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29816)
static void C_ccall f_29816(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29821)
static void C_ccall f_29821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29626)
static void C_ccall f_29626(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29687)
static void C_ccall f_29687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29689)
static void C_fcall f_29689(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29699)
static void C_ccall f_29699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29718)
static void C_fcall f_29718(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29758)
static void C_ccall f_29758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29800)
static void C_ccall f_29800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29770)
static void C_ccall f_29770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29755)
static void C_fcall f_29755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29673)
static void C_ccall f_29673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29638)
static void C_ccall f_29638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29665)
static void C_ccall f_29665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29646)
static void C_ccall f_29646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29653)
static void C_ccall f_29653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29657)
static void C_ccall f_29657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29661)
static void C_ccall f_29661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29738)
static void C_ccall f_29738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29716)
static void C_ccall f_29716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29702)
static void C_ccall f_29702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29705)
static void C_ccall f_29705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29680)
static void C_ccall f_29680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29609)
static void C_ccall f_29609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29614)
static void C_ccall f_29614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29552)
static void C_ccall f_29552(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29552)
static void C_ccall f_29552r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29585)
static void C_fcall f_29585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29565)
static void C_fcall f_29565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29573)
static void C_ccall f_29573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29556)
static void C_ccall f_29556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29495)
static void C_ccall f_29495(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29495)
static void C_ccall f_29495r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29528)
static void C_fcall f_29528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29508)
static void C_fcall f_29508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29516)
static void C_ccall f_29516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29499)
static void C_ccall f_29499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29405)
static void C_ccall f_29405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29459)
static void C_ccall f_29459(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29454)
static void C_ccall f_29454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29417)
static void C_ccall f_29417(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29423)
static void C_ccall f_29423(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29449)
static void C_ccall f_29449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29453)
static void C_ccall f_29453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29429)
static void C_ccall f_29429(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29447)
static void C_ccall f_29447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29444)
static void C_ccall f_29444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29440)
static void C_ccall f_29440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29433)
static void C_ccall f_29433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29390)
static void C_ccall f_29390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29395)
static void C_ccall f_29395(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29362)
static void C_ccall f_29362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29367)
static void C_ccall f_29367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29334)
static void C_ccall f_29334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29339)
static void C_ccall f_29339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29306)
static void C_ccall f_29306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29311)
static void C_ccall f_29311(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29278)
static void C_ccall f_29278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29283)
static void C_ccall f_29283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29250)
static void C_ccall f_29250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29255)
static void C_ccall f_29255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29222)
static void C_ccall f_29222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29227)
static void C_ccall f_29227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29194)
static void C_ccall f_29194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29199)
static void C_ccall f_29199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29166)
static void C_ccall f_29166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29171)
static void C_ccall f_29171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29138)
static void C_ccall f_29138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29143)
static void C_ccall f_29143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29115)
static void C_ccall f_29115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29120)
static void C_ccall f_29120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29119)
static void C_ccall f_29119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29096)
static void C_ccall f_29096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29101)
static void C_ccall f_29101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29041)
static void C_ccall f_29041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29048)
static void C_ccall f_29048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29051)
static void C_ccall f_29051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29075)
static void C_ccall f_29075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29055)
static void C_ccall f_29055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29045)
static void C_ccall f_29045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28994)
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29001)
static void C_ccall f_29001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29004)
static void C_ccall f_29004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29024)
static void C_ccall f_29024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29008)
static void C_ccall f_29008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28971)
static void C_ccall f_28971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28976)
static void C_ccall f_28976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28975)
static void C_ccall f_28975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28952)
static void C_ccall f_28952(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28957)
static void C_ccall f_28957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28929)
static void C_ccall f_28929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28934)
static void C_ccall f_28934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28933)
static void C_ccall f_28933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28910)
static void C_ccall f_28910(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28915)
static void C_ccall f_28915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28891)
static void C_ccall f_28891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28896)
static void C_ccall f_28896(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28895)
static void C_ccall f_28895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28876)
static void C_ccall f_28876(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28881)
static void C_ccall f_28881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28857)
static void C_ccall f_28857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28862)
static void C_ccall f_28862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28861)
static void C_ccall f_28861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28842)
static void C_ccall f_28842(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28847)
static void C_ccall f_28847(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28827)
static void C_ccall f_28827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28832)
static void C_ccall f_28832(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28809)
static void C_ccall f_28809(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28817)
static void C_ccall f_28817(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28813)
static void C_ccall f_28813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28339)
static void C_ccall f_28339(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28339)
static void C_ccall f_28339r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28767)
static void C_ccall f_28767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28782)
static void C_ccall f_28782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28774)
static void C_ccall f_28774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28738)
static void C_ccall f_28738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28742)
static void C_ccall f_28742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28703)
static void C_ccall f_28703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28707)
static void C_ccall f_28707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28668)
static void C_ccall f_28668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28672)
static void C_ccall f_28672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28343)
static void C_fcall f_28343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28632)
static void C_ccall f_28632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28647)
static void C_ccall f_28647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28639)
static void C_ccall f_28639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28603)
static void C_ccall f_28603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28607)
static void C_ccall f_28607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28568)
static void C_ccall f_28568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28572)
static void C_ccall f_28572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28533)
static void C_ccall f_28533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28346)
static void C_fcall f_28346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28497)
static void C_ccall f_28497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28512)
static void C_ccall f_28512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28504)
static void C_ccall f_28504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28468)
static void C_ccall f_28468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28472)
static void C_ccall f_28472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28433)
static void C_ccall f_28433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28437)
static void C_ccall f_28437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28398)
static void C_ccall f_28398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28402)
static void C_ccall f_28402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28349)
static void C_fcall f_28349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28352)
static void C_ccall f_28352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28356)
static void C_ccall f_28356(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28320)
static void C_ccall f_28320(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28325)
static void C_ccall f_28325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27869)
static void C_ccall f_27869(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27869)
static void C_ccall f_27869r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28297)
static void C_ccall f_28297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28312)
static void C_ccall f_28312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28304)
static void C_ccall f_28304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28268)
static void C_ccall f_28268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28272)
static void C_ccall f_28272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28233)
static void C_ccall f_28233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28237)
static void C_ccall f_28237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28198)
static void C_ccall f_28198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28202)
static void C_ccall f_28202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27873)
static void C_fcall f_27873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28162)
static void C_ccall f_28162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28177)
static void C_ccall f_28177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28169)
static void C_ccall f_28169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28133)
static void C_ccall f_28133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28137)
static void C_ccall f_28137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28098)
static void C_ccall f_28098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28102)
static void C_ccall f_28102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28063)
static void C_ccall f_28063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28067)
static void C_ccall f_28067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27876)
static void C_fcall f_27876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28027)
static void C_ccall f_28027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28042)
static void C_ccall f_28042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28034)
static void C_ccall f_28034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27998)
static void C_ccall f_27998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28002)
static void C_ccall f_28002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27963)
static void C_ccall f_27963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27967)
static void C_ccall f_27967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27928)
static void C_ccall f_27928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27932)
static void C_ccall f_27932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27879)
static void C_fcall f_27879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27882)
static void C_ccall f_27882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27886)
static void C_ccall f_27886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27850)
static void C_ccall f_27850(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27855)
static void C_ccall f_27855(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27399)
static void C_ccall f_27399(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27399)
static void C_ccall f_27399r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27827)
static void C_ccall f_27827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27842)
static void C_ccall f_27842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27834)
static void C_ccall f_27834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27798)
static void C_ccall f_27798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27802)
static void C_ccall f_27802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27763)
static void C_ccall f_27763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27767)
static void C_ccall f_27767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27728)
static void C_ccall f_27728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27732)
static void C_ccall f_27732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27403)
static void C_fcall f_27403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27692)
static void C_ccall f_27692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27707)
static void C_ccall f_27707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27699)
static void C_ccall f_27699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27663)
static void C_ccall f_27663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27667)
static void C_ccall f_27667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27628)
static void C_ccall f_27628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27632)
static void C_ccall f_27632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27593)
static void C_ccall f_27593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27597)
static void C_ccall f_27597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27406)
static void C_fcall f_27406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27557)
static void C_ccall f_27557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27572)
static void C_ccall f_27572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27564)
static void C_ccall f_27564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27528)
static void C_ccall f_27528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27532)
static void C_ccall f_27532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27493)
static void C_ccall f_27493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27497)
static void C_ccall f_27497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27458)
static void C_ccall f_27458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27462)
static void C_ccall f_27462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27409)
static void C_fcall f_27409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27412)
static void C_ccall f_27412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27416)
static void C_ccall f_27416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27380)
static void C_ccall f_27380(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27385)
static void C_ccall f_27385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26651)
static void C_ccall f_26651(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26651)
static void C_ccall f_26651r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27357)
static void C_ccall f_27357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27372)
static void C_ccall f_27372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27364)
static void C_ccall f_27364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27328)
static void C_ccall f_27328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27293)
static void C_ccall f_27293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27297)
static void C_ccall f_27297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27258)
static void C_ccall f_27258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27262)
static void C_ccall f_27262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27223)
static void C_ccall f_27223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27227)
static void C_ccall f_27227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26655)
static void C_fcall f_26655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27187)
static void C_ccall f_27187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27202)
static void C_ccall f_27202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27194)
static void C_ccall f_27194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27158)
static void C_ccall f_27158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27162)
static void C_ccall f_27162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27123)
static void C_ccall f_27123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27127)
static void C_ccall f_27127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27088)
static void C_ccall f_27088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27092)
static void C_ccall f_27092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27053)
static void C_ccall f_27053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27057)
static void C_ccall f_27057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26658)
static void C_fcall f_26658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27017)
static void C_ccall f_27017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27032)
static void C_ccall f_27032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27024)
static void C_ccall f_27024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26988)
static void C_ccall f_26988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26992)
static void C_ccall f_26992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26953)
static void C_ccall f_26953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26957)
static void C_ccall f_26957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26918)
static void C_ccall f_26918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26922)
static void C_ccall f_26922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26883)
static void C_ccall f_26883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26887)
static void C_ccall f_26887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26661)
static void C_fcall f_26661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26847)
static void C_ccall f_26847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26862)
static void C_ccall f_26862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26854)
static void C_ccall f_26854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26818)
static void C_ccall f_26818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26822)
static void C_ccall f_26822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26783)
static void C_ccall f_26783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26787)
static void C_ccall f_26787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26748)
static void C_ccall f_26748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26752)
static void C_ccall f_26752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26713)
static void C_ccall f_26713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26717)
static void C_ccall f_26717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26664)
static void C_fcall f_26664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26667)
static void C_ccall f_26667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26671)
static void C_ccall f_26671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26632)
static void C_ccall f_26632(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26637)
static void C_ccall f_26637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25903)
static void C_ccall f_25903(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25903)
static void C_ccall f_25903r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26609)
static void C_ccall f_26609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26624)
static void C_ccall f_26624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26616)
static void C_ccall f_26616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26580)
static void C_ccall f_26580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26584)
static void C_ccall f_26584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26545)
static void C_ccall f_26545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26549)
static void C_ccall f_26549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26510)
static void C_ccall f_26510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26514)
static void C_ccall f_26514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26475)
static void C_ccall f_26475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26479)
static void C_ccall f_26479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25907)
static void C_fcall f_25907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26439)
static void C_ccall f_26439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26454)
static void C_ccall f_26454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26446)
static void C_ccall f_26446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26410)
static void C_ccall f_26410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26414)
static void C_ccall f_26414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26375)
static void C_ccall f_26375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26379)
static void C_ccall f_26379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26340)
static void C_ccall f_26340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26344)
static void C_ccall f_26344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26305)
static void C_ccall f_26305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26309)
static void C_ccall f_26309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25910)
static void C_fcall f_25910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26269)
static void C_ccall f_26269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26284)
static void C_ccall f_26284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26240)
static void C_ccall f_26240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26244)
static void C_ccall f_26244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26205)
static void C_ccall f_26205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26209)
static void C_ccall f_26209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26170)
static void C_ccall f_26170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26174)
static void C_ccall f_26174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26135)
static void C_ccall f_26135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26139)
static void C_ccall f_26139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25913)
static void C_fcall f_25913(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26099)
static void C_ccall f_26099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26114)
static void C_ccall f_26114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26106)
static void C_ccall f_26106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26074)
static void C_ccall f_26074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26035)
static void C_ccall f_26035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26039)
static void C_ccall f_26039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26000)
static void C_ccall f_26000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26004)
static void C_ccall f_26004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25965)
static void C_ccall f_25965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25969)
static void C_ccall f_25969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25916)
static void C_fcall f_25916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25919)
static void C_ccall f_25919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25923)
static void C_ccall f_25923(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25884)
static void C_ccall f_25884(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25889)
static void C_ccall f_25889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25433)
static void C_ccall f_25433(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25433)
static void C_ccall f_25433r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25861)
static void C_ccall f_25861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25876)
static void C_ccall f_25876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25868)
static void C_ccall f_25868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25832)
static void C_ccall f_25832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25836)
static void C_ccall f_25836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25797)
static void C_ccall f_25797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25801)
static void C_ccall f_25801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25762)
static void C_ccall f_25762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25766)
static void C_ccall f_25766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25437)
static void C_fcall f_25437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25726)
static void C_ccall f_25726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25741)
static void C_ccall f_25741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25733)
static void C_ccall f_25733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25697)
static void C_ccall f_25697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25701)
static void C_ccall f_25701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25662)
static void C_ccall f_25662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25666)
static void C_ccall f_25666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25627)
static void C_ccall f_25627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25631)
static void C_ccall f_25631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25440)
static void C_fcall f_25440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25591)
static void C_ccall f_25591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25606)
static void C_ccall f_25606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25598)
static void C_ccall f_25598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25562)
static void C_ccall f_25562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25566)
static void C_ccall f_25566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25527)
static void C_ccall f_25527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25531)
static void C_ccall f_25531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25492)
static void C_ccall f_25492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25496)
static void C_ccall f_25496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25443)
static void C_fcall f_25443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25446)
static void C_ccall f_25446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25450)
static void C_ccall f_25450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25414)
static void C_ccall f_25414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25419)
static void C_ccall f_25419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24685)
static void C_ccall f_24685(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24685)
static void C_ccall f_24685r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25391)
static void C_ccall f_25391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25406)
static void C_ccall f_25406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25398)
static void C_ccall f_25398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25362)
static void C_ccall f_25362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25366)
static void C_ccall f_25366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25327)
static void C_ccall f_25327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25331)
static void C_ccall f_25331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25292)
static void C_ccall f_25292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25296)
static void C_ccall f_25296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25257)
static void C_ccall f_25257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25261)
static void C_ccall f_25261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24689)
static void C_fcall f_24689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25221)
static void C_ccall f_25221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25236)
static void C_ccall f_25236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25228)
static void C_ccall f_25228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25192)
static void C_ccall f_25192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25196)
static void C_ccall f_25196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25157)
static void C_ccall f_25157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25161)
static void C_ccall f_25161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25122)
static void C_ccall f_25122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_ccall f_25126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_ccall f_25087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24692)
static void C_fcall f_24692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25051)
static void C_ccall f_25051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25066)
static void C_ccall f_25066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25058)
static void C_ccall f_25058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25022)
static void C_ccall f_25022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25026)
static void C_ccall f_25026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24987)
static void C_ccall f_24987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24991)
static void C_ccall f_24991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24952)
static void C_ccall f_24952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24956)
static void C_ccall f_24956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24917)
static void C_ccall f_24917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24921)
static void C_ccall f_24921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24695)
static void C_fcall f_24695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24881)
static void C_ccall f_24881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24896)
static void C_ccall f_24896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24888)
static void C_ccall f_24888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24852)
static void C_ccall f_24852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24856)
static void C_ccall f_24856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24817)
static void C_ccall f_24817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24821)
static void C_ccall f_24821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24782)
static void C_ccall f_24782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24786)
static void C_ccall f_24786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24751)
static void C_ccall f_24751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24698)
static void C_fcall f_24698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24701)
static void C_ccall f_24701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24705)
static void C_ccall f_24705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24347)
static void C_fcall f_24347(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24187)
static void C_fcall f_24187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24222)
static void C_fcall f_24222(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_24232)
static void C_fcall f_24232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24236)
static void C_ccall f_24236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24239)
static void C_ccall f_24239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24300)
static void C_ccall f_24300(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24291)
static void C_ccall f_24291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24242)
static void C_ccall f_24242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24268)
static void C_ccall f_24268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24245)
static void C_ccall f_24245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24251)
static void C_ccall f_24251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24220)
static void C_ccall f_24220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24195)
static void C_fcall f_24195(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24194)
static void C_ccall f_24194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24355)
static void C_fcall f_24355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23933)
static void C_ccall f_23933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23955)
static void C_ccall f_23955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23970)
static void C_ccall f_23970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23973)
static void C_fcall f_23973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24149)
static void C_ccall f_24149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24143)
static void C_ccall f_24143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23976)
static void C_ccall f_23976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24125)
static void C_ccall f_24125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23979)
static void C_fcall f_23979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23982)
static void C_ccall f_23982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24118)
static void C_ccall f_24118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24106)
static void C_ccall f_24106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24002)
static void C_fcall f_24002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24009)
static void C_ccall f_24009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24079)
static void C_ccall f_24079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24065)
static void C_ccall f_24065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24073)
static void C_ccall f_24073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24012)
static void C_ccall f_24012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24051)
static void C_ccall f_24051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24015)
static void C_fcall f_24015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24044)
static void C_ccall f_24044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24021)
static void C_ccall f_24021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24024)
static void C_ccall f_24024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24028)
static void C_ccall f_24028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23989)
static void C_fcall f_23989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23992)
static void C_ccall f_23992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23802)
static void C_fcall f_23802(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23811)
static void C_fcall f_23811(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23759)
static void C_ccall f_23759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23765)
static void C_fcall f_23765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23828)
static void C_ccall f_23828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23914)
static void C_ccall f_23914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23901)
static void C_ccall f_23901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23909)
static void C_ccall f_23909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23831)
static void C_ccall f_23831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23835)
static void C_ccall f_23835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23878)
static void C_ccall f_23878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23840)
static void C_ccall f_23840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23806)
static void C_ccall f_23806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23701)
static void C_ccall f_23701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23708)
static void C_ccall f_23708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23739)
static void C_ccall f_23739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23735)
static void C_ccall f_23735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23727)
static void C_ccall f_23727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23610)
static void C_ccall f_23610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23617)
static void C_ccall f_23617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23685)
static void C_ccall f_23685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23628)
static void C_fcall f_23628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23655)
static void C_ccall f_23655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23639)
static void C_ccall f_23639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23544)
static void C_ccall f_23544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23555)
static void C_ccall f_23555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23558)
static void C_fcall f_23558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23565)
static void C_ccall f_23565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23538)
static void C_ccall f_23538(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22992)
static void C_ccall f_22992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23023)
static void C_ccall f_23023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23487)
static void C_ccall f_23487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23493)
static void C_ccall f_23493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23034)
static void C_ccall f_23034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22919)
static void C_fcall f_22919(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22944)
static void C_ccall f_22944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22879)
static void C_fcall f_22879(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22892)
static void C_fcall f_22892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22933)
static void C_ccall f_22933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23038)
static void C_ccall f_23038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23475)
static void C_ccall f_23475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23471)
static void C_fcall f_23471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23467)
static void C_ccall f_23467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23041)
static void C_ccall f_23041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23261)
static void C_fcall f_23261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23370)
static void C_ccall f_23370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23435)
static void C_ccall f_23435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23377)
static void C_fcall f_23377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23381)
static void C_ccall f_23381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23385)
static void C_ccall f_23385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23427)
static void C_ccall f_23427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23423)
static void C_ccall f_23423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23401)
static void C_ccall f_23401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23264)
static void C_fcall f_23264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23267)
static void C_fcall f_23267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23166)
static void C_ccall f_23166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23249)
static void C_ccall f_23249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23216)
static void C_ccall f_23216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23242)
static void C_ccall f_23242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23224)
static void C_ccall f_23224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23172)
static void C_fcall f_23172(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23154)
static void C_ccall f_23154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23125)
static void C_ccall f_23125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23147)
static void C_ccall f_23147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23133)
static void C_ccall f_23133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23087)
static void C_fcall f_23087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23044)
static void C_fcall f_23044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23055)
static void C_ccall f_23055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23059)
static void C_ccall f_23059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23063)
static void C_ccall f_23063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23067)
static void C_ccall f_23067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23051)
static void C_ccall f_23051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23011)
static void C_fcall f_23011(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23006)
static void C_fcall f_23006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23001)
static void C_fcall f_23001(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22833)
static void C_ccall f_22833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22844)
static void C_ccall f_22844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22859)
static void C_ccall f_22859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22795)
static void C_ccall f_22795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22806)
static void C_ccall f_22806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22821)
static void C_ccall f_22821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22728)
static void C_ccall f_22728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22748)
static void C_fcall f_22748(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22758)
static void C_ccall f_22758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22771)
static void C_ccall f_22771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22739)
static void C_ccall f_22739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22746)
static void C_ccall f_22746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22535)
static void C_ccall f_22535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22595)
static void C_fcall f_22595(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22605)
static void C_ccall f_22605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22719)
static void C_ccall f_22719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22684)
static void C_ccall f_22684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22676)
static void C_ccall f_22676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22647)
static void C_ccall f_22647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22625)
static void C_ccall f_22625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22628)
static void C_ccall f_22628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22616)
static void C_ccall f_22616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22542)
static void C_ccall f_22542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22593)
static void C_ccall f_22593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22585)
static void C_ccall f_22585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22545)
static void C_ccall f_22545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22556)
static void C_ccall f_22556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22560)
static void C_ccall f_22560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22552)
static void C_ccall f_22552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22393)
static void C_ccall f_22393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22441)
static void C_fcall f_22441(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22451)
static void C_ccall f_22451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22462)
static void C_ccall f_22462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22499)
static void C_ccall f_22499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22474)
static void C_ccall f_22474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22465)
static void C_ccall f_22465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22403)
static void C_ccall f_22403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22439)
static void C_ccall f_22439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22042)
static void C_ccall f_22042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22049)
static void C_ccall f_22049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22283)
static void C_fcall f_22283(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22293)
static void C_ccall f_22293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22304)
static void C_ccall f_22304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22316)
static void C_fcall f_22316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22319)
static void C_ccall f_22319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22307)
static void C_ccall f_22307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22055)
static void C_ccall f_22055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22281)
static void C_ccall f_22281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22277)
static void C_ccall f_22277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22223)
static void C_fcall f_22223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22188)
static void C_fcall f_22188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22204)
static void C_fcall f_22204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22159)
static void C_fcall f_22159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22083)
static void C_ccall f_22083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22086)
static void C_ccall f_22086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22150)
static void C_ccall f_22150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22146)
static void C_ccall f_22146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22066)
static void C_fcall f_22066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22077)
static void C_ccall f_22077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22073)
static void C_ccall f_22073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21995)
static void C_ccall f_21995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22028)
static void C_ccall f_22028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22010)
static void C_ccall f_22010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22022)
static void C_ccall f_22022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21613)
static void C_ccall f_21613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21822)
static void C_fcall f_21822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21832)
static void C_ccall f_21832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21843)
static void C_ccall f_21843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21963)
static void C_ccall f_21963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21942)
static void C_ccall f_21942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21921)
static void C_ccall f_21921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21900)
static void C_ccall f_21900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21879)
static void C_ccall f_21879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21858)
static void C_ccall f_21858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21846)
static void C_ccall f_21846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21623)
static void C_ccall f_21623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21626)
static void C_fcall f_21626(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21789)
static void C_fcall f_21789(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21629)
static void C_fcall f_21629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21780)
static void C_ccall f_21780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21760)
static void C_ccall f_21760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21632)
static void C_fcall f_21632(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21725)
static void C_ccall f_21725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21742)
static void C_ccall f_21742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21635)
static void C_fcall f_21635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21674)
static void C_ccall f_21674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21708)
static void C_ccall f_21708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21692)
static void C_ccall f_21692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21677)
static void C_fcall f_21677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21642)
static void C_fcall f_21642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21653)
static void C_ccall f_21653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21657)
static void C_ccall f_21657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21649)
static void C_ccall f_21649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21531)
static void C_ccall f_21531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21535)
static void C_ccall f_21535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21553)
static void C_ccall f_21553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21371)
static void C_fcall f_21371(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21379)
static void C_fcall f_21379(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21389)
static void C_ccall f_21389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21427)
static void C_ccall f_21427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21430)
static void C_ccall f_21430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21433)
static void C_ccall f_21433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21508)
static void C_fcall f_21508(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21518)
static void C_ccall f_21518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21436)
static void C_ccall f_21436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21439)
static void C_ccall f_21439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21442)
static void C_ccall f_21442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21462)
static void C_fcall f_21462(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21472)
static void C_ccall f_21472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21475)
static void C_ccall f_21475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21478)
static void C_ccall f_21478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21445)
static void C_ccall f_21445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21448)
static void C_ccall f_21448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21365)
static void C_fcall f_21365(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21359)
static void C_fcall f_21359(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21353)
static void C_fcall f_21353(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21282)
static void C_fcall f_21282(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21323)
static void C_ccall f_21323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21327)
static void C_ccall f_21327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21331)
static void C_ccall f_21331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21335)
static void C_ccall f_21335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21339)
static void C_ccall f_21339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21343)
static void C_ccall f_21343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21347)
static void C_ccall f_21347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21351)
static void C_ccall f_21351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21284)
static void C_fcall f_21284(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21290)
static void C_fcall f_21290(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21312)
static void C_ccall f_21312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21301)
static void C_ccall f_21301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21131)
static void C_fcall f_21131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21146)
static void C_fcall f_21146(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21159)
static void C_ccall f_21159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21119)
static void C_ccall f_21119(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21107)
static void C_ccall f_21107(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21095)
static void C_ccall f_21095(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21089)
static void C_fcall f_21089(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21083)
static void C_ccall f_21083(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21071)
static void C_ccall f_21071(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21059)
static void C_ccall f_21059(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21047)
static void C_ccall f_21047(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21035)
static void C_ccall f_21035(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21029)
static void C_fcall f_21029(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20993)
static void C_ccall f_20993(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20987)
static void C_ccall f_20987(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20940)
static void C_ccall f_20940(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20944)
static void C_ccall f_20944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20960)
static void C_ccall f_20960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20969)
static void C_ccall f_20969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20947)
static void C_ccall f_20947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20931)
static void C_ccall f_20931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20935)
static void C_ccall f_20935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20778)
static void C_ccall f_20778(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20778)
static void C_ccall f_20778r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20905)
static void C_fcall f_20905(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20918)
static void C_ccall f_20918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20900)
static void C_ccall f_20900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20781)
static void C_fcall f_20781(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20897)
static void C_ccall f_20897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20881)
static void C_ccall f_20881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20809)
static void C_ccall f_20809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20817)
static void C_fcall f_20817(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20827)
static void C_ccall f_20827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20830)
static void C_ccall f_20830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20812)
static void C_ccall f_20812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20601)
static void C_ccall f_20601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_20605)
static void C_ccall f_20605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20610)
static void C_ccall f_20610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20613)
static void C_fcall f_20613(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18425)
static void C_ccall f_18425(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18438)
static void C_ccall f_18438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18445)
static void C_fcall f_18445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18452)
static void C_ccall f_18452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20617)
static void C_ccall f_20617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20654)
static void C_ccall f_20654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20747)
static void C_fcall f_20747(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20757)
static void C_fcall f_20757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20660)
static void C_ccall f_20660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20717)
static void C_fcall f_20717(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20727)
static void C_fcall f_20727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20668)
static void C_ccall f_20668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20682)
static void C_ccall f_20682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20686)
static void C_ccall f_20686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20690)
static void C_ccall f_20690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20694)
static void C_ccall f_20694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20701)
static void C_ccall f_20701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20678)
static void C_ccall f_20678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20671)
static void C_ccall f_20671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20620)
static void C_ccall f_20620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19552)
static void C_ccall f_19552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19565)
static void C_ccall f_19565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19615)
static void C_ccall f_19615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19712)
static void C_ccall f_19712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19780)
static void C_ccall f_19780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20037)
static void C_ccall f_20037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19787)
static void C_fcall f_19787(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20025)
static void C_ccall f_20025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19976)
static void C_ccall f_19976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19982)
static void C_ccall f_19982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20006)
static void C_ccall f_20006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20002)
static void C_ccall f_20002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19990)
static void C_ccall f_19990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19790)
static void C_fcall f_19790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19952)
static void C_ccall f_19952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19956)
static void C_ccall f_19956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19793)
static void C_fcall f_19793(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19929)
static void C_ccall f_19929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19933)
static void C_ccall f_19933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19796)
static void C_fcall f_19796(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19906)
static void C_ccall f_19906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19910)
static void C_ccall f_19910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19799)
static void C_fcall f_19799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19831)
static void C_ccall f_19831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19849)
static void C_ccall f_19849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19867)
static void C_ccall f_19867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19885)
static void C_ccall f_19885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19802)
static void C_fcall f_19802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19806)
static void C_ccall f_19806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19716)
static void C_ccall f_19716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19720)
static void C_ccall f_19720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19724)
static void C_ccall f_19724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19619)
static void C_ccall f_19619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19623)
static void C_ccall f_19623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19627)
static void C_ccall f_19627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19646)
static void C_ccall f_19646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19650)
static void C_ccall f_19650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19630)
static void C_fcall f_19630(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19634)
static void C_ccall f_19634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19569)
static void C_ccall f_19569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19573)
static void C_ccall f_19573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19577)
static void C_ccall f_19577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19559)
static void C_fcall f_19559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19374)
static void C_fcall f_19374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19386)
static void C_fcall f_19386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19405)
static void C_ccall f_19405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19423)
static void C_fcall f_19423(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19455)
static void C_ccall f_19455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19458)
static void C_fcall f_19458(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19451)
static void C_ccall f_19451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19437)
static void C_ccall f_19437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19408)
static void C_ccall f_19408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19353)
static void C_fcall f_19353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19360)
static void C_ccall f_19360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19363)
static void C_ccall f_19363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19369)
static void C_ccall f_19369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19288)
static void C_fcall f_19288(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19297)
static void C_fcall f_19297(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19320)
static void C_ccall f_19320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19310)
static void C_fcall f_19310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19244)
static void C_fcall f_19244(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19232)
static void C_fcall f_19232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19130)
static void C_fcall f_19130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19082)
static void C_fcall f_19082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18463)
static void C_fcall f_18463(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_18467)
static void C_ccall f_18467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18896)
static void C_ccall f_18896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18892)
static void C_ccall f_18892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18888)
static void C_ccall f_18888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18473)
static void C_fcall f_18473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18596)
static void C_ccall f_18596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17829)
static void C_ccall f_17829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18602)
static void C_fcall f_18602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17845)
static void C_ccall f_17845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18690)
static void C_fcall f_18690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18760)
static void C_ccall f_18760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17861)
static void C_ccall f_17861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18763)
static void C_fcall f_18763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17893)
static void C_ccall f_17893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18841)
static void C_fcall f_18841(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18867)
static void C_ccall f_18867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18861)
static void C_ccall f_18861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18850)
static void C_ccall f_18850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18792)
static void C_fcall f_18792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18802)
static void C_ccall f_18802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18828)
static void C_ccall f_18828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18822)
static void C_ccall f_18822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18805)
static void C_ccall f_18805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18815)
static void C_ccall f_18815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18808)
static void C_fcall f_18808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18769)
static void C_ccall f_18769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18778)
static void C_ccall f_18778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18772)
static void C_fcall f_18772(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18696)
static void C_ccall f_18696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18714)
static void C_fcall f_18714(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18733)
static void C_ccall f_18733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_ccall f_18741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18724)
static void C_ccall f_18724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18699)
static void C_ccall f_18699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18633)
static void C_fcall f_18633(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18680)
static void C_ccall f_18680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18666)
static void C_ccall f_18666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18674)
static void C_ccall f_18674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18646)
static void C_ccall f_18646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18649)
static void C_fcall f_18649(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18614)
static void C_ccall f_18614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18631)
static void C_ccall f_18631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18617)
static void C_fcall f_18617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18482)
static void C_ccall f_18482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18488)
static void C_ccall f_18488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18546)
static void C_ccall f_18546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18549)
static void C_ccall f_18549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18570)
static void C_ccall f_18570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18581)
static void C_ccall f_18581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18560)
static void C_ccall f_18560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18494)
static void C_ccall f_18494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18504)
static void C_ccall f_18504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18510)
static void C_ccall f_18510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18525)
static void C_ccall f_18525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18529)
static void C_ccall f_18529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18533)
static void C_ccall f_18533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18517)
static void C_ccall f_18517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18359)
static void C_fcall f_18359(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18361)
static void C_ccall f_18361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18409)
static void C_ccall f_18409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18365)
static void C_ccall f_18365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18368)
static void C_fcall f_18368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18373)
static void C_fcall f_18373(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18394)
static void C_ccall f_18394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18351)
static void C_fcall f_18351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18353)
static void C_ccall f_18353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18143)
static void C_fcall f_18143(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18160)
static void C_ccall f_18160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18164)
static void C_ccall f_18164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18110)
static void C_fcall f_18110(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18117)
static void C_ccall f_18117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18061)
static void C_ccall f_18061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18068)
static void C_ccall f_18068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18126)
static void C_ccall f_18126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18349)
static void C_ccall f_18349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18326)
static void C_ccall f_18326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18342)
static void C_ccall f_18342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18188)
static void C_ccall f_18188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18191)
static void C_ccall f_18191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18215)
static void C_ccall f_18215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18272)
static void C_ccall f_18272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18278)
static void C_ccall f_18278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18287)
static void C_ccall f_18287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18296)
static void C_ccall f_18296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18305)
static void C_ccall f_18305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18314)
static void C_ccall f_18314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18266)
static void C_ccall f_18266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18221)
static void C_ccall f_18221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18227)
static void C_ccall f_18227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18233)
static void C_ccall f_18233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18239)
static void C_ccall f_18239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18245)
static void C_ccall f_18245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18251)
static void C_ccall f_18251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18092)
static void C_fcall f_18092(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18099)
static void C_ccall f_18099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18082)
static void C_fcall f_18082(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18070)
static void C_fcall f_18070(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18038)
static void C_fcall f_18038(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18045)
static void C_ccall f_18045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18052)
static void C_ccall f_18052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18022)
static void C_fcall f_18022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18029)
static void C_ccall f_18029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18036)
static void C_ccall f_18036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18010)
static void C_fcall f_18010(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17992)
static void C_fcall f_17992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17974)
static void C_fcall f_17974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17959)
static void C_fcall f_17959(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17953)
static void C_fcall f_17953(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17941)
static void C_fcall f_17941(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17923)
static void C_fcall f_17923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17902)
static void C_fcall f_17902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17870)
static void C_fcall f_17870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17877)
static void C_ccall f_17877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17812)
static void C_fcall f_17812(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17820)
static void C_ccall f_17820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17802)
static void C_fcall f_17802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17796)
static void C_fcall f_17796(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17784)
static void C_fcall f_17784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17781)
static void C_ccall f_17781(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17760)
static void C_fcall f_17760(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17673)
static void C_fcall f_17673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17652)
static void C_fcall f_17652(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17642)
static void C_fcall f_17642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17630)
static void C_fcall f_17630(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17601)
static void C_ccall f_17601(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17589)
static void C_fcall f_17589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17571)
static void C_fcall f_17571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17553)
static void C_fcall f_17553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17532)
static void C_ccall f_17532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16692)
static void C_ccall f_16692(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16692)
static void C_ccall f_16692r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17514)
static void C_fcall f_17514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16708)
static void C_ccall f_16708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17422)
static void C_fcall f_17422(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17445)
static void C_fcall f_17445(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17498)
static void C_ccall f_17498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17480)
static void C_fcall f_17480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17473)
static void C_ccall f_17473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17455)
static void C_ccall f_17455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17432)
static void C_ccall f_17432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16902)
static void C_ccall f_16902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17384)
static void C_fcall f_17384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17406)
static void C_ccall f_17406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17390)
static void C_ccall f_17390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17398)
static void C_ccall f_17398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17402)
static void C_ccall f_17402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17388)
static void C_ccall f_17388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17378)
static void C_ccall f_17378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16905)
static void C_fcall f_16905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17255)
static void C_fcall f_17255(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17279)
static void C_ccall f_17279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17341)
static void C_fcall f_17341(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17282)
static void C_ccall f_17282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17298)
static void C_fcall f_17298(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17323)
static void C_ccall f_17323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17289)
static void C_ccall f_17289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17266)
static void C_ccall f_17266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16908)
static void C_ccall f_16908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17241)
static void C_ccall f_17241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16912)
static void C_ccall f_16912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16963)
static void C_ccall f_16963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16966)
static void C_ccall f_16966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17222)
static void C_fcall f_17222(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17232)
static void C_ccall f_17232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16969)
static void C_ccall f_16969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17160)
static void C_fcall f_17160(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17170)
static void C_ccall f_17170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17173)
static void C_ccall f_17173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17193)
static void C_ccall f_17193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17195)
static void C_fcall f_17195(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17205)
static void C_ccall f_17205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17179)
static void C_ccall f_17179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17182)
static void C_ccall f_17182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16972)
static void C_ccall f_16972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16980)
static void C_fcall f_16980(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16993)
static void C_ccall f_16993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16860)
static void C_ccall f_16860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16869)
static void C_fcall f_16869(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16891)
static void C_ccall f_16891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16880)
static void C_ccall f_16880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16996)
static void C_ccall f_16996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17131)
static void C_ccall f_17131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17133)
static void C_fcall f_17133(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17143)
static void C_ccall f_17143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17002)
static void C_ccall f_17002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17104)
static void C_ccall f_17104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17106)
static void C_fcall f_17106(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17116)
static void C_ccall f_17116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17005)
static void C_ccall f_17005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17017)
static void C_fcall f_17017(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17043)
static void C_ccall f_17043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17049)
static void C_ccall f_17049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17055)
static void C_ccall f_17055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17065)
static void C_ccall f_17065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17067)
static void C_fcall f_17067(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17077)
static void C_ccall f_17077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17058)
static void C_ccall f_17058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17030)
static void C_ccall f_17030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17008)
static void C_ccall f_17008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_ccall f_16975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16915)
static void C_ccall f_16915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16945)
static void C_ccall f_16945(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16943)
static void C_ccall f_16943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16918)
static void C_fcall f_16918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16792)
static void C_fcall f_16792(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16840)
static void C_ccall f_16840(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16802)
static void C_ccall f_16802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16830)
static void C_ccall f_16830(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16805)
static void C_ccall f_16805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16710)
static void C_fcall f_16710(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16782)
static void C_ccall f_16782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16714)
static void C_ccall f_16714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16732)
static void C_ccall f_16732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16598)
static void C_ccall f_16598(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16602)
static void C_ccall f_16602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16631)
static void C_ccall f_16631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16636)
static void C_fcall f_16636(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16661)
static void C_fcall f_16661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16646)
static void C_ccall f_16646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16080)
static void C_ccall f_16080(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16080)
static void C_ccall f_16080r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16351)
static void C_ccall f_16351(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16355)
static void C_ccall f_16355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16360)
static void C_ccall f_16360(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16360)
static void C_ccall f_16360r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16566)
static void C_ccall f_16566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16581)
static void C_ccall f_16581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16573)
static void C_ccall f_16573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_ccall f_16537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16541)
static void C_ccall f_16541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16502)
static void C_ccall f_16502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16506)
static void C_ccall f_16506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16364)
static void C_fcall f_16364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16466)
static void C_ccall f_16466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16481)
static void C_ccall f_16481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16473)
static void C_ccall f_16473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16437)
static void C_ccall f_16437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16441)
static void C_ccall f_16441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16402)
static void C_ccall f_16402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16406)
static void C_ccall f_16406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16367)
static void C_fcall f_16367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16370)
static void C_ccall f_16370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16373)
static void C_fcall f_16373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16342)
static void C_ccall f_16342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16084)
static void C_ccall f_16084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16311)
static void C_ccall f_16311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16326)
static void C_ccall f_16326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16318)
static void C_ccall f_16318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16282)
static void C_ccall f_16282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16286)
static void C_ccall f_16286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16247)
static void C_ccall f_16247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16251)
static void C_ccall f_16251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16087)
static void C_fcall f_16087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16211)
static void C_ccall f_16211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16218)
static void C_ccall f_16218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16182)
static void C_ccall f_16182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16186)
static void C_ccall f_16186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16151)
static void C_ccall f_16151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16090)
static void C_fcall f_16090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16093)
static void C_ccall f_16093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16096)
static void C_ccall f_16096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16108)
static void C_ccall f_16108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16126)
static void C_ccall f_16126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16114)
static void C_ccall f_16114(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16102)
static void C_ccall f_16102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16017)
static void C_fcall f_16017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15677)
static void C_ccall f_15677(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15859)
static void C_ccall f_15859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15863)
static void C_ccall f_15863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15865)
static void C_fcall f_15865(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15790)
static void C_fcall f_15790(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15800)
static void C_fcall f_15800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15807)
static void C_fcall f_15807(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15875)
static void C_ccall f_15875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15878)
static void C_ccall f_15878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15882)
static void C_ccall f_15882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15902)
static void C_fcall f_15902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15918)
static void C_ccall f_15918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15885)
static void C_ccall f_15885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15680)
static void C_fcall f_15680(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15692)
static void C_fcall f_15692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15728)
static void C_ccall f_15728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15748)
static void C_ccall f_15748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15753)
static void C_fcall f_15753(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15190)
static void C_ccall f_15190(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15190)
static void C_ccall f_15190r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15117)
static void C_fcall f_15117(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14962)
static void C_ccall f_14962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14968)
static void C_ccall f_14968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15053)
static void C_fcall f_15053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14980)
static void C_ccall f_14980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14996)
static void C_ccall f_14996(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15000)
static void C_fcall f_15000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15003)
static void C_fcall f_15003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14983)
static void C_ccall f_14983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14994)
static void C_ccall f_14994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15134)
static void C_ccall f_15134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15671)
static void C_ccall f_15671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15194)
static void C_ccall f_15194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15640)
static void C_ccall f_15640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15655)
static void C_ccall f_15655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15647)
static void C_ccall f_15647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15611)
static void C_ccall f_15611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15615)
static void C_ccall f_15615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15576)
static void C_ccall f_15576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15580)
static void C_ccall f_15580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15541)
static void C_ccall f_15541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15545)
static void C_ccall f_15545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15197)
static void C_fcall f_15197(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15505)
static void C_ccall f_15505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15520)
static void C_ccall f_15520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15512)
static void C_ccall f_15512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15476)
static void C_ccall f_15476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15441)
static void C_ccall f_15441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15445)
static void C_ccall f_15445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15200)
static void C_fcall f_15200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15370)
static void C_ccall f_15370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15385)
static void C_ccall f_15385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15377)
static void C_ccall f_15377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15341)
static void C_ccall f_15341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15345)
static void C_ccall f_15345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15310)
static void C_ccall f_15310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15271)
static void C_ccall f_15271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15275)
static void C_ccall f_15275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15203)
static void C_fcall f_15203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15206)
static void C_ccall f_15206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15209)
static void C_ccall f_15209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15242)
static void C_ccall f_15242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15250)
static void C_ccall f_15250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15228)
static void C_ccall f_15228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15218)
static void C_fcall f_15218(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15221)
static void C_ccall f_15221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14757)
static void C_ccall f_14757(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14761)
static void C_ccall f_14761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14764)
static void C_ccall f_14764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14767)
static void C_ccall f_14767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14936)
static void C_ccall f_14936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14949)
static void C_ccall f_14949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_ccall f_14953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14773)
static void C_ccall f_14773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14929)
static void C_ccall f_14929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14910)
static void C_ccall f_14910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14917)
static void C_ccall f_14917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14921)
static void C_ccall f_14921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14779)
static void C_fcall f_14779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14785)
static void C_ccall f_14785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14869)
static void C_ccall f_14869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14871)
static void C_fcall f_14871(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14893)
static void C_ccall f_14893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14900)
static void C_ccall f_14900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14904)
static void C_ccall f_14904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14890)
static void C_fcall f_14890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14886)
static void C_ccall f_14886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14827)
static void C_ccall f_14827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14844)
static void C_fcall f_14844(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14854)
static void C_ccall f_14854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14830)
static void C_ccall f_14830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14789)
static void C_fcall f_14789(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14797)
static void C_ccall f_14797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14799)
static void C_fcall f_14799(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14820)
static void C_ccall f_14820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14645)
static void C_fcall f_14645(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14755)
static void C_ccall f_14755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14714)
static void C_fcall f_14714(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14747)
static void C_ccall f_14747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14743)
static void C_ccall f_14743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14728)
static void C_ccall f_14728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14652)
static void C_ccall f_14652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14660)
static void C_fcall f_14660(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14705)
static void C_ccall f_14705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14693)
static void C_ccall f_14693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14677)
static void C_ccall f_14677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13878)
static void C_ccall f_13878(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13878)
static void C_ccall f_13878r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14195)
static void C_ccall f_14195(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14202)
static void C_fcall f_14202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14622)
static void C_ccall f_14622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14614)
static void C_ccall f_14614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14578)
static void C_ccall f_14578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14582)
static void C_ccall f_14582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14543)
static void C_ccall f_14543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14547)
static void C_ccall f_14547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14508)
static void C_ccall f_14508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14512)
static void C_ccall f_14512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14205)
static void C_fcall f_14205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14472)
static void C_ccall f_14472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14487)
static void C_ccall f_14487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14479)
static void C_ccall f_14479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14443)
static void C_ccall f_14443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14447)
static void C_ccall f_14447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14408)
static void C_ccall f_14408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14412)
static void C_ccall f_14412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14373)
static void C_ccall f_14373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14377)
static void C_ccall f_14377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14208)
static void C_fcall f_14208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14337)
static void C_ccall f_14337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14352)
static void C_ccall f_14352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14344)
static void C_ccall f_14344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14308)
static void C_ccall f_14308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14312)
static void C_ccall f_14312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14273)
static void C_ccall f_14273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14277)
static void C_ccall f_14277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14238)
static void C_ccall f_14238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14242)
static void C_ccall f_14242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14211)
static void C_fcall f_14211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14214)
static void C_ccall f_14214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13882)
static void C_ccall f_13882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13885)
static void C_ccall f_13885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14159)
static void C_ccall f_14159(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14163)
static void C_ccall f_14163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14166)
static void C_ccall f_14166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14169)
static void C_ccall f_14169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14172)
static void C_ccall f_14172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14185)
static void C_ccall f_14185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14175)
static void C_fcall f_14175(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13891)
static void C_ccall f_13891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13898)
static void C_fcall f_13898(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14144)
static void C_ccall f_14144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14136)
static void C_ccall f_14136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14100)
static void C_ccall f_14100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14104)
static void C_ccall f_14104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14065)
static void C_ccall f_14065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14069)
static void C_ccall f_14069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13901)
static void C_fcall f_13901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14029)
static void C_ccall f_14029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14044)
static void C_ccall f_14044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14036)
static void C_ccall f_14036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14000)
static void C_ccall f_14000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14004)
static void C_ccall f_14004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13965)
static void C_ccall f_13965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13969)
static void C_ccall f_13969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13904)
static void C_fcall f_13904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13907)
static void C_ccall f_13907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13922)
static void C_ccall f_13922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13944)
static void C_ccall f_13944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13928)
static void C_ccall f_13928(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13936)
static void C_ccall f_13936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13910)
static void C_ccall f_13910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13913)
static void C_ccall f_13913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13795)
static void C_fcall f_13795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13786)
static void C_fcall f_13786(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13777)
static void C_fcall f_13777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13759)
static void C_fcall f_13759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13741)
static void C_fcall f_13741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13723)
static void C_fcall f_13723(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13714)
static void C_fcall f_13714(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13705)
static void C_fcall f_13705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13533)
static void C_ccall f_13533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13678)
static void C_ccall f_13678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13559)
static void C_ccall f_13559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13674)
static void C_ccall f_13674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13659)
static void C_ccall f_13659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13640)
static void C_ccall f_13640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13613)
static void C_ccall f_13613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13566)
static void C_ccall f_13566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13536)
static void C_fcall f_13536(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13486)
static void C_ccall f_13486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_13492)
static void C_fcall f_13492(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13508)
static void C_ccall f_13508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13511)
static void C_ccall f_13511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13009)
static void C_ccall f_13009(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13009)
static void C_ccall f_13009r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13473)
static void C_ccall f_13473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13013)
static void C_fcall f_13013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13445)
static void C_ccall f_13445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13460)
static void C_ccall f_13460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13452)
static void C_ccall f_13452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13416)
static void C_ccall f_13416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13420)
static void C_ccall f_13420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13381)
static void C_ccall f_13381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13385)
static void C_ccall f_13385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13346)
static void C_ccall f_13346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13350)
static void C_ccall f_13350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13016)
static void C_fcall f_13016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13310)
static void C_ccall f_13310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13325)
static void C_ccall f_13325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13317)
static void C_ccall f_13317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13281)
static void C_ccall f_13281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13285)
static void C_ccall f_13285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13246)
static void C_ccall f_13246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13250)
static void C_ccall f_13250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13211)
static void C_ccall f_13211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13215)
static void C_ccall f_13215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13019)
static void C_fcall f_13019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13175)
static void C_ccall f_13175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13190)
static void C_ccall f_13190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13182)
static void C_ccall f_13182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13146)
static void C_ccall f_13146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13150)
static void C_ccall f_13150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13111)
static void C_ccall f_13111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13115)
static void C_ccall f_13115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13076)
static void C_ccall f_13076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13080)
static void C_ccall f_13080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13022)
static void C_fcall f_13022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13025)
static void C_ccall f_13025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13028)
static void C_ccall f_13028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13043)
static void C_ccall f_13043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13055)
static void C_ccall f_13055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13037)
static void C_ccall f_13037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12933)
static void C_ccall f_12933(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12937)
static void C_ccall f_12937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12956)
static void C_ccall f_12956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12966)
static void C_ccall f_12966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12968)
static void C_fcall f_12968(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12985)
static void C_ccall f_12985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12988)
static void C_ccall f_12988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12999)
static void C_ccall f_12999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12940)
static void C_ccall f_12940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12670)
static void C_ccall f_12670(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12670)
static void C_ccall f_12670r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12923)
static void C_ccall f_12923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12674)
static void C_fcall f_12674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12895)
static void C_ccall f_12895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12910)
static void C_ccall f_12910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12902)
static void C_ccall f_12902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12866)
static void C_ccall f_12866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12870)
static void C_ccall f_12870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12831)
static void C_ccall f_12831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12835)
static void C_ccall f_12835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12677)
static void C_fcall f_12677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12795)
static void C_ccall f_12795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12810)
static void C_ccall f_12810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12802)
static void C_ccall f_12802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12766)
static void C_ccall f_12766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12770)
static void C_ccall f_12770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12731)
static void C_ccall f_12731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12735)
static void C_ccall f_12735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12680)
static void C_fcall f_12680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12683)
static void C_ccall f_12683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12686)
static void C_ccall f_12686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12698)
static void C_ccall f_12698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12710)
static void C_ccall f_12710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12692)
static void C_ccall f_12692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12634)
static void C_ccall f_12634(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12638)
static void C_ccall f_12638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12660)
static void C_ccall f_12660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_ccall f_12654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12647)
static void C_ccall f_12647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12387)
static void C_ccall f_12387(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12387)
static void C_ccall f_12387r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12391)
static void C_fcall f_12391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12604)
static void C_ccall f_12604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12619)
static void C_ccall f_12619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12611)
static void C_ccall f_12611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12575)
static void C_ccall f_12575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12579)
static void C_ccall f_12579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12540)
static void C_ccall f_12540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12544)
static void C_ccall f_12544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12394)
static void C_fcall f_12394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12504)
static void C_ccall f_12504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12519)
static void C_ccall f_12519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12511)
static void C_ccall f_12511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12475)
static void C_ccall f_12475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12479)
static void C_ccall f_12479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12440)
static void C_ccall f_12440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12444)
static void C_ccall f_12444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12397)
static void C_fcall f_12397(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12400)
static void C_ccall f_12400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12403)
static void C_ccall f_12403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12411)
static void C_ccall f_12411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12419)
static void C_ccall f_12419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12409)
static void C_ccall f_12409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12172)
static void C_ccall f_12172(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12176)
static void C_ccall f_12176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12385)
static void C_ccall f_12385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12338)
static void C_ccall f_12338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12350)
static void C_fcall f_12350(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12206)
static void C_ccall f_12206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12209)
static void C_ccall f_12209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12215)
static void C_ccall f_12215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12218)
static void C_ccall f_12218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12306)
static void C_fcall f_12306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12221)
static void C_fcall f_12221(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12300)
static void C_ccall f_12300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12227)
static void C_ccall f_12227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12230)
static void C_ccall f_12230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12182)
static void C_ccall f_12182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12185)
static void C_ccall f_12185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12192)
static void C_ccall f_12192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11702)
static void C_ccall f_11702(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11702)
static void C_ccall f_11702r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11706)
static void C_fcall f_11706(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12142)
static void C_ccall f_12142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12157)
static void C_ccall f_12157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12149)
static void C_ccall f_12149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12113)
static void C_ccall f_12113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12117)
static void C_ccall f_12117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12078)
static void C_ccall f_12078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12082)
static void C_ccall f_12082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12043)
static void C_ccall f_12043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12047)
static void C_ccall f_12047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11709)
static void C_fcall f_11709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12007)
static void C_ccall f_12007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12022)
static void C_ccall f_12022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12014)
static void C_ccall f_12014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11978)
static void C_ccall f_11978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11982)
static void C_ccall f_11982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11943)
static void C_ccall f_11943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11947)
static void C_ccall f_11947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11908)
static void C_ccall f_11908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11912)
static void C_ccall f_11912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11712)
static void C_fcall f_11712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11872)
static void C_ccall f_11872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11887)
static void C_ccall f_11887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11879)
static void C_ccall f_11879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11843)
static void C_ccall f_11843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11847)
static void C_ccall f_11847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11808)
static void C_ccall f_11808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11812)
static void C_ccall f_11812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11773)
static void C_ccall f_11773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11777)
static void C_ccall f_11777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11715)
static void C_fcall f_11715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11718)
static void C_ccall f_11718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11721)
static void C_ccall f_11721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11744)
static void C_ccall f_11744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11752)
static void C_ccall f_11752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11727)
static void C_ccall f_11727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11730)
static void C_ccall f_11730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11622)
static void C_fcall f_11622(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11613)
static void C_fcall f_11613(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11541)
static void C_ccall f_11541(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11545)
static void C_ccall f_11545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11548)
static void C_fcall f_11548(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11286)
static void C_ccall f_11286(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11286)
static void C_ccall f_11286r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11290)
static void C_fcall f_11290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11511)
static void C_ccall f_11511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11526)
static void C_ccall f_11526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11518)
static void C_ccall f_11518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11482)
static void C_ccall f_11482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11486)
static void C_ccall f_11486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11447)
static void C_ccall f_11447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11451)
static void C_ccall f_11451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11293)
static void C_fcall f_11293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11411)
static void C_ccall f_11411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11426)
static void C_ccall f_11426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11418)
static void C_ccall f_11418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11382)
static void C_ccall f_11382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11386)
static void C_ccall f_11386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11347)
static void C_ccall f_11347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11351)
static void C_ccall f_11351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11296)
static void C_fcall f_11296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11299)
static void C_ccall f_11299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11302)
static void C_ccall f_11302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11314)
static void C_ccall f_11314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11326)
static void C_ccall f_11326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11308)
static void C_ccall f_11308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11171)
static void C_fcall f_11171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11284)
static void C_ccall f_11284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11181)
static void C_ccall f_11181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11269)
static void C_ccall f_11269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11276)
static void C_ccall f_11276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11184)
static void C_ccall f_11184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11266)
static void C_ccall f_11266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11192)
static void C_ccall f_11192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11256)
static void C_ccall f_11256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11201)
static void C_ccall f_11201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11220)
static void C_ccall f_11220(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11249)
static void C_ccall f_11249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11230)
static void C_ccall f_11230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11245)
static void C_ccall f_11245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11233)
static void C_ccall f_11233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11204)
static void C_ccall f_11204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11214)
static void C_ccall f_11214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11195)
static void C_fcall f_11195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11198)
static void C_ccall f_11198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11125)
static void C_fcall f_11125(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11116)
static void C_fcall f_11116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10815)
static void C_fcall f_10815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10822)
static void C_ccall f_10822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11111)
static void C_ccall f_11111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10825)
static void C_ccall f_10825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11096)
static void C_ccall f_11096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11088)
static void C_ccall f_11088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11080)
static void C_ccall f_11080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11083)
static void C_ccall f_11083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11051)
static void C_fcall f_11051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11074)
static void C_ccall f_11074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11057)
static void C_fcall f_11057(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11061)
static void C_ccall f_11061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10828)
static void C_ccall f_10828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10834)
static void C_ccall f_10834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10926)
static void C_ccall f_10926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11038)
static void C_ccall f_11038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11045)
static void C_ccall f_11045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10949)
static void C_fcall f_10949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10951)
static void C_fcall f_10951(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11000)
static void C_fcall f_11000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11035)
static void C_ccall f_11035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11024)
static void C_ccall f_11024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11169)
static void C_ccall f_11169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11144)
static void C_ccall f_11144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11165)
static void C_ccall f_11165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11161)
static void C_ccall f_11161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11153)
static void C_ccall f_11153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11017)
static void C_ccall f_11017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11010)
static void C_ccall f_11010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10958)
static void C_ccall f_10958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10998)
static void C_ccall f_10998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10962)
static void C_ccall f_10962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10994)
static void C_ccall f_10994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10981)
static void C_ccall f_10981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10989)
static void C_ccall f_10989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10985)
static void C_ccall f_10985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10965)
static void C_fcall f_10965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10968)
static void C_ccall f_10968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10942)
static void C_ccall f_10942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10929)
static void C_ccall f_10929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10938)
static void C_ccall f_10938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10933)
static void C_ccall f_10933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10840)
static void C_ccall f_10840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10920)
static void C_ccall f_10920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10900)
static void C_ccall f_10900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10906)
static void C_ccall f_10906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10917)
static void C_ccall f_10917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10897)
static void C_ccall f_10897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10885)
static void C_ccall f_10885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10888)
static void C_ccall f_10888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10843)
static void C_ccall f_10843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10879)
static void C_ccall f_10879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10874)
static void C_ccall f_10874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10846)
static void C_ccall f_10846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10859)
static void C_ccall f_10859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10849)
static void C_fcall f_10849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10852)
static void C_ccall f_10852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10855)
static void C_ccall f_10855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10692)
static void C_ccall f_10692(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10692)
static void C_ccall f_10692r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10751)
static void C_ccall f_10751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10761)
static void C_ccall f_10761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10763)
static void C_fcall f_10763(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10792)
static void C_ccall f_10792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10797)
static void C_ccall f_10797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10782)
static void C_fcall f_10782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10713)
static void C_fcall f_10713(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10745)
static void C_ccall f_10745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10673)
static void C_ccall f_10673(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10680)
static void C_ccall f_10680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10687)
static void C_ccall f_10687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10654)
static void C_ccall f_10654(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10661)
static void C_ccall f_10661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10474)
static void C_fcall f_10474(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_10478)
static void C_ccall f_10478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10481)
static void C_ccall f_10481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10484)
static void C_ccall f_10484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10487)
static void C_ccall f_10487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10644)
static void C_ccall f_10644(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10651)
static void C_ccall f_10651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10490)
static void C_ccall f_10490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10493)
static void C_fcall f_10493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10499)
static void C_ccall f_10499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10505)
static void C_ccall f_10505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10582)
static void C_ccall f_10582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10508)
static void C_fcall f_10508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10511)
static void C_ccall f_10511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10517)
static void C_fcall f_10517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10530)
static void C_ccall f_10530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10520)
static void C_ccall f_10520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10523)
static void C_ccall f_10523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10464)
static void C_fcall f_10464(C_word t0) C_noret;
C_noret_decl(f_10409)
static void C_fcall f_10409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10400)
static void C_fcall f_10400(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10283)
static void C_fcall f_10283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10274)
static void C_fcall f_10274(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10265)
static void C_ccall f_10265(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10256)
static void C_fcall f_10256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10247)
static void C_fcall f_10247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10229)
static void C_fcall f_10229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10220)
static void C_fcall f_10220(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10211)
static void C_fcall f_10211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10193)
static void C_fcall f_10193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10184)
static void C_fcall f_10184(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10175)
static void C_fcall f_10175(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10160)
static void C_fcall f_10160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10115)
static void C_fcall f_10115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10097)
static void C_fcall f_10097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10088)
static void C_fcall f_10088(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10061)
static void C_fcall f_10061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10043)
static void C_fcall f_10043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10025)
static void C_fcall f_10025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10016)
static void C_fcall f_10016(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10004)
static void C_fcall f_10004(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_9696)
static void C_ccall f_9696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9846)
static void C_ccall f_9846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9842)
static void C_ccall f_9842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9814)
static void C_ccall f_9814(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9749)
static void C_fcall f_9749(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9758)
static void C_fcall f_9758(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9742)
static void C_ccall f_9742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9561)
static void C_ccall f_9561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9687)
static void C_ccall f_9687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9683)
static void C_ccall f_9683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9661)
static void C_ccall f_9661(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9591)
static void C_fcall f_9591(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9607)
static void C_fcall f_9607(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9516)
static void C_ccall f_9516(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9559)
static void C_ccall f_9559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9548)
static void C_ccall f_9548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9400)
static void C_ccall f_9400(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9514)
static void C_ccall f_9514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9415)
static void C_fcall f_9415(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9445)
static void C_fcall f_9445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9464)
static void C_ccall f_9464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9449)
static void C_ccall f_9449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9428)
static void C_fcall f_9428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9278)
static void C_ccall f_9278(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9398)
static void C_ccall f_9398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9293)
static void C_fcall f_9293(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9323)
static void C_fcall f_9323(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9342)
static void C_ccall f_9342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9327)
static void C_ccall f_9327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9306)
static void C_fcall f_9306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9181)
static void C_ccall f_9181(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9276)
static void C_ccall f_9276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9196)
static void C_fcall f_9196(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9242)
static void C_ccall f_9242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9227)
static void C_ccall f_9227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9209)
static void C_fcall f_9209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9128)
static void C_fcall f_9128(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9166)
static void C_ccall f_9166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9173)
static void C_ccall f_9173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9151)
static void C_ccall f_9151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9126)
static void C_ccall f_9126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9098)
static void C_fcall f_9098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9100)
static void C_ccall f_9100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9078)
static void C_ccall f_9078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9026)
static void C_fcall f_9026(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9063)
static void C_ccall f_9063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9030)
static void C_ccall f_9030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9046)
static void C_ccall f_9046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9048)
static void C_ccall f_9048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8812)
static void C_ccall f_8812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8812)
static void C_ccall f_8812r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8825)
static void C_fcall f_8825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8907)
static void C_fcall f_8907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8910)
static void C_ccall f_8910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8918)
static void C_fcall f_8918(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8930)
static void C_fcall f_8930(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8951)
static void C_ccall f_8951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8959)
static void C_ccall f_8959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8846)
static void C_ccall f_8846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8851)
static void C_fcall f_8851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8883)
static void C_ccall f_8883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8791)
static void C_ccall f_8791(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8791)
static void C_ccall f_8791r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8772)
static void C_ccall f_8772(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8772)
static void C_ccall f_8772r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8731)
static void C_ccall f_8731(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8731)
static void C_ccall f_8731r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8689)
static void C_ccall f_8689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8704)
static void C_ccall f_8704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8696)
static void C_ccall f_8696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8660)
static void C_ccall f_8660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8664)
static void C_ccall f_8664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8625)
static void C_ccall f_8625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8629)
static void C_ccall f_8629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8488)
static void C_fcall f_8488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8589)
static void C_ccall f_8589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8604)
static void C_ccall f_8604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8596)
static void C_ccall f_8596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8560)
static void C_ccall f_8560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8564)
static void C_ccall f_8564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8525)
static void C_ccall f_8525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8529)
static void C_ccall f_8529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8491)
static void C_fcall f_8491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8494)
static void C_ccall f_8494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8497)
static void C_fcall f_8497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8382)
static void C_ccall f_8382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8382)
static void C_ccall f_8382r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8386)
static void C_fcall f_8386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8389)
static void C_ccall f_8389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8454)
static void C_ccall f_8454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8391)
static void C_fcall f_8391(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8407)
static void C_ccall f_8407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8359)
static void C_ccall f_8359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8374)
static void C_ccall f_8374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8366)
static void C_ccall f_8366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8330)
static void C_ccall f_8330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8334)
static void C_ccall f_8334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8295)
static void C_ccall f_8295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8299)
static void C_ccall f_8299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8158)
static void C_fcall f_8158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8259)
static void C_ccall f_8259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8274)
static void C_ccall f_8274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8266)
static void C_ccall f_8266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8230)
static void C_ccall f_8230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8234)
static void C_ccall f_8234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8195)
static void C_ccall f_8195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8199)
static void C_ccall f_8199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8161)
static void C_fcall f_8161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8164)
static void C_ccall f_8164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8174)
static void C_ccall f_8174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8144)
static void C_ccall f_8144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8129)
static void C_ccall f_8129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8090)
static void C_ccall f_8090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8055)
static void C_ccall f_8055(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8055)
static void C_ccall f_8055r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8059)
static void C_fcall f_8059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7947)
static void C_ccall f_7947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7947)
static void C_ccall f_7947r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8034)
static void C_ccall f_8034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7954)
static void C_fcall f_7954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7963)
static void C_fcall f_7963(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8010)
static void C_ccall f_8010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7976)
static void C_fcall f_7976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8002)
static void C_ccall f_8002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7814)
static void C_ccall f_7814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_7814)
static void C_ccall f_7814r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_7818)
static void C_fcall f_7818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7821)
static void C_fcall f_7821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7925)
static void C_ccall f_7925(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7823)
static void C_fcall f_7823(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7830)
static void C_ccall f_7830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7872)
static void C_ccall f_7872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7879)
static void C_ccall f_7879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7853)
static void C_ccall f_7853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7747)
static void C_ccall f_7747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_7747)
static void C_ccall f_7747r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_7751)
static void C_fcall f_7751(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7797)
static void C_ccall f_7797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7754)
static void C_fcall f_7754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7790)
static void C_ccall f_7790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7757)
static void C_fcall f_7757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7770)
static void C_ccall f_7770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7701)
static void C_ccall f_7701(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7701)
static void C_ccall f_7701r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7705)
static void C_ccall f_7705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7615)
static void C_fcall f_7615(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7619)
static void C_ccall f_7619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7622)
static void C_ccall f_7622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7631)
static void C_fcall f_7631(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7653)
static void C_ccall f_7653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7600)
static void C_ccall f_7600(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7585)
static void C_ccall f_7585(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7349)
static void C_ccall f_7349(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7349)
static void C_ccall f_7349r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7562)
static void C_ccall f_7562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7577)
static void C_ccall f_7577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7569)
static void C_ccall f_7569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7533)
static void C_ccall f_7533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7537)
static void C_ccall f_7537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7498)
static void C_ccall f_7498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7502)
static void C_ccall f_7502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7353)
static void C_fcall f_7353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7462)
static void C_ccall f_7462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7477)
static void C_ccall f_7477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7469)
static void C_ccall f_7469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7433)
static void C_ccall f_7433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7437)
static void C_ccall f_7437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7398)
static void C_ccall f_7398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7402)
static void C_ccall f_7402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7356)
static void C_fcall f_7356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7359)
static void C_ccall f_7359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7370)
static void C_ccall f_7370(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7309)
static void C_ccall f_7309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7313)
static void C_ccall f_7313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7343)
static void C_ccall f_7343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7324)
static void C_ccall f_7324(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7332)
static void C_ccall f_7332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7288)
static void C_ccall f_7288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7300)
static void C_ccall f_7300(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7205)
static void C_ccall f_7205(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7094)
static void C_ccall f_7094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7094)
static void C_ccall f_7094r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_7169)
static void C_ccall f_7169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7098)
static void C_fcall f_7098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7138)
static void C_ccall f_7138(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7127)
static void C_ccall f_7127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7112)
static void C_ccall f_7112(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7120)
static void C_ccall f_7120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7060)
static void C_ccall f_7060(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7060)
static void C_ccall f_7060r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7072)
static void C_ccall f_7072(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7057)
static void C_ccall f_7057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7054)
static void C_ccall f_7054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7047)
static void C_fcall f_7047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7044)
static void C_ccall f_7044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7037)
static void C_fcall f_7037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7019)
static void C_fcall f_7019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7008)
static void C_fcall f_7008(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7005)
static void C_ccall f_7005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7002)
static void C_ccall f_7002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6999)
static void C_ccall f_6999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6970)
static void C_fcall f_6970(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6963)
static void C_fcall f_6963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6960)
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6939)
static void C_fcall f_6939(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6920)
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6901)
static void C_ccall f_6901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6894)
static void C_ccall f_6894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6887)
static void C_ccall f_6887(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6872)
static void C_fcall f_6872(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6861)
static void C_fcall f_6861(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6843)
static void C_ccall f_6843(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6816)
static void C_fcall f_6816(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6789)
static void C_fcall f_6789(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6748)
static void C_fcall f_6748(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6754)
static void C_fcall f_6754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6764)
static void C_fcall f_6764(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6662)
static void C_ccall f_6662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6662)
static void C_ccall f_6662r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6563)
static void C_ccall f_6563(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6563)
static void C_ccall f_6563r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6567)
static void C_ccall f_6567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6592)
static void C_fcall f_6592(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6609)
static void C_ccall f_6609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6569)
static void C_fcall f_6569(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6586)
static void C_ccall f_6586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6553)
static void C_ccall f_6553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6513)
static void C_ccall f_6513(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6513)
static void C_ccall f_6513r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6543)
static void C_ccall f_6543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6375)
static void C_ccall f_6375(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6409)
static void C_ccall f_6409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6352)
static void C_ccall f_6352(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6346)
static void C_ccall f_6346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6331)
static void C_ccall f_6331(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6317)
static void C_ccall f_6317(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6307)
static void C_ccall f_6307(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6297)
static void C_ccall f_6297(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6287)
static void C_ccall f_6287(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6277)
static void C_ccall f_6277(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6248)
static void C_ccall f_6248(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6248)
static void C_ccall f_6248r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6257)
static void C_ccall f_6257(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6262)
static void C_ccall f_6262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6237)
static void C_ccall f_6237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6242)
static void C_ccall f_6242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5944)
static void C_ccall f_5944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5954)
static void C_ccall f_5954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6205)
static void C_ccall f_6205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5957)
static void C_ccall f_5957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5960)
static void C_ccall f_5960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5975)
static void C_fcall f_5975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5985)
static void C_ccall f_5985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5987)
static void C_fcall f_5987(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6046)
static void C_ccall f_6046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6056)
static void C_ccall f_6056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6173)
static void C_ccall f_6173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6161)
static void C_ccall f_6161(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6159)
static void C_ccall f_6159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6146)
static void C_ccall f_6146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6100)
static void C_ccall f_6100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6127)
static void C_ccall f_6127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6106)
static void C_ccall f_6106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6040)
static void C_fcall f_6040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5999)
static void C_fcall f_5999(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6012)
static void C_fcall f_6012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6222)
static void C_ccall f_6222(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6213)
static void C_ccall f_6213(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6221)
static void C_ccall f_6221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6224)
static void C_ccall f_6224(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6224)
static void C_ccall f_6224r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6232)
static void C_ccall f_6232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5646)
static void C_ccall f_5646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5899)
static void C_ccall f_5899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5932)
static void C_ccall f_5932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5928)
static void C_ccall f_5928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5917)
static void C_ccall f_5917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5913)
static void C_ccall f_5913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5807)
static void C_ccall f_5807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5810)
static void C_ccall f_5810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5813)
static void C_ccall f_5813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5893)
static void C_ccall f_5893(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5718)
static void C_ccall f_5718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5659)
static void C_ccall f_5659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5816)
static void C_ccall f_5816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5823)
static void C_ccall f_5823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5883)
static void C_ccall f_5883(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5869)
static void C_ccall f_5869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5835)
static void C_ccall f_5835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5861)
static void C_ccall f_5861(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5796)
static void C_ccall f_5796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5843)
static void C_ccall f_5843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5839)
static void C_ccall f_5839(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_35311)
static void C_fcall trf_35311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35311(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35311(t0,t1,t2);}

C_noret_decl(trf_35371)
static void C_fcall trf_35371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35371(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_35371(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_35391)
static void C_fcall trf_35391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35391(t0,t1);}

C_noret_decl(trf_35394)
static void C_fcall trf_35394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35394(t0,t1);}

C_noret_decl(trf_35265)
static void C_fcall trf_35265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35265(t0,t1);}

C_noret_decl(trf_35187)
static void C_fcall trf_35187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35187(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35187(t0,t1,t2);}

C_noret_decl(trf_34999)
static void C_fcall trf_34999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34999(t0,t1);}

C_noret_decl(trf_33881)
static void C_fcall trf_33881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33881(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33881(t0,t1);}

C_noret_decl(trf_33754)
static void C_fcall trf_33754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33754(t0,t1,t2);}

C_noret_decl(trf_33438)
static void C_fcall trf_33438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33438(t0,t1);}

C_noret_decl(trf_32533)
static void C_fcall trf_32533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32533(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32533(t0,t1,t2);}

C_noret_decl(trf_32568)
static void C_fcall trf_32568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32568(t0,t1);}

C_noret_decl(trf_32592)
static void C_fcall trf_32592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32592(t0,t1);}

C_noret_decl(trf_32571)
static void C_fcall trf_32571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32571(t0,t1);}

C_noret_decl(trf_32374)
static void C_fcall trf_32374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32374(t0,t1);}

C_noret_decl(trf_32192)
static void C_fcall trf_32192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32192(t0,t1);}

C_noret_decl(trf_32199)
static void C_fcall trf_32199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32199(t0,t1);}

C_noret_decl(trf_32180)
static void C_fcall trf_32180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32180(t0,t1);}

C_noret_decl(trf_20100)
static void C_fcall trf_20100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20100(t0,t1);}

C_noret_decl(trf_20107)
static void C_fcall trf_20107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20107(t0,t1);}

C_noret_decl(trf_20405)
static void C_fcall trf_20405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20405(t0,t1,t2);}

C_noret_decl(trf_20428)
static void C_fcall trf_20428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20428(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20428(t0,t1,t2);}

C_noret_decl(trf_20445)
static void C_fcall trf_20445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20445(t0,t1);}

C_noret_decl(trf_20448)
static void C_fcall trf_20448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20448(t0,t1);}

C_noret_decl(trf_20451)
static void C_fcall trf_20451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20451(t0,t1);}

C_noret_decl(trf_20369)
static void C_fcall trf_20369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20369(t0,t1,t2);}

C_noret_decl(trf_20313)
static void C_fcall trf_20313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20313(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20313(t0,t1,t2);}

C_noret_decl(trf_20329)
static void C_fcall trf_20329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20329(t0,t1);}

C_noret_decl(trf_20123)
static void C_fcall trf_20123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20123(t0,t1);}

C_noret_decl(trf_20126)
static void C_fcall trf_20126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20126(t0,t1);}

C_noret_decl(trf_31689)
static void C_fcall trf_31689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31689(t0,t1);}

C_noret_decl(trf_31692)
static void C_fcall trf_31692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31692(t0,t1);}

C_noret_decl(trf_31535)
static void C_fcall trf_31535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31535(t0,t1);}

C_noret_decl(trf_31343)
static void C_fcall trf_31343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31343(t0,t1);}

C_noret_decl(trf_31193)
static void C_fcall trf_31193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31193(t0,t1);}

C_noret_decl(trf_31282)
static void C_fcall trf_31282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31282(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31282(t0,t1);}

C_noret_decl(trf_31196)
static void C_fcall trf_31196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31196(t0,t1);}

C_noret_decl(trf_31212)
static void C_fcall trf_31212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31212(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_31212(t0,t1,t2,t3);}

C_noret_decl(trf_31234)
static void C_fcall trf_31234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31234(t0,t1);}

C_noret_decl(trf_31129)
static void C_fcall trf_31129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31129(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31129(t0,t1,t2);}

C_noret_decl(trf_31076)
static void C_fcall trf_31076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31076(t0,t1);}

C_noret_decl(trf_24520)
static void C_fcall trf_24520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24520(t0,t1);}

C_noret_decl(trf_24382)
static void C_fcall trf_24382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24382(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24382(t0,t1);}

C_noret_decl(trf_24596)
static void C_fcall trf_24596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24596(t0,t1);}

C_noret_decl(trf_30680)
static void C_fcall trf_30680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30680(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30680(t0,t1,t2);}

C_noret_decl(trf_30708)
static void C_fcall trf_30708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30708(t0,t1);}

C_noret_decl(trf_30411)
static void C_fcall trf_30411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30411(t0,t1);}

C_noret_decl(trf_30575)
static void C_fcall trf_30575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30575(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30575(t0,t1);}

C_noret_decl(trf_30424)
static void C_fcall trf_30424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30424(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30424(t0,t1);}

C_noret_decl(trf_30659)
static void C_fcall trf_30659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30659(t0,t1);}

C_noret_decl(trf_30349)
static void C_fcall trf_30349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30349(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30349(t0,t1,t2);}

C_noret_decl(trf_30290)
static void C_fcall trf_30290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30290(t0,t1);}

C_noret_decl(trf_30226)
static void C_fcall trf_30226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30226(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30226(t0,t1,t2);}

C_noret_decl(trf_30146)
static void C_fcall trf_30146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30146(t0,t1);}

C_noret_decl(trf_30072)
static void C_fcall trf_30072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30072(t0,t1);}

C_noret_decl(trf_30067)
static void C_fcall trf_30067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30067(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30067(t0,t1,t2);}

C_noret_decl(trf_29955)
static void C_fcall trf_29955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29955(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29955(t0,t1,t2,t3);}

C_noret_decl(trf_30026)
static void C_fcall trf_30026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30026(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30026(t0,t1,t2);}

C_noret_decl(trf_29985)
static void C_fcall trf_29985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29985(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29985(t0,t1);}

C_noret_decl(trf_29957)
static void C_fcall trf_29957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29957(t0,t1);}

C_noret_decl(trf_29912)
static void C_fcall trf_29912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29912(t0,t1);}

C_noret_decl(trf_29868)
static void C_fcall trf_29868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29868(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29868(t0,t1,t2,t3);}

C_noret_decl(trf_29859)
static void C_fcall trf_29859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29859(t0,t1);}

C_noret_decl(trf_29689)
static void C_fcall trf_29689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29689(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_29689(t0,t1,t2,t3,t4);}

C_noret_decl(trf_29718)
static void C_fcall trf_29718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29718(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29718(t0,t1,t2);}

C_noret_decl(trf_29755)
static void C_fcall trf_29755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29755(t0,t1);}

C_noret_decl(trf_29585)
static void C_fcall trf_29585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29585(t0,t1);}

C_noret_decl(trf_29565)
static void C_fcall trf_29565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29565(t0,t1);}

C_noret_decl(trf_29528)
static void C_fcall trf_29528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29528(t0,t1);}

C_noret_decl(trf_29508)
static void C_fcall trf_29508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29508(t0,t1);}

C_noret_decl(trf_28343)
static void C_fcall trf_28343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28343(t0,t1);}

C_noret_decl(trf_28346)
static void C_fcall trf_28346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28346(t0,t1);}

C_noret_decl(trf_28349)
static void C_fcall trf_28349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28349(t0,t1);}

C_noret_decl(trf_27873)
static void C_fcall trf_27873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27873(t0,t1);}

C_noret_decl(trf_27876)
static void C_fcall trf_27876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27876(t0,t1);}

C_noret_decl(trf_27879)
static void C_fcall trf_27879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27879(t0,t1);}

C_noret_decl(trf_27403)
static void C_fcall trf_27403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27403(t0,t1);}

C_noret_decl(trf_27406)
static void C_fcall trf_27406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27406(t0,t1);}

C_noret_decl(trf_27409)
static void C_fcall trf_27409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27409(t0,t1);}

C_noret_decl(trf_26655)
static void C_fcall trf_26655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26655(t0,t1);}

C_noret_decl(trf_26658)
static void C_fcall trf_26658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26658(t0,t1);}

C_noret_decl(trf_26661)
static void C_fcall trf_26661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26661(t0,t1);}

C_noret_decl(trf_26664)
static void C_fcall trf_26664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26664(t0,t1);}

C_noret_decl(trf_25907)
static void C_fcall trf_25907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25907(t0,t1);}

C_noret_decl(trf_25910)
static void C_fcall trf_25910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25910(t0,t1);}

C_noret_decl(trf_25913)
static void C_fcall trf_25913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25913(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25913(t0,t1);}

C_noret_decl(trf_25916)
static void C_fcall trf_25916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25916(t0,t1);}

C_noret_decl(trf_25437)
static void C_fcall trf_25437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25437(t0,t1);}

C_noret_decl(trf_25440)
static void C_fcall trf_25440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25440(t0,t1);}

C_noret_decl(trf_25443)
static void C_fcall trf_25443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25443(t0,t1);}

C_noret_decl(trf_24689)
static void C_fcall trf_24689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24689(t0,t1);}

C_noret_decl(trf_24692)
static void C_fcall trf_24692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24692(t0,t1);}

C_noret_decl(trf_24695)
static void C_fcall trf_24695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24695(t0,t1);}

C_noret_decl(trf_24698)
static void C_fcall trf_24698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24698(t0,t1);}

C_noret_decl(trf_24347)
static void C_fcall trf_24347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24347(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24347(t0,t1,t2,t3);}

C_noret_decl(trf_24187)
static void C_fcall trf_24187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24187(t0,t1);}

C_noret_decl(trf_24222)
static void C_fcall trf_24222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24222(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_24222(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_24232)
static void C_fcall trf_24232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24232(t0,t1);}

C_noret_decl(trf_24195)
static void C_fcall trf_24195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24195(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24195(t0,t1,t2);}

C_noret_decl(trf_24355)
static void C_fcall trf_24355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24355(t0,t1);}

C_noret_decl(trf_23973)
static void C_fcall trf_23973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23973(t0,t1);}

C_noret_decl(trf_23979)
static void C_fcall trf_23979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23979(t0,t1);}

C_noret_decl(trf_24002)
static void C_fcall trf_24002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24002(t0,t1);}

C_noret_decl(trf_24015)
static void C_fcall trf_24015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24015(t0,t1);}

C_noret_decl(trf_23989)
static void C_fcall trf_23989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23989(t0,t1);}

C_noret_decl(trf_23802)
static void C_fcall trf_23802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23802(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23802(t0,t1,t2,t3);}

C_noret_decl(trf_23811)
static void C_fcall trf_23811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23811(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_23811(t0,t1,t2,t3,t4);}

C_noret_decl(trf_23765)
static void C_fcall trf_23765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23765(t0,t1);}

C_noret_decl(trf_23628)
static void C_fcall trf_23628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23628(t0,t1);}

C_noret_decl(trf_23558)
static void C_fcall trf_23558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23558(t0,t1);}

C_noret_decl(trf_22919)
static void C_fcall trf_22919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22919(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22919(t0,t1,t2);}

C_noret_decl(trf_22879)
static void C_fcall trf_22879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22879(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22879(t0,t1,t2);}

C_noret_decl(trf_22892)
static void C_fcall trf_22892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22892(t0,t1);}

C_noret_decl(trf_23471)
static void C_fcall trf_23471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23471(t0,t1);}

C_noret_decl(trf_23261)
static void C_fcall trf_23261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23261(t0,t1);}

C_noret_decl(trf_23377)
static void C_fcall trf_23377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23377(t0,t1);}

C_noret_decl(trf_23264)
static void C_fcall trf_23264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23264(t0,t1);}

C_noret_decl(trf_23267)
static void C_fcall trf_23267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23267(t0,t1);}

C_noret_decl(trf_23172)
static void C_fcall trf_23172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23172(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23172(t0,t1);}

C_noret_decl(trf_23087)
static void C_fcall trf_23087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23087(t0,t1);}

C_noret_decl(trf_23044)
static void C_fcall trf_23044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23044(t0,t1);}

C_noret_decl(trf_23011)
static void C_fcall trf_23011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23011(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23011(t0,t1);}

C_noret_decl(trf_23006)
static void C_fcall trf_23006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23006(t0,t1);}

C_noret_decl(trf_23001)
static void C_fcall trf_23001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23001(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_23001(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22748)
static void C_fcall trf_22748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22748(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22748(t0,t1);}

C_noret_decl(trf_22595)
static void C_fcall trf_22595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22595(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22595(t0,t1,t2,t3);}

C_noret_decl(trf_22441)
static void C_fcall trf_22441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22441(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22441(t0,t1,t2);}

C_noret_decl(trf_22283)
static void C_fcall trf_22283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22283(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22283(t0,t1,t2);}

C_noret_decl(trf_22316)
static void C_fcall trf_22316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22316(t0,t1);}

C_noret_decl(trf_22223)
static void C_fcall trf_22223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22223(t0,t1);}

C_noret_decl(trf_22188)
static void C_fcall trf_22188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22188(t0,t1);}

C_noret_decl(trf_22204)
static void C_fcall trf_22204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22204(t0,t1);}

C_noret_decl(trf_22159)
static void C_fcall trf_22159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22159(t0,t1);}

C_noret_decl(trf_22066)
static void C_fcall trf_22066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22066(t0,t1);}

C_noret_decl(trf_21822)
static void C_fcall trf_21822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21822(t0,t1,t2);}

C_noret_decl(trf_21626)
static void C_fcall trf_21626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21626(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21626(t0,t1);}

C_noret_decl(trf_21789)
static void C_fcall trf_21789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21789(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21789(t0,t1);}

C_noret_decl(trf_21629)
static void C_fcall trf_21629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21629(t0,t1);}

C_noret_decl(trf_21632)
static void C_fcall trf_21632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21632(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21632(t0,t1);}

C_noret_decl(trf_21635)
static void C_fcall trf_21635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21635(t0,t1);}

C_noret_decl(trf_21677)
static void C_fcall trf_21677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21677(t0,t1);}

C_noret_decl(trf_21642)
static void C_fcall trf_21642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21642(t0,t1);}

C_noret_decl(trf_21371)
static void C_fcall trf_21371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21371(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21371(t0,t1,t2,t3);}

C_noret_decl(trf_21379)
static void C_fcall trf_21379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21379(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21379(t0,t1,t2,t3);}

C_noret_decl(trf_21508)
static void C_fcall trf_21508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21508(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21508(t0,t1,t2);}

C_noret_decl(trf_21462)
static void C_fcall trf_21462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21462(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21462(t0,t1,t2);}

C_noret_decl(trf_21365)
static void C_fcall trf_21365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21365(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21365(t0,t1,t2);}

C_noret_decl(trf_21359)
static void C_fcall trf_21359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21359(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21359(t0,t1);}

C_noret_decl(trf_21353)
static void C_fcall trf_21353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21353(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21353(t0,t1,t2);}

C_noret_decl(trf_21282)
static void C_fcall trf_21282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21282(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21282(t0,t1,t2);}

C_noret_decl(trf_21284)
static void C_fcall trf_21284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21284(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21284(t0,t1,t2);}

C_noret_decl(trf_21290)
static void C_fcall trf_21290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21290(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21290(t0,t1,t2);}

C_noret_decl(trf_21131)
static void C_fcall trf_21131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21131(t0,t1);}

C_noret_decl(trf_21146)
static void C_fcall trf_21146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21146(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21146(t0,t1,t2);}

C_noret_decl(trf_21089)
static void C_fcall trf_21089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21089(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21089(t0,t1,t2);}

C_noret_decl(trf_21029)
static void C_fcall trf_21029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21029(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21029(t0,t1,t2);}

C_noret_decl(trf_20905)
static void C_fcall trf_20905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20905(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20905(t0,t1,t2);}

C_noret_decl(trf_20781)
static void C_fcall trf_20781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20781(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20781(t0,t1,t2,t3);}

C_noret_decl(trf_20817)
static void C_fcall trf_20817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20817(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20817(t0,t1,t2);}

C_noret_decl(trf_20613)
static void C_fcall trf_20613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20613(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20613(t0,t1);}

C_noret_decl(trf_18445)
static void C_fcall trf_18445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18445(t0,t1);}

C_noret_decl(trf_20747)
static void C_fcall trf_20747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20747(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20747(t0,t1,t2);}

C_noret_decl(trf_20757)
static void C_fcall trf_20757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20757(t0,t1);}

C_noret_decl(trf_20717)
static void C_fcall trf_20717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20717(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20717(t0,t1,t2);}

C_noret_decl(trf_20727)
static void C_fcall trf_20727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20727(t0,t1);}

C_noret_decl(trf_19787)
static void C_fcall trf_19787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19787(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19787(t0,t1);}

C_noret_decl(trf_19790)
static void C_fcall trf_19790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19790(t0,t1);}

C_noret_decl(trf_19793)
static void C_fcall trf_19793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19793(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19793(t0,t1);}

C_noret_decl(trf_19796)
static void C_fcall trf_19796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19796(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19796(t0,t1);}

C_noret_decl(trf_19799)
static void C_fcall trf_19799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19799(t0,t1);}

C_noret_decl(trf_19802)
static void C_fcall trf_19802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19802(t0,t1);}

C_noret_decl(trf_19630)
static void C_fcall trf_19630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19630(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19630(t0,t1);}

C_noret_decl(trf_19559)
static void C_fcall trf_19559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19559(t0,t1);}

C_noret_decl(trf_19374)
static void C_fcall trf_19374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19374(t0,t1);}

C_noret_decl(trf_19386)
static void C_fcall trf_19386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19386(t0,t1);}

C_noret_decl(trf_19423)
static void C_fcall trf_19423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19423(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19423(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19458)
static void C_fcall trf_19458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19458(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19458(t0,t1);}

C_noret_decl(trf_19353)
static void C_fcall trf_19353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19353(t0,t1);}

C_noret_decl(trf_19288)
static void C_fcall trf_19288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19288(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19288(t0,t1,t2);}

C_noret_decl(trf_19297)
static void C_fcall trf_19297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19297(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19297(t0,t1,t2);}

C_noret_decl(trf_19310)
static void C_fcall trf_19310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19310(t0,t1);}

C_noret_decl(trf_19244)
static void C_fcall trf_19244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19244(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19244(t0,t1,t2);}

C_noret_decl(trf_19232)
static void C_fcall trf_19232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19232(t0,t1);}

C_noret_decl(trf_19130)
static void C_fcall trf_19130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19130(t0,t1);}

C_noret_decl(trf_19082)
static void C_fcall trf_19082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19082(t0,t1);}

C_noret_decl(trf_18463)
static void C_fcall trf_18463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18463(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_18463(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_18473)
static void C_fcall trf_18473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18473(t0,t1);}

C_noret_decl(trf_18602)
static void C_fcall trf_18602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18602(t0,t1);}

C_noret_decl(trf_18690)
static void C_fcall trf_18690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18690(t0,t1);}

C_noret_decl(trf_18763)
static void C_fcall trf_18763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18763(t0,t1);}

C_noret_decl(trf_18841)
static void C_fcall trf_18841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18841(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18841(t0,t1);}

C_noret_decl(trf_18792)
static void C_fcall trf_18792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18792(t0,t1);}

C_noret_decl(trf_18808)
static void C_fcall trf_18808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18808(t0,t1);}

C_noret_decl(trf_18772)
static void C_fcall trf_18772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18772(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18772(t0,t1);}

C_noret_decl(trf_18714)
static void C_fcall trf_18714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18714(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18714(t0,t1,t2);}

C_noret_decl(trf_18633)
static void C_fcall trf_18633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18633(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18633(t0,t1,t2);}

C_noret_decl(trf_18649)
static void C_fcall trf_18649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18649(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18649(t0,t1);}

C_noret_decl(trf_18617)
static void C_fcall trf_18617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18617(t0,t1);}

C_noret_decl(trf_18359)
static void C_fcall trf_18359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18359(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18359(t0,t1);}

C_noret_decl(trf_18368)
static void C_fcall trf_18368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18368(t0,t1);}

C_noret_decl(trf_18373)
static void C_fcall trf_18373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18373(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18373(t0,t1,t2);}

C_noret_decl(trf_18351)
static void C_fcall trf_18351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18351(t0,t1);}

C_noret_decl(trf_18143)
static void C_fcall trf_18143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18143(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18143(t0,t1,t2,t3);}

C_noret_decl(trf_18110)
static void C_fcall trf_18110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18110(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18110(t0,t1,t2,t3);}

C_noret_decl(trf_18092)
static void C_fcall trf_18092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18092(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18092(t0,t1,t2,t3);}

C_noret_decl(trf_18082)
static void C_fcall trf_18082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18082(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18082(t0,t1,t2,t3);}

C_noret_decl(trf_18070)
static void C_fcall trf_18070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18070(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18070(t0,t1,t2);}

C_noret_decl(trf_18038)
static void C_fcall trf_18038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18038(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18038(t0,t1,t2);}

C_noret_decl(trf_18022)
static void C_fcall trf_18022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18022(t0,t1);}

C_noret_decl(trf_18010)
static void C_fcall trf_18010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18010(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18010(t0,t1);}

C_noret_decl(trf_17992)
static void C_fcall trf_17992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17992(t0,t1);}

C_noret_decl(trf_17974)
static void C_fcall trf_17974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17974(t0,t1);}

C_noret_decl(trf_17959)
static void C_fcall trf_17959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17959(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17959(t0,t1);}

C_noret_decl(trf_17953)
static void C_fcall trf_17953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17953(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17953(t0,t1,t2,t3);}

C_noret_decl(trf_17941)
static void C_fcall trf_17941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17941(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17941(t0,t1);}

C_noret_decl(trf_17923)
static void C_fcall trf_17923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17923(t0,t1);}

C_noret_decl(trf_17902)
static void C_fcall trf_17902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17902(t0,t1,t2);}

C_noret_decl(trf_17870)
static void C_fcall trf_17870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17870(t0,t1);}

C_noret_decl(trf_17812)
static void C_fcall trf_17812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17812(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17812(t0,t1,t2);}

C_noret_decl(trf_17802)
static void C_fcall trf_17802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17802(t0,t1);}

C_noret_decl(trf_17796)
static void C_fcall trf_17796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17796(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17796(t0,t1);}

C_noret_decl(trf_17784)
static void C_fcall trf_17784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17784(t0,t1);}

C_noret_decl(trf_17760)
static void C_fcall trf_17760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17760(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17760(t0,t1,t2);}

C_noret_decl(trf_17673)
static void C_fcall trf_17673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17673(t0,t1);}

C_noret_decl(trf_17652)
static void C_fcall trf_17652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17652(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17652(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17642)
static void C_fcall trf_17642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17642(t0,t1);}

C_noret_decl(trf_17630)
static void C_fcall trf_17630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17630(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17630(t0,t1);}

C_noret_decl(trf_17589)
static void C_fcall trf_17589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17589(t0,t1);}

C_noret_decl(trf_17571)
static void C_fcall trf_17571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17571(t0,t1);}

C_noret_decl(trf_17553)
static void C_fcall trf_17553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17553(t0,t1);}

C_noret_decl(trf_17514)
static void C_fcall trf_17514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17514(t0,t1);}

C_noret_decl(trf_17422)
static void C_fcall trf_17422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17422(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17422(t0,t1,t2);}

C_noret_decl(trf_17445)
static void C_fcall trf_17445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17445(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17445(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17480)
static void C_fcall trf_17480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17480(t0,t1);}

C_noret_decl(trf_17384)
static void C_fcall trf_17384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17384(t0,t1);}

C_noret_decl(trf_16905)
static void C_fcall trf_16905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16905(t0,t1);}

C_noret_decl(trf_17255)
static void C_fcall trf_17255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17255(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17255(t0,t1,t2,t3);}

C_noret_decl(trf_17341)
static void C_fcall trf_17341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17341(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17341(t0,t1,t2,t3);}

C_noret_decl(trf_17298)
static void C_fcall trf_17298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17298(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17298(t0,t1,t2);}

C_noret_decl(trf_17222)
static void C_fcall trf_17222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17222(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17222(t0,t1,t2);}

C_noret_decl(trf_17160)
static void C_fcall trf_17160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17160(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17160(t0,t1,t2);}

C_noret_decl(trf_17195)
static void C_fcall trf_17195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17195(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17195(t0,t1,t2,t3);}

C_noret_decl(trf_16980)
static void C_fcall trf_16980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16980(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16980(t0,t1,t2);}

C_noret_decl(trf_16869)
static void C_fcall trf_16869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16869(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16869(t0,t1,t2);}

C_noret_decl(trf_17133)
static void C_fcall trf_17133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17133(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17133(t0,t1,t2,t3);}

C_noret_decl(trf_17106)
static void C_fcall trf_17106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17106(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17106(t0,t1,t2,t3);}

C_noret_decl(trf_17017)
static void C_fcall trf_17017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17017(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17017(t0,t1,t2);}

C_noret_decl(trf_17067)
static void C_fcall trf_17067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17067(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17067(t0,t1,t2,t3);}

C_noret_decl(trf_16918)
static void C_fcall trf_16918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16918(t0,t1);}

C_noret_decl(trf_16792)
static void C_fcall trf_16792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16792(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16792(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16710)
static void C_fcall trf_16710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16710(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16710(t0,t1,t2,t3);}

C_noret_decl(trf_16636)
static void C_fcall trf_16636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16636(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16636(t0,t1,t2);}

C_noret_decl(trf_16661)
static void C_fcall trf_16661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16661(t0,t1);}

C_noret_decl(trf_16364)
static void C_fcall trf_16364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16364(t0,t1);}

C_noret_decl(trf_16367)
static void C_fcall trf_16367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16367(t0,t1);}

C_noret_decl(trf_16373)
static void C_fcall trf_16373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16373(t0,t1);}

C_noret_decl(trf_16087)
static void C_fcall trf_16087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16087(t0,t1);}

C_noret_decl(trf_16090)
static void C_fcall trf_16090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16090(t0,t1);}

C_noret_decl(trf_16017)
static void C_fcall trf_16017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16017(t0,t1);}

C_noret_decl(trf_15865)
static void C_fcall trf_15865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15865(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15865(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15790)
static void C_fcall trf_15790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15790(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15790(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15800)
static void C_fcall trf_15800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15800(t0,t1);}

C_noret_decl(trf_15807)
static void C_fcall trf_15807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15807(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15807(t0,t1);}

C_noret_decl(trf_15902)
static void C_fcall trf_15902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15902(t0,t1,t2);}

C_noret_decl(trf_15680)
static void C_fcall trf_15680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15680(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15680(t0,t1,t2,t3);}

C_noret_decl(trf_15692)
static void C_fcall trf_15692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15692(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15692(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15753)
static void C_fcall trf_15753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15753(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15753(t0,t1,t2);}

C_noret_decl(trf_15117)
static void C_fcall trf_15117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15117(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_15117(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_15053)
static void C_fcall trf_15053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15053(t0,t1);}

C_noret_decl(trf_15000)
static void C_fcall trf_15000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15000(t0,t1);}

C_noret_decl(trf_15003)
static void C_fcall trf_15003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15003(t0,t1);}

C_noret_decl(trf_15197)
static void C_fcall trf_15197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15197(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15197(t0,t1);}

C_noret_decl(trf_15200)
static void C_fcall trf_15200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15200(t0,t1);}

C_noret_decl(trf_15203)
static void C_fcall trf_15203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15203(t0,t1);}

C_noret_decl(trf_15218)
static void C_fcall trf_15218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15218(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15218(t0,t1);}

C_noret_decl(trf_14779)
static void C_fcall trf_14779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14779(t0,t1);}

C_noret_decl(trf_14871)
static void C_fcall trf_14871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14871(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14871(t0,t1,t2);}

C_noret_decl(trf_14890)
static void C_fcall trf_14890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14890(t0,t1);}

C_noret_decl(trf_14844)
static void C_fcall trf_14844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14844(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14844(t0,t1,t2);}

C_noret_decl(trf_14789)
static void C_fcall trf_14789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14789(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14789(t0,t1,t2);}

C_noret_decl(trf_14799)
static void C_fcall trf_14799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14799(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14799(t0,t1,t2,t3);}

C_noret_decl(trf_14645)
static void C_fcall trf_14645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14645(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14645(t0,t1,t2);}

C_noret_decl(trf_14714)
static void C_fcall trf_14714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14714(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14714(t0,t1,t2);}

C_noret_decl(trf_14660)
static void C_fcall trf_14660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14660(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14660(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14202)
static void C_fcall trf_14202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14202(t0,t1);}

C_noret_decl(trf_14205)
static void C_fcall trf_14205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14205(t0,t1);}

C_noret_decl(trf_14208)
static void C_fcall trf_14208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14208(t0,t1);}

C_noret_decl(trf_14211)
static void C_fcall trf_14211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14211(t0,t1);}

C_noret_decl(trf_14175)
static void C_fcall trf_14175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14175(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14175(t0,t1);}

C_noret_decl(trf_13898)
static void C_fcall trf_13898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13898(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13898(t0,t1);}

C_noret_decl(trf_13901)
static void C_fcall trf_13901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13901(t0,t1);}

C_noret_decl(trf_13904)
static void C_fcall trf_13904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13904(t0,t1);}

C_noret_decl(trf_13795)
static void C_fcall trf_13795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13795(t0,t1);}

C_noret_decl(trf_13786)
static void C_fcall trf_13786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13786(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13786(t0,t1,t2);}

C_noret_decl(trf_13777)
static void C_fcall trf_13777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13777(t0,t1);}

C_noret_decl(trf_13759)
static void C_fcall trf_13759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13759(t0,t1);}

C_noret_decl(trf_13741)
static void C_fcall trf_13741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13741(t0,t1);}

C_noret_decl(trf_13723)
static void C_fcall trf_13723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13723(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13723(t0,t1);}

C_noret_decl(trf_13714)
static void C_fcall trf_13714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13714(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13714(t0,t1,t2);}

C_noret_decl(trf_13705)
static void C_fcall trf_13705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13705(t0,t1);}

C_noret_decl(trf_13536)
static void C_fcall trf_13536(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13536(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13536(t0,t1);}

C_noret_decl(trf_13492)
static void C_fcall trf_13492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13492(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13492(t0,t1,t2);}

C_noret_decl(trf_13013)
static void C_fcall trf_13013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13013(t0,t1);}

C_noret_decl(trf_13016)
static void C_fcall trf_13016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13016(t0,t1);}

C_noret_decl(trf_13019)
static void C_fcall trf_13019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13019(t0,t1);}

C_noret_decl(trf_13022)
static void C_fcall trf_13022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13022(t0,t1);}

C_noret_decl(trf_12968)
static void C_fcall trf_12968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12968(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12968(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12674)
static void C_fcall trf_12674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12674(t0,t1);}

C_noret_decl(trf_12677)
static void C_fcall trf_12677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12677(t0,t1);}

C_noret_decl(trf_12680)
static void C_fcall trf_12680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12680(t0,t1);}

C_noret_decl(trf_12391)
static void C_fcall trf_12391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12391(t0,t1);}

C_noret_decl(trf_12394)
static void C_fcall trf_12394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12394(t0,t1);}

C_noret_decl(trf_12397)
static void C_fcall trf_12397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12397(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12397(t0,t1);}

C_noret_decl(trf_12350)
static void C_fcall trf_12350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12350(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12350(t0,t1);}

C_noret_decl(trf_12306)
static void C_fcall trf_12306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12306(t0,t1);}

C_noret_decl(trf_12221)
static void C_fcall trf_12221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12221(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12221(t0,t1);}

C_noret_decl(trf_11706)
static void C_fcall trf_11706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11706(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11706(t0,t1);}

C_noret_decl(trf_11709)
static void C_fcall trf_11709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11709(t0,t1);}

C_noret_decl(trf_11712)
static void C_fcall trf_11712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11712(t0,t1);}

C_noret_decl(trf_11715)
static void C_fcall trf_11715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11715(t0,t1);}

C_noret_decl(trf_11622)
static void C_fcall trf_11622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11622(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11622(t0,t1,t2);}

C_noret_decl(trf_11613)
static void C_fcall trf_11613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11613(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11613(t0,t1);}

C_noret_decl(trf_11548)
static void C_fcall trf_11548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11548(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11548(t0,t1);}

C_noret_decl(trf_11290)
static void C_fcall trf_11290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11290(t0,t1);}

C_noret_decl(trf_11293)
static void C_fcall trf_11293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11293(t0,t1);}

C_noret_decl(trf_11296)
static void C_fcall trf_11296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11296(t0,t1);}

C_noret_decl(trf_11171)
static void C_fcall trf_11171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11171(t0,t1);}

C_noret_decl(trf_11195)
static void C_fcall trf_11195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11195(t0,t1);}

C_noret_decl(trf_11125)
static void C_fcall trf_11125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11125(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11125(t0,t1,t2);}

C_noret_decl(trf_11116)
static void C_fcall trf_11116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11116(t0,t1);}

C_noret_decl(trf_10815)
static void C_fcall trf_10815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10815(t0,t1);}

C_noret_decl(trf_11051)
static void C_fcall trf_11051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11051(t0,t1);}

C_noret_decl(trf_11057)
static void C_fcall trf_11057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11057(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11057(t0,t1);}

C_noret_decl(trf_10949)
static void C_fcall trf_10949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10949(t0,t1);}

C_noret_decl(trf_10951)
static void C_fcall trf_10951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10951(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10951(t0,t1,t2,t3);}

C_noret_decl(trf_11000)
static void C_fcall trf_11000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11000(t0,t1);}

C_noret_decl(trf_10965)
static void C_fcall trf_10965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10965(t0,t1);}

C_noret_decl(trf_10849)
static void C_fcall trf_10849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10849(t0,t1);}

C_noret_decl(trf_10763)
static void C_fcall trf_10763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10763(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10763(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10782)
static void C_fcall trf_10782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10782(t0,t1);}

C_noret_decl(trf_10713)
static void C_fcall trf_10713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10713(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10713(t0,t1,t2,t3);}

C_noret_decl(trf_10474)
static void C_fcall trf_10474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10474(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_10474(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_10493)
static void C_fcall trf_10493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10493(t0,t1);}

C_noret_decl(trf_10508)
static void C_fcall trf_10508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10508(t0,t1);}

C_noret_decl(trf_10517)
static void C_fcall trf_10517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10517(t0,t1);}

C_noret_decl(trf_10464)
static void C_fcall trf_10464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10464(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_10464(t0);}

C_noret_decl(trf_10409)
static void C_fcall trf_10409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10409(t0,t1);}

C_noret_decl(trf_10400)
static void C_fcall trf_10400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10400(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10400(t0,t1,t2);}

C_noret_decl(trf_10283)
static void C_fcall trf_10283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10283(t0,t1);}

C_noret_decl(trf_10274)
static void C_fcall trf_10274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10274(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10274(t0,t1,t2);}

C_noret_decl(trf_10256)
static void C_fcall trf_10256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10256(t0,t1,t2);}

C_noret_decl(trf_10247)
static void C_fcall trf_10247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10247(t0,t1);}

C_noret_decl(trf_10229)
static void C_fcall trf_10229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10229(t0,t1);}

C_noret_decl(trf_10220)
static void C_fcall trf_10220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10220(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10220(t0,t1,t2);}

C_noret_decl(trf_10211)
static void C_fcall trf_10211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10211(t0,t1);}

C_noret_decl(trf_10193)
static void C_fcall trf_10193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10193(t0,t1);}

C_noret_decl(trf_10184)
static void C_fcall trf_10184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10184(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10184(t0,t1,t2);}

C_noret_decl(trf_10175)
static void C_fcall trf_10175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10175(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10175(t0,t1);}

C_noret_decl(trf_10160)
static void C_fcall trf_10160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10160(t0,t1);}

C_noret_decl(trf_10115)
static void C_fcall trf_10115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10115(t0,t1);}

C_noret_decl(trf_10097)
static void C_fcall trf_10097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10097(t0,t1);}

C_noret_decl(trf_10088)
static void C_fcall trf_10088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10088(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10088(t0,t1,t2);}

C_noret_decl(trf_10061)
static void C_fcall trf_10061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10061(t0,t1);}

C_noret_decl(trf_10043)
static void C_fcall trf_10043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10043(t0,t1);}

C_noret_decl(trf_10025)
static void C_fcall trf_10025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10025(t0,t1);}

C_noret_decl(trf_10016)
static void C_fcall trf_10016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10016(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10016(t0,t1,t2);}

C_noret_decl(trf_10004)
static void C_fcall trf_10004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10004(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_10004(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_9749)
static void C_fcall trf_9749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9749(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9749(t0,t1,t2);}

C_noret_decl(trf_9758)
static void C_fcall trf_9758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9758(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9758(t0,t1,t2,t3);}

C_noret_decl(trf_9591)
static void C_fcall trf_9591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9591(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9591(t0,t1);}

C_noret_decl(trf_9607)
static void C_fcall trf_9607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9607(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9607(t0,t1,t2,t3);}

C_noret_decl(trf_9415)
static void C_fcall trf_9415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9415(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9415(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9445)
static void C_fcall trf_9445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9445(t0,t1);}

C_noret_decl(trf_9428)
static void C_fcall trf_9428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9428(t0,t1);}

C_noret_decl(trf_9293)
static void C_fcall trf_9293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9293(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9293(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9323)
static void C_fcall trf_9323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9323(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9323(t0,t1);}

C_noret_decl(trf_9306)
static void C_fcall trf_9306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9306(t0,t1);}

C_noret_decl(trf_9196)
static void C_fcall trf_9196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9196(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9196(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9209)
static void C_fcall trf_9209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9209(t0,t1);}

C_noret_decl(trf_9128)
static void C_fcall trf_9128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9128(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9128(t0,t1,t2,t3);}

C_noret_decl(trf_9098)
static void C_fcall trf_9098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9098(t0,t1);}

C_noret_decl(trf_9026)
static void C_fcall trf_9026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9026(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9026(t0,t1,t2,t3);}

C_noret_decl(trf_8825)
static void C_fcall trf_8825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8825(t0,t1);}

C_noret_decl(trf_8907)
static void C_fcall trf_8907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8907(t0,t1);}

C_noret_decl(trf_8918)
static void C_fcall trf_8918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8918(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8918(t0,t1,t2,t3);}

C_noret_decl(trf_8930)
static void C_fcall trf_8930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8930(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8930(t0,t1,t2);}

C_noret_decl(trf_8851)
static void C_fcall trf_8851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8851(t0,t1,t2);}

C_noret_decl(trf_8488)
static void C_fcall trf_8488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8488(t0,t1);}

C_noret_decl(trf_8491)
static void C_fcall trf_8491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8491(t0,t1);}

C_noret_decl(trf_8497)
static void C_fcall trf_8497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8497(t0,t1);}

C_noret_decl(trf_8386)
static void C_fcall trf_8386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8386(t0,t1);}

C_noret_decl(trf_8391)
static void C_fcall trf_8391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8391(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8391(t0,t1,t2,t3);}

C_noret_decl(trf_8158)
static void C_fcall trf_8158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8158(t0,t1);}

C_noret_decl(trf_8161)
static void C_fcall trf_8161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8161(t0,t1);}

C_noret_decl(trf_8059)
static void C_fcall trf_8059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8059(t0,t1);}

C_noret_decl(trf_7954)
static void C_fcall trf_7954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7954(t0,t1);}

C_noret_decl(trf_7963)
static void C_fcall trf_7963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7963(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7963(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7976)
static void C_fcall trf_7976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7976(t0,t1);}

C_noret_decl(trf_7818)
static void C_fcall trf_7818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7818(t0,t1);}

C_noret_decl(trf_7821)
static void C_fcall trf_7821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7821(t0,t1);}

C_noret_decl(trf_7823)
static void C_fcall trf_7823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7823(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7823(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7751)
static void C_fcall trf_7751(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7751(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7751(t0,t1);}

C_noret_decl(trf_7754)
static void C_fcall trf_7754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7754(t0,t1);}

C_noret_decl(trf_7757)
static void C_fcall trf_7757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7757(t0,t1);}

C_noret_decl(trf_7615)
static void C_fcall trf_7615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7615(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7615(t0,t1,t2,t3);}

C_noret_decl(trf_7631)
static void C_fcall trf_7631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7631(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7631(t0,t1,t2);}

C_noret_decl(trf_7353)
static void C_fcall trf_7353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7353(t0,t1);}

C_noret_decl(trf_7356)
static void C_fcall trf_7356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7356(t0,t1);}

C_noret_decl(trf_7098)
static void C_fcall trf_7098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7098(t0,t1);}

C_noret_decl(trf_7047)
static void C_fcall trf_7047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7047(t0,t1);}

C_noret_decl(trf_7037)
static void C_fcall trf_7037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7037(t0,t1);}

C_noret_decl(trf_7019)
static void C_fcall trf_7019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7019(t0,t1);}

C_noret_decl(trf_7008)
static void C_fcall trf_7008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7008(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7008(t0,t1,t2);}

C_noret_decl(trf_6970)
static void C_fcall trf_6970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6970(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6970(t0,t1);}

C_noret_decl(trf_6963)
static void C_fcall trf_6963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6963(t0,t1);}

C_noret_decl(trf_6939)
static void C_fcall trf_6939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6939(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6939(t0,t1);}

C_noret_decl(trf_6872)
static void C_fcall trf_6872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6872(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6872(t0,t1,t2,t3);}

C_noret_decl(trf_6861)
static void C_fcall trf_6861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6861(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6861(t0,t1,t2);}

C_noret_decl(trf_6816)
static void C_fcall trf_6816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6816(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6816(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6789)
static void C_fcall trf_6789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6789(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6789(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6748)
static void C_fcall trf_6748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6748(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6748(t0,t1,t2);}

C_noret_decl(trf_6754)
static void C_fcall trf_6754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6754(t0,t1,t2);}

C_noret_decl(trf_6764)
static void C_fcall trf_6764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6764(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6764(t0,t1);}

C_noret_decl(trf_6592)
static void C_fcall trf_6592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6592(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6592(t0,t1,t2,t3);}

C_noret_decl(trf_6569)
static void C_fcall trf_6569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6569(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6569(t0,t1,t2,t3);}

C_noret_decl(trf_5975)
static void C_fcall trf_5975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5975(t0,t1);}

C_noret_decl(trf_5987)
static void C_fcall trf_5987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5987(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5987(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6040)
static void C_fcall trf_6040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6040(t0,t1);}

C_noret_decl(trf_5999)
static void C_fcall trf_5999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5999(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5999(t0,t1,t2);}

C_noret_decl(trf_6012)
static void C_fcall trf_6012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6012(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5109)){
C_save(t1);
C_rereclaim2(5109*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,878);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],9,"make-list");
lf[62]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[88]=C_h_intern(&lf[88],7,"rescale");
lf[89]=C_h_intern(&lf[89],8,"discrete");
lf[90]=C_h_intern(&lf[90],4,"not\077");
lf[91]=C_h_intern(&lf[91],3,"int");
lf[92]=C_h_intern(&lf[92],4,"plus");
lf[93]=C_h_intern(&lf[93],1,"+");
lf[94]=C_h_intern(&lf[94],5,"minus");
lf[95]=C_h_intern(&lf[95],1,"-");
lf[96]=C_h_intern(&lf[96],5,"times");
lf[97]=C_h_intern(&lf[97],1,"*");
lf[98]=C_h_intern(&lf[98],6,"divide");
lf[99]=C_h_intern(&lf[99],1,"/");
lf[100]=C_h_intern(&lf[100],8,"quantize");
lf[101]=C_h_intern(&lf[101],8,"decimals");
lf[102]=C_h_intern(&lf[102],5,"round");
lf[103]=C_h_intern(&lf[103],1,"v");
lf[104]=C_h_intern(&lf[104],4,"expt");
lf[105]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[106]=C_h_intern(&lf[106],15,"rhythm->seconds");
lf[107]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[108]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[109]=C_h_intern(&lf[109],6,"\000tempo");
lf[110]=C_h_intern(&lf[110],5,"\000beat");
lf[111]=C_h_intern(&lf[111],12,"cents->ratio");
lf[112]=C_h_intern(&lf[112],12,"ratio->cents");
lf[114]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[115]=C_h_intern(&lf[115],3,"err");
lf[116]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[118]=C_h_intern(&lf[118],6,"interp");
lf[119]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[120]=C_h_intern(&lf[120],8,"tendency");
lf[121]=C_h_intern(&lf[121],3,"ran");
lf[122]=C_h_intern(&lf[122],3,"fit");
lf[123]=C_h_intern(&lf[123],9,"remainder");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[125]=C_h_intern(&lf[125],5,"scale");
lf[126]=C_h_intern(&lf[126],6,"modulo");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[128]=C_h_intern(&lf[128],8,"ran-set!");
lf[129]=C_h_intern(&lf[129],7,"between");
lf[130]=C_h_intern(&lf[130],4,"pick");
lf[131]=C_h_intern(&lf[131],4,"odds");
lf[132]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[133]=C_h_intern(&lf[133],5,"\000true");
lf[134]=C_h_intern(&lf[134],6,"\000false");
lf[135]=C_h_intern(&lf[135],4,"vary");
lf[136]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[138]=C_h_intern(&lf[138],6,"ranlow");
lf[139]=C_h_intern(&lf[139],7,"ranhigh");
lf[140]=C_h_intern(&lf[140],9,"ranmiddle");
lf[141]=C_h_intern(&lf[141],7,"ranbeta");
lf[142]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[143]=C_h_intern(&lf[143],2,"\000a");
lf[144]=C_h_intern(&lf[144],2,"\000b");
lf[145]=C_h_intern(&lf[145],6,"ranexp");
lf[146]=C_h_intern(&lf[146],8,"rangauss");
lf[147]=C_h_intern(&lf[147],9,"rancauchy");
lf[148]=C_h_intern(&lf[148],10,"ranpoisson");
lf[149]=C_h_intern(&lf[149],3,"arg");
lf[150]=C_h_intern(&lf[150],8,"rangamma");
lf[151]=C_h_intern(&lf[151],8,"ranbrown");
lf[152]=C_h_intern(&lf[152],7,"ranpink");
lf[153]=C_h_intern(&lf[153],4,"segs");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[159]=C_h_intern(&lf[159],13,"string-append");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[164]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[165]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[166]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[167]=C_h_intern(&lf[167],5,"floor");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[169]=C_h_intern(&lf[169],4,"note");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[171]=C_h_intern(&lf[171],3,"key");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[173]=C_h_intern(&lf[173],2,"hz");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[175]=C_h_intern(&lf[175],2,"pc");
lf[176]=C_h_intern(&lf[176],6,"invert");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[178]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[179]=C_h_intern(&lf[179],9,"transpose");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[181]=C_h_intern(&lf[181],10,"retrograde");
lf[182]=C_h_intern(&lf[182],7,"reverse");
lf[184]=C_h_intern(&lf[184],6,"period");
lf[186]=C_h_intern(&lf[186],14,"\003sysblock-set!");
lf[194]=C_h_intern(&lf[194],7,"pattern");
lf[209]=C_h_intern(&lf[209],4,"\000nad");
lf[210]=C_h_intern(&lf[210],8,"\000periods");
lf[211]=C_h_intern(&lf[211],12,"\000depth-first");
lf[213]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[214]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[215]=C_h_intern(&lf[215],14,"\000breadth-first");
lf[216]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[217]=C_h_intern(&lf[217],7,"\000values");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[220]=C_h_intern(&lf[220],4,"eop\077");
lf[221]=C_h_intern(&lf[221],4,"\000eop");
lf[222]=C_h_intern(&lf[222],4,"eod\077");
lf[223]=C_h_intern(&lf[223],4,"\000eod");
lf[224]=C_h_intern(&lf[224],4,"next");
lf[228]=C_h_intern(&lf[228],5,"force");
lf[229]=C_h_intern(&lf[229],8,"promise\077");
lf[230]=C_h_intern(&lf[230],3,"max");
lf[231]=C_h_intern(&lf[231],10,"make-cycle");
lf[232]=C_h_intern(&lf[232],12,"\003sysfor-each");
lf[234]=C_h_intern(&lf[234],4,"\000for");
lf[235]=C_h_intern(&lf[235],7,"\000repeat");
lf[237]=C_h_intern(&lf[237],5,"palin");
lf[239]=C_h_intern(&lf[239],15,"make-palindrome");
lf[241]=C_h_intern(&lf[241],6,"\000elide");
lf[242]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[243]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[244]=C_h_intern(&lf[244],9,"make-line");
lf[246]=C_h_intern(&lf[246],9,"make-heap");
lf[248]=C_h_intern(&lf[248],13,"make-rotation");
lf[250]=C_h_intern(&lf[250],7,"\000rotate");
lf[252]=C_h_intern(&lf[252],11,"random-item");
lf[260]=C_h_intern(&lf[260],14,"make-weighting");
lf[263]=C_h_intern(&lf[263],7,"\000weight");
lf[264]=C_h_intern(&lf[264],4,"\000min");
lf[265]=C_h_intern(&lf[265],4,"\000max");
lf[266]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[267]=C_h_intern(&lf[267],11,"make-markov");
lf[269]=C_h_intern(&lf[269],5,"\000past");
lf[270]=C_h_intern(&lf[270],2,"->");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[272]=C_h_intern(&lf[272],3,"\000->");
lf[273]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[274]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[276]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[278]=C_h_intern(&lf[278],10,"graph-node");
lf[279]=C_h_intern(&lf[279],10,"make-graph");
lf[281]=C_h_intern(&lf[281],3,"\000to");
lf[282]=C_h_intern(&lf[282],3,"\000id");
lf[283]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[285]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[286]=C_h_intern(&lf[286],14,"markov-analyze");
lf[287]=C_h_intern(&lf[287],9,"last-pair");
lf[288]=C_h_intern(&lf[288],6,"format");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[290]=C_h_intern(&lf[290],4,"find");
lf[291]=C_h_intern(&lf[291],10,"list-index");
lf[292]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[293]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[294]=C_h_intern(&lf[294],7,"newline");
lf[295]=C_h_intern(&lf[295],7,"display");
lf[296]=C_h_intern(&lf[296],19,"\003syswrite-char/port");
lf[297]=C_h_intern(&lf[297],19,"\003sysstandard-output");
lf[298]=C_h_intern(&lf[298],3,"min");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[300]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~s");
lf[301]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[302]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[303]=C_h_intern(&lf[303],11,"make-string");
lf[304]=C_h_intern(&lf[304],4,"sort");
lf[305]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[306]=C_h_intern(&lf[306],1,"<");
lf[307]=C_h_intern(&lf[307],11,"string-ci<\077");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[312]=C_h_intern(&lf[312],5,"token");
lf[317]=C_h_intern(&lf[317],1,"t");
lf[322]=C_h_intern(&lf[322],4,"rule");
lf[325]=C_h_intern(&lf[325],22,"hash-table-ref/default");
lf[332]=C_h_intern(&lf[332],11,"parse-error");
lf[336]=C_h_intern(&lf[336],10,"parse-unit");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[350]=C_h_intern(&lf[350],14,"string->symbol");
lf[351]=C_h_intern(&lf[351],5,"equal");
lf[352]=C_h_intern(&lf[352],3,"and");
lf[353]=C_h_intern(&lf[353],2,"or");
lf[354]=C_h_intern(&lf[354],3,"not");
lf[355]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[367]=C_h_intern(&lf[367],1,"@");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[369]=C_h_intern(&lf[369],6,"printf");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[375]=C_h_intern(&lf[375],2,">=");
lf[376]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[377]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[378]=C_h_intern(&lf[378],5,"begin");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[381]=C_h_intern(&lf[381],1,">");
lf[382]=C_h_intern(&lf[382],2,"<=");
lf[383]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[384]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[385]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[389]=C_h_intern(&lf[389],17,"*sal-trace-input*");
lf[390]=C_h_intern(&lf[390],3,"sal");
lf[391]=C_h_intern(&lf[391],11,"print-error");
lf[392]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[393]=C_h_intern(&lf[393],9,"substring");
lf[394]=C_h_intern(&lf[394],2,"pp");
lf[395]=C_h_intern(&lf[395],4,"eval");
lf[396]=C_h_intern(&lf[396],7,"\000syntax");
lf[397]=C_h_intern(&lf[397],7,"\000scheme");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[399]=C_h_intern(&lf[399],7,"call/cc");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[401]=C_h_intern(&lf[401],9,"sal:print");
lf[402]=C_h_intern(&lf[402],13,"print-message");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[406]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[409]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[411]=C_h_intern(&lf[411],9,"sal:chdir");
lf[412]=C_h_intern(&lf[412],8,"sal:load");
lf[413]=C_h_intern(&lf[413],13,"load-sal-file");
lf[414]=C_h_intern(&lf[414],4,"load");
lf[415]=C_h_intern(&lf[415],15,"\003syssubstring=\077");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[419]=C_h_intern(&lf[419],12,"file-exists\077");
lf[420]=C_h_intern(&lf[420],8,"sal:open");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[422]=C_h_intern(&lf[422],10,"sal:output");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[435]=C_h_intern(&lf[435],8,"operator");
lf[436]=C_h_intern(&lf[436],8,"bindings");
lf[437]=C_h_intern(&lf[437],10,"collectors");
lf[438]=C_h_intern(&lf[438],9,"initially");
lf[439]=C_h_intern(&lf[439],9,"end-tests");
lf[440]=C_h_intern(&lf[440],7,"looping");
lf[441]=C_h_intern(&lf[441],8,"stepping");
lf[442]=C_h_intern(&lf[442],7,"finally");
lf[443]=C_h_intern(&lf[443],9,"returning");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[460]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[465]=C_h_intern(&lf[465],3,"for");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[468]=C_h_intern(&lf[468],8,"downfrom");
lf[469]=C_h_intern(&lf[469],5,"above");
lf[470]=C_h_intern(&lf[470],5,"below");
lf[471]=C_h_intern(&lf[471],6,"downto");
lf[472]=C_h_intern(&lf[472],4,"from");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[479]=C_h_intern(&lf[479],2,"to");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[489]=C_h_intern(&lf[489],2,"by");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[498]=C_h_intern(&lf[498],6,"across");
lf[499]=C_h_intern(&lf[499],13,"vector-length");
lf[500]=C_h_intern(&lf[500],10,"vector-ref");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[503]=C_h_intern(&lf[503],4,"over");
lf[504]=C_h_intern(&lf[504],2,"in");
lf[505]=C_h_intern(&lf[505],5,"quote");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[513]=C_h_intern(&lf[513],2,"on");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[517]=C_h_intern(&lf[517],1,"=");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[519]=C_h_intern(&lf[519],4,"then");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[525]=C_h_intern(&lf[525],4,"with");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[548]=C_h_intern(&lf[548],3,"sum");
lf[549]=C_h_intern(&lf[549],5,"count");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[551]=C_h_intern(&lf[551],8,"minimize");
lf[552]=C_h_intern(&lf[552],8,"maximize");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[555]=C_h_intern(&lf[555],4,"list");
lf[556]=C_h_intern(&lf[556],8,"set-cdr!");
lf[557]=C_h_intern(&lf[557],7,"collect");
lf[558]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[561]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[562]=C_h_intern(&lf[562],5,"nconc");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[566]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[567]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[568]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[569]=C_h_intern(&lf[569],4,"into");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[576]=C_h_intern(&lf[576],6,"return");
lf[578]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[579]=C_h_intern(&lf[579],5,"until");
lf[580]=C_h_intern(&lf[580],5,"while");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[584]=C_h_intern(&lf[584],7,"thereis");
lf[585]=C_h_intern(&lf[585],6,"always");
lf[586]=C_h_intern(&lf[586],5,"never");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[596]=C_h_intern(&lf[596],4,"task");
lf[597]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[599]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[605]=C_h_intern(&lf[605],2,"do");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[609]=C_h_intern(&lf[609],4,"iter");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[612]=C_h_intern(&lf[612],6,"repeat");
lf[613]=C_h_intern(&lf[613],2,"as");
lf[615]=C_h_intern(&lf[615],10,"mm:make-on");
lf[616]=C_h_intern(&lf[616],5,"\000time");
lf[617]=C_h_intern(&lf[617],4,"\000key");
lf[618]=C_h_intern(&lf[618],4,"\000vel");
lf[619]=C_h_intern(&lf[619],5,"\000chan");
lf[620]=C_h_intern(&lf[620],6,"mm:on\077");
lf[621]=C_h_intern(&lf[621],11,"mm:make-off");
lf[622]=C_h_intern(&lf[622],7,"mm:off\077");
lf[623]=C_h_intern(&lf[623],13,"mm:make-touch");
lf[624]=C_h_intern(&lf[624],4,"\000val");
lf[625]=C_h_intern(&lf[625],9,"mm:touch\077");
lf[626]=C_h_intern(&lf[626],12,"mm:make-ctrl");
lf[627]=C_h_intern(&lf[627],4,"\000num");
lf[628]=C_h_intern(&lf[628],8,"mm:ctrl\077");
lf[629]=C_h_intern(&lf[629],12,"mm:make-prog");
lf[630]=C_h_intern(&lf[630],8,"mm:prog\077");
lf[631]=C_h_intern(&lf[631],13,"mm:make-press");
lf[632]=C_h_intern(&lf[632],9,"mm:press\077");
lf[633]=C_h_intern(&lf[633],12,"mm:make-bend");
lf[634]=C_h_intern(&lf[634],7,"mm:free");
lf[635]=C_h_intern(&lf[635],7,"mm:copy");
lf[636]=C_h_intern(&lf[636],7,"mm:time");
lf[637]=C_h_intern(&lf[637],12,"mm:time-set!");
lf[638]=C_h_intern(&lf[638],7,"mm:chan");
lf[639]=C_h_intern(&lf[639],12,"mm:chan-set!");
lf[640]=C_h_intern(&lf[640],6,"mm:key");
lf[641]=C_h_intern(&lf[641],11,"mm:key-set!");
lf[642]=C_h_intern(&lf[642],6,"mm:vel");
lf[643]=C_h_intern(&lf[643],11,"mm:vel-set!");
lf[644]=C_h_intern(&lf[644],6,"mm:val");
lf[645]=C_h_intern(&lf[645],8,"mm:type\077");
lf[646]=C_h_intern(&lf[646],11,"mm:val-set!");
lf[647]=C_h_intern(&lf[647],1,"k");
lf[648]=C_h_intern(&lf[648],6,"mm:num");
lf[649]=C_h_intern(&lf[649],11,"mm:num-set!");
lf[650]=C_h_intern(&lf[650],7,"mp:note");
lf[651]=C_h_intern(&lf[651],7,"mp:midi");
lf[652]=C_h_intern(&lf[652],6,"mp:off");
lf[653]=C_h_intern(&lf[653],5,"mp:on");
lf[654]=C_h_intern(&lf[654],8,"mp:touch");
lf[655]=C_h_intern(&lf[655],7,"mp:ctrl");
lf[656]=C_h_intern(&lf[656],7,"mp:prog");
lf[657]=C_h_intern(&lf[657],8,"mp:press");
lf[658]=C_h_intern(&lf[658],7,"mp:bend");
lf[659]=C_h_intern(&lf[659],5,"mp:mm");
lf[660]=C_h_intern(&lf[660],9,"mp:inhook");
lf[661]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[662]=C_h_intern(&lf[662],27,"condition-property-accessor");
lf[663]=C_h_intern(&lf[663],3,"exn");
lf[664]=C_h_intern(&lf[664],7,"message");
lf[665]=C_h_intern(&lf[665],22,"with-exception-handler");
lf[666]=C_h_intern(&lf[666],30,"call-with-current-continuation");
lf[667]=C_h_intern(&lf[667],4,"cs:i");
lf[668]=C_h_intern(&lf[668],4,"cs:f");
lf[669]=C_h_intern(&lf[669],8,"cs:clear");
lf[670]=C_h_intern(&lf[670],7,"cm-logo");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[678]=C_h_intern(&lf[678],25,"current-time-milliseconds");
lf[679]=C_h_intern(&lf[679],20,"current-time-seconds");
lf[681]=C_h_intern(&lf[681],6,"\003sysgc");
lf[684]=C_h_intern(&lf[684],6,"sprout");
lf[685]=C_h_intern(&lf[685],9,"\003syserror");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[687]=C_h_intern(&lf[687],3,"now");
lf[688]=C_h_intern(&lf[688],11,"time-format");
lf[689]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[690]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[691]=C_h_intern(&lf[691],1,"m");
lf[692]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[693]=C_h_intern(&lf[693],1,"s");
lf[694]=C_h_intern(&lf[694],5,"pause");
lf[695]=C_h_intern(&lf[695],7,"paused\077");
lf[696]=C_h_intern(&lf[696],4,"cont");
lf[697]=C_h_intern(&lf[697],4,"stop");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[699]=C_h_intern(&lf[699],4,"hush");
lf[701]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[707]=C_h_intern(&lf[707],14,"return-to-host");
lf[708]=C_h_intern(&lf[708],6,"define");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[710]=C_h_intern(&lf[710],18,"\003sysregister-macro");
lf[711]=C_h_intern(&lf[711],14,"define-process");
lf[712]=C_h_intern(&lf[712],6,"lambda");
lf[713]=C_h_intern(&lf[713],7,"elapsed");
lf[714]=C_h_intern(&lf[714],1,"x");
lf[715]=C_h_intern(&lf[715],4,"wait");
lf[716]=C_h_intern(&lf[716],18,"current-error-port");
lf[717]=C_h_intern(&lf[717],19,"print-error-message");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[723]=C_h_intern(&lf[723],3,"run");
lf[724]=C_h_intern(&lf[724],20,"\003sysregister-macro-2");
lf[725]=C_h_intern(&lf[725],15,"hash-table-set!");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[727]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[729]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[731]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[733]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[735]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[737]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[739]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[741]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[743]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[745]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[747]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[749]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[751]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[753]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[754]=C_h_intern(&lf[754],5,":loop");
lf[755]=C_h_intern(&lf[755],7,"tagbody");
lf[756]=C_h_intern(&lf[756],5,"block");
lf[757]=C_h_intern(&lf[757],3,"nil");
lf[758]=C_h_intern(&lf[758],2,"go");
lf[759]=C_h_intern(&lf[759],8,"function");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[761]=C_h_intern(&lf[761],3,"pop");
lf[762]=C_h_intern(&lf[762],4,"cons");
lf[763]=C_h_intern(&lf[763],4,"push");
lf[764]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[765]=C_h_intern(&lf[765],4,"loop");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[771]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[774]=C_h_intern(&lf[774],7,"\000return");
lf[775]=C_h_intern(&lf[775],9,"\000function");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[777]=C_h_intern(&lf[777],8,"\000process");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[782]=C_h_intern(&lf[782],4,"cond");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[788]=C_h_intern(&lf[788],5,"\000loop");
lf[789]=C_h_intern(&lf[789],4,"\000run");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[798]=C_h_intern(&lf[798],9,"list-tail");
lf[799]=C_h_intern(&lf[799],8,"set-car!");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[802]=C_h_intern(&lf[802],9,"\000bindings");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[810]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[814]=C_h_intern(&lf[814],10,"sal:system");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[832]=C_h_intern(&lf[832],7,"unquote");
lf[833]=C_h_intern(&lf[833],16,"unquote-splicing");
lf[834]=C_h_intern(&lf[834],5,"\000list");
lf[835]=C_h_intern(&lf[835],8,"\000unquote");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[839]=C_h_intern(&lf[839],10,"quasiquote");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[844]=C_h_intern(&lf[844],7,"fprintf");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[847]=C_h_intern(&lf[847],27,"\003sysregister-record-printer");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[849]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[850]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[851]=C_h_intern(&lf[851],6,"ruleid");
lf[852]=C_h_intern(&lf[852],9,"make-rule");
lf[853]=C_h_intern(&lf[853],7,"*rules*");
lf[854]=C_h_intern(&lf[854],7,"defrule");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[856]=C_h_intern(&lf[856],15,"make-hash-table");
lf[857]=C_h_intern(&lf[857],3,"eq\077");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[860]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[862]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[863]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[864]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[865]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[871]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[872]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[873]=C_h_intern(&lf[873],6,"equal\077");
lf[874]=C_h_intern(&lf[874],4,"send");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[876]=C_h_intern(&lf[876],19,"define-send-message");
lf[877]=C_h_intern(&lf[877],12,"with-optkeys");
C_register_lf2(lf,878,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5635,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5633 */
static void C_ccall f_5635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5635,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5638,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5636 in k5633 */
static void C_ccall f_5638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5641,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5639 in k5636 in k5633 */
static void C_ccall f_5641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5644,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5644,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5646,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5935,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35585,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 248  ##sys#register-macro");
t5=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[877],t4);}

/* a35584 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35585(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_35585r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35585r(t0,t1,t2,t3);}}

static void C_ccall f_35585r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 249  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5939,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 255  make-hash-table");
t3=C_retrieve(lf[856]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[873]+1));}

/* k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5939,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5942,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35533,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 257  ##sys#register-macro");
t5=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[876],t4);}

/* a35532 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35533(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35533,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35537,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_35537(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35570,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string->symbol");
t10=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35580,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 268  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[875]);}}}}

/* k35578 in a35532 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35537(2,t3,t2);}

/* k35568 in a35532 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35537(2,t3,t2);}

/* k35535 in a35532 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35537,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[505],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[725],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5942,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5944,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6235,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35527,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 353  ##sys#register-macro");
t5=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[874],t4);}

/* a35526 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35527(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_35527r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35527r(t0,t1,t2,t3);}}

static void C_ccall f_35527r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 354  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word ab[198],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6235,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6237,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6248,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6277,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6287,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6297,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6307,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6317,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6331,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6346,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6352,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6375,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6513,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6553,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6563,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[63],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6662,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6748,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6789,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6816,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6843,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6861,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6872,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6887,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6894,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6901,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6920,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6939,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6960,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6963,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6970,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6999,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7002,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7005,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7008,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7019,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7037,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7044,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7047,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7054,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7057,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7060,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7094,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[91]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7205,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7220,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7262,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[96]+1,*((C_word*)lf[97]+1));
t48=C_mutate((C_word*)lf[98]+1,*((C_word*)lf[99]+1));
t49=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7288,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7309,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7349,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[111]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7585,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7600,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[113],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7615,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7701,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7747,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7814,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7947,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[128]+1,C_retrieve2(lf[75],"tb:ran-set!"));
t60=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8055,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[129]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8090,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8111,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8154,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8382,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[138]+1,C_retrieve2(lf[78],"tb:ranlow"));
t66=C_mutate((C_word*)lf[139]+1,C_retrieve2(lf[79],"tb:ranhigh"));
t67=C_mutate((C_word*)lf[140]+1,C_retrieve2(lf[80],"tb:ranmiddle"));
t68=C_mutate((C_word*)lf[141]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8484,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[145]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8712,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[146]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8731,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[147]+1,C_retrieve2(lf[84],"tb:rancauchy"));
t72=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8772,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[150]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8791,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[151]+1,C_retrieve2(lf[87],"tb:ranbrown"));
t75=C_mutate((C_word*)lf[152]+1,C_retrieve2(lf[86],"tb:ranpink"));
t76=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8812,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t77=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9021,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  make-hash-table");
t78=C_retrieve(lf[856]);
((C_proc3)C_retrieve_proc(t78))(3,t78,t77,*((C_word*)lf[873]+1));}

/* k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9021,2,t0,t1);}
t2=C_mutate(&lf[156],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9024,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35311,a[2]=t7,a[3]=t4,a[4]=((C_word)li572),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_35311(t9,t5,C_fix(0));}

/* do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35311(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35311,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[859],C_fix(-1),lf[860],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35324,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t5=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[156],"*notes*"),lf[861],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35525,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35525,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[862],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35334,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35345,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35345,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[863]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[864]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35357,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_6939(t4,((C_word*)t0)[4]);}

/* k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35361,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[872]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_6939(t2,t3);}

/* k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35365,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[871]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_6939(t2,t3);}

/* k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35509,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 375  floor");
t4=*((C_word*)lf[167]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35509,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35371,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li571),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_35371(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35371(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35371,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_35381,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_35391,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_35391(t21,(C_word)C_i_string_equal_p(t20,lf[870]));}
else{
t20=t19;
f_35391(t20,C_SCHEME_FALSE);}}}

/* k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35391(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35391,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_35381(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_35394,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[868]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_35394(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[869]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_35394(t7,t6);}
else{
t5=t2;
f_35394(t5,C_SCHEME_UNDEFINED);}}}}

/* k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35394,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[865],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_35402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t6=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35402,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_35409,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[156],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[156],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_35412(2,t4,C_SCHEME_UNDEFINED);}}

/* k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[159]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[867],((C_word*)((C_word*)t0)[8])[1]);}

/* k35414 in k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35416,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35423,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[156],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k35421 in k35414 in k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[156],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_35426(2,t4,C_SCHEME_UNDEFINED);}}

/* k35424 in k35421 in k35414 in k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35430,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[159]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[866],((C_word*)((C_word*)t0)[6])[1]);}

/* k35428 in k35424 in k35421 in k35414 in k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35430,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35437,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[156],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k35435 in k35428 in k35424 in k35421 in k35414 in k35410 in k35407 in k35400 in k35392 in k35389 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[156],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_35381(2,t3,C_SCHEME_UNDEFINED);}}

/* k35379 in do646 in k35507 in k35363 in k35359 in k35355 in k35343 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_35371(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k35332 in k35523 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35334,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_35311(t3,((C_word*)t0)[2],t2);}

/* k35322 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35327,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[156],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k35325 in k35322 in do640 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word ab[222],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9024,2,t0,t1);}
t2=C_mutate(&lf[157],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9026,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[161],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9128,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[169]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9181,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[171]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9278,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[173]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9400,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[175]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9516,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[176]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9561,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9696,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[181]+1,*((C_word*)lf[182]+1));
t11=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10004,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10016,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[187],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10025,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10043,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10061,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10088,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10097,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10115,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[193],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10160,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10175,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[196],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10184,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[197],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10193,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[198],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10211,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10220,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[200],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10229,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[201],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10247,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[202],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10256,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[203],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10265,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[204],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10274,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[205],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10283,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[206],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10400,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10409,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[208],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10464,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[212],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10474,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[220]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10654,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10673,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[224]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10692,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10815,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11116,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11125,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11171,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[231]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11286,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11541,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11613,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11622,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[239]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11702,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12172,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[244]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12387,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12634,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[246]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12670,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12933,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[248]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13009,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13483,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13705,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13714,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13723,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[255],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13741,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[256],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13759,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13777,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[258],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13786,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13795,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[260]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13878,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14645,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14757,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[267]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15190,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15677,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16017,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[279]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16080,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16598,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[286]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16692,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17532,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17553,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17571,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17589,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp));
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17599,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t76=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35297,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t77=C_retrieve(lf[847]);
((C_proc4)C_retrieve_proc(t77))(4,t77,t75,lf[312],t76);}

/* a35296 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35297,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35305,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-type");
f_17553(t4,t2);}

/* k35303 in a35296 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35309,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-string");
f_17571(t2,((C_word*)t0)[2]);}

/* k35307 in k35303 in a35296 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[844]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[858],((C_word*)t0)[2],t1);}

/* k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17599,2,t0,t1);}
t2=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17601,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17630,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17642,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17650,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-hash-table");
t6=C_retrieve(lf[856]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[857]+1));}

/* k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17650,2,t0,t1);}
t2=C_mutate(&lf[320],t1);
t3=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17652,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17673,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17755,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35287,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t7=C_retrieve(lf[847]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[322],t6);}

/* a35286 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35287,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35295,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  rule-name");
f_17673(t4,t2);}

/* k35293 in a35286 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[844]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[855],t1);}

/* k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17758,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35184,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-macro");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[854],t3);}

/* a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_35184r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_35184r(t0,t1,t2,t3,t4);}}

static void C_ccall f_35184r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35187,a[2]=t6,a[3]=((C_word)li567),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[851],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35247,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k35245 in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35251,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_35187(t3,t2,((C_word*)t0)[2]);}

/* k35249 in k35245 in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35251,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_35265(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_35265(t7,(C_word)C_i_nullp(t6));}}

/* k35263 in k35249 in k35245 in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35265,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[852],((C_word*)t0)[6],lf[851],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[725],lf[853],lf[851],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_35187(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_35187,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[849]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35207,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[850]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[505],t2):t2));}}}

/* k35205 in ppat in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35211,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_35187(t4,t2,t3);}

/* k35209 in k35205 in ppat in a35183 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35211,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[762],((C_word*)t0)[2],t1));}

/* k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17758,2,t0,t1);}
t2=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17760,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[203],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17781,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[326],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17784,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[327],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17796,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[328],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17802,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17812,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17870,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17902,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[333],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17923,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17941,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17951,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35170,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t14=C_retrieve(lf[847]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[332],t13);}

/* a35169 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35170,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35178,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-error-string");
f_17923(t4,t2);}

/* k35176 in a35169 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35182,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-error-position");
f_17941(t2,((C_word*)t0)[2]);}

/* k35180 in k35176 in a35169 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[844]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[848],((C_word*)t0)[2],t1);}

/* k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17951,2,t0,t1);}
t2=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17953,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17959,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17974,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17992,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18010,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18020,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35144,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t9=C_retrieve(lf[847]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[336],t8);}

/* a35143 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35144,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35148,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t4,t2);}

/* k35146 in a35143 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35154,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalRuleType?");
f_19232(t2,t1);}

/* k35152 in k35146 in a35143 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35154,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35165,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  get-rule");
f_17760(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[844]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[846],((C_word*)t0)[2]);}}

/* k35163 in k35152 in k35146 in a35143 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  rule-name");
f_17673(((C_word*)t0)[2],t1);}

/* k35159 in k35152 in k35146 in a35143 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[844]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[845],t1);}

/* k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18020,2,t0,t1);}
t2=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18022,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[343],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18038,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18070,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18082,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18092,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18110,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18143,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18351,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18359,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t11=lf[363]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18463,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19082,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19130,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19232,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19244,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19265,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35122,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[353],t21);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t18,lf[843],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35120 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(25856),t1);}

/* k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35102,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[353],t5);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[842],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35100 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(26112),t1);}

/* k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19271,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35062,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[353],t10);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[841],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35060 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(26368),t1);}

/* k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19274,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34952,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[97],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[352],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34958,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34968,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[840],C_fix(26624),t9,t10,t11);}

/* a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34968,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34972,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t5,lf[834],t3);}

/* k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t2,((C_word*)t0)[2]);}

/* k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34975,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[555]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34993,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t3,lf[834],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k34991 in k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34996,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k34994 in k34991 in k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34996,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34999,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35027,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t5,lf[834],((C_word*)t0)[2]);}

/* k35025 in k34994 in k34991 in k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35027,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[835]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[839],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34999(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[505],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34999(t5,t4);}}

/* k34997 in k34994 in k34991 in k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_34999(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34999,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t2,lf[802],((C_word*)t0)[2]);}

/* k35003 in k34997 in k34994 in k34991 in k34973 in k34970 in a34967 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_35005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35005,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[555]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a34957 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34958,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k34950 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(26624),t1);}

/* k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19277,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34852,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[353],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[352],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34860,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t10,C_fix(27648));}

/* k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34862,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[3],lf[838],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34862,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34866,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34869,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,t3,C_fix(5376));}

/* k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t2,lf[834],((C_word*)t0)[4]);}

/* k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_34875(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34904,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[836]:lf[837]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34912,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t5,t6);}}

/* k34910 in k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34902 in k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34873 in k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34878,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k34876 in k34873 in k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34881,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  set-emit-info!");
f_18092(t2,lf[834],lf[835],((C_word*)t0)[2]);}

/* k34879 in k34876 in k34873 in k34870 in k34867 in k34864 in a34861 in k34858 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34881,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[832],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[833],((C_word*)t0)[2])));}

/* k34850 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(27648),t1);}

/* k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19280,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34824,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[353],t7);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[831],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k34822 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(26880),t1);}

/* k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19283,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34764,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[352],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34770,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34788,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[830],C_fix(27136),t8,t9,t10);}

/* a34787 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34788,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34796,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34800,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k34798 in a34787 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34794 in a34787 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34796,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a34769 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34770,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k34762 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(27136),t1);}

/* k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19286,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34641,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[367],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[352],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34647,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34678,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[829],C_fix(27392),t14,t15,t16);}

/* a34677 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34678(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34678,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34682,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k34680 in a34677 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34683 in k34680 in a34677 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34686 in k34683 in k34680 in a34677 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34688,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34701,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k34699 in k34686 in k34683 in k34680 in a34677 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34701,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a34646 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34647,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34651,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k34649 in a34646 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34651,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34666,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k34664 in k34649 in a34646 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34666,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k34639 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(27392),t1);}

/* k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19286,2,t0,t1);}
t2=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19288,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19342,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34521,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[93],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[353],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34527,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t4,lf[828],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a34526 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34527,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34543,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t4,t8,C_fix(256));}
else{
t7=t4;
f_34543(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_34543(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k34541 in a34526 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34543,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34554,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k34552 in k34541 in a34526 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34554,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k34519 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(28416),t1);}

/* k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19345,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34382,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[93],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[352],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[352],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[353],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34388,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[827],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a34387 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34388,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34408,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34411,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t7,t11,C_fix(256));}
else{
t10=t7;
f_34411(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_34411(2,t9,C_SCHEME_FALSE);}}

/* k34409 in a34387 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_34408(2,t2,C_SCHEME_END_OF_LIST);}}

/* k34406 in a34387 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34408,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k34380 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(28672),t1);}

/* k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19348,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34230,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[352],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[352],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[353],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34236,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[826],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a34235 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34236(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34236,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34254,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t10,t7,C_fix(768));}

/* k34252 in a34235 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34254,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,t3,C_fix(256));}}

/* k34261 in k34252 in a34235 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k34228 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(28160),t1);}

/* k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19351,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34159,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34165,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34183,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[825],C_fix(27904),t6,t7,t8);}

/* a34182 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34183,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34187,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k34185 in a34182 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34188 in k34185 in a34182 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34206,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34204 in k34188 in k34185 in a34182 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34206,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a34164 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34165,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k34157 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(27904),t1);}

/* k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19351,2,t0,t1);}
t2=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19353,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19374,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19490,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34083,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[353],t21);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t5,lf[824],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k34081 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(28928),t1);}

/* k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19493,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34003,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[352],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34009,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[823],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a34008 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34009,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34016,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 377  is-op?");
f_19353(t4,t7);}
else{
t6=t4;
f_34016(2,t6,C_SCHEME_FALSE);}}

/* k34014 in a34008 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34016,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 377  inf->pre");
f_19374(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k34001 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_34003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(29184),t1);}

/* k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19496,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33867,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[352],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[352],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[353],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33873,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33899,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[822],C_fix(29440),t23,t24,t25);}

/* a33898 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33899,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33907,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k33905 in a33898 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a33872 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33873,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33881,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33890,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t5,t6,C_fix(512));}
else{
t5=t4;
f_33881(t5,t2);}}

/* k33888 in a33872 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_33881(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k33879 in a33872 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_33881(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k33865 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(29440),t1);}

/* k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19499,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33823,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[353],t11);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[821],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33821 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(29696),t1);}

/* k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19502,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33713,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33719,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33741,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[820],C_fix(33536),t10,t11,t12);}

/* a33740 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33741,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[401]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33752,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t8,t2);}

/* k33750 in a33740 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33752,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li548),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_33754(t5,((C_word*)t0)[2],t1);}

/* do2956 in k33750 in a33740 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_33754(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33754,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33783,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k33781 in do2956 in k33750 in a33740 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33783,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_33754(t7,((C_word*)t0)[2],t6);}

/* a33718 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33719,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33735,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t5,t6,C_fix(256));}

/* k33733 in a33718 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33735,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k33711 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(33536),t1);}

/* k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19505,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33638,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33644,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33666,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[819],C_fix(34560),t10,t11,t12);}

/* a33665 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33666,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33670,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k33668 in a33665 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33677,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33675 in k33668 in a33665 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33677,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[684],t1));}

/* a33643 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33644,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33660,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t5,t6,C_fix(256));}

/* k33658 in a33643 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33660,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k33636 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(34560),t1);}

/* k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19508,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33425,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[353],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[353],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[367],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[352],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33431,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33506,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[818],C_fix(34304),t21,t22,t23);}

/* a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33506,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33510,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33546,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k33544 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33508 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33510,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li543),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a33525 in k33508 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33526(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_33526r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33526r(t0,t1,t2,t3);}}

static void C_ccall f_33526r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33534,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33538,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k33536 in a33525 in k33508 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33542,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t2,((C_word*)t0)[2]);}

/* k33540 in k33536 in a33525 in k33508 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33532 in a33525 in k33508 in a33505 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a33430 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33431,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33438,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33474,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_33474(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_33438(t10,t9);}}

/* k33472 in a33430 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33474,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_33438(t2,C_SCHEME_UNDEFINED);}}

/* k33476 in k33472 in a33430 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33438(t3,t2);}

/* k33436 in a33430 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_33438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33438,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33449,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t4,t5);}

/* k33447 in k33436 in a33430 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k33423 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(34304),t1);}

/* k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19511,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33399,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33405,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[817],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a33404 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33405,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k33397 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(33792),t1);}

/* k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19514,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33371,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33379,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(35072));}

/* k33377 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33383,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-emitter");
f_18359(t2,lf[412]);}

/* k33381 in k33377 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[4],lf[816],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33369 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(35072),t1);}

/* k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19517,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33343,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33351,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(35584));}

/* k33349 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33355,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-emitter");
f_18359(t2,lf[411]);}

/* k33353 in k33349 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[4],lf[815],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33341 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(35584),t1);}

/* k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19520,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33315,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33323,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(35328));}

/* k33321 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33327,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-emitter");
f_18359(t2,lf[814]);}

/* k33325 in k33321 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[4],lf[813],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33313 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(35328),t1);}

/* k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19523,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33287,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33295,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(34816));}

/* k33293 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33299,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-emitter");
f_18359(t2,lf[422]);}

/* k33297 in k33293 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[4],lf[812],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33285 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(34816),t1);}

/* k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19526,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33150,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[353],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[352],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[353],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[97],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[352],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33156,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33186,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[811],C_fix(36096),t22,t23,t24);}

/* a33185 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33186,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[810]);}

/* a33155 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33156,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33180,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t6,t7,C_fix(256));}

/* k33178 in a33155 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33180,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k33148 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(36096),t1);}

/* k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19529,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33092,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33100,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(31744));}

/* k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33102,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[3],lf[809],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33102,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33106,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k33104 in a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33109,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33134,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t3,lf[789],((C_word*)t0)[3]);}

/* k33132 in k33104 in a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33134,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_33109(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33122,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33126,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t3,t4);}}

/* k33124 in k33132 in k33104 in a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[2],lf[808],t1);}

/* k33120 in k33132 in k33104 in a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33107 in k33104 in a33101 in k33098 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33090 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(31744),t1);}

/* k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19532,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33031,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33039,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t7,C_fix(31488));}

/* k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33041,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[3],lf[807],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33041,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33045,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33048,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33076,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t3,lf[775],((C_word*)t0)[3]);}

/* k33074 in k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33076,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_33048(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33064,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33068,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t3,t4);}}

/* k33066 in k33074 in k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[2],lf[806],t1);}

/* k33062 in k33074 in k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33046 in k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  set-emit-info!");
f_18092(t2,lf[775],lf[774],((C_word*)t0)[3]);}

/* k33049 in k33046 in k33043 in a33040 in k33037 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33029 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_33031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(31488),t1);}

/* k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19535,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32940,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[352],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[353],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32946,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32981,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[805],C_fix(30208),t10,t11,t12);}

/* a32980 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32981,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32987,a[2]=t4,a[3]=t3,a[4]=((C_word)li535),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32995,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k32993 in a32980 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a32986 in a32980 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32987(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32987,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32945 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32946,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32979,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t4,C_fix(4608),lf[804],C_SCHEME_FALSE);}}

/* k32977 in a32945 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32979,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k32938 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(30208),t1);}

/* k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19538,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32838,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32844,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32887,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[803],C_fix(29952),t10,t11,t12);}

/* a32886 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32887,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32891,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t5,lf[802],C_SCHEME_TRUE,t3);}

/* k32889 in a32886 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32896,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li532),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32904,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t3,((C_word*)t0)[2]);}

/* k32902 in k32889 in a32886 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a32895 in k32889 in a32886 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32896(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32896,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32843 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32844,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32877,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k32875 in a32843 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32877,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k32836 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(29952),t1);}

/* k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19541,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32752,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[353],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[353],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[352],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32758,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[801],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a32757 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32758(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32758,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k32750 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(30720),t1);}

/* k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19544,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32472,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32478,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32521,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[800],C_fix(30464),t10,t11,t12);}

/* a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32521,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32525,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32525,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[378]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li528),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_32533(t8,((C_word*)t0)[2],t1);}

/* do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32533(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32533,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32556,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t3,t4);}}

/* k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32559,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t2,t3);}

/* k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32565,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32565,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t5,((C_word*)t0)[2],C_fix(10756));}

/* k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32625,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_32568(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32632,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_32568(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32642,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_32568(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k32650 in k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32652,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[555],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_32568(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k32664 in k32650 in k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32666,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[762],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_32568(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k32674 in k32664 in k32650 in k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32676,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_32568(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k32684 in k32674 in k32664 in k32650 in k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32686,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[298],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_32568(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k32694 in k32684 in k32674 in k32664 in k32650 in k32640 in k32630 in k32623 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32696,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[230],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32568(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_32568(t2,C_SCHEME_UNDEFINED);}}

/* k32566 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32568,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32592,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_32592(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_32592(t4,C_SCHEME_FALSE);}}

/* k32590 in k32566 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32592,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[798],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[799],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32571(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32571(t4,t3);}}

/* k32569 in k32566 in k32563 in k32560 in k32557 in k32554 in do3035 in k32523 in a32520 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32571,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_32533(t7,((C_word*)t0)[2],t6);}

/* a32477 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32478,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32511,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k32509 in a32477 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32511,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k32470 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(30464),t1);}

/* k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19547,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32358,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[367],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[97],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[352],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32364,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32390,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[797],C_fix(32000),t12,t13,t14);}

/* a32389 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32390,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32394,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k32392 in a32389 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32394,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32398 in k32392 in a32389 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32400,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32420,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[378],t1));}}

/* k32418 in k32398 in k32392 in a32389 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32420,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a32363 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32364,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32374,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_32374(t12,t11);}
else{
t10=t8;
f_32374(t10,C_SCHEME_FALSE);}}

/* k32372 in a32363 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32374,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k32356 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(32000),t1);}

/* k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19550,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32161,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[367],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[367],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[352],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[352],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[352],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[353],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32167,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32235,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[796],C_fix(32256),t26,t27,t28);}

/* a32234 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32235,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32239,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t5,t2);}

/* k32237 in a32234 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32167,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32180,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32186,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t9,t4,C_fix(14336));}

/* k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32186,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32192,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_32192(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32221,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t11,C_fix(4608),lf[795],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32180(t5,t4);}}

/* k32219 in k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32192(t3,t2);}

/* k32190 in k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32192,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k32194 in k32190 in k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32196,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_32199(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32210,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t5,C_fix(4608),lf[794],C_SCHEME_FALSE);}}

/* k32208 in k32194 in k32190 in k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32199(t3,t2);}

/* k32197 in k32194 in k32190 in k32184 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32199,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32180(t4,t3);}

/* k32178 in a32166 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_32180(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k32159 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_32161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(32256),t1);}

/* k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19550,2,t0,t1);}
t2=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19552,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20073,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31889,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[352],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[367],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[352],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[352],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[353],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[367],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[367],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[352],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[353],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[367],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[352],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[353],t58);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t4,lf[793],C_fix(33024),t59,C_retrieve2(lf[374],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k31887 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(33024),t1);}

/* k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20076,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31833,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[352],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[353],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31841,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  simple-unit-parser");
f_18351(t13,C_fix(33280));}

/* k31839 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(((C_word*)t0)[3],lf[792],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k31831 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(33280),t1);}

/* k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20582,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31661,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[353],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[367],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[97],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[97],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[93],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[367],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[352],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31667,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31713,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[791],C_fix(32512),t25,t26,t27);}

/* a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31713(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31713,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20082,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t7,t2);}

/* k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20082,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20100,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20541,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t17,t18,C_fix(14864));}

/* k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20541,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20545,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t2,lf[788],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20548,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t3,lf[777],((C_word*)((C_word*)t0)[6])[1]);}}

/* k20573 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20575,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_20548(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20563,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20567,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t3,t4);}}

/* k20565 in k20573 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[2],lf[790],t1);}

/* k20561 in k20573 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k20546 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t2,lf[789],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k20550 in k20546 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_20100(t4,t3);}

/* k20543 in k20539 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20100(t3,t2);}

/* k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20100,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20530,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20534,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_20107(t5,C_SCHEME_UNDEFINED);}}

/* k20532 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k20528 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20107(t3,t2);}

/* k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20107,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20405,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li521),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_20405(t7,t2,t3);}

/* do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20405(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20405,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20415,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20426,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t4,t5);}}

/* k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20426,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li520),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_20428(t5,((C_word*)t0)[2],t1);}

/* do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20428(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20428,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 377  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20442,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20495,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_20445(t4,C_SCHEME_UNDEFINED);}}

/* k20493 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20445(t3,t2);}

/* k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20448,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20480,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 377  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_20448(t3,C_SCHEME_UNDEFINED);}}

/* k20478 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20448(t3,t2);}

/* k20446 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20451,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20461,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k20459 in k20446 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20461,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20473,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20451(t2,C_SCHEME_UNDEFINED);}}

/* k20471 in k20459 in k20446 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20473,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k20463 in k20459 in k20446 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20451(t3,t2);}

/* k20449 in k20446 in k20443 in k20440 in do3148 in k20424 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20428(t3,((C_word*)t0)[2],t2);}

/* k20413 in do3145 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20405(t3,((C_word*)t0)[2],t2);}

/* k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20369,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li519),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_20369(t7,t2,t3);}

/* do3159 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20369(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20369,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20380,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20395,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k20393 in do3159 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20395,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k20378 in do3159 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20369(t4,((C_word*)t0)[2],t3);}

/* k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20117,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li518),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_20313(t8,t3,t4);}

/* do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20313(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20313,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t3,t4);}}

/* k20321 in do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20326,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k20324 in k20321 in do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20326,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20329,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20347,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t5,t6,C_fix(20224));}

/* k20345 in k20324 in k20321 in do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20347,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[354],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20329(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_20329(t2,C_SCHEME_UNDEFINED);}}

/* k20327 in k20324 in k20321 in do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20329(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20329,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k20331 in k20327 in k20324 in k20321 in do3164 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20313(t4,((C_word*)t0)[2],t3);}

/* k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_20123(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[353],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_20123(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_20123(t4,t3);}}

/* k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20123(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20123,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20126,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20274 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20276,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20280,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20284,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_20126(t3,t2);}}

/* k20282 in k20274 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k20278 in k20274 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20126(t3,t2);}

/* k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20126,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[787]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[605],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[786]);}

/* k20155 in k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20160,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[785]);}

/* k20158 in k20155 in k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[784]);}

/* k20161 in k20158 in k20155 in k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[783]);}

/* k20164 in k20161 in k20158 in k20155 in k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20166,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[712],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[713],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[712],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[715],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[716]);
t14=(C_word)C_a_i_list(&a,4,lf[717],((C_word*)t0)[7],t13,lf[781]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[712],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k20223 in k20164 in k20161 in k20158 in k20155 in k20152 in k20124 in k20121 in k20118 in k20115 in k20111 in k20108 in k20105 in k20098 in k20080 in a31712 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20225,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[782],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[712],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[665],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[712],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[666],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[712],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31667,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31683,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k31681 in a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31686,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k31684 in k31681 in a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31686,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31689,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_31689(t7,t6);}
else{
t5=t4;
f_31689(t5,C_SCHEME_UNDEFINED);}}

/* k31687 in k31684 in k31681 in a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31689,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31692,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_31692(t5,t4);}
else{
t3=t2;
f_31692(t3,C_SCHEME_UNDEFINED);}}

/* k31690 in k31687 in k31684 in k31681 in a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31692,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31703,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t3,((C_word*)t0)[8]);}

/* k31701 in k31690 in k31687 in k31684 in k31681 in a31666 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k31659 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(32512),t1);}

/* k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20585,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31516,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[352],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[97],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[352],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[353],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[352],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31522,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[780],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a31521 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31522,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31535,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_31535(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31561,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t12,t13,C_fix(256));}}

/* k31559 in a31521 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31561,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31535(t4,t3);}

/* k31533 in a31521 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31535,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k31514 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(37632),t1);}

/* k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20588,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31059,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[97],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[352],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[352],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[352],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[353],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[352],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31065,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31104,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[779],C_fix(36352),t23,t24,t25);}

/* a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31104,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31108,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31108,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[378]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31117,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31120,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t7,t2,C_fix(24576));}

/* k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31120,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31129,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li513),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_31129(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t2,t3);}}

/* k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31181,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31396,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_31193(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31334,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 377  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k31332 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31334,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31343,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31368,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 377  substring");
t6=*((C_word*)lf[393]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_31343(t4,C_SCHEME_FALSE);}}

/* k31366 in k31332 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_31343(t2,(C_word)C_i_string_equal_p(t1,lf[778]));}

/* k31341 in k31332 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31343,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31350,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31354,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 377  substring");
t5=*((C_word*)lf[393]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_31193(t2,C_SCHEME_UNDEFINED);}}

/* k31352 in k31341 in k31332 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string->symbol");
t2=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31348 in k31341 in k31332 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_31193(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31193,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31196,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t3,((C_word*)t0)[2],C_fix(24064));}

/* k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31271,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t2,lf[775],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k31310 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31312,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t2,lf[777],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_31196(t2,C_SCHEME_UNDEFINED);}}

/* k31314 in k31310 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31316,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k31318 in k31314 in k31310 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31320,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[708],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[776]);
t6=((C_word*)t0)[2];
f_31196(t6,t5);}

/* k31273 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31275,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31279,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k31277 in k31273 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31279,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31306,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  get-emit-info");
f_18070(t4,lf[775],((C_word*)((C_word*)t0)[2])[1]);}

/* k31304 in k31277 in k31273 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31306,2,t0,t1);}
t2=(C_word)C_eqp(lf[774],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[576]);
t4=(C_word)C_a_i_list(&a,3,lf[712],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[666],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31282(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_31282(t3,C_SCHEME_UNDEFINED);}}

/* k31280 in k31277 in k31273 in k31269 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31282(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31282,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[708],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[773]);
t5=((C_word*)t0)[2];
f_31196(t5,t4);}

/* k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31196,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31199,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31210,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31268,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k31266 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-append");
t2=*((C_word*)lf[159]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[772]);}

/* k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31210,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31212,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li514),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_31212(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31212(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31212,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31227,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  string-append");
t6=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[770]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31231,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31260,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k31258 in do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-append");
t2=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31229 in do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31231,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31234,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_31234(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31248,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  string-append");
t6=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[771]);}}

/* k31246 in k31229 in do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31234(t3,t2);}

/* k31232 in k31229 in do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_31212(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31225 in do3246 in k31208 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31227,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[402],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k31197 in k31194 in k31191 in k31394 in k31182 in k31179 in k31176 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31199,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_31117(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3220 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31129(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31129,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31139,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k31137 in do3220 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31139,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[769],t2);}

/* k31143 in k31137 in do3220 in k31118 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31145,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[708],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[401],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_31129(t9,((C_word*)t0)[2],t8);}

/* k31115 in k31106 in a31103 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a31064 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31065(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31065,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31076,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31082,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t9,t7,C_fix(24576));}

/* k31080 in a31064 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31082,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 377  remove-token-type");
f_19288(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_31076(t2,C_SCHEME_UNDEFINED);}}

/* k31096 in k31080 in a31064 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31098,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31076(t5,t4);}

/* k31074 in a31064 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_31076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k31057 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_31059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(36352),t1);}

/* k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20591,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30983,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[353],t19);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[768],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k30981 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(36608),t1);}

/* k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20594,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30939,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[93],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30945,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30959,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-rule");
f_17652(t3,lf[767],C_fix(36864),t5,t6,t7);}

/* a30958 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30959,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30967,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30971,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k30969 in a30958 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30965 in a30958 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30967,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[378],t1));}

/* a30944 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30945,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30953,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  parse-unit-position");
f_18010(t4,t5);}

/* k30951 in a30944 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k30937 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t2=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[320],"*rules*"),C_fix(36864),t1);}

/* k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20594,2,t0,t1);}
t2=lf[386]=C_SCHEME_FALSE;;
t3=lf[387]=C_SCHEME_FALSE;;
t4=lf[388]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[389],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[390]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20601,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[401]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20778,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[411]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20931,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[412]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20940,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[420]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20987,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[422]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20993,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21012,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30931,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro-2");
t14=C_retrieve(lf[724]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[765],t13);}

/* a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30931,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24365,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[766]);}

/* k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24368,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-iteration");
f_24347(t2,lf[765],((C_word*)t0)[2],C_retrieve2(lf[614],"*loop-operators*"));}

/* k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24368,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[576],C_retrieve2(lf[614],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24375,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24520,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24534,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  loop-returning");
t11=C_retrieve2(lf[433],"loop-returning");
f_21119(3,t11,t10,t1);}

/* k24532 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24534,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_24520(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24530,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  loop-returning");
t3=C_retrieve2(lf[433],"loop-returning");
f_21119(3,t3,t2,((C_word*)t0)[2]);}}

/* k24528 in k24532 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_24520(t2,(C_word)C_i_car(t1));}

/* k24518 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24375,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  loop-end-tests");
t4=C_retrieve2(lf[428],"loop-end-tests");
f_21071(3,t4,t3,((C_word*)t0)[2]);}

/* k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_24382(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[353],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[764],C_SCHEME_FALSE);
t7=t2;
f_24382(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24382(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24382,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24393,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  loop-bindings");
t4=C_retrieve2(lf[425],"loop-bindings");
f_21035(3,t4,t3,((C_word*)t0)[2]);}

/* k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24397,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  loop-initially");
t4=C_retrieve2(lf[427],"loop-initially");
f_21059(3,t4,t3,((C_word*)t0)[3]);}

/* k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24401,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[576]);
t3=(C_word)C_a_i_list(&a,1,lf[758]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24469,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping");
t7=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t7,t6,((C_word*)t0)[3]);}

/* k24471 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24477,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24481,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  loop-stepping");
t4=C_retrieve2(lf[431],"loop-stepping");
f_21095(3,t4,t3,((C_word*)t0)[2]);}

/* k24479 in k24471 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24481,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 378  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k24475 in k24471 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k24467 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k24463 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24465,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[712],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[666],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24433,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24437,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  loop-finally");
t9=C_retrieve2(lf[432],"loop-finally");
f_21107(3,t9,t8,((C_word*)t0)[2]);}

/* k24435 in k24463 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24437,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k24431 in k24463 in k24399 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24433,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[712],t3);
t5=(C_word)C_a_i_list(&a,2,lf[666],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 378  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k24395 in k24391 in k24380 in k24377 in k24373 in k24366 in k24363 in a30930 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24397,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21015,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30917,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[763],t3);}

/* a30916 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30917,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[762],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[378],t5,t3));}

/* k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21018,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30888,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[761],t3);}

/* a30887 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30888(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30888,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30892,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[760]);}

/* k30890 in a30887 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30892,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21021,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30885,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[759],t3);}

/* a30884 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30885(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30885,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21021,2,t0,t1);}
t2=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21029,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[425],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21035,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[426],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21047,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[427],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21059,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[428],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21071,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21083,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[430],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21089,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21095,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[432],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21107,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[433],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21119,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[434],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21131,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21282,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21353,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21359,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[447],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21365,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[448],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21371,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[456],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21531,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21613,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[494],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21995,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22042,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[516],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22393,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[524],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22535,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22728,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[541],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22795,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[544],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22833,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[547],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22992,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[575],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23538,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[577],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23544,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[583],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23610,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[589],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23701,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[592],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23802,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[598],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23933,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[604],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24347,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[525],C_retrieve2(lf[524],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[438],C_retrieve2(lf[544],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[612],C_retrieve2(lf[494],"parse-repeat"),lf[609]);
t38=(C_word)C_a_i_list(&a,2,lf[472],C_retrieve2(lf[464],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[468],C_retrieve2(lf[464],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[470],C_retrieve2(lf[464],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[479],C_retrieve2(lf[464],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[469],C_retrieve2(lf[464],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[471],C_retrieve2(lf[464],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[504],C_retrieve2(lf[497],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[513],C_retrieve2(lf[497],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[498],C_retrieve2(lf[497],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[517],C_retrieve2(lf[516],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[503],C_retrieve2(lf[497],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[465],C_retrieve2(lf[456],"parse-for"),lf[609],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[456],"parse-for"),lf[609]);
t51=(C_word)C_a_i_list(&a,3,lf[605],C_retrieve2(lf[538],"parse-do"),lf[596]);
t52=(C_word)C_a_i_list(&a,3,lf[557],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t54=(C_word)C_a_i_list(&a,3,lf[562],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t55=(C_word)C_a_i_list(&a,3,lf[548],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t56=(C_word)C_a_i_list(&a,3,lf[549],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t57=(C_word)C_a_i_list(&a,3,lf[551],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t58=(C_word)C_a_i_list(&a,3,lf[552],C_retrieve2(lf[547],"parse-accumulation"),lf[596]);
t59=(C_word)C_a_i_list(&a,4,lf[584],C_retrieve2(lf[583],"parse-thereis"),lf[596],C_retrieve2(lf[575],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[585],C_retrieve2(lf[583],"parse-thereis"),lf[596],C_retrieve2(lf[575],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[586],C_retrieve2(lf[583],"parse-thereis"),lf[596],C_retrieve2(lf[575],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[576],C_retrieve2(lf[589],"parse-return"),lf[596],C_retrieve2(lf[575],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[580],C_retrieve2(lf[577],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[579],C_retrieve2(lf[577],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[598],"parse-conditional"),lf[596]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[598],"parse-conditional"),lf[596]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[598],"parse-conditional"),lf[596]);
t68=(C_word)C_a_i_list(&a,3,lf[442],C_retrieve2(lf[541],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[614],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24541,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30743,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro-2");
t73=C_retrieve(lf[724]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[609],t72);}

/* a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30743(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30743,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24547,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-iteration");
f_24347(t3,lf[609],t2,C_retrieve2(lf[614],"*loop-operators*"));}

/* k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24550,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[576],C_retrieve2(lf[614],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24679,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  loop-returning");
t6=C_retrieve2(lf[433],"loop-returning");
f_21119(3,t6,t5,t1);}

/* k24677 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24679,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24561,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-bindings");
t3=C_retrieve2(lf[425],"loop-bindings");
f_21035(3,t3,t2,((C_word*)t0)[2]);}

/* k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24565,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-initially");
t4=C_retrieve2(lf[427],"loop-initially");
f_21059(3,t4,t3,((C_word*)t0)[2]);}

/* k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24589,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-end-tests");
t4=C_retrieve2(lf[428],"loop-end-tests");
f_21071(3,t4,t3,((C_word*)t0)[2]);}

/* k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[353],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[758],lf[317]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_24596(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_24596(t3,C_SCHEME_END_OF_LIST);}}

/* k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24600,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping");
t4=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t4,t3,((C_word*)t0)[2]);}

/* k24602 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24608,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-stepping");
t4=C_retrieve2(lf[431],"loop-stepping");
f_21095(3,t4,t3,((C_word*)t0)[2]);}

/* k24610 in k24602 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24612,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[758],lf[754]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24628,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24632,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  loop-finally");
t5=C_retrieve2(lf[432],"loop-finally");
f_21107(3,t5,t4,((C_word*)t0)[2]);}

/* k24630 in k24610 in k24602 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24632,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k24626 in k24610 in k24602 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24628,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[317],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k24606 in k24602 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k24598 in k24594 in k24591 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k24587 in k24567 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24589,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[754],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[755],t2);
t4=(C_word)C_a_i_list(&a,3,lf[756],lf[757],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k24563 in k24559 in k24548 in k24545 in a30742 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24565,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24541,2,t0,t1);}
t2=C_mutate((C_word*)lf[615]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24685,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25414,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25433,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[622]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25884,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[623]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25903,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[625]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26632,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[626]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26651,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27380,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[629]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27399,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[630]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27850,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[631]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27869,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[632]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28320,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[633]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28339,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[634]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28809,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[635]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28827,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[636]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28842,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[637]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28857,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[638]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28876,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[639]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28891,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[640]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28910,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[641]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28929,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[642]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28952,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[643]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28971,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[644]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28994,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[646]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29041,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[648]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29096,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[649]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29115,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[650]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29138,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[651]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29166,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[652]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29194,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[653]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29222,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[654]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29250,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[655]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29278,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29306,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29334,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29362,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[659]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29390,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[660]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29405,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29463,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t41=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[752],lf[753]);}

/* k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29466,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[750],lf[751]);}

/* k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29469,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[748],lf[749]);}

/* k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29472,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[746],lf[747]);}

/* k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[744],lf[745]);}

/* k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[742],lf[743]);}

/* k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29481,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[740],lf[741]);}

/* k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29484,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[738],lf[739]);}

/* k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29487,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[736],lf[737]);}

/* k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29490,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[734],lf[735]);}

/* k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29493,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[732],lf[733]);}

/* k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29493,2,t0,t1);}
t2=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29495,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[668]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29552,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[669]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29609,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29618,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t6=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[730],lf[731]);}

/* k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29621,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[728],lf[729]);}

/* k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29624,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[725]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[726],lf[727]);}

/* k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29624,2,t0,t1);}
t2=C_mutate((C_word*)lf[670]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29626,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[402]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29816,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[391]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29830,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[678]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29844,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[679]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29847,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[680],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29859,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[682],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29868,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[683],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29912,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[413]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29934,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[684]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29953,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[687]+1,C_retrieve(lf[679]));
t13=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30121,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30184,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30193,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[696]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30199,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[697]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30208,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[699]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30266,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[700],lf[701]);
t20=C_mutate(&lf[702],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30276,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30347,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30680,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li504),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_30680(t28,t24,C_retrieve2(lf[614],"*loop-operators*"));}

/* do5548 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30680(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30680,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[580],C_retrieve2(lf[702],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[579],C_retrieve2(lf[702],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30708,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[557]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[562]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[548]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[549]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[551]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[552]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[584]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[585]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[586]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[576]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[580]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[579]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_30708(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_30708(t11,t10);}}}

/* k30706 in do5548 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30680(t3,((C_word*)t0)[2],t2);}

/* k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30347,2,t0,t1);}
t2=C_mutate(&lf[705],t1);
t3=C_mutate(&lf[706],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30349,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30637,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30674,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 656  ##sys#register-macro-2");
t6=C_retrieve(lf[724]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[723],t5);}

/* a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30674(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30674,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30392,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 601  parse-iteration");
f_24347(t3,lf[723],t2,C_retrieve2(lf[705],"*run-operators*"));}

/* k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30392,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[700],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30398,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 609  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[722]);}

/* k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 610  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[721]);}

/* k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 611  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[720]);}

/* k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 613  loop-end-tests");
t3=C_retrieve2(lf[428],"loop-end-tests");
f_21071(3,t3,t2,((C_word*)t0)[3]);}

/* k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30408,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30411,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30618,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 614  loop-finally");
t5=C_retrieve2(lf[432],"loop-finally");
f_21107(3,t5,t4,((C_word*)t0)[3]);}

/* k30616 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30618,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30630,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 615  loop-finally");
t4=C_retrieve2(lf[432],"loop-finally");
f_21107(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_30411(t2,C_SCHEME_UNDEFINED);}}

/* k30628 in k30616 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30630,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 600  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30624 in k30616 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30626,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[378],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30411(t4,t3);}

/* k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30411,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30414,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30604,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30611,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 623  loop-looping");
t5=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30575,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_30575(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[353],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_30575(t7,t6);}}}

/* k30573 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30575(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30575,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_30414(2,t5,t4);}

/* k30609 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 622  process-code-terminates?");
f_30349(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k30602 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_30414(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 624  printf");
t2=C_retrieve(lf[369]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[719]);}}

/* k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30414,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[712],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[713],t4);
t6=(C_word)C_a_i_list(&a,1,lf[714]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[714]);
t8=(C_word)C_a_i_list(&a,3,lf[712],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[715],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[716]);
t14=(C_word)C_a_i_list(&a,4,lf[717],((C_word*)t0)[6],t13,lf[718]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[712],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30509,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30513,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 643  loop-looping");
t20=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t20,t19,((C_word*)t0)[3]);}

/* k30511 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30517,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30521,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 644  loop-stepping");
t4=C_retrieve2(lf[431],"loop-stepping");
f_21095(3,t4,t3,((C_word*)t0)[2]);}

/* k30519 in k30511 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30521,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 600  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30515 in k30511 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 600  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30507 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 600  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30505,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[712],t2);
t4=(C_word)C_a_i_list(&a,3,lf[665],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[712],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[666],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[712],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30461,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 648  loop-bindings");
t12=C_retrieve2(lf[425],"loop-bindings");
f_21035(3,t12,t11,((C_word*)t0)[2]);}

/* k30459 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30461,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30457,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 649  loop-initially");
t3=C_retrieve2(lf[427],"loop-initially");
f_21059(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_30424(t2,C_SCHEME_FALSE);}}

/* k30455 in k30459 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_30424(t2,(C_word)C_i_nullp(t1));}

/* k30422 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30424(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30424,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 652  loop-bindings");
t3=C_retrieve2(lf[425],"loop-bindings");
f_21035(3,t3,t2,((C_word*)t0)[2]);}}

/* k30433 in k30422 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30439,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30443,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 653  loop-initially");
t4=C_retrieve2(lf[427],"loop-initially");
f_21059(3,t4,t3,((C_word*)t0)[2]);}

/* k30441 in k30433 in k30422 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30443,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 600  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30437 in k30433 in k30422 in k30503 in k30412 in k30409 in k30406 in k30402 in k30399 in k30396 in k30390 in a30673 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30439,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30640,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30645,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 659  ##sys#register-macro");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[711],t3);}

/* a30644 in k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30645(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_30645r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_30645r(t0,t1,t2,t3);}}

static void C_ccall f_30645r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30649,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30659,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_30659(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_30659(t6,C_SCHEME_FALSE);}}

/* k30657 in a30644 in k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_30649(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 661  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[709],((C_word*)t0)[2]);}}

/* k30647 in a30644 in k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30649,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[708],t2));}

/* k30638 in k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30643,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 768  return-to-host");
t3=C_retrieve(lf[707]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k30641 in k30638 in k30635 in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30349(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_30349,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30365,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 596  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k30363 in process-code-terminates? in k30345 in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 597  process-code-terminates?");
f_30349(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30276,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30287,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 564  loop-error");
f_21371(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[703],t7,lf[704]));}
else{
t13=t12;
f_30287(2,t13,C_SCHEME_UNDEFINED);}}

/* k30285 in run-while-until in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[579]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_30290(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[580]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[354],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_30290(t10,t9);}
else{
t5=t2;
f_30290(t5,C_SCHEME_UNDEFINED);}}}

/* k30288 in k30285 in run-while-until in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30290,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30297,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[700],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 568  make-loop-clause");
f_21131(t2,(C_word)C_a_i_list(&a,4,lf[435],((C_word*)t0)[2],lf[440],t4));}

/* k30295 in k30288 in k30285 in run-while-until in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 568  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30270,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29929,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k29927 in hush in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29929,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5460,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k30268 in hush in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30208(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_30208r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30208r(t0,t1,t2);}}

static void C_ccall f_30208r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30212,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 539  scheduler-stop");
f_29912(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30226,a[2]=t5,a[3]=((C_word)li496),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_30226(t7,t3,t2);}}

/* do5518 in stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30226(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30226,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30236,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 543  scheduler-stop");
f_29912(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 544  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[698],t5);}}}

/* k30234 in do5518 in stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30226(t3,((C_word*)t0)[2],t2);}

/* k30210 in stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 545  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30203,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29907,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k29905 in cont in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29907,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5450,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k30201 in cont in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 535  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29889,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k29887 in paused? in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29889,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5442,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30188,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29898,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k29896 in pause in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29898,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5446,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k30186 in pause in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 528  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30121(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_30121r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_30121r(t0,t1,t2);}}

static void C_ccall f_30121r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30134,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29854,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[690]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30146,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_30146(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_30146(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[693])));}}}

/* k30144 in time-format in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[687]+1,C_retrieve(lf[679]));
C_trace("ChickenBridge.scm: 517  scheduler-set-time-milliseconds");
f_29859(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[691]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[687]+1,C_retrieve(lf[678]));
C_trace("ChickenBridge.scm: 521  scheduler-set-time-milliseconds");
f_29859(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 524  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[692],t4);}}}

/* k29852 in time-format in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29854,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5422,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k30132 in time-format in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[689]));}

/* sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29953(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_29953r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_29953r(t0,t1,t2,t3);}}

static void C_ccall f_29953r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29955,a[2]=t2,a[3]=((C_word)li484),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30067,a[2]=t4,a[3]=((C_word)li485),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30072,a[2]=t5,a[3]=((C_word)li486),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start54775498");
t7=t6;
f_30072(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id54785496");
t9=t5;
f_30067(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body54755480");
t11=t4;
f_29955(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[685]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[686],t10);}}}}

/* def-start5477 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30072,NULL,2,t0,t1);}
C_trace("def-id54785496");
t2=((C_word*)t0)[2];
f_30067(t2,t1,C_fix(0));}

/* def-id5478 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30067(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30067,NULL,3,t0,t1,t2);}
C_trace("body54755480");
t3=((C_word*)t0)[2];
f_29955(t3,t1,t2,C_fix(-1));}

/* body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29955(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29955,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29957,a[2]=t4,a[3]=((C_word)li481),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29985,a[2]=t5,a[3]=((C_word)li482),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30015,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30026,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li483),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_30026(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30058,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30062,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 501  nextstart");
t11=t6;
f_29957(t11,t10);}}

/* k30060 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30066,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 501  nextid");
t3=((C_word*)t0)[2];
f_29985(t3,t2);}

/* k30064 in k30060 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 501  scheduler-sprout");
f_29868(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30056 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_30015(2,t2,((C_word*)t0)[2]);}

/* do5489 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_30026(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30026,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30036,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30051,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 499  nextstart");
t6=((C_word*)t0)[2];
f_29957(t6,t5);}}

/* k30049 in do5489 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30055,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 499  nextid");
t3=((C_word*)t0)[2];
f_29985(t3,t2);}

/* k30053 in k30049 in do5489 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 499  scheduler-sprout");
f_29868(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30034 in do5489 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30026(t3,((C_word*)t0)[2],t2);}

/* k30013 in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_30015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 505  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29985(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29985,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5475 in sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29957,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29934(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29934,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29939,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_29939 in load-sal-file in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29939(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29939,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29944,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_29944(2,t4,C_SCHEME_FALSE);}}

/* k29942 */
static void C_ccall f_29944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5466(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29912(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29912,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29916,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k29914 in scheduler-stop in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29916,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5455,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29868(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29868,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29872,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k29870 in scheduler-sprout in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29872,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5435,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29859(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29859,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29863,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[681]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k29861 in scheduler-set-time-milliseconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29863,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5427,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29847,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5419(t2));}

/* current-time-milliseconds in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29844,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5416(t2));}

/* print-error in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29830(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29830,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29835,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_29835(2,t4,C_SCHEME_FALSE);}}

/* k29833 in print-error in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5411(C_SCHEME_UNDEFINED,t1));}

/* print-message in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29816(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29816,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29821,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_29821(2,t4,C_SCHEME_FALSE);}}

/* k29819 in print-message in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5405(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29626(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29626,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29680,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29687,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 396  make-string");
t5=*((C_word*)lf[303]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29687,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29689,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li467),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_29689(t5,((C_word*)t0)[2],lf[677],t1,C_fix(0));}

/* do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29689(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29689,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29699,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 399  printf");
t6=C_retrieve(lf[369]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_29699(2,t6,C_SCHEME_UNDEFINED);}}}

/* k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29716,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29718,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li466),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_29718(t7,t3,C_fix(0));}

/* do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29718(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29718,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29738,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29673,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 388  floor");
t14=*((C_word*)lf[167]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 404  string-append");
t3=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[676]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29755,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29758,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 406  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k29756 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29758,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29755(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 407  modulo");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k29798 in k29756 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29800,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_29755(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 409  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k29768 in k29798 in k29756 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29770,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29755(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_29755(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k29753 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29755(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29755,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_29718(t4,((C_word*)t0)[2],t3);}

/* k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29673,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29638,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 389  modulo");
t5=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29638,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29665,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 390  floor");
t5=*((C_word*)lf[167]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k29663 in k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29665,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 391  modulo");
t5=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k29644 in k29663 in k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29646,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 392  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k29651 in k29644 in k29663 in k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29657,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 393  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k29655 in k29651 in k29644 in k29663 in k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29661,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k29659 in k29655 in k29651 in k29644 in k29663 in k29636 in k29671 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 392  string-append");
t2=*((C_word*)lf[159]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[673],((C_word*)t0)[3],lf[674],((C_word*)t0)[2],lf[675],t1);}

/* k29736 in do5393 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 403  string-append");
t2=*((C_word*)lf[159]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[671],t1,lf[672]);}

/* k29714 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 400  printf");
t2=C_retrieve(lf[369]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29700 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 412  printf");
t3=C_retrieve(lf[369]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k29703 in k29700 in k29697 in do5379 in k29685 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29705,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_29689(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k29678 in cm-logo in k29622 in k29619 in k29616 in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 413  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29614,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_29614 in cs:clear in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29614,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5371(C_SCHEME_UNDEFINED));}

/* cs:f in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29552(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_29552r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29552r(t0,t1,t2);}}

static void C_ccall f_29552r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29556,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_29556(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29565,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29585,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_29585(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_29585(t8,C_SCHEME_FALSE);}}}

/* k29583 in cs:f in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29565(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_29565(t2,C_SCHEME_UNDEFINED);}}

/* k29563 in cs:f in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29565,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29573,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_29573 in k29563 in cs:f in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29573,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5364(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k29554 in cs:f in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29495(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_29495r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29495r(t0,t1,t2);}}

static void C_ccall f_29495r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29499,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_29499(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29508,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29528,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_29528(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_29528(t8,C_SCHEME_FALSE);}}}

/* k29526 in cs:i in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29508(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_29508(t2,C_SCHEME_UNDEFINED);}}

/* k29506 in cs:i in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_29508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29508,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29516,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_29516 in k29506 in cs:i in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29516,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5353(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k29497 in cs:i in k29491 in k29488 in k29485 in k29482 in k29479 in k29476 in k29473 in k29470 in k29467 in k29464 in k29461 in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29405,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29417,a[2]=t2,a[3]=((C_word)li456),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29454,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29459,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_29459 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29459(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29459,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5297(C_SCHEME_UNDEFINED,t2));}

/* f_29454 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29454,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5288(C_SCHEME_UNDEFINED,t2));}

/* a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29417(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29417,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29423,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li455),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-current-continuation");
t4=*((C_word*)lf[666]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29423(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29423,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29429,a[2]=t2,a[3]=((C_word)li453),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li454),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  with-exception-handler");
t5=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a29448 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29453,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29451 in a29448 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a29428 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29429(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29429,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29433,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29440,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29444,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29447,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  condition-property-accessor");
t7=C_retrieve(lf[662]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[663],lf[664]);}

/* k29445 in a29428 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29442 in a29428 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[661],t1);}

/* k29438 in a29428 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[391]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29431 in a29428 in a29422 in a29416 in mp:inhook in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29390,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29395,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_29395 in mp:mm in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29395(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29395,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5281(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29362,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29367,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_29367 in mp:bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29367,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5272(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29334,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29339,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_29339 in mp:press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29339,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5257(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29306,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29311,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_29311 in mp:prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29311(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29311,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5242(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_29278,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29283,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_29283 in mp:ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29283,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5227(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_29250,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29255,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_29255 in mp:touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29255,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5211(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_29222,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29227,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_29227 in mp:on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29227,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5195(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29194,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29199,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_29199 in mp:off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29199,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5179(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29166,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29171,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_29171 in mp:midi in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29171,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5164(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29138,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29143,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_29143 in mp:note in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29143,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5147(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29115,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29119,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29120,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_29120 in mm:num-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29120,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5129(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k29117 in mm:num-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29096,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29101,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_29101 in mm:num in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29101,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5118(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29041,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29045,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29048,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  mm:type?");
t6=C_retrieve(lf[645]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k29046 in mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_29051(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 379  mm:type?");
t3=C_retrieve(lf[645]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k29049 in k29046 in mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29051,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29055,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29075,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[647]));}}

/* f_29075 in k29049 in k29046 in mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29075,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5107(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_29055 in k29049 in k29046 in mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29055,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5097(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k29043 in mm:val-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28994,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29001,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  mm:type?");
t4=C_retrieve(lf[645]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k28999 in mm:val in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_29004(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 379  mm:type?");
t3=C_retrieve(lf[645]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k29002 in k28999 in mm:val in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29004,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29008,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29024,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_29024 in k29002 in k28999 in mm:val in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29024,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5084(C_SCHEME_UNDEFINED,t4,t5));}

/* f_29008 in k29002 in k28999 in mm:val in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_29008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29008,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5076(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28971,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28975,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28976,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_28976 in mm:vel-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28976,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5063(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k28973 in mm:vel-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28952(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28952,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28957,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_28957 in mm:vel in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28957,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5052(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28929,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28933,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28934,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_28934 in mm:key-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28934,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5041(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k28931 in mm:key-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28910(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28910,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28915,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_28915 in mm:key in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28915,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5030(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28891,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28895,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28896,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_28896 in mm:chan-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28896(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28896,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5020(C_SCHEME_UNDEFINED,t4,t5));}

/* k28893 in mm:chan-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28876(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28876,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28881,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28881 in mm:chan in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28881,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5011(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28857,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28861,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28862,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_28862 in mm:time-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28862,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5002(C_SCHEME_UNDEFINED,t4,t5));}

/* k28859 in mm:time-set! in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28842(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28842,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28847,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28847 in mm:time in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28847(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28847,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4992(t3,t4));}

/* mm:copy in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28827,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28832,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28832 in mm:copy in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28832(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28832,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4984(t3,t4));}

/* mm:free in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28809(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28809,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28813,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28817,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_28817 in mm:free in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28817(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28817,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4976(C_SCHEME_UNDEFINED,t3));}

/* k28811 in mm:free in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28339(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_28339r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28339r(t0,t1,t2);}}

static void C_ccall f_28339r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28343,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_28343(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[616]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28668,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[616]);}
else{
t23=t22;
f_28668(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[624]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28703,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[624]);}
else{
t24=t23;
f_28703(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[619]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28738,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[619]);}
else{
t25=t24;
f_28738(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28767,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_28767(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k28765 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28767,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28782,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28780 in k28765 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28774(2,t2,C_SCHEME_UNDEFINED);}}

/* k28772 in k28765 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28343(t5,t4);}

/* k28736 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28740 in k28736 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28343(t7,t6);}

/* k28701 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28705 in k28701 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28343(t7,t6);}

/* k28666 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28670 in k28666 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28343(t7,t6);}

/* k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_28343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28343,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_28346(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28533,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_28533(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28568,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_28568(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28603,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_28603(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28632,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_28632(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k28630 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28632,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28647,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28645 in k28630 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28639(2,t2,C_SCHEME_UNDEFINED);}}

/* k28637 in k28630 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28346(t5,t4);}

/* k28601 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28605 in k28601 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28346(t7,t6);}

/* k28566 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28570 in k28566 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28346(t7,t6);}

/* k28531 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28535 in k28531 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28346(t7,t6);}

/* k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_28346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28346,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28349,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_28349(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28398,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_28398(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28433,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_28433(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28468,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_28468(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28497,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_28497(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k28495 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28497,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28512,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28510 in k28495 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28504(2,t2,C_SCHEME_UNDEFINED);}}

/* k28502 in k28495 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28349(t5,t4);}

/* k28466 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28472(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28470 in k28466 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28349(t7,t6);}

/* k28431 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28435 in k28431 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28349(t7,t6);}

/* k28396 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28400 in k28396 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28349(t7,t6);}

/* k28347 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_28349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28349,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28352(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28350 in k28347 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28356,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_28356 in k28350 in k28347 in k28344 in k28341 in mm:make-bend in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28356(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28356,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4953(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28320(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28320,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28325,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_28325 in mm:press? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28325,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4874(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27869(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_27869r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27869r(t0,t1,t2);}}

static void C_ccall f_27869r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27873,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_27873(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[616]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28198,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[616]);}
else{
t23=t22;
f_28198(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[624]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28233,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[624]);}
else{
t24=t23;
f_28233(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[619]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28268,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[619]);}
else{
t25=t24;
f_28268(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28297,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_28297(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k28295 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28297,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28312,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28310 in k28295 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28304(2,t2,C_SCHEME_UNDEFINED);}}

/* k28302 in k28295 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27873(t5,t4);}

/* k28266 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28270 in k28266 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27873(t7,t6);}

/* k28231 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28237(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28235 in k28231 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27873(t7,t6);}

/* k28196 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28202(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28200 in k28196 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27873(t7,t6);}

/* k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27873,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27876(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28063,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_28063(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28098,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_28098(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28133,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_28133(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28162,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_28162(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k28160 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28162,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28177,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28175 in k28160 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28169(2,t2,C_SCHEME_UNDEFINED);}}

/* k28167 in k28160 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27876(t5,t4);}

/* k28131 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28137(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28135 in k28131 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27876(t7,t6);}

/* k28096 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28102(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28100 in k28096 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27876(t7,t6);}

/* k28061 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28067(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28065 in k28061 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27876(t7,t6);}

/* k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27876,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27879,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27879(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27928,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_27928(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27963,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_27963(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27998,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_27998(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28027,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_28027(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k28025 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28027,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28042,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28040 in k28025 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28034(2,t2,C_SCHEME_UNDEFINED);}}

/* k28032 in k28025 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27879(t5,t4);}

/* k27996 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28002(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28000 in k27996 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_28002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27879(t7,t6);}

/* k27961 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27967(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27965 in k27961 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27879(t7,t6);}

/* k27926 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27932(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27930 in k27926 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27879(t7,t6);}

/* k27877 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27879(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27879,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27882(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27880 in k27877 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27886,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_27886 in k27880 in k27877 in k27874 in k27871 in mm:make-press in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27886,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4859(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27850(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27850,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27855,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_27855 in mm:prog? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27855(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27855,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4780(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27399(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_27399r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27399r(t0,t1,t2);}}

static void C_ccall f_27399r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27403,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_27403(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[616]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27728,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[616]);}
else{
t23=t22;
f_27728(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[624]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27763,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[624]);}
else{
t24=t23;
f_27763(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[619]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27798,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[619]);}
else{
t25=t24;
f_27798(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27827,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_27827(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k27825 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27827,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27842,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27840 in k27825 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27834(2,t2,C_SCHEME_UNDEFINED);}}

/* k27832 in k27825 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27403(t5,t4);}

/* k27796 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27800 in k27796 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27403(t7,t6);}

/* k27761 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27765 in k27761 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27403(t7,t6);}

/* k27726 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27730 in k27726 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27403(t7,t6);}

/* k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27403,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27406(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27593,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_27593(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_27628(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27663,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_27663(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27692,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27692(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27690 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27692,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27707,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27705 in k27690 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27699(2,t2,C_SCHEME_UNDEFINED);}}

/* k27697 in k27690 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27406(t5,t4);}

/* k27661 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27665 in k27661 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27406(t7,t6);}

/* k27626 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27630 in k27626 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27406(t7,t6);}

/* k27591 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27595 in k27591 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27406(t7,t6);}

/* k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27406,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27409,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27409(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27458,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_27458(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27493,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[624]);}
else{
t7=t6;
f_27493(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27528,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_27528(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27557,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27557(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27555 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27557,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27572,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27570 in k27555 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27564(2,t2,C_SCHEME_UNDEFINED);}}

/* k27562 in k27555 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27409(t5,t4);}

/* k27526 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27530 in k27526 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27409(t7,t6);}

/* k27491 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27495 in k27491 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27409(t7,t6);}

/* k27456 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27460 in k27456 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27409(t7,t6);}

/* k27407 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_27409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27409,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27412,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27412(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27410 in k27407 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27416,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_27416 in k27410 in k27407 in k27404 in k27401 in mm:make-prog in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27416,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4765(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27380(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27380,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27385,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_27385 in mm:ctrl? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27385,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4686(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26651(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_26651r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26651r(t0,t1,t2);}}

static void C_ccall f_26651r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26655,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_26655(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[616]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27223,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[616]);}
else{
t27=t26;
f_27223(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[627]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27258,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[627]);}
else{
t28=t27;
f_27258(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[624]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27293,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[624]);}
else{
t29=t28;
f_27293(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[619]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27328,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[619]);}
else{
t30=t29;
f_27328(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27357,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_27357(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k27355 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27357,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27372,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27370 in k27355 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27364(2,t2,C_SCHEME_UNDEFINED);}}

/* k27362 in k27355 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26655(t5,t4);}

/* k27326 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27332(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27330 in k27326 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26655(t7,t6);}

/* k27291 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27295 in k27291 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26655(t7,t6);}

/* k27256 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27260 in k27256 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26655(t7,t6);}

/* k27221 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27227,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27227(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27225 in k27221 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26655(t7,t6);}

/* k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_26655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26655,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26658(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27053,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_27053(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[627]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27088,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[627]);}
else{
t7=t6;
f_27088(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27123,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_27123(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27158,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_27158(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27187,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27187(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27185 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27187,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27202,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27200 in k27185 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27194(2,t2,C_SCHEME_UNDEFINED);}}

/* k27192 in k27185 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26658(t5,t4);}

/* k27156 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27162(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27160 in k27156 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26658(t7,t6);}

/* k27121 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27127(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27125 in k27121 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26658(t7,t6);}

/* k27086 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27092(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27090 in k27086 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26658(t7,t6);}

/* k27051 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27057,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27057(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27055 in k27051 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26658(t7,t6);}

/* k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_26658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26658,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26661(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26883,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_26883(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[627]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26918,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[627]);}
else{
t7=t6;
f_26918(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26953,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_26953(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26988,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_26988(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27017,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27017(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27015 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27017,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27032,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27030 in k27015 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27024(2,t2,C_SCHEME_UNDEFINED);}}

/* k27022 in k27015 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_27024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26661(t5,t4);}

/* k26986 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26992(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26990 in k26986 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26661(t7,t6);}

/* k26951 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26957(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26955 in k26951 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26661(t7,t6);}

/* k26916 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26922(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26920 in k26916 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26661(t7,t6);}

/* k26881 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26887,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26887(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26885 in k26881 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26661(t7,t6);}

/* k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_26661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26661,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26664,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26664(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26713,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_26713(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[627]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26748,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[627]);}
else{
t7=t6;
f_26748(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26783,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_26783(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26818,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_26818(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26847,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_26847(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k26845 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26847,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26862,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26860 in k26845 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26854(2,t2,C_SCHEME_UNDEFINED);}}

/* k26852 in k26845 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26664(t5,t4);}

/* k26816 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26822,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26822(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26820 in k26816 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26664(t7,t6);}

/* k26781 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26787(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26785 in k26781 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26664(t7,t6);}

/* k26746 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26752(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26750 in k26746 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26664(t7,t6);}

/* k26711 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26717(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26715 in k26711 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26664(t7,t6);}

/* k26662 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_26664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26667,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26667(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26665 in k26662 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26671,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_26671 in k26665 in k26662 in k26659 in k26656 in k26653 in mm:make-ctrl in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26671,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4670(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26632(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26632,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26637,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_26637 in mm:touch? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26637,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4554(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25903(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_25903r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25903r(t0,t1,t2);}}

static void C_ccall f_25903r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25907,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_25907(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[616]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26475,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[616]);}
else{
t27=t26;
f_26475(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[617]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26510,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[617]);}
else{
t28=t27;
f_26510(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[624]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26545,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[624]);}
else{
t29=t28;
f_26545(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[619]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26580,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[619]);}
else{
t30=t29;
f_26580(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26609,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_26609(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k26607 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26609,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26616,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26624,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26622 in k26607 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26616(2,t2,C_SCHEME_UNDEFINED);}}

/* k26614 in k26607 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25907(t5,t4);}

/* k26578 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26582 in k26578 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25907(t7,t6);}

/* k26543 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26547 in k26543 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25907(t7,t6);}

/* k26508 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26514(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26512 in k26508 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25907(t7,t6);}

/* k26473 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26477 in k26473 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25907(t7,t6);}

/* k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25910(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26305,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_26305(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26340,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_26340(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26375,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_26375(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26410,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_26410(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26439,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_26439(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k26437 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26439,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26446,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26454,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26452 in k26437 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26446(2,t2,C_SCHEME_UNDEFINED);}}

/* k26444 in k26437 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25910(t5,t4);}

/* k26408 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26414,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26414(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26412 in k26408 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25910(t7,t6);}

/* k26373 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26379(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26377 in k26373 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25910(t7,t6);}

/* k26338 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26344(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26342 in k26338 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25910(t7,t6);}

/* k26303 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26309(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26307 in k26303 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25910(t7,t6);}

/* k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25910,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25913(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26135,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_26135(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26170,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_26170(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26205,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_26205(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26240,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_26240(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26269,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_26269(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k26267 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26269,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26284,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26282 in k26267 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26276(2,t2,C_SCHEME_UNDEFINED);}}

/* k26274 in k26267 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25913(t5,t4);}

/* k26238 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26244(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26242 in k26238 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25913(t7,t6);}

/* k26203 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26209(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26207 in k26203 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25913(t7,t6);}

/* k26168 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26174,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26174(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26172 in k26168 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25913(t7,t6);}

/* k26133 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26139(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26137 in k26133 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25913(t7,t6);}

/* k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25913(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25913,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25916,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25916(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25965,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_25965(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26000,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_26000(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[624]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26035,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[624]);}
else{
t8=t7;
f_26035(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26070,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_26070(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26099,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_26099(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k26097 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26099,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26114,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26112 in k26097 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26106(2,t2,C_SCHEME_UNDEFINED);}}

/* k26104 in k26097 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25916(t5,t4);}

/* k26068 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26074(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26072 in k26068 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25916(t7,t6);}

/* k26033 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26037 in k26033 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25916(t7,t6);}

/* k25998 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26002 in k25998 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_26004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25916(t7,t6);}

/* k25963 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25969(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25967 in k25963 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25916(t7,t6);}

/* k25914 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25916,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25919,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25919(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25917 in k25914 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25923,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_25923 in k25917 in k25914 in k25911 in k25908 in k25905 in mm:make-touch in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25923(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25923,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4538(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25884(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25884,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25889,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_25889 in mm:off? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25889,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4422(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25433(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25433r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25433r(t0,t1,t2);}}

static void C_ccall f_25433r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25437,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25437(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[616]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25762,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[616]);}
else{
t23=t22;
f_25762(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[617]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25797,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[617]);}
else{
t24=t23;
f_25797(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[619]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25832,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[619]);}
else{
t25=t24;
f_25832(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25861,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_25861(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25859 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25861,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25876,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25874 in k25859 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25868(2,t2,C_SCHEME_UNDEFINED);}}

/* k25866 in k25859 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25437(t5,t4);}

/* k25830 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25834 in k25830 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25437(t7,t6);}

/* k25795 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25801(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25799 in k25795 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25437(t7,t6);}

/* k25760 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25766,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25766(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25764 in k25760 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25437(t7,t6);}

/* k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25437,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25440,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25440(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25627,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_25627(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25662,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_25662(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25697,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_25697(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25726,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25726(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25724 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25726,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25741,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25739 in k25724 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25733(2,t2,C_SCHEME_UNDEFINED);}}

/* k25731 in k25724 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25440(t5,t4);}

/* k25695 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25701(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25699 in k25695 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25440(t7,t6);}

/* k25660 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25666(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25664 in k25660 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25440(t7,t6);}

/* k25625 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25631(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25629 in k25625 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25440(t7,t6);}

/* k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25440(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25440,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25443,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25443(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25492,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_25492(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25527,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_25527(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25562,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[619]);}
else{
t8=t7;
f_25562(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25591,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25591(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25589 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25591,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25606,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25604 in k25589 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25598(2,t2,C_SCHEME_UNDEFINED);}}

/* k25596 in k25589 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25443(t5,t4);}

/* k25560 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25566(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25564 in k25560 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25443(t7,t6);}

/* k25525 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25531(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25529 in k25525 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25443(t7,t6);}

/* k25490 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25496(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25494 in k25490 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25443(t7,t6);}

/* k25441 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_25443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25443,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25446,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25446(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25444 in k25441 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25450,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25450 in k25444 in k25441 in k25438 in k25435 in mm:make-off in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25450,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4407(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25414,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25419,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_25419 in mm:on? in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25419,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4328(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24685(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24685r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24685r(t0,t1,t2);}}

static void C_ccall f_24685r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24689,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24689(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[616]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25257,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[616]);}
else{
t27=t26;
f_25257(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[617]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25292,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[617]);}
else{
t28=t27;
f_25292(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[618]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25327,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[618]);}
else{
t29=t28;
f_25327(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[619]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25362,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[619]);}
else{
t30=t29;
f_25362(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25391,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25391(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25389 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25391,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25406,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25404 in k25389 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25398(2,t2,C_SCHEME_UNDEFINED);}}

/* k25396 in k25389 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24689(t5,t4);}

/* k25360 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25366(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25364 in k25360 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24689(t7,t6);}

/* k25325 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25329 in k25325 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24689(t7,t6);}

/* k25290 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25296(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25294 in k25290 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24689(t7,t6);}

/* k25255 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25261(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25259 in k25255 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24689(t7,t6);}

/* k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24689,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24692,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24692(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25087,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_25087(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25122,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_25122(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[618]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25157,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[618]);}
else{
t8=t7;
f_25157(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25192,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_25192(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25221,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25221(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25219 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25221,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25236,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25234 in k25219 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25228(2,t2,C_SCHEME_UNDEFINED);}}

/* k25226 in k25219 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24692(t5,t4);}

/* k25190 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25194 in k25190 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k25155 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25161(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25159 in k25155 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k25120 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25126,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25126(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25124 in k25120 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k25085 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25091(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25089 in k25085 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24692,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24695(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24917,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_24917(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24952,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_24952(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[618]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24987,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[618]);}
else{
t8=t7;
f_24987(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25022,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_25022(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25051,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25051(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25049 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25051,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25066,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25064 in k25049 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25058(2,t2,C_SCHEME_UNDEFINED);}}

/* k25056 in k25049 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24695(t5,t4);}

/* k25020 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25026(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25024 in k25020 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_25026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24985 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24991(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24989 in k24985 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24950 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24956(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24954 in k24950 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24915 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24919 in k24915 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24698,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24698(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[616]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[616]);}
else{
t6=t5;
f_24747(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[617]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24782,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[617]);}
else{
t7=t6;
f_24782(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[618]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24817,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[618]);}
else{
t8=t7;
f_24817(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[619]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24852,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[619]);}
else{
t9=t8;
f_24852(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24881,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24881(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24879 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24881,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24888,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24896,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24894 in k24879 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24888(2,t2,C_SCHEME_UNDEFINED);}}

/* k24886 in k24879 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24698(t5,t4);}

/* k24850 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24856(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24854 in k24850 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24815 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24821(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24819 in k24815 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24780 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24784 in k24780 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24745 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24749 in k24745 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24696 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24701,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24701(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24699 in k24696 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24705,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24705 in k24699 in k24696 in k24693 in k24690 in k24687 in mm:make-on in k24539 in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24705,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4312(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24347(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24347,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24355,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24187,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_24187(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_24187(t12,(C_word)C_i_not(t11));}}

/* k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24187(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24187,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24194,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(t2,(C_word)C_a_i_list(&a,4,lf[435],lf[605],lf[440],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24195,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24220,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24222,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li375),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_24222(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24222(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24222,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[352]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_24232(t16,t13);}
else{
t13=t10;
f_24232(t13,C_SCHEME_UNDEFINED);}}}

/* k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24232,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t2,t3,((C_word*)t0)[3]);}

/* k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24236,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_24239(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[610],t5,lf[611]));}}

/* k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li373),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24300,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li374),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a24299 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24300(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24300,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a24290 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24291,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24240 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24245,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  op-type?");
f_24195(t3,((C_word*)((C_word*)t0)[6])[1],lf[596]);}

/* k24259 in k24240 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24261,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_24245(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  op-type?");
f_24195(t2,((C_word*)((C_word*)t0)[6])[1],lf[609]);}}

/* k24266 in k24259 in k24240 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24268,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_24245(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[606],t2,lf[607],t3,lf[608]));}}
else{
t2=((C_word*)t0)[5];
f_24245(2,t2,C_SCHEME_UNDEFINED);}}

/* k24243 in k24240 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24245,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k24249 in k24243 in k24240 in k24237 in k24234 in k24230 in do4110 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_24222(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24218 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_24355(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24195(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24195,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k24192 in k24185 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24194,2,t0,t1);}
t2=((C_word*)t0)[2];
f_24355(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k24353 in parse-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  gather-clauses");
f_21282(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23933,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[599],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23955,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[602],t8,lf[603]));}
else{
t19=t17;
f_23955(2,t19,C_SCHEME_UNDEFINED);}}

/* k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23955,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23970,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[601]));}
else{
t9=t8;
f_23970(2,t9,C_SCHEME_UNDEFINED);}}

/* k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[354],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_23973(t6,t5);}
else{
t4=t2;
f_23973(t4,C_SCHEME_UNDEFINED);}}

/* k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23973,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24143,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li369),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24149,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li370),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a24148 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24149,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a24142 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24143,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parse-then-else-dependents");
f_23802(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_23979(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24125,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  gather-clauses");
f_21282(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k24123 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23979(t3,t2);}

/* k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23979(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23979,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  loop-operator-set!");
f_21029(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24118,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping");
t4=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k24116 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24118,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[378],t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24106,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23989,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_24002(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_24002(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24002,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[600]));}
else{
t5=t4;
f_24009(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_23989(t2,C_SCHEME_UNDEFINED);}}

/* k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24012,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li367),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24079,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li368),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a24078 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24079,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a24064 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24073,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k24071 in a24064 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  parse-then-else-dependents");
f_23802(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_24015(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24051,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  gather-clauses");
f_21282(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k24049 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24015(t3,t2);}

/* k24013 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_24015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24015,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping");
t4=C_retrieve2(lf[429],"loop-looping");
f_21083(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24042 in k24013 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24044,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[378],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping-set!");
f_21089(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k24019 in k24042 in k24013 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  loop-looping-set!");
f_21089(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k24022 in k24019 in k24042 in k24013 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  gather-clauses");
f_21282(t2,lf[20],t3);}

/* k24026 in k24022 in k24019 in k24042 in k24013 in k24010 in k24007 in k24000 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_24028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23989(t3,t2);}

/* k23987 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23989,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  loop-looping-set!");
f_21089(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k23990 in k23987 in k24104 in k23980 in k23977 in k23974 in k23971 in k23968 in k23953 in parse-conditional in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23802(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23802,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23806,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23811,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li365),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_23811(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23811(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23811,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t12,t10,t11);}}

/* k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_23765(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[596]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[597]);
t8=t2;
f_23765(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_23765(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_23765(t3,C_SCHEME_FALSE);}}

/* k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23765,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_23828(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[594],t6,lf[595]));}}

/* k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23831,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23901,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li363),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23914,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li364),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a23913 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23914,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a23900 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23909,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k23907 in a23900 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k23829 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k23833 in k23829 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23835,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23840,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_23840(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[352]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[593]));}
else{
t10=t5;
f_23840(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_23840(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23878,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t10,t11,((C_word*)t0)[3]);}}}}

/* k23876 in k23833 in k23829 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_23840(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_23840(2,t2,C_SCHEME_UNDEFINED);}}

/* k23838 in k23833 in k23829 in k23826 in k23763 in k23757 in do4043 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_23811(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23804 in parse-then-else-dependents in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23701,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23708,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[590],t13,lf[591]));}
else{
t13=t11;
f_23708(2,t13,C_SCHEME_UNDEFINED);}}

/* k23706 in parse-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23708,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23739,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23737 in k23706 in parse-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23739,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23735,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k23733 in k23737 in k23706 in parse-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23735,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[435],lf[576],lf[440],t2));}

/* k23725 in k23737 in k23706 in parse-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23610,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23617,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[587],t15,lf[588]));}
else{
t15=t13;
f_23617(2,t15,C_SCHEME_UNDEFINED);}}

/* k23615 in parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23617,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23683 in k23615 in parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23685,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23628,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[584]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_23628(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[585]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[354],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_23628(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[586]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_23628(t9,t8);}
else{
t8=t4;
f_23628(t8,C_SCHEME_UNDEFINED);}}}}

/* k23626 in k23683 in k23615 in parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23628(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23628,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23639,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23655,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k23653 in k23626 in k23683 in k23615 in parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23655,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[435],lf[584],lf[440],t3,lf[443],t4));}

/* k23637 in k23626 in k23683 in k23615 in parse-thereis in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23544,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23555,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[581],t7,lf[582]));}
else{
t13=t12;
f_23555(2,t13,C_SCHEME_UNDEFINED);}}

/* k23553 in parse-while-until in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[579]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_23558(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[580]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[354],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_23558(t10,t9);}
else{
t5=t2;
f_23558(t5,C_SCHEME_UNDEFINED);}}}

/* k23556 in k23553 in parse-while-until in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[578]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(t2,(C_word)C_a_i_list(&a,4,lf[435],((C_word*)t0)[2],lf[440],t4));}

/* k23563 in k23556 in k23553 in parse-while-until in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23538(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23538,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[576],t2));}

/* parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22992,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23001,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23006,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23011,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_23023,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[573],t7,lf[574]));}
else{
t30=t29;
f_23023(2,t30,C_SCHEME_UNDEFINED);}}

/* k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23023,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_23034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_23034(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[569]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23487,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[572]));}
else{
t11=t9;
f_23487(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_23034(2,t9,C_SCHEME_UNDEFINED);}}}

/* k23485 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 378  loop-variable?");
f_21359(t2,t3);}

/* k23491 in k23485 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23493,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_23034(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[570],t2,lf[571]));}}

/* k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_23038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22919,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li357),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_22919(t9,t2,C_SCHEME_FALSE);}

/* do3865 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22919(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22919,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22933,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22944,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  loop-collectors");
t9=C_retrieve2(lf[426],"loop-collectors");
f_21047(3,t9,t7,t8);}}

/* k22942 in do3865 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22944,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22879,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li356),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_22879(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3857 in k22942 in do3865 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22879(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22879,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22892,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_22892(t12,t11);}
else{
t10=t6;
f_22892(t10,C_SCHEME_UNDEFINED);}}}

/* k22890 in do3857 in k22942 in do3865 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_22879(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22931 in do3865 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_22919(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23038,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_23041,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23471,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23475,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  collector-type");
f_23006(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_23041(2,t6,t5);}}

/* k23473 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[566];
t3=lf[567];
t4=lf[568];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_23471(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_23471(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_23471(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_23471(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k23469 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23471,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_23041(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23467,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  collector-type");
f_23006(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23465 in k23469 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23467,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[563],t1,lf[564],((C_word*)t0)[2],lf[565]));}

/* k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23044,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[548]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[549]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23087,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23125,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_23125(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 378  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[550]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23154,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  collector-acc");
f_23011(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[551]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[552]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[554]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_23261(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[557]);
t10=t8;
f_23261(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[562])));}}}}

/* k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23261,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23264,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23377,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23435,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t9,((C_word*)((C_word*)t0)[13])[1],lf[561]);}
else{
t9=t8;
f_23377(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23370,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  collector-acc");
f_23011(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_23044(t2,C_SCHEME_UNDEFINED);}}

/* k23368 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23264(t6,t5);}

/* k23433 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23435,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23377(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[560]);}

/* k23379 in k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23381,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[559]);}

/* k23383 in k23379 in k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23385,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23427,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)((C_word*)t0)[11])[1],lf[558]);}

/* k23425 in k23383 in k23379 in k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23427,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k23421 in k23425 in k23383 in k23379 in k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23423,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23401,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-collector");
f_23001(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k23399 in k23421 in k23425 in k23383 in k23379 in k23375 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23401,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_23264(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_23264(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23262 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23264,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23267,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[555]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[556],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[287],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_23267(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[557]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[555],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[556],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_23267(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[556],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[287],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_23267(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k23265 in k23262 in k23259 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23267,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23044(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_23044(t2,C_SCHEME_UNDEFINED);}}

/* k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23166,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[551]);
t3=(C_truep(t2)?lf[306]:lf[381]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23172,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23216,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_23216(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 378  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[553]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23249,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  collector-acc");
f_23011(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23247 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23172(t3,t2);}

/* k23214 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23216,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k23240 in k23214 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23242,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23224,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-collector");
f_23001(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k23222 in k23240 in k23214 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23224,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_23172(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[353],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_23172(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23170 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23172(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23172,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k23210 in k23170 in k23164 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23212,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[354],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[353],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[378],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_23044(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k23152 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23087(t3,t2);}

/* k23123 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23125,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k23145 in k23123 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23147,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23133,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-collector");
f_23001(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k23131 in k23145 in k23123 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23133,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_23087(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_23087(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23085 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23087(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23087,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[548]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23044(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_23044(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23044,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23051,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t4=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k23053 in k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23057 in k23053 in k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23063,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23061 in k23057 in k23053 in k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23067,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23065 in k23061 in k23057 in k23053 in k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23067,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[435],((C_word*)t0)[5],lf[436],((C_word*)t0)[4],lf[438],((C_word*)t0)[3],lf[440],((C_word*)t0)[2],lf[443],t1,lf[437],t2,lf[439],C_SCHEME_END_OF_LIST));}

/* k23049 in k23042 in k23039 in k23036 in k23032 in k23021 in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_23051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23011(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23011,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23006(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23006,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_23001(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23001,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22833,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22844,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[545],t6,lf[546]));}
else{
t12=t11;
f_22844(2,t12,C_SCHEME_UNDEFINED);}}

/* k22842 in parse-initially in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22844,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22859,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(t6,(C_word)C_a_i_list(&a,4,lf[435],((C_word*)t0)[2],lf[438],t7));}

/* k22857 in k22842 in parse-initially in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22795,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22806,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[542],t6,lf[543]));}
else{
t12=t11;
f_22806(2,t12,C_SCHEME_UNDEFINED);}}

/* k22804 in parse-finally in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22806,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22821,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(t6,(C_word)C_a_i_list(&a,4,lf[435],((C_word*)t0)[2],lf[442],t7));}

/* k22819 in k22804 in parse-finally in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22728,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22739,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22748,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li349),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_22748(t16,t12);}

/* do3814 in parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22748(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22748,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_22758(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t3,t4,((C_word*)t0)[5]);}}

/* k22756 in do3814 in parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22758,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[539],((C_word*)t0)[4],lf[540]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22771,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_22748(t7,((C_word*)t0)[7]);}}

/* k22769 in k22756 in do3814 in parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k22737 in parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22746,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(t2,(C_word)C_a_i_list(&a,4,lf[435],((C_word*)t0)[3],lf[440],((C_word*)((C_word*)t0)[2])[1]));}

/* k22744 in k22737 in parse-do in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22535,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22542,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22595,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li347),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_22595(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22595(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22595,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_22605(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t7,t8,((C_word*)t0)[5]);}}

/* k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22605,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22616,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22719,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 378  loop-variable?");
f_21359(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22719,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22625,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[529],((C_word*)((C_word*)t0)[10])[1],lf[530]));}
else{
t4=t3;
f_22625(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[352]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22647,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[531]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22676,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22684,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[532]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[517]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[533]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_22616(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[534],((C_word*)((C_word*)t0)[10])[1],lf[535]));}
else{
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[536],((C_word*)((C_word*)t0)[10])[1],lf[537]));}}}}}

/* k22682 in k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22684,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_22647(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k22674 in k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22676,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22647(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k22645 in k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_22616(2,t6,t5);}

/* k22623 in k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22628,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[527],((C_word*)((C_word*)t0)[8])[1],lf[528]));}
else{
t3=t2;
f_22628(2,t3,C_SCHEME_UNDEFINED);}}

/* k22626 in k22623 in k22717 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_22616(2,t6,t5);}

/* k22614 in k22603 in do3770 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_22595(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22545,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[526]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22585,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22593,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_22545(2,t3,C_SCHEME_UNDEFINED);}}}

/* k22591 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22593,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_22545(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k22583 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22585,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22545(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k22543 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22552,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22556,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t4=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22554 in k22543 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22560,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22558 in k22554 in k22543 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22560,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[435],lf[525],lf[436],((C_word*)t0)[2],lf[438],t1));}

/* k22550 in k22543 in k22540 in parse-with in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22393,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22403,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22441,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li345),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_22441(t22,t18,C_SCHEME_FALSE);}

/* do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22441(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22441,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_22451(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t5,t6,((C_word*)t0)[5]);}}

/* k22449 in do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22451,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[523]));}
else{
t7=t6;
f_22462(2,t7,C_SCHEME_UNDEFINED);}}}

/* k22460 in k22449 in do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22462,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22465,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[517]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22474,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[518]));}
else{
t6=t5;
f_22474(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[519]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22499,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[520]));}
else{
t7=t6;
f_22499(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[521],((C_word*)((C_word*)t0)[12])[1],lf[522]));}}}

/* k22497 in k22460 in k22449 in do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22499,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_22465(2,t10,t9);}

/* k22472 in k22460 in k22449 in do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22474,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_22465(2,t8,t7);}

/* k22463 in k22460 in k22449 in do3732 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22441(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22401 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22410,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22439,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k22437 in k22401 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22439,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[435],lf[465],lf[436],t2,lf[438],t3,lf[440],t4,lf[441],t5));}

/* k22408 in k22401 in parse-general-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22042,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22049,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[515]);}

/* k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22049,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22055,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22283,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li343),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_22283(t25,t21,C_SCHEME_FALSE);}

/* do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22283(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22283,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_22293(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t5,t6,((C_word*)t0)[4]);}}

/* k22291 in do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22293,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[514]));}
else{
t7=t6;
f_22304(2,t7,C_SCHEME_UNDEFINED);}}}

/* k22302 in k22291 in do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22304,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22307,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[504]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22316,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_22316(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[513]);
if(C_truep(t6)){
t7=t5;
f_22316(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[498]);
t8=t5;
f_22316(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[503])));}}}

/* k22314 in k22302 in k22291 in do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22316,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22319,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[506],((C_word*)((C_word*)t0)[9])[1],lf[507],((C_word*)((C_word*)t0)[10])[1],lf[508]));}
else{
t3=t2;
f_22319(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[489]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[509]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[498]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[510]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_22307(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[511],((C_word*)((C_word*)t0)[9])[1],lf[512]));}}}

/* k22317 in k22314 in k22302 in k22291 in do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_22307(2,t7,t6);}

/* k22305 in k22302 in k22291 in do3665 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22283(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22281,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22277,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22277,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22066,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[498]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22083,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[502]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[503]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22159,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[224],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_22159(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[224],((C_word*)t0)[4]);
t9=t7;
f_22159(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22223,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_22223(t10,(C_word)C_eqp(t9,lf[505]));}
else{
t9=t8;
f_22223(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_22188(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k22221 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22223,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22188(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_22188(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22186 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22188,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22204,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[504]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_22204(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_22204(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k22202 in k22186 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22204,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22066(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k22157 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22159,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[222],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[378],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_22066(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k22081 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[501]);}

/* k22084 in k22081 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t2,((C_word*)t0)[7],C_fix(0));}

/* k22148 in k22084 in k22081 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22150,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k22144 in k22148 in k22084 in k22081 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22146,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[499],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[93],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[500],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[306],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[354],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_22066(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k22064 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_22066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22066,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22073,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t4=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22075 in k22064 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22077,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[435],lf[465],lf[436],t1,lf[439],((C_word*)((C_word*)t0)[5])[1],lf[438],((C_word*)((C_word*)t0)[4])[1],lf[440],((C_word*)((C_word*)t0)[3])[1],lf[441],((C_word*)((C_word*)t0)[2])[1]));}

/* k22071 in k22064 in k22275 in k22279 in k22053 in k22047 in parse-sequence-iteration in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21995,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[495]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22010,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li340),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22028,a[2]=t2,a[3]=((C_word)li341),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a22027 in parse-repeat in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22028,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,t1,t2,t4);}

/* a22009 in parse-repeat in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[496]);}

/* k22020 in a22009 in parse-repeat in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_22022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22022,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[465],t1,lf[470],t2);
C_trace("ChickenBridge.scm: 378  parse-numerical-for");
t4=C_retrieve2(lf[464],"parse-numerical-for");
f_21613(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21613,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21623,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21822,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li338),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_21822(t31,t27,C_SCHEME_FALSE);}

/* do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21822(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21822,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21832,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_21832(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t5,t6,((C_word*)t0)[6]);}}

/* k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21832,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[493]));}
else{
t7=t6;
f_21843(2,t7,C_SCHEME_UNDEFINED);}}}

/* k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21843,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21846,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[472]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[468]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21858,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[473],((C_word*)((C_word*)t0)[12])[1],lf[474],((C_word*)((C_word*)t0)[9])[1],lf[475]));}
else{
t7=t6;
f_21858(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[470]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21879,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[476],((C_word*)((C_word*)t0)[12])[1],lf[477],((C_word*)((C_word*)t0)[3])[1],lf[478]));}
else{
t8=t7;
f_21879(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[479]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21900,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[480],((C_word*)((C_word*)t0)[12])[1],lf[481],((C_word*)((C_word*)t0)[3])[1],lf[482]));}
else{
t9=t8;
f_21900(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[469]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21921,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[483],((C_word*)((C_word*)t0)[12])[1],lf[484],((C_word*)((C_word*)t0)[3])[1],lf[485]));}
else{
t10=t9;
f_21921(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[471]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21942,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[486],((C_word*)((C_word*)t0)[12])[1],lf[487],((C_word*)((C_word*)t0)[3])[1],lf[488]));}
else{
t11=t10;
f_21942(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[489]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21963,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[490]));}
else{
t12=t11;
f_21963(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[491],((C_word*)((C_word*)t0)[12])[1],lf[492]));}}}}}}}

/* k21961 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_21846(2,t6,t5);}

/* k21940 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_21846(2,t7,t6);}

/* k21919 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_21846(2,t7,t6);}

/* k21898 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_21846(2,t7,t6);}

/* k21877 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_21846(2,t7,t6);}

/* k21856 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_21846(2,t7,t6);}

/* k21844 in k21841 in k21830 in do3566 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_21822(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_21626(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[472]);
t5=t2;
f_21626(t5,t4);}}

/* k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21626(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21626,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21629,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[468]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21789,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_21789(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[471]);
t6=t4;
f_21789(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[469])));}}

/* k21787 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21789(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[95]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[469]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[382]);
t5=((C_word*)t0)[2];
f_21629(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[306]);
t5=((C_word*)t0)[2];
f_21629(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[93]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[470]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[375]);
t5=((C_word*)t0)[2];
f_21629(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[381]);
t5=((C_word*)t0)[2];
f_21629(t5,t4);}}}

/* k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21629,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21760,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21780,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k21778 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21780,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21632(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k21758 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21760,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21632(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21632(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21632,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_21635(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21725,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[467]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_21635(t5,t4);}}

/* k21723 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t2,t1,C_SCHEME_FALSE);}

/* k21740 in k21723 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21742,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_21635(t8,t7);}

/* k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21635(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21635,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[466]);}
else{
t6=t5;
f_21642(t6,C_SCHEME_UNDEFINED);}}

/* k21672 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21677,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21692,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21708,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-binding");
f_21365(t3,t1,C_SCHEME_FALSE);}}

/* k21706 in k21672 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21708,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21677(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k21690 in k21672 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21692,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21677(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21675 in k21672 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21677,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21642(t4,t3);}

/* k21640 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21642,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21649,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21653,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t4=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21651 in k21640 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21657,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21655 in k21651 in k21640 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21657,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[435],lf[465],lf[436],((C_word*)t0)[2],lf[438],t1,lf[441],t2,lf[439],t4));}

/* k21647 in k21640 in k21633 in k21630 in k21627 in k21624 in k21621 in parse-numerical-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21531,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21535,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t5,t6,t4);}

/* k21533 in parse-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21535,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[457]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21553,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  loop-variable?");
f_21359(t4,t3);}}

/* k21551 in k21533 in parse-for in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21553,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[458]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[459],t6,lf[460],lf[461]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 378  loop-error");
f_21371(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[462],t2,lf[463]));}}

/* loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21371(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21371,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21427,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21379,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li335),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_21379(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3517 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21379(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21379,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21389,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_21389(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_21389(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  loop-op?");
f_21353(t6,t8,((C_word*)t0)[2]);}}}

/* k21387 in do3517 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21389,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  reverse");
t2=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_21379(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21430,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[455]);}

/* k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21508,a[2]=t4,a[3]=((C_word)li334),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_21508(t6,t2,((C_word*)t0)[2]);}

/* do3527 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21508(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21508,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21518,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  display");
t5=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k21516 in do3527 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21508(t3,((C_word*)t0)[2],t2);}

/* k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[454]);}

/* k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21445,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[450]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21462,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li333),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21462(t6,t2,((C_word*)t0)[2]);}}

/* do3532 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21462(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21462,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21472,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 378  display");
t5=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[453]);}
else{
t5=t3;
f_21472(2,t5,C_SCHEME_UNDEFINED);}}}

/* k21470 in do3532 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k21473 in k21470 in do3532 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[451]:lf[452]);
C_trace("ChickenBridge.scm: 378  display");
t6=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k21476 in k21473 in k21470 in do3532 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21462(t3,((C_word*)t0)[2],t2);}

/* k21443 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21448,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21446 in k21443 in k21440 in k21437 in k21434 in k21431 in k21428 in k21425 in loop-error in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[449]);}

/* make-binding in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21365(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21365,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21359(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21359,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21353(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21353,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21282(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21282,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21284,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21323,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t5,t3,C_retrieve2(lf[425],"loop-bindings"));}

/* k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[426],"loop-collectors"));}

/* k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[427],"loop-initially"));}

/* k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[428],"loop-end-tests"));}

/* k21333 in k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[429],"loop-looping"));}

/* k21337 in k21333 in k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[431],"loop-stepping"));}

/* k21341 in k21337 in k21333 in k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21347,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[432],"loop-finally"));}

/* k21345 in k21341 in k21337 in k21333 in k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21351,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gather-clause");
f_21284(t2,((C_word*)t0)[2],C_retrieve2(lf[433],"loop-returning"));}

/* k21349 in k21345 in k21341 in k21337 in k21333 in k21329 in k21325 in k21321 in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21351,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  make-loop-clause");
f_21131(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[435],((C_word*)t0)[9],lf[436],((C_word*)t0)[8],lf[437],((C_word*)t0)[7],lf[438],((C_word*)t0)[6],lf[439],((C_word*)t0)[5],lf[440],((C_word*)t0)[4],lf[441],((C_word*)t0)[3],lf[442],((C_word*)t0)[2],lf[443],t1));}

/* gather-clause in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21284(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21284,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21290,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li327),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_21290(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3500 in gather-clause in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21290(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21290,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21301,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21312,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k21310 in do3500 in gather-clause in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21299 in do3500 in gather-clause in gather-clauses in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21290(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21131(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21131,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21146,a[2]=t5,a[3]=t3,a[4]=((C_word)li325),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_21146(t7,t1,t2);}}

/* do3488 in make-loop-clause in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21146(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21146,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21159,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[435]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 378  loop-operator-set!");
f_21029(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[436]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_21159(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[437]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_21159(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[438]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_21159(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[439]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_21159(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[440]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 378  loop-looping-set!");
f_21089(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[441]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_21159(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[442]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_21159(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[443]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_21159(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_21159(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k21157 in do3488 in make-loop-clause in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21146(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21119(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21119,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21107(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21107,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21095(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21095,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21089(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21089,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21083(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21083,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21071(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21071,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21059(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21059,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21047(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21047,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_21035(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21035,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k21019 in k21016 in k21013 in k21010 in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_21029(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21029,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20993(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20993,2,t0,t1);}
C_trace("ChickenBridge.scm: 377  print-error");
t2=C_retrieve(lf[391]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[423]);}

/* sal:open in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20987(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20987,2,t0,t1);}
C_trace("ChickenBridge.scm: 377  print-error");
t2=C_retrieve(lf[391]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[421]);}

/* sal:load in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20940(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20940,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20944,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  file-exists?");
t4=C_retrieve(lf[419]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k20942 in sal:load in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20947,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20969,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[415]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[416],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_20969(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[159]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[417],((C_word*)t0)[2],lf[418]);}}

/* k20958 in k20942 in sal:load in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  print-error");
t2=C_retrieve(lf[391]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k20967 in k20942 in sal:load in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  load-sal-file");
t2=C_retrieve(lf[413]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 377  load");
t2=C_retrieve(lf[414]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k20945 in k20942 in sal:load in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20931,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20935,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k20933 in sal:chdir in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20778(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_20778r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20778r(t0,t1,t2);}}

static void C_ccall f_20778r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20781,a[2]=t4,a[3]=((C_word)li308),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20900,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20905,a[2]=t4,a[3]=t8,a[4]=((C_word)li309),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_20905(t10,t6,t2);}

/* do3315 in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20905(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20905,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  print-message");
t3=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[410]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20918,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_20781(t5,t3,t4,C_fix(0));}}

/* k20916 in do3315 in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20905(t3,((C_word*)t0)[2],t2);}

/* k20898 in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20781(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20781,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  print-message");
t5=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[403]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20809,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  print-message");
t6=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[406]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 377  print-message");
t6=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[407]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20881,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 377  print-message");
t6=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20897,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[408],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 377  print-message");
t5=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[409]);}}

/* k20895 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  print-message");
t2=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k20879 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  print-message");
t2=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k20807 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20812,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li307),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_20817(t6,t2,((C_word*)t0)[2]);}

/* do3307 in k20807 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20817(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20817,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20827,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 377  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_20781(t6,t3,t4,t5);}}

/* k20825 in do3307 in k20807 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_20830(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  print-message");
t4=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[405]);}}

/* k20828 in k20825 in do3307 in k20807 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20817(t3,((C_word*)t0)[2],t2);}

/* k20810 in k20807 in printer in sal:print in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  print-message");
t2=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[404]);}

/* sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_20601,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20605,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[389]))){
C_trace("ChickenBridge.scm: 377  printf");
t8=C_retrieve(lf[369]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[400],t4);}
else{
t8=t7;
f_20605(2,t8,C_SCHEME_UNDEFINED);}}

/* k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20605,2,t0,t1);}
t2=C_mutate(&lf[386],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[316],"list->token"),t4);}

/* k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20610,2,t0,t1);}
t2=C_mutate(&lf[387],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20613,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_20613(t5,t4);}
else{
t4=t3;
f_20613(t4,C_SCHEME_FALSE);}}

/* k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20613(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20613,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20617,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[387],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18425,a[2]=t4,a[3]=t3,a[4]=((C_word)li305),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  call/cc");
t7=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a18424 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18425(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18425,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18431,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li303),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18438,a[2]=t2,a[3]=((C_word)li304),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a18437 in a18424 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18438,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18445,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_18445(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_18445(t6,C_SCHEME_FALSE);}}

/* k18443 in a18437 in a18424 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18445,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  add-emit-info");
f_18082(t2,lf[396],lf[397],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 377  make-parse-error");
f_17902(((C_word*)t0)[4],lf[398],C_retrieve2(lf[363],"*maxtokpos*"));}}

/* k18450 in k18443 in a18437 in a18424 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a18430 in a18424 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18431,2,t0,t1);}
t2=lf[363]=C_fix(0);;
C_trace("ChickenBridge.scm: 377  parser");
f_18463(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20617,2,t0,t1);}
t2=C_mutate(&lf[388],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20620,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[388],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[332]))){
t5=C_retrieve2(lf[386],"*sal-string*");
t6=C_retrieve2(lf[388],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20654,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  parse-error-position");
f_17941(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 377  pp");
t5=C_retrieve(lf[394]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[388],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 377  eval");
t5=C_retrieve(lf[395]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[388],"*sal-output*"));}}}

/* k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20654,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20747,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li302),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_20747(t11,t7,C_SCHEME_FALSE);}

/* do3280 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20747(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20747,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20757,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_20757(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_20757(t11,t10);}}}

/* k20755 in do3280 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20747(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20660,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20717,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li301),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_20717(t9,t5,C_SCHEME_FALSE);}

/* do3287 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20717(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20717,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20727,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_20727(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_20727(t11,t10);}}}

/* k20725 in do3287 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_20727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20717(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20671,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20678,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  parse-error-string");
f_17923(t4,((C_word*)t0)[2]);}

/* k20680 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  make-string");
t3=*((C_word*)lf[303]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k20684 in k20680 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20690,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  substring");
t3=*((C_word*)lf[393]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20688 in k20684 in k20680 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20694,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  make-string");
t3=*((C_word*)lf[303]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k20692 in k20688 in k20684 in k20680 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20694,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20701,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 377  make-string");
t5=*((C_word*)lf[303]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k20699 in k20692 in k20688 in k20684 in k20680 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20701,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 377  string-append");
t5=*((C_word*)lf[159]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[392],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20676 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  print-error");
t2=C_retrieve(lf[391]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k20669 in k20666 in k20658 in k20652 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k20618 in k20615 in k20611 in k20608 in k20603 in sal in k20592 in k20589 in k20586 in k20583 in k20580 in k20074 in k20071 in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19552,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19559,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_19565,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t33,t34,C_fix(23296));}

/* k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19565,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19569,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_19615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,t3,C_fix(10756));}}

/* k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19615,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19619,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_19712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,t3,C_fix(22784));}}

/* k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19712,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19716,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19780,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19780,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19787,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20037,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_19787(t8,t7);}}

/* k20035 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19787(t3,t2);}

/* k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19787(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19787,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19790,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20025,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k20023 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19790(t3,t2);}

/* k19974 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19976,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k19980 in k19974 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19982,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_19790(t4,t3);}}

/* k20004 in k19980 in k19974 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20006,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19990,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20002,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k20000 in k20004 in k19980 in k19974 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_20002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k19988 in k20004 in k19980 in k19974 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19790(t3,t2);}

/* k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19790(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19790,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_19793(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19952,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[385]);}}

/* k19950 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19956,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k19954 in k19950 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_19793(t4,t3);}

/* k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19793(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19793,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19796(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19929,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[384]);}}

/* k19927 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19933,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k19931 in k19927 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_19796(t4,t3);}

/* k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19796(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19796,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_19799(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19906,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[383]);}}
else{
t3=t2;
f_19799(t3,C_SCHEME_UNDEFINED);}}

/* k19904 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19910,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k19908 in k19904 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_19799(t4,t3);}

/* k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19799,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19802,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19831,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_19802(t7,t6);}}

/* k19829 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19831,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[375],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_19802(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19849,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k19847 in k19829 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19849,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[381],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_19802(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k19865 in k19847 in k19829 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19867,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[382],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[95],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_19802(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k19883 in k19865 in k19847 in k19829 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19885,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[306],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[95],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19802(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_19802(t2,C_SCHEME_UNDEFINED);}}

/* k19800 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19802,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19806,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k19804 in k19800 in k19797 in k19794 in k19791 in k19788 in k19785 in k19778 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19559(t3,t2);}

/* k19714 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19716,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19720,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k19718 in k19714 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19720,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[380]);}

/* k19722 in k19718 in k19714 in k19710 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19724,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_19559(t12,t11);}

/* k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19619,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19623,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19627,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k19625 in k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19627,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19630,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19646,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_19630(t6,t5);}}

/* k19644 in k19625 in k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19646,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19650,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[379]);}

/* k19648 in k19644 in k19625 in k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19650,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[378],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_19630(t12,t11);}

/* k19628 in k19625 in k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19630(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19630,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19634,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k19632 in k19628 in k19625 in k19621 in k19617 in k19613 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19559(t3,t2);}

/* k19567 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19569,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[377]);}

/* k19571 in k19567 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19573,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[376]);}

/* k19575 in k19571 in k19567 in k19563 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19577,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[375],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_19559(t10,t9);}

/* k19557 in sal-parse-stepping in k19548 in k19545 in k19542 in k19539 in k19536 in k19533 in k19530 in k19527 in k19524 in k19521 in k19518 in k19515 in k19512 in k19509 in k19506 in k19503 in k19500 in k19497 in k19494 in k19491 in k19488 in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19374(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19374,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19386,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li298),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_19386(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19386,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19405,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  is-op?");
f_19353(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19405,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19408,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19423,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li297),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_19423(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_19408(2,t5,t4);}}

/* do2918 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19423(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19423,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19437,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19451,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t12=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19455,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 377  is-op?");
f_19353(t10,t11);}}

/* k19453 in do2918 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19455,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_19458(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_19458(t10,t9);}}

/* k19456 in k19453 in do2918 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19458(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_19423(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19449 in do2918 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  inf->pre");
f_19374(((C_word*)t0)[2],t1);}

/* k19435 in do2918 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19437,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k19406 in k19403 in do2916 in inf->pre in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_19386(t2,((C_word*)t0)[2]);}

/* is-op? in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19353,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19360,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  token-unit?");
f_18022(t3,t2);}

/* k19358 in is-op? in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19360,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19363,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k19361 in k19358 in is-op? in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19369,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  SalOpType?");
f_19130(t2,t1);}

/* k19367 in k19361 in k19358 in is-op? in k19349 in k19346 in k19343 in k19340 in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19369,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19288(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19288,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19297,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li294),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_19297(t10,t1,t2);}

/* do2882 in remove-token-type in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19297(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19297,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19310,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19320,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  token-unit-type=?");
f_18038(t4,t5,((C_word*)t0)[2]);}}

/* k19318 in do2882 in remove-token-type in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_19320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19320,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19310(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_19310(t7,t6);}}

/* k19308 in do2882 in remove-token-type in k19284 in k19281 in k19278 in k19275 in k19272 in k19269 in k19266 in k19263 in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19297(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19244(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19244,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19232(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19232,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19130(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19130,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_19082(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19082,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18463(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18463,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18467,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 377  printf");
t10=C_retrieve(lf[369]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[370],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_18467(2,t10,C_SCHEME_UNDEFINED);}}

/* k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  null-tokens?");
f_17642(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_18473(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18888,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18892,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18896,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  first-token");
f_17630(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k18894 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  token-position");
f_17589(((C_word*)t0)[2],t1);}

/* k18890 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  max");
t2=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[363],"*maxtokpos*"),t1);}

/* k18886 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[363],t1);
t3=((C_word*)t0)[2];
f_18473(t3,t2);}

/* k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18473,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value");
t4=C_retrieve2(lf[203],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18596,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t3,((C_word*)t0)[8]);}}

/* k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18596,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18602,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17829,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t4,t3);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[368],((C_word*)t0)[2]);}}

/* k17827 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_18602(t3,(C_word)C_eqp(t2,lf[352]));}
else{
t2=((C_word*)t0)[2];
f_18602(t2,C_SCHEME_FALSE);}}

/* k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18602,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 377  pattern-nsubs");
f_17802(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17845,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t5,t4);}}

/* k17843 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_18690(t3,(C_word)C_eqp(t2,lf[353]));}
else{
t2=((C_word*)t0)[2];
f_18690(t2,C_SCHEME_FALSE);}}

/* k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18690,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  pattern-nsubs");
f_17802(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  pattern-zero-or-more?");
f_17870(t2,((C_word*)t0)[2]);}}

/* k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_18763(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17861,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t4,t3);}}

/* k17859 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_18763(t3,(C_word)C_eqp(t2,lf[93]));}
else{
t2=((C_word*)t0)[2];
f_18763(t2,C_SCHEME_FALSE);}}

/* k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18763,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18769,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li286),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_18792(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17893,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t4,t3);}}

/* k17891 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_18841(t3,(C_word)C_eqp(t2,lf[367]));}
else{
t2=((C_word*)t0)[2];
f_18841(t2,C_SCHEME_FALSE);}}

/* k18839 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18841(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18841,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18850,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li287),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18867,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li288),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[366],t3);}}

/* a18866 in k18839 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18867,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a18860 in k18839 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18861,2,t0,t1);}
C_trace("ChickenBridge.scm: 377  parser");
f_18463(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18848 in k18839 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18792,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_18802(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  null-tokens?");
f_17642(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18802,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18805,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li284),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18828,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li285),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a18827 in k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18828,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a18821 in k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18822,2,t0,t1);}
C_trace("ChickenBridge.scm: 377  parser");
f_18463(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18803 in k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18808,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18815,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_18808(t3,C_SCHEME_UNDEFINED);}}

/* k18813 in k18803 in k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18815,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_18808(t6,t5);}

/* k18806 in k18803 in k18800 in do2619 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_18792(t2,((C_word*)t0)[2]);}

/* k18767 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18772,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18778,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-zero-or-more?");
f_17870(t3,((C_word*)t0)[2]);}

/* k18776 in k18767 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_18772(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_18772(t5,t4);}}

/* k18770 in k18767 in k18761 in k18758 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18772(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18699,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18714,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li283),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_18714(t6,t2,C_fix(0));}

/* do2599 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18714(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18714,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18724,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18733,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li281),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li282),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a18746 in do2599 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18747,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a18732 in do2599 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18741,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-sub");
f_17812(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18739 in a18732 in do2599 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18741,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 377  parser");
f_18463(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18722 in do2599 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18724,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_18714(t3,((C_word*)t0)[2],t2);}

/* k18697 in k18694 in k18688 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18611,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18614,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li280),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_18633(t8,t4,C_fix(0));}

/* do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18633(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18633,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18646,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18666,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li278),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18680,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li279),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a18679 in do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18680,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a18665 in do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-sub");
f_17812(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18672 in a18665 in do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18674,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 377  parser");
f_18463(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18644 in do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18649,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_18649(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_18649(t5,t4);}}

/* k18647 in k18644 in do2577 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18649(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18649,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_18633(t3,((C_word*)t0)[2],t2);}

/* k18612 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18617,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_18617(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18631,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t5=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k18629 in k18612 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18617(t3,t2);}

/* k18615 in k18612 in k18609 in k18600 in k18594 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  SalTokenType?");
f_19082(t2,t1);}

/* k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18488,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18494,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  null-tokens?");
f_17642(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18546,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  SalRuleType?");
f_19232(t2,((C_word*)t0)[5]);}}

/* k18544 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18546,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  get-rule");
f_17760(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[365],((C_word*)t0)[2]);}}

/* k18547 in k18544 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18549,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[322]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li276),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18570,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li277),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a18569 in k18547 in k18544 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18570,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18581,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_18581(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k18579 in a18569 in k18547 in k18544 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a18559 in k18547 in k18544 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18560,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 377  parser");
f_18463(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18494,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  first-token");
f_17630(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18510,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  token-type");
f_17553(t3,t1);}

/* k18538 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k18508 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18510,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18525,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  token-type");
f_17553(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k18523 in k18508 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18529,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-string");
f_17571(t2,((C_word*)t0)[2]);}

/* k18527 in k18523 in k18508 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18533,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-position");
f_17589(t2,((C_word*)t0)[2]);}

/* k18531 in k18527 in k18523 in k18508 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18515 in k18508 in k18502 in k18492 in k18486 in k18480 in k18471 in k18468 in k18465 in parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 377  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18359(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18359,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18361,a[2]=t2,a[3]=((C_word)li274),tmp=(C_word)a,a+=4,tmp));}

/* f_18361 in simple-unit-emitter in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18361,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18365,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18409,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t6,t2);}

/* k18407 */
static void C_ccall f_18409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k18363 */
static void C_ccall f_18365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18365,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18368,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_18368(t9,t8);}
else{
t6=t5;
f_18368(t6,C_SCHEME_UNDEFINED);}}

/* k18366 in k18363 */
static void C_fcall f_18368(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18368,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18373,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li273),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_18373(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2534 in k18366 in k18363 */
static void C_fcall f_18373(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18373,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18394,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k18392 in do2534 in k18366 in k18363 */
static void C_ccall f_18394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18373(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18351(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18351,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18353,a[2]=t2,a[3]=((C_word)li271),tmp=(C_word)a,a+=4,tmp));}

/* f_18353 in simple-unit-parser in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18353,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 377  make-parse-unit");
f_17953(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18143(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18143,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18160,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  emit");
f_18110(t5,t6,t3,t4);}}

/* k18158 in emit-list in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18164,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  emit-list");
f_18143(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18162 in k18158 in emit-list in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18164,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18110(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18110,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18117,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  token-unit?");
f_18022(t5,t2);}

/* k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18117,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18188,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18061,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit?");
f_17959(t4,t3);}}

/* k18059 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18061,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18068,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18126(2,t2,C_SCHEME_FALSE);}}

/* k18066 in k18059 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  SalRuleType?");
f_19232(((C_word*)t0)[2],t1);}

/* k18124 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18126,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18326,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18349,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 377  emit-list");
f_18143(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[359],((C_word*)t0)[4]);}}}

/* k18347 in k18124 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  get-rule");
f_17760(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k18324 in k18124 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18326,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[322]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t4,((C_word*)t0)[4]);}}

/* k18340 in k18324 in k18124 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  emit");
f_18110(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-parsed");
f_17992(t2,((C_word*)t0)[2]);}

/* k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18191,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 377  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 377  string->symbol");
t8=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18215,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalOpType?");
f_19130(t8,((C_word*)t0)[4]);}}}

/* k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18215,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18266,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18272,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18278,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k18276 in k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18278,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k18285 in k18276 in k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18287,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k18294 in k18285 in k18276 in k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18296,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  string->symbol");
t2=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k18303 in k18294 in k18285 in k18276 in k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18305,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[355],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18314,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k18312 in k18303 in k18294 in k18285 in k18276 in k18270 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  string->symbol");
t2=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[356],((C_word*)t0)[2]);}}

/* k18264 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18221,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[126]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k18225 in k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18227,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[104]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k18231 in k18225 in k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18233,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[351]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k18237 in k18231 in k18225 in k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18239,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[352]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k18243 in k18237 in k18231 in k18225 in k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18245,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[353]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k18249 in k18243 in k18237 in k18231 in k18225 in k18219 in k18213 in k18189 in k18186 in k18115 in emit in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[354]);}
else{
C_trace("ChickenBridge.scm: 377  string->symbol");
t2=*((C_word*)lf[350]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18092(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18092,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18099,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_18099(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[348],t2);}}

/* k18097 in set-emit-info! in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18082(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18082,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18070(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18070,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18038(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18038,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18045,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  token-unit?");
f_18022(t4,t2);}

/* k18043 in token-unit-type=? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18045,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18052,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k18050 in k18043 in token-unit-type=? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  SalType=?");
f_19244(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18022(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18022,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18029,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit?");
f_17959(t3,t2);}

/* k18027 in token-unit? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18029,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18036,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  parse-unit-type");
f_17974(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k18034 in k18027 in token-unit? in k18018 in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_18036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  SalTokenType?");
f_19082(((C_word*)t0)[2],t1);}

/* parse-unit-position in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_18010(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18010,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[336]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17992(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17992,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[336]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17974(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17974,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[336]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17959(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17959,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[336]));}

/* make-parse-unit in k17949 in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17953(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17953,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[336],t2,t3,t4));}

/* parse-error-position in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17941(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17941,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[332]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17923(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17923,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[332]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17902(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17902,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[332],t2,t3));}

/* pattern-zero-or-more? in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17870(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17870,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17877,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-clause?");
f_17784(t3,t2);}

/* k17875 in pattern-zero-or-more? in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[97]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17812(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17812,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17820,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-subs");
f_17796(t4,t2);}

/* k17818 in pattern-sub in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17802(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17802,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17810,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-subs");
f_17796(t3,t2);}

/* k17808 in pattern-nsubs in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17796(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17796,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17784(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17784,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17781(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17781,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k17756 in k17753 in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17760(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17760,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[320],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 377  hash-table-ref/default");
t4=C_retrieve(lf[325]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[320],"*rules*"),t3);}}

/* rule-name in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17673(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17673,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k17648 in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17652(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17652,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[322],t2,t3,t4,t5,t6));}

/* null-tokens? in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17642(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17642,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17630(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17630,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k17597 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17601(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17601,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[317]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[311],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[311],"make-token"),t2);}}

/* token-position in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17589(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17589,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[312]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17571(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17571,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[312]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17553(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17553,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[312]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17532,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[312],t2,t3,t4));}

/* markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16692(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr3r,(void*)f_16692r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16692r(t0,t1,t2,t3);}}

static void C_ccall f_16692r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(6);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?C_fix(1):(C_word)C_i_car(t3));
t6=(C_word)C_i_nullp(t3);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17514,a[2]=t5,a[3]=t1,a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t6)){
t8=t7;
f_17514(t8,t6);}
else{
t8=(C_word)C_i_cdr(t3);
t9=t7;
f_17514(t9,(C_word)C_i_nullp(t8));}}

/* k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17514,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[5]));
t3=(C_word)C_i_length(((C_word*)t0)[4]);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(8);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16708,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t9,a[6]=t5,a[7]=t11,a[8]=((C_word*)t0)[3],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_truep((C_word)C_i_equalp(t2,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t13=t12;
f_16708(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[310],t2);}}

/* k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16710,a[2]=((C_word*)t0)[10],a[3]=((C_word)li218),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16792,a[2]=t4,a[3]=((C_word)li221),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16902,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17422,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li238),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_17422(t10,t6,C_fix(0));}

/* do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17422(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17422,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17432,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17445,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li237),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_17445(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2187 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17445(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17445,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[8]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17455,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17473,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  reverse");
t9=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17498,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 376  modulo");
t9=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k17496 in do2187 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17498,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17480,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)t0)[2]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_17480(t7,t6);}
else{
t5=t4;
f_17480(t5,C_SCHEME_UNDEFINED);}}

/* k17478 in k17496 in do2187 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17480,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_17445(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17471 in do2187 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add-outcome");
t2=((C_word*)t0)[4];
f_16710(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k17453 in do2187 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17455,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k17430 in do2184 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17432,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_17422(t3,((C_word*)t0)[2],t2);}

/* k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17378,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t5=C_retrieve(lf[304]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[306]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17384,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_17384(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_17384(t5,C_SCHEME_FALSE);}}}

/* k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17384,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17390,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t4=C_retrieve(lf[304]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k17404 in k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16905(t3,t2);}

/* a17389 in k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17390,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17398,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  format");
t5=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[309],t2);}

/* k17396 in a17389 in k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17402,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[308],((C_word*)t0)[2]);}

/* k17400 in k17396 in a17389 in k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string-ci<?");
t2=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17386 in k17382 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16905(t3,t2);}

/* k17376 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16905(t3,t2);}

/* k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16905(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16905,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17255,a[2]=t4,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word)li235),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_17255(t6,t2,((C_word*)((C_word*)t0)[8])[1],C_fix(0));}

/* do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17255(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17255,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17266,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  max");
t6=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17279,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 376  max");
t10=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17279,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17341,a[2]=t5,a[3]=((C_word)li234),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_17341(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2208 in k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17341(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17341,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k17280 in k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17282,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[305]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17298,a[2]=t3,a[3]=t8,a[4]=((C_word)li233),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_17298(t10,t6,((C_word*)t0)[2]);}

/* do2214 in k17280 in k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17298(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17298,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17323,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 376  decimals");
t9=C_retrieve(lf[101]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k17321 in do2214 in k17280 in k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17298(t4,((C_word*)t0)[2],t3);}

/* k17287 in k17280 in k17277 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_17255(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17264 in do2200 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17241,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li232),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t4=C_retrieve(lf[304]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[8])[1],t3);}

/* a17240 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17241,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 376  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_16792(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16912,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16915,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_eqp(((C_word*)t0)[6],C_fix(1));
if(C_truep(t4)){
t5=lf[293];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16963,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  make-string");
t7=*((C_word*)lf[303]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_16915(2,t5,C_SCHEME_UNDEFINED);}}

/* k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  newline");
t3=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17222,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li231),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_17222(t6,t2,C_fix(0));}

/* do2227 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17222(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17222,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17232,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[296]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[297]+1));}}

/* k17230 in do2227 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17232,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_17222(t3,((C_word*)t0)[2],t2);}

/* k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17160,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li230),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_17160(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17160(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17160,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17170,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  display");
t4=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  format");
t4=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[302],t3);}

/* k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17173,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17179,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17193,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 376  max");
t6=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k17191 in k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17193,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17195,a[2]=t3,a[3]=((C_word)li229),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17195(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2237 in k17191 in k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17195(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17195,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17205,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[296]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[297]+1));}}

/* k17203 in do2237 in k17191 in k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17205,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_17195(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k17177 in k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  display");
t3=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k17180 in k17177 in k17171 in k17168 in do2232 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17160(t3,((C_word*)t0)[2],t2);}

/* k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16975,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li228),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_16980(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16980(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16980,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 376  newline");
t5=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16996,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_16996(2,t4,lf[299]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16860,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 376  format");
t6=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[301],t5);}}

/* k16858 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16860,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16869,a[2]=t6,a[3]=t3,a[4]=((C_word)li227),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_16869(t8,((C_word*)t0)[2],t4);}

/* do2179 in k16858 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16869(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16869,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16880,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16891,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  format");
t6=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[300],t5);}}

/* k16889 in do2179 in k16858 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string-append");
t2=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k16878 in do2179 in k16858 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16869(t4,((C_word*)t0)[2],t3);}

/* k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16996,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17002,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17131,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 376  max");
t6=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k17129 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17131,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17133,a[2]=t3,a[3]=((C_word)li226),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17133(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2253 in k17129 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17133(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17133,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17143,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[296]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[297]+1));}}

/* k17141 in do2253 in k17129 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17143,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_17133(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17005,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17104,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  min");
t4=*((C_word*)lf[298]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17102 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17104,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17106,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li225),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17106(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2259 in k17102 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17106(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17106,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17116,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[296]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[297]+1));}}

/* k17114 in do2259 in k17102 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17116,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_17106(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17008,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li224),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_17017(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17017(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17017,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17030,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17049,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 376  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17043,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  display");
t8=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k17041 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  display");
t2=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17049,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17055,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  display");
t4=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17053 in k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17065,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  max");
t5=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k17063 in k17053 in k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17065,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17067,a[2]=t3,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17067(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2273 in k17063 in k17053 in k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_17067(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17067,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17077,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[296]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[297]+1));}}

/* k17075 in do2273 in k17063 in k17053 in k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17077,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_17067(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k17056 in k17053 in k17047 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  display");
t2=*((C_word*)lf[295]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17028 in do2266 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17017(t3,((C_word*)t0)[2],t2);}

/* k17006 in k17003 in k17000 in k16994 in k16991 in do2247 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_17008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16980(t3,((C_word*)t0)[2],t2);}

/* k16973 in k16970 in k16967 in k16964 in k16961 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  newline");
t2=*((C_word*)lf[294]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k16913 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16918,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)t0)[5],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16943,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16945,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_16918(t3,C_SCHEME_UNDEFINED);}}

/* a16944 in k16913 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16945(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16945,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 376  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[292],t4);}

/* k16941 in k16913 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16918(t3,t2);}

/* k16916 in k16913 in k16910 in k16906 in k16903 in k16900 in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],C_fix(1)))){
C_trace("ChickenBridge.scm: 376  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],C_fix(2)))){
C_trace("ChickenBridge.scm: 376  make-markov");
t2=C_retrieve(lf[267]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}}

/* before? in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16792(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16792,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16802,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16840,a[2]=t2,a[3]=((C_word)li220),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  list-index");
t7=C_retrieve(lf[291]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a16839 in before? in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16840(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16840,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k16800 in before? in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16830,a[2]=((C_word*)t0)[4],a[3]=((C_word)li219),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  list-index");
t4=C_retrieve(lf[291]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a16829 in k16800 in before? in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16830(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16830,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k16803 in k16800 in before? in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_16792(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16710(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16710,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16714,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16782,a[2]=t2,a[3]=((C_word)li217),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  find");
t6=C_retrieve(lf[290]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a16781 in add-outcome in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16782,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k16712 in add-outcome in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16714,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16764,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 376  last-pair");
t7=C_retrieve(lf[287]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16732,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  format");
t4=C_retrieve(lf[288]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[289],((C_word*)t0)[3]);}}

/* k16730 in k16712 in add-outcome in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16732,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k16762 in k16712 in add-outcome in k16706 in k17512 in markov-analyze in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16764,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16598(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16598,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16602,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t3,t2);}

/* k16600 in next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16602,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16631,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[278]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  graph-node-datum");
f_16017(((C_word*)t0)[2],t6);}}

/* k16629 in k16600 in next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16631,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16636,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li215),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_16636(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2141 in k16629 in k16600 in next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16636(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16636,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16646,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_16646(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[285],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16661,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[278]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_16661(t12,t11);}
else{
t10=t5;
f_16661(t10,C_SCHEME_UNDEFINED);}}}

/* k16659 in do2141 in k16629 in k16600 in next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16636(t3,((C_word*)t0)[2],t2);}

/* k16644 in do2141 in k16629 in k16600 in next-in-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  graph-node-datum");
f_16017(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16080(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_16080r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16080r(t0,t1,t2,t3);}}

static void C_ccall f_16080r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16084,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16342,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16351,a[2]=t9,a[3]=((C_word)li213),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[284],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16351(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16351,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16355,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_16355(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[283],t2);}}

/* k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16360,a[2]=((C_word*)t0)[4],a[3]=((C_word)li212),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16360(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_16360r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16360r(t0,t1,t2,t3);}}

static void C_ccall f_16360r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16364,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_16364(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[281]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16502,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[281]);}
else{
t20=t19;
f_16502(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[282]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16537,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[282]);}
else{
t21=t20;
f_16537(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16566,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_16566(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k16564 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16566,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16581,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16579 in k16564 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16573(2,t2,C_SCHEME_UNDEFINED);}}

/* k16571 in k16564 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16364(t5,t4);}

/* k16535 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16541(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16539 in k16535 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16364(t7,t6);}

/* k16500 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16504 in k16500 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16364(t7,t6);}

/* k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16364,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16367,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16367(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16402,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[281]);}
else{
t6=t5;
f_16402(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[282]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16437,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[282]);}
else{
t7=t6;
f_16437(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16466,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16466(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16464 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16466,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16481,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16479 in k16464 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16473(2,t2,C_SCHEME_UNDEFINED);}}

/* k16471 in k16464 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16367(t5,t4);}

/* k16435 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16439 in k16435 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16367(t7,t6);}

/* k16400 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16404 in k16400 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16367(t7,t6);}

/* k16365 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16367,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16370,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16370(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16368 in k16365 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_16373(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_16373(t4,t3);}}

/* k16371 in k16368 in k16365 in k16362 in a16359 in k16353 in parse-graph-item in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16373,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[278],t5,t6,t7));}

/* k16340 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16084(2,t3,t2);}

/* k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16084,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16087,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16087(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[234]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16247,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 376  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[234]);}
else{
t18=t17;
f_16247(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[235]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16282,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[235]);}
else{
t19=t18;
f_16282(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16311,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16311(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16309 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16311,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16326,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16324 in k16309 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16318(2,t2,C_SCHEME_UNDEFINED);}}

/* k16316 in k16309 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16087(t5,t4);}

/* k16280 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16286(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16284 in k16280 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16087(t7,t6);}

/* k16245 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16251(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16249 in k16245 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16087(t7,t6);}

/* k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16087(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16087,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16090,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16090(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_16147(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16182,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_16182(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16211,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16211(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16209 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16211,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16218,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16226,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16224 in k16209 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16218(2,t2,C_SCHEME_UNDEFINED);}}

/* k16216 in k16209 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16090(t5,t4);}

/* k16180 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16184 in k16180 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16090(t7,t6);}

/* k16145 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16149 in k16145 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16090(t7,t6);}

/* k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16090(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16090,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16093,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16093(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16096,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k16094 in k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16096,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16102,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16108,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[280],"next-in-graph"),t5);}

/* a16107 in k16094 in k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16108,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16114,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16126,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t5,t3);}

/* k16124 in a16107 in k16094 in k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a16113 in a16107 in k16094 in k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16114(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16114,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  graph-node-datum");
f_16017(t1,t2);}

/* k16100 in k16094 in k16091 in k16088 in k16085 in k16082 in make-graph in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_16102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_16017(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16017,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[278]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15677(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15677,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15680,a[2]=t4,a[3]=((C_word)li204),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15859,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t6,t2);}

/* k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15863,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache");
f_10409(t2,((C_word*)t0)[4]);}

/* k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15863,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15865,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li207),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15865(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15865(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15865,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_15875(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_15875(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15790,a[2]=t13,a[3]=((C_word)li206),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_15790(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1967 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15790(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15790,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15800,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_15800(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_15800(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k15798 in do1967 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15800(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15800,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[97]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15807,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_15807(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_15807(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_15807(t9,(C_word)C_eqp(t8,lf[97]));}}}}

/* k15805 in k15798 in do1967 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15807(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_15790(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15875,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[276],((C_word*)t0)[6]);}
else{
t3=t2;
f_15878(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_15865(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k15876 in k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 376  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_15680(t7,t2,t4,t6);}

/* k15880 in k15876 in k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15882,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15885,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_15885(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_15885(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15902,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li205),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_15902(t8,t3,((C_word*)t0)[3]);}}}

/* do1991 in k15880 in k15876 in k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15902(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_15902,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15918,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k15916 in do1991 in k15880 in k15876 in k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k15883 in k15880 in k15876 in k15873 in do1982 in k15861 in k15857 in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15680(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15680,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15748,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_6970(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15692,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li203),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_15692(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1951 in select-output in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15692,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_15680(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15728,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_15728(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t9,t11);}}}

/* k15726 in do1951 in select-output in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15728,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_15692(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k15746 in select-output in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15748,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15753,a[2]=t3,a[3]=t1,a[4]=((C_word)li202),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15753(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1961 in k15746 in select-output in next-in-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15753(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15753,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15190(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_15190r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15190r(t0,t1,t2,t3);}}

static void C_ccall f_15190r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15194,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15671,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15117,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li200),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_15117(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[275],((C_word*)t4)[1]);}}

/* do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15117(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15117,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14962,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_14962(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[274],((C_word*)t11)[1]);}}}

/* k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14962,2,t0,t1);}
t2=(C_word)C_i_member(lf[270],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14968,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_14968(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[272],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_14968(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[273],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14968,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14980,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15053,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li199),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_15053(t17,t13);}

/* do1830 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_15053,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14983,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li198),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a14995 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14996(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14996,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15000,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_15000(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_15000(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_15000(t13,t12);}}

/* k14998 in a14995 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15000,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_15003(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_15003(t5,t4);}}

/* k15001 in k14998 in a14995 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15003,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k14981 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  reverse");
t3=*((C_word*)lf[182]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k14992 in k14981 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14994,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_15134(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[271],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15134(2,t10,t9);}}

/* k15132 in k14992 in k14981 in k14978 in k14966 in k14960 in do1852 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15134,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_15117(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k15669 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15194(2,t3,t2);}

/* k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15194,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15197,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15197(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[234]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15541,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[234]);}
else{
t22=t21;
f_15541(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[235]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15576,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 376  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[235]);}
else{
t23=t22;
f_15576(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[269]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15611,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[269]);}
else{
t24=t23;
f_15611(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15640,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_15640(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15638 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15640,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15655,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15653 in k15638 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15647(2,t2,C_SCHEME_UNDEFINED);}}

/* k15645 in k15638 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15197(t5,t4);}

/* k15609 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15615(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15613 in k15609 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15197(t7,t6);}

/* k15574 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15580(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15578 in k15574 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15197(t7,t6);}

/* k15539 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15545(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15543 in k15539 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15197(t7,t6);}

/* k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15197(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15197,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15200(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_15406(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15441,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_15441(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[269]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15476,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[269]);}
else{
t8=t7;
f_15476(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15505,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15505(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15503 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15505,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15520,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15518 in k15503 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15512(2,t2,C_SCHEME_UNDEFINED);}}

/* k15510 in k15503 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15200(t5,t4);}

/* k15474 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15480(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15478 in k15474 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15200(t7,t6);}

/* k15439 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15445(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15443 in k15439 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15200(t7,t6);}

/* k15404 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15410,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15410(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15408 in k15404 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15200(t7,t6);}

/* k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15200,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15203,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15203(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15271,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_15271(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15306,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_15306(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[269]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15341,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[269]);}
else{
t8=t7;
f_15341(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15370,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15370(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15368 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15370,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15385,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15383 in k15368 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15377(2,t2,C_SCHEME_UNDEFINED);}}

/* k15375 in k15368 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15203(t5,t4);}

/* k15339 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15345(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15343 in k15339 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15203(t7,t6);}

/* k15304 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15310(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15308 in k15304 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15203(t7,t6);}

/* k15269 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15275(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15273 in k15269 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15203(t7,t6);}

/* k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15203,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15206,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15206(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15209,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15215,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15242,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[268],"next-in-markov"),t4);}

/* a15241 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15242,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15250,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k15248 in a15241 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15213 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15218(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15228,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 376  make-list");
t7=C_retrieve(lf[61]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[97]);}}

/* k15226 in k15213 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15218(t3,t2);}

/* k15216 in k15213 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_15218(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15218,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15219 in k15216 in k15213 in k15207 in k15204 in k15201 in k15198 in k15195 in k15192 in make-markov in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_15221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14757(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14757,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14761,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t3,t2);}

/* k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}

/* k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14767,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-flags");
f_10175(t2,((C_word*)t0)[2]);}

/* k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14767,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t4,t1,C_fix(4));}

/* k14934 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14936,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_14773(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  period-count");
f_10025(t2,((C_word*)t0)[2]);}}

/* k14947 in k14934 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  period-length");
f_10043(t2,((C_word*)t0)[2]);}

/* k14951 in k14947 in k14934 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 376  recalc-weightings");
f_14645(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_14773(2,t2,C_SCHEME_UNDEFINED);}}

/* k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_14779(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14910,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14929,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-count");
f_13795(t4,((C_word*)t0)[4]);}}

/* k14927 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14929,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 376  random-item-count-set!");
f_13786(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14908 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-count");
f_13795(t2,((C_word*)t0)[2]);}

/* k14915 in k14908 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14921,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-min");
f_13759(t2,((C_word*)t0)[2]);}

/* k14919 in k14915 in k14908 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_14779(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14779,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  random-item-datum");
f_13705(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache");
f_10409(t2,((C_word*)t0)[2]);}}

/* k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14785,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14789,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14827,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14869,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  pick");
f_14789(t7,t2,t1);}

/* k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14869,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li195),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_14871(t5,((C_word*)t0)[2],t1);}

/* do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14871(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14871,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14890,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14893,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-max");
f_13777(t4,t2);}

/* k14891 in do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14893,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-count");
f_13795(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14890(t2,C_SCHEME_FALSE);}}

/* k14898 in k14891 in do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14904,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-max");
f_13777(t2,((C_word*)t0)[2]);}

/* k14902 in k14898 in k14891 in do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_14890(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k14888 in do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14890(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14890,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14886,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pick");
f_14789(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k14884 in k14888 in do1804 in k14867 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_14871(t2,((C_word*)t0)[2],t1);}

/* k14825 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14830,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_14830(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14844,a[2]=t5,a[3]=((C_word)li194),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_14844(t7,t2,((C_word*)t0)[2]);}}

/* do1808 in k14825 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14844(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14844,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14854,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  random-item-count-set!");
f_13786(t3,t4,C_fix(0));}}

/* k14852 in do1808 in k14825 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14844(t3,((C_word*)t0)[2],t2);}

/* k14828 in k14825 in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 376  random-item-datum");
f_13705(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14789(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14789,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14797,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_6970(t4,t3);}

/* k14795 in pick in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14797,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14799,a[2]=t3,a[3]=((C_word)li192),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_14799(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1799 in k14795 in pick in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14799(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14799,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14820,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  random-item-index");
f_13723(t4,t5);}

/* k14818 in do1799 in k14795 in pick in k14783 in k14777 in k14771 in k14765 in k14762 in k14759 in next-in-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14799(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14645(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14645,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14755,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t2);}

/* k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14755,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[266];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14652,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14714,a[2]=t7,a[3]=t4,a[4]=((C_word)li190),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_14714(t9,t5,t2);}

/* do1771 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14714(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14714,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14743,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14747,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  random-item-weight");
f_13741(t4,t5);}}

/* k14745 in do1771 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(((C_word*)t0)[2],t1);}

/* k14741 in do1771 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14743,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  random-item-index-set!");
f_13714(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k14726 in k14741 in do1771 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14714(t3,((C_word*)t0)[2],t2);}

/* k14650 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14652,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14660,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li189),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14660(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1777 in k14650 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14660(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14660,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14693,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14705,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  random-item-index");
f_13723(t8,t9);}}

/* k14703 in do1777 in k14650 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14705,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 376  floor");
t4=*((C_word*)lf[167]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k14691 in do1777 in k14650 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14693,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  random-item-index-set!");
f_13714(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k14675 in k14691 in do1777 in k14650 in k14753 in recalc-weightings in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_14660(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13878(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_13878r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13878r(t0,t1,t2,t3);}}

static void C_ccall f_13878r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13882,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14195,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14195(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14195,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14202,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_14202(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_14202(t9,t8);}}

/* k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14202(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14202,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14205,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14205(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[263]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14508,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[263]);}
else{
t22=t21;
f_14508(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[264]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14543,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 376  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[264]);}
else{
t23=t22;
f_14543(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[265]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14578,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[265]);}
else{
t24=t23;
f_14578(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14607,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_14607(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14605 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14607,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14614,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14622,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14620 in k14605 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14614(2,t2,C_SCHEME_UNDEFINED);}}

/* k14612 in k14605 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14205(t5,t4);}

/* k14576 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14582(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14580 in k14576 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14205(t7,t6);}

/* k14541 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14547(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14545 in k14541 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14205(t7,t6);}

/* k14506 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14512(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14510 in k14506 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14205(t7,t6);}

/* k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14205,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14208(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[263]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14373,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[263]);}
else{
t6=t5;
f_14373(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[264]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14408,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[264]);}
else{
t7=t6;
f_14408(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[265]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14443,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[265]);}
else{
t8=t7;
f_14443(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14472,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_14472(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14470 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14472,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14487,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14485 in k14470 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14479(2,t2,C_SCHEME_UNDEFINED);}}

/* k14477 in k14470 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14208(t5,t4);}

/* k14441 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14447(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14445 in k14441 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14208(t7,t6);}

/* k14406 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14412(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14410 in k14406 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14208(t7,t6);}

/* k14371 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14377(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14375 in k14371 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14208(t7,t6);}

/* k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14208,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14211,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14211(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[263]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14238,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[263]);}
else{
t6=t5;
f_14238(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[264]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14273,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[264]);}
else{
t7=t6;
f_14273(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[265]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14308,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[265]);}
else{
t8=t7;
f_14308(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14337,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_14337(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14335 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14337,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14344,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14352,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14350 in k14335 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14344(2,t2,C_SCHEME_UNDEFINED);}}

/* k14342 in k14335 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14211(t5,t4);}

/* k14306 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14312(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14310 in k14306 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14211(t7,t6);}

/* k14271 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14277,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14277(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14275 in k14271 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14211(t7,t6);}

/* k14236 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_14242(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14240 in k14236 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14211(t7,t6);}

/* k14209 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14211(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14211,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14214,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14214(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k14212 in k14209 in k14206 in k14203 in k14200 in %make-random-item in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14214,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[252],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13885,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13885,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13891,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14159,a[2]=t8,a[3]=t6,a[4]=((C_word)li186),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14159(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14159,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14163,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  random-item-min");
f_13759(t3,t2);}

/* k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  random-item-max");
f_13777(t2,((C_word*)t0)[2]);}

/* k14164 in k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  random-item-weight");
f_13741(t2,((C_word*)t0)[2]);}

/* k14167 in k14164 in k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  random-item-datum");
f_13705(t2,((C_word*)t0)[2]);}

/* k14170 in k14167 in k14164 in k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14185,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t1);}

/* k14183 in k14170 in k14167 in k14164 in k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14185,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14175(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_14175(t2,C_SCHEME_UNDEFINED);}}

/* k14173 in k14170 in k14167 in k14164 in k14161 in a14158 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_14175(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13891,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13898,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_13898(t8,t7);}
else{
t6=t5;
f_13898(t6,C_SCHEME_UNDEFINED);}}

/* k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13898(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13898,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_13901,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13901(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[234]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14065,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 376  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[234]);}
else{
t18=t17;
f_14065(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[235]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14100,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[235]);}
else{
t19=t18;
f_14100(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14129,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_14129(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14127 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14129,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14144,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14142 in k14127 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14136(2,t2,C_SCHEME_UNDEFINED);}}

/* k14134 in k14127 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13901(t5,t4);}

/* k14098 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14104(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14102 in k14098 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13901(t7,t6);}

/* k14063 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14069(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14067 in k14063 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13901(t7,t6);}

/* k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13901,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13904,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13904(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13965,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_13965(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14000,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_14000(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14029,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14029(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14027 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14029,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14044,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14042 in k14027 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14036(2,t2,C_SCHEME_UNDEFINED);}}

/* k14034 in k14027 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13904(t5,t4);}

/* k13998 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14002 in k13998 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_14004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13904(t7,t6);}

/* k13963 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13969(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13967 in k13963 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13904(t7,t6);}

/* k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13904,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13907,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13907(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13910,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13922,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[262],"next-in-weighting"),t4);}

/* a13921 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13922,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13928,a[2]=t2,a[3]=((C_word)li184),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13944,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t5,t3);}

/* k13942 in a13921 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a13927 in a13921 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13928(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13928,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13936,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  random-item-datum");
f_13705(t3,t2);}

/* k13934 in a13927 in a13921 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k13908 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  recalc-weightings");
f_14645(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_13913(2,t3,C_SCHEME_UNDEFINED);}}

/* k13911 in k13908 in k13905 in k13902 in k13899 in k13896 in k13889 in k13883 in k13880 in make-weighting in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13795(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13795,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13786(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13786,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[252]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13777(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13777,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13759(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13759,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13741(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13741,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13723(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13723,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13714(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13714,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[252]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13705(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13705,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[252]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13483,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13486,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13533,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t2);}

/* k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13536,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13559,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13678,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache");
f_10409(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_13536(t4,C_SCHEME_UNDEFINED);}}

/* k13676 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(((C_word*)t0)[2],t1);}

/* k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13566,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13613,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  pattern-length");
f_10211(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13640,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  pattern-length");
f_10211(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13659,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-length");
f_10211(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13674,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-length");
f_10211(t3,((C_word*)t0)[2]);}}

/* k13672 in k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13674,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  rotate-items");
t3=((C_word*)t0)[5];
f_13486(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k13657 in k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13659,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  rotate-items");
t3=((C_word*)t0)[5];
f_13486(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k13638 in k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13640,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  rotate-items");
t3=((C_word*)t0)[6];
f_13486(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k13611 in k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13613,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 376  rotate-items");
t4=((C_word*)t0)[7];
f_13486(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k13564 in k13557 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13536(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k13534 in k13531 in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13536(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_13486,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13492,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li173),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_13492(t10,t1,t3);}

/* do1539 in rotate-items in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13492(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13492,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13508,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k13506 in do1539 in rotate-items in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13511,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k13509 in k13506 in do1539 in rotate-items in next-in-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13511,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13492(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13009(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_13009r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13009r(t0,t1,t2,t3);}}

static void C_ccall f_13009r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13013,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13473,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13013(t8,t7);}}

/* k13471 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13013(t3,t2);}

/* k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13013,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13016,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13016(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[234]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13346,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[234]);}
else{
t22=t21;
f_13346(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[235]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13381,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 376  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[235]);}
else{
t23=t22;
f_13381(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[250]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13416,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[250]);}
else{
t24=t23;
f_13416(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13445,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_13445(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13443 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13445,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13460,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13458 in k13443 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13452(2,t2,C_SCHEME_UNDEFINED);}}

/* k13450 in k13443 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13016(t5,t4);}

/* k13414 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13420,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13420(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13418 in k13414 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13016(t7,t6);}

/* k13379 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13385(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13383 in k13379 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13016(t7,t6);}

/* k13344 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13348 in k13344 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13016(t7,t6);}

/* k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13016,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13019(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13211,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_13211(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13246,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_13246(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[250]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13281,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[250]);}
else{
t8=t7;
f_13281(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13310,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_13310(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13308 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13310,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13325,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13323 in k13308 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13317(2,t2,C_SCHEME_UNDEFINED);}}

/* k13315 in k13308 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13019(t5,t4);}

/* k13279 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13285(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13283 in k13279 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13019(t7,t6);}

/* k13244 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13250(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13248 in k13244 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13019(t7,t6);}

/* k13209 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13215,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13215(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13213 in k13209 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13019(t7,t6);}

/* k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13019,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13022,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13022(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13076,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_13076(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13111,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_13111(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[250]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13146,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[250]);}
else{
t8=t7;
f_13146(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13175,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_13175(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13173 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13175,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13190,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13188 in k13173 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13182(2,t2,C_SCHEME_UNDEFINED);}}

/* k13180 in k13173 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13022(t5,t4);}

/* k13144 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13150(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13148 in k13144 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13022(t7,t6);}

/* k13109 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13115(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13113 in k13109 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13022(t7,t6);}

/* k13074 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13078 in k13074 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13022(t7,t6);}

/* k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_13022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13022,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13025,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13025(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k13026 in k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13028,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13043,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[249],"next-in-rotation"),t5);}

/* a13042 in k13026 in k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13043,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13055,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k13053 in a13042 in k13026 in k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13032 in k13026 in k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13035 in k13032 in k13026 in k13023 in k13020 in k13017 in k13014 in k13011 in make-rotation in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_13037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12933(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12933,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12937,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t3,t2);}

/* k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12940,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12956,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-length");
f_10211(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_12940(2,t4,C_SCHEME_UNDEFINED);}}

/* k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12956,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12966,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_6963(t3,t1);}

/* k12964 in k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12966,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12968,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li169),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_12968(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1439 in k12964 in k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12968(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12968,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12985,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 376  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k12983 in do1439 in k12964 in k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12988,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k12986 in k12983 in do1439 in k12964 in k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12988,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12999,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_6963(t3,((C_word*)t0)[2]);}

/* k12997 in k12986 in k12983 in do1439 in k12964 in k12954 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12968(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k12938 in k12935 in next-in-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12670(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_12670r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12670r(t0,t1,t2,t3);}}

static void C_ccall f_12670r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12674,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12923,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_12674(t8,t7);}}

/* k12921 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12674(t3,t2);}

/* k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12674,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12677,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12677(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[234]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12831,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 376  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[234]);}
else{
t18=t17;
f_12831(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[235]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12866,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[235]);}
else{
t19=t18;
f_12866(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12895,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_12895(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12893 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12895,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12910,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12908 in k12893 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12902(2,t2,C_SCHEME_UNDEFINED);}}

/* k12900 in k12893 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12677(t5,t4);}

/* k12864 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12868 in k12864 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12677(t7,t6);}

/* k12829 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12833 in k12829 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12677(t7,t6);}

/* k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12677,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12680,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12680(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12731,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_12731(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12766,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_12766(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12795,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_12795(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12793 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12795,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12810,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12808 in k12793 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12802(2,t2,C_SCHEME_UNDEFINED);}}

/* k12800 in k12793 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12680(t5,t4);}

/* k12764 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12770(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12768 in k12764 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12680(t7,t6);}

/* k12729 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12731,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12735,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12735(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12733 in k12729 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12680(t7,t6);}

/* k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12680,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12683,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12683(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12681 in k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k12684 in k12681 in k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12686,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12692,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12698,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[247],"next-in-heap"),t5);}

/* a12697 in k12684 in k12681 in k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12698,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12710,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k12708 in a12697 in k12684 in k12681 in k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12690 in k12684 in k12681 in k12678 in k12675 in k12672 in make-heap in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12634(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12634,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12638,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t3,t2);}

/* k12636 in next-in-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12638,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12647,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12654,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12660,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 376  pattern-data-set!");
f_10184(t4,((C_word*)t0)[2],t5);}}

/* k12658 in k12636 in next-in-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k12652 in k12636 in next-in-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[2],t1,C_fix(1));}

/* k12645 in k12636 in next-in-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12387(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_12387r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12387r(t0,t1,t2,t3);}}

static void C_ccall f_12387r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12391,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_12391(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_12391(t8,t7);}}

/* k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12391(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12391,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12394,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12394(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[234]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12540,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 376  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[234]);}
else{
t18=t17;
f_12540(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[235]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12575,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[235]);}
else{
t19=t18;
f_12575(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12604,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_12604(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12602 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12604,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12619,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12617 in k12602 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12611(2,t2,C_SCHEME_UNDEFINED);}}

/* k12609 in k12602 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12394(t5,t4);}

/* k12573 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12577 in k12573 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12394(t7,t6);}

/* k12538 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12542 in k12538 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12394(t7,t6);}

/* k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12394,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12397,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12397(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12440,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_12440(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12475,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_12475(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12504,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_12504(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12502 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12504,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12519,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12517 in k12502 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12511(2,t2,C_SCHEME_UNDEFINED);}}

/* k12509 in k12502 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12397(t5,t4);}

/* k12473 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12477 in k12473 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12397(t7,t6);}

/* k12438 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12442 in k12438 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12397(t7,t6);}

/* k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12397(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12397,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12400,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12400(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12398 in k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k12401 in k12398 in k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12403,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12409,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12411,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[245],"next-in-line"),t4);}

/* a12410 in k12401 in k12398 in k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12411,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12419,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k12417 in a12410 in k12401 in k12398 in k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12407 in k12401 in k12398 in k12395 in k12392 in k12389 in make-line in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12172(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12172,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12176,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-cache");
f_10409(t3,t2);}

/* k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12176,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[237]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12182,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12206,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[237]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12385,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  palin-len");
f_11613(t8,t1);}}

/* k12383 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12385,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  palin-inc-set!");
f_11622(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_12182(2,t2,C_SCHEME_UNDEFINED);}}

/* k12336 in k12383 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12338,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[237]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12350,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_12350(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_12350(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_12350(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_12350(t7,C_SCHEME_FALSE);}}}

/* k12348 in k12336 in k12383 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12350(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12350,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12182(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12182(2,t4,t3);}}

/* k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  palin-len");
f_11613(t2,((C_word*)t0)[2]);}

/* k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12209,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12215,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[237]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t7=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  palin-inc-set!");
f_11622(t2,((C_word*)t0)[2],C_fix(1));}

/* k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12306,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_12306(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_12306(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_12306(t5,C_SCHEME_FALSE);}}}

/* k12304 in k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_12221(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_12221(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_12221(t3,t2);}}

/* k12219 in k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_12221(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12221,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12300,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-flags");
f_10175(t3,((C_word*)t0)[2]);}

/* k12298 in k12219 in k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(((C_word*)t0)[2],t1,C_fix(2));}

/* k12225 in k12219 in k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12227,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12230,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_12182(2,t2,C_SCHEME_UNDEFINED);}}

/* k12228 in k12225 in k12219 in k12216 in k12213 in k12207 in k12204 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12230,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[242]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[243]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],t1,t2);}}}}

/* k12180 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[237]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[237]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t9=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k12183 in k12180 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t2,((C_word*)t0)[2]);}

/* k12190 in k12183 in k12180 in k12174 in next-in-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11702(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11702r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11702r(t0,t1,t2,t3);}}

static void C_ccall f_11702r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11706,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11706(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11706(t8,t7);}}

/* k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11706(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11706,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11709,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11709(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[234]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12043,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[234]);}
else{
t22=t21;
f_12043(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[235]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12078,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 376  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[235]);}
else{
t23=t22;
f_12078(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[241]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12113,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[241]);}
else{
t24=t23;
f_12113(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12142,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 376  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_12142(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12140 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12142,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12157,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12155 in k12140 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12149(2,t2,C_SCHEME_UNDEFINED);}}

/* k12147 in k12140 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11709(t5,t4);}

/* k12111 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12117(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12115 in k12111 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11709(t7,t6);}

/* k12076 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12082(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12080 in k12076 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11709(t7,t6);}

/* k12041 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12047(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12045 in k12041 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11709(t7,t6);}

/* k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11709,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11712(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11908,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_11908(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11943,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_11943(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[241]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11978,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[241]);}
else{
t8=t7;
f_11978(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12007,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12007(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12005 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12007,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12022,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12020 in k12005 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12014(2,t2,C_SCHEME_UNDEFINED);}}

/* k12012 in k12005 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_12014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11712(t5,t4);}

/* k11976 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11982(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11980 in k11976 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11712(t7,t6);}

/* k11941 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11947(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11945 in k11941 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11712(t7,t6);}

/* k11906 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11910 in k11906 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11712(t7,t6);}

/* k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11712,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11715,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11715(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11773,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_11773(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11808,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_11808(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[241]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11843,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[241]);}
else{
t8=t7;
f_11843(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11872,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11872(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11870 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11872,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11887,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11885 in k11870 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11879(2,t2,C_SCHEME_UNDEFINED);}}

/* k11877 in k11870 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11715(t5,t4);}

/* k11841 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11847(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11845 in k11841 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11715(t7,t6);}

/* k11806 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11812(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11810 in k11806 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11715(t7,t6);}

/* k11771 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11777(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11775 in k11771 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11715(t7,t6);}

/* k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11715,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11718,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11718(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k11719 in k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11721,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11727,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11744,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[240],"next-in-palindrome"),t5);}

/* a11743 in k11719 in k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11744,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11752,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k11750 in a11743 in k11719 in k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11725 in k11719 in k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11730,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[237],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 376  pattern-cache-set!");
f_10400(t2,((C_word*)t0)[4],t5);}

/* k11728 in k11725 in k11719 in k11716 in k11713 in k11710 in k11707 in k11704 in make-palindrome in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11622(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11622,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[237]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11613(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11613,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[237]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11541(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11541,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11545,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t3,t2);}

/* k11543 in next-in-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11548,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_11548(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_11548(t4,C_SCHEME_UNDEFINED);}}

/* k11546 in k11543 in next-in-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11548(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11286(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11286r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11286r(t0,t1,t2,t3);}}

static void C_ccall f_11286r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11290,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11290(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11290(t8,t7);}}

/* k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11290,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11293,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11293(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[234]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11447,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 376  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[234]);}
else{
t18=t17;
f_11447(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[235]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11482,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[235]);}
else{
t19=t18;
f_11482(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11511,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 376  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11511(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11509 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11511,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11526,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11524 in k11509 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11518(2,t2,C_SCHEME_UNDEFINED);}}

/* k11516 in k11509 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11293(t5,t4);}

/* k11480 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11484 in k11480 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11293(t7,t6);}

/* k11445 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11449 in k11445 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11293(t7,t6);}

/* k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11293,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11296,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11296(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11347,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[234]);}
else{
t6=t5;
f_11347(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11382,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[235]);}
else{
t7=t6;
f_11382(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11411,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 376  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11411(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11409 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11411,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11426,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11424 in k11409 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11418(2,t2,C_SCHEME_UNDEFINED);}}

/* k11416 in k11409 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11296(t5,t4);}

/* k11380 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11386(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11384 in k11380 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11296(t7,t6);}

/* k11345 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11349 in k11345 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11296(t7,t6);}

/* k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11296,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11299,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11299(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11297 in k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11302,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  %alloc-pattern");
f_10464(t2);}

/* k11300 in k11297 in k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11302,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11308,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11314,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  initialize-pattern");
f_10474(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[233],"next-in-cycle"),t5);}

/* a11313 in k11300 in k11297 in k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11314,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11326,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data");
f_10193(t4,t3);}

/* k11324 in a11313 in k11300 in k11297 in k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[232]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11306 in k11300 in k11297 in k11294 in k11291 in k11288 in make-cycle in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11171(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11171,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11284,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t2);}

/* k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11284,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11181,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11181,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11184,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11269,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-stream");
f_10061(t7,t1);}

/* k11267 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11269,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11280,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  period-stream");
f_10061(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_11184(2,t2,C_SCHEME_UNDEFINED);}}

/* k11278 in k11267 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(((C_word*)t0)[2],t1);}

/* k11274 in k11267 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[184]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t4=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  period-length");
f_10043(t2,((C_word*)t0)[3]);}

/* k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11266,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11192,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[184]);
t7=t4;
f_11192(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 376  period-length");
f_10043(t4,((C_word*)t0)[3]);}}

/* k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11192,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11195,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11201,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11256,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-flags");
f_10175(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_11201(2,t5,C_SCHEME_FALSE);}}

/* k11254 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(((C_word*)t0)[2],t1,C_fix(8));}

/* k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11201,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11220,a[2]=t3,a[3]=((C_word)li154),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  map-pattern-data");
f_11125(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_11195(t2,C_SCHEME_UNDEFINED);}}

/* a11219 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11220(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11220,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11249,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  reset-period");
f_11171(t3,t2);}

/* k11247 in a11219 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11249,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11230,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k11228 in k11247 in a11219 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11245,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-omit");
f_10097(t3,t1);}

/* k11243 in k11228 in k11247 in a11219 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11245,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  period-omit-set!");
f_10088(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11231 in k11228 in k11247 in a11219 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11233,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k11202 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11204,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 376  max");
t4=*((C_word*)lf[230]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_11195(t2,C_SCHEME_UNDEFINED);}}

/* k11212 in k11202 in k11199 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11195(t3,t2);}

/* k11193 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11195,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k11196 in k11193 in k11190 in k11264 in k11182 in k11179 in k11282 in reset-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11125(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11125,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[194]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11116(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11116,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[194]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10815(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10815,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10822,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t2);}

/* k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10822,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 376  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  promise?");
t3=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k11109 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  force");
t2=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10825,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10828,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11096,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  period-count");
f_10025(t5,t1);}

/* k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11096,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11088,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  period-reps");
f_10115(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_10828(2,t2,C_SCHEME_UNDEFINED);}}

/* k11086 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11088,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11080,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-value-set!");
f_10256(t5,((C_word*)t0)[4],lf[223]);}
else{
t5=((C_word*)t0)[2];
f_11051(t5,C_SCHEME_UNDEFINED);}}

/* k11078 in k11086 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-state-set!");
f_10274(t2,((C_word*)t0)[2],lf[221]);}

/* k11081 in k11078 in k11086 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[223]);
t3=((C_word*)t0)[2];
f_11051(t3,t2);}

/* k11049 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11051,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_11057(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11074,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  reset-period");
f_11171(t4,((C_word*)t0)[2]);}}

/* k11072 in k11049 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_11057(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k11055 in k11049 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11057(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11057,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[209]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-value-set!");
f_10256(t3,((C_word*)t0)[2],lf[209]);}
else{
t2=((C_word*)t0)[3];
f_10828(2,t2,C_SCHEME_UNDEFINED);}}

/* k11059 in k11055 in k11049 in k11094 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  pattern-state-set!");
f_10274(((C_word*)t0)[3],((C_word*)t0)[2],lf[221]);}

/* k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10828,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-flags");
f_10175(t2,((C_word*)t0)[3]);}}

/* k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10834,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10840,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10926,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t10,t1,C_fix(1));}

/* k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10926,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10929,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10942,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  next-in-pattern");
f_11116(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10949,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11038,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t3,((C_word*)t0)[2],C_fix(8));}}

/* k11036 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11038,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11045,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  period-length");
f_10043(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10949(t2,C_SCHEME_FALSE);}}

/* k11043 in k11036 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10949(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10949,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li150),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_10951(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10951(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10951,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10958,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11000,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li149),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11000(t9,t5);}}

/* do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_11000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11000,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum");
f_10229(t2,((C_word*)t0)[3]);}

/* k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11035,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[209]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11010,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11017,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11024,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  next-in-pattern");
f_11116(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 376  next-in-pattern");
f_11116(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11169,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t2,t1);}

/* k11167 in k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11169,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-period");
f_10247(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_11017(2,t2,((C_word*)t0)[2]);}}

/* k11142 in k11167 in k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11165,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  period-omit");
f_10097(t2,t1);}

/* k11163 in k11142 in k11167 in k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11165,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11153,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11161,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-omit");
f_10097(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_11017(2,t2,((C_word*)t0)[2]);}}

/* k11159 in k11163 in k11142 in k11167 in k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11161,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  period-omit-set!");
f_10088(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11151 in k11163 in k11142 in k11167 in k11022 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_11017(2,t2,lf[209]);}

/* k11015 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  pattern-datum-set!");
f_10220(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11008 in k11033 in do1091 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_11010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_11000(t2,((C_word*)t0)[2]);}

/* k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10998,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum");
f_10229(t3,((C_word*)t0)[3]);}

/* k10996 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(((C_word*)t0)[2],t1);}

/* k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10962,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10981,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10994,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum");
f_10229(t5,((C_word*)t0)[3]);}

/* k10992 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(((C_word*)t0)[2],t1);}

/* k10979 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10981,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10989,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum");
f_10229(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[221]);
t3=((C_word*)t0)[3];
f_10965(t3,t2);}}

/* k10987 in k10979 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  pattern-state");
f_10283(((C_word*)t0)[2],t1);}

/* k10983 in k10979 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10965(t3,t2);}

/* k10963 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10965,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10968,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[209]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  pattern-datum-set!");
f_10220(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_10968(2,t5,t4);}}

/* k10966 in k10963 in k10960 in k10956 in do1087 in k10947 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10951(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10940 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  pattern-datum-set!");
f_10220(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10927 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10938,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum");
f_10229(t3,((C_word*)t0)[2]);}

/* k10936 in k10927 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(((C_word*)t0)[2],t1);}

/* k10931 in k10927 in k10924 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[221]);
t4=((C_word*)t0)[2];
f_10840(2,t4,t3);}

/* k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[221]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10885,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10897,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-count");
f_10025(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10920,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t5,((C_word*)t0)[2],C_fix(64));}}

/* k10918 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  pattern-datum-set!");
f_10220(((C_word*)t0)[3],((C_word*)t0)[2],lf[209]);}
else{
t2=((C_word*)t0)[3];
f_10900(2,t2,C_SCHEME_UNDEFINED);}}

/* k10898 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t2,((C_word*)t0)[2],C_fix(16));}

/* k10904 in k10898 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10906,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-count");
f_10025(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10843(2,t2,C_SCHEME_UNDEFINED);}}

/* k10915 in k10904 in k10898 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10917,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10895 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10897,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  period-count-set!");
f_10016(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10883 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-datum-set!");
f_10220(t2,((C_word*)t0)[2],lf[209]);}

/* k10886 in k10883 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_10843(2,t3,t2);}

/* k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10879,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  period-count");
f_10025(t3,((C_word*)t0)[2]);}

/* k10877 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10879,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[221]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10874,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  period-reps");
f_10115(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_10846(2,t3,t2);}}

/* k10872 in k10877 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10874,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[184]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k10844 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10859,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_10849(t3,C_SCHEME_UNDEFINED);}}

/* k10857 in k10844 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10849(t3,t2);}

/* k10847 in k10844 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10849,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  pattern-state-set!");
f_10274(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10850 in k10847 in k10844 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern-value-set!");
f_10256(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k10853 in k10850 in k10847 in k10844 in k10841 in k10838 in k10832 in k10826 in k10823 in k10820 in next-1 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10692(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_10692r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_10692r(t0,t1,t2,t3);}}

static void C_ccall f_10692r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10713,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li146),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_10713(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10751,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t1,t2);}}

/* k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10751,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k10759 in k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10761,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10763,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li147),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_10763(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1063 in k10759 in k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10763(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10763,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[223]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10782,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10792,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  eop?");
t13=C_retrieve(lf[220]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k10790 in do1063 in k10759 in k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10792,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_10782(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10797,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t2,((C_word*)t0)[2]);}}

/* k10795 in k10790 in do1063 in k10759 in k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10782(t3,t2);}

/* k10780 in do1063 in k10759 in k10749 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_10763(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1056 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10713(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10713,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10745,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  next-1");
f_10815(t4,((C_word*)t0)[2]);}}

/* k10743 in do1056 in next in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10745,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_10713(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10673(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10673,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10680,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t2);}

/* k10678 in eod? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10680,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10687,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-value");
t3=C_retrieve2(lf[203],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[223]));}}

/* k10685 in k10678 in eod? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  eod?");
t2=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10654(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10654,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10661,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t2);}

/* k10659 in eop? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10661,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10668,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  pattern-state");
f_10283(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[221]));}}

/* k10666 in k10659 in eop? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  eop?");
t2=C_retrieve(lf[220]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10474(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10474,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10478,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  pattern-data-set!");
f_10184(t12,t2,t3);}

/* k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t6=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t6=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t6=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10487,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10490,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10644,a[2]=t3,a[3]=((C_word)li142),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  map-pattern-data");
f_11125(t4,t5,((C_word*)t0)[7]);}

/* a10643 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10644(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10644,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10651,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  pattern?");
f_10160(t3,t2);}

/* k10649 in a10643 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10493,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_10493(t5,t4);}
else{
t3=t2;
f_10493(t3,C_SCHEME_UNDEFINED);}}

/* k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10493(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10493,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[210]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_10499(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[217]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_10499(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[218],t4);}}}

/* k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10499,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[211]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_10505(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[215]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_10505(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 376  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[216],t4);}}}

/* k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10568,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k10566 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10568,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[213]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10508(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  bitwise-test");
f_6748(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k10580 in k10566 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10582,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[214]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10508(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10508(t4,t3);}}

/* k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10508,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t8=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k10509 in k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10511,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10517,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_10517(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_10517(t8,t7);}}

/* k10515 in k10509 in k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10517,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10520,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10530,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 376  make-period");
f_10004(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 376  make-period");
f_10004(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k10528 in k10515 in k10509 in k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t4=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k10518 in k10515 in k10509 in k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10523,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t6=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k10521 in k10518 in k10515 in k10509 in k10506 in k10503 in k10497 in k10491 in k10488 in k10485 in k10482 in k10479 in k10476 in initialize-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10464(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10464,NULL,1,t1);}
t2=lf[209];
t3=lf[209];
t4=lf[209];
t5=lf[210];
t6=lf[211];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[194],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10409(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10409,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10400(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10400,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10283(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10283,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10274(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10274,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_10265 in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_10265(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10265,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10256(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10256,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10247(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10247,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10229(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10229,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10220(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10220,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10211(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10211,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10193(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10193,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10184(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10184,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10175(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10175,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10160(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10160,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[194]));}

/* period-reps in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10115(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10115,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[184]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10097(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10097,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[184]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10088(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10088,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[184]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10061(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10061,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[184]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10043(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10043,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[184]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10025(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10025,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[184]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10016(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10016,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[184]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[186]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_10004(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10004,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[184],t2,t3,t4,t5,t6,t7));}

/* transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9696,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9742,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9749,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9797,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_9797(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 375  key");
t6=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[180],t2);}}}

/* k9795 in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9797,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9814,a[2]=t1,a[3]=((C_word)li117),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 375  transpkeys");
f_9749(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9842,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9846,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k9844 in k9795 in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  transpkeys");
f_9749(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k9840 in k9795 in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[169]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a9813 in k9795 in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9814(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9814,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9749(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9749,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9758,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li115),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_9758(t8,t1,t2,t4);}

/* do756 in transpkeys in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9758(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_9758,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k9740 in transpose in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9742,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 375  note");
t3=C_retrieve(lf[169]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9561,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[177],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9591,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9661,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 375  invkeys");
f_9591(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9683,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9687,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t7=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[178],t2);}}}

/* k9685 in invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  invkeys");
f_9591(((C_word*)t0)[2],t1);}

/* k9681 in invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[169]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a9660 in invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9661(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9661,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9591(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9591,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9607,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li111),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9607(t9,t1,t5,t4);}

/* do741 in invkeys in invert in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9607(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_9607,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9516(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9516,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  modulo");
t3=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[175]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9548,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9559,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k9557 in pc in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  modulo");
t2=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k9546 in pc in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[175]),t1);}

/* hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9400(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9400,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9415,a[2]=t5,a[3]=t3,a[4]=((C_word)li108),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9415(t7,t1,t2,lf[174],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_6939(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9514,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k9512 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do721 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9415(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9415,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9428,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9445,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9445(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9445(t14,(C_word)C_i_listp(t13));}}}

/* k9443 in do721 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9445,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9449,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  hz");
t4=C_retrieve(lf[173]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9464,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9462 in k9443 in do721 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9464,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9428(t9,t8);}

/* k9447 in k9443 in do721 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9449,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9428(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9426 in do721 in hz in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9415(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9278(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9278,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9293,a[2]=t5,a[3]=t3,a[4]=((C_word)li106),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9293(t7,t1,t2,lf[172],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub265(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9398,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k9396 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do705 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9293(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9293,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9306,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9323,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9323(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9323(t14,(C_word)C_i_numberp(t13));}}}

/* k9321 in do705 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9323(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9323,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9327,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9342,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9340 in k9321 in do705 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9342,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9306(t9,t8);}

/* k9325 in k9321 in do705 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9327,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9306(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9304 in do705 in key in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9293(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9181(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9181,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9196,a[2]=t5,a[3]=t3,a[4]=((C_word)li104),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9196(t7,t1,t2,lf[170],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9276,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k9274 in note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do691 in note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9196(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9196,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9209,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9227,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note");
t13=C_retrieve(lf[169]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9242,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9128(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k9240 in do691 in note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9242,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_9209(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k9225 in do691 in note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9227,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9209(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9207 in do691 in note in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9196(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9128(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9128,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9078,a[2]=t6,a[3]=t7,a[4]=((C_word)li101),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[156],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9126,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  floor");
t9=*((C_word*)lf[167]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9151,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9026(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9166,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k9164 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9166,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[168],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k9171 in k9164 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9026(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9149 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9026(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9124 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9126,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[164]))){
t5=t4;
f_9098(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[165]);
t6=t4;
f_9098(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[166]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k9096 in k9124 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9098,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9100,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li102),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[156],"*notes*"),t1,t2);}

/* a9099 in k9096 in k9124 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9100,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[163],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a9077 in note-aux in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9078,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[162],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_9026(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9026,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9030,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9063,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[156],"*notes*"),t2,t6);}

/* a9062 in string->note-entry in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9063,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k9028 in string->note-entry in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9030,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9046,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[160],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k9044 in k9028 in string->note-entry in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li98),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[156],"*notes*"),t1,t2);}

/* a9047 in k9044 in k9028 in string->note-entry in k9022 in k9019 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_9048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9048,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[158],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_8812r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8812r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8812r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8825,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_8825(t13,t12);}
else{
t9=t8;
f_8825(t9,C_SCHEME_UNDEFINED);}}}

/* k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8825,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[72],"tb:explseg"):C_retrieve2(lf[73],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8846,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[154],t7);}
else{
t12=t11;
f_8846(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[121]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_8907(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_8907(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[155],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k8908 in k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8910,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8918,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li96),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_8918(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do621 in k8908 in k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8918(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8918,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8959,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li95),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_8930(t8,t1,((C_word*)t0)[3]);}}

/* do625 in do621 in k8908 in k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8930(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8930,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8951,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_6789(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k8949 in do625 in do621 in k8908 in k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_8930(t4,((C_word*)t0)[2],t3);}

/* k8957 in do621 in k8908 in k8905 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8959,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_8918(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k8844 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8846,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li94),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_8851(t5,((C_word*)t0)[2],C_fix(0));}

/* do609 in k8844 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8851(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8851,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8883,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k8881 in do609 in k8844 in k8823 in segs in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8883,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_8851(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8791(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8791r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8791r(t0,t1,t2);}}

static void C_ccall f_8791r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7037(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7037(t1,t3);}}

/* ranpoisson in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8772(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8772r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8772r(t0,t1,t2);}}

static void C_ccall f_8772r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[149])))){
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7047(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7047(t1,t3);}}

/* rangauss in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8731(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8731r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8731r(t0,t1,t2);}}

static void C_ccall f_8731r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7008(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7008(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7008(t1,t4,t5);}}}

/* ranexp in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8712r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8712r(t0,t1,t2);}}

static void C_ccall f_8712r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7019(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7019(t1,t3);}}

/* ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_8484r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8484r(t0,t1,t2);}}

static void C_ccall f_8484r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[142];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8488,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_8488(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[143]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8625,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[143]);}
else{
t19=t18;
f_8625(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[144]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8660,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[144]);}
else{
t20=t19;
f_8660(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8689,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_8689(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k8687 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8689,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8704,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8702 in k8687 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8696(2,t2,C_SCHEME_UNDEFINED);}}

/* k8694 in k8687 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8488(t5,t4);}

/* k8658 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8664(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8662 in k8658 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8488(t7,t6);}

/* k8623 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8627 in k8623 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8488(t7,t6);}

/* k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8488,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8491,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8491(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8525,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[143]);}
else{
t6=t5;
f_8525(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8560,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[144]);}
else{
t7=t6;
f_8560(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8589,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8589(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8587 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8589,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8604,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8602 in k8587 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8596(2,t2,C_SCHEME_UNDEFINED);}}

/* k8594 in k8587 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8491(t5,t4);}

/* k8558 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8564,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8564(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8562 in k8558 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8491(t7,t6);}

/* k8523 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8527 in k8523 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8491(t7,t6);}

/* k8489 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8491(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8491,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8494,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8494(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8492 in k8489 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_8497(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_8497(t5,t4);}}

/* k8495 in k8492 in k8489 in k8486 in ranbeta in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8497(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8497,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub318(t5,t6,t7));}

/* vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_8382r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8382r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8382r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8386,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_8386(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_8386(t9,t8);}}

/* k8384 in vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8386,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_8389(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[137],((C_word*)((C_word*)t0)[3])[1]);}}

/* k8387 in k8384 in vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8391,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8454,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li87),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  vary1");
f_8391(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8453 in k8387 in k8384 in vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8454,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  vary1");
f_8391(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k8387 in k8384 in vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8391(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8391,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8407,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_6970(t9,t8);}}

/* k8405 in vary1 in k8387 in k8384 in vary in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8407,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[136]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8154r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8154r(t0,t1,t2,t3);}}

static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8158,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8158(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[133]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8295,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[133]);}
else{
t20=t19;
f_8295(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[134]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8330,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[134]);}
else{
t21=t20;
f_8330(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8359,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8359(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8357 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8359,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8374,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8372 in k8357 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8366(2,t2,C_SCHEME_UNDEFINED);}}

/* k8364 in k8357 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8158(t5,t4);}

/* k8328 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8332 in k8328 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8158(t7,t6);}

/* k8293 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8297 in k8293 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8158(t7,t6);}

/* k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8158(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8158,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8161,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8161(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[133]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8195,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[133]);}
else{
t6=t5;
f_8195(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[134]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8230,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[134]);}
else{
t7=t6;
f_8230(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8259,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8259(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8257 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8259,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8274,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8272 in k8257 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8266(2,t2,C_SCHEME_UNDEFINED);}}

/* k8264 in k8257 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8161(t5,t4);}

/* k8228 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8232 in k8228 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8161(t7,t6);}

/* k8193 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8197 in k8193 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8161(t7,t6);}

/* k8159 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8164,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8164(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8162 in k8159 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_6970(t2,lf[132]);}

/* k8172 in k8162 in k8159 in k8156 in odds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_8111r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8111r(t0,t1,t2);}}

static void C_ccall f_8111r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8129,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_6963(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8144,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_6963(t4,t5);}}

/* k8142 in pick in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k8127 in pick in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8090,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub284(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub290(t9,t10,t11));}}

/* ran in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8055(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8055r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8055r(t0,t1,t2);}}

static void C_ccall f_8055r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8059,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8059(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8059(t7,t6);}}

/* k8057 in ran in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_8059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 375  tb:rani");
f_6963(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_6970(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_6970(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_7947r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7947r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7947r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7954,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_7954(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8034,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 375  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[127],((C_word*)t8)[1]);}
else{
t15=t14;
f_8034(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_7954(t11,C_SCHEME_UNDEFINED);}}

/* k8032 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7954(t4,t3);}

/* k7952 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7954,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li80),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_7963(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do476 in k7952 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7963(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7963,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7976,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8010,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  fit");
t10=C_retrieve(lf[122]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_7976(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8008 in do476 in k7952 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7976(t3,t2);}

/* k7974 in do476 in k7952 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7976(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7976,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8002,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8000 in k7974 in do476 in k7952 in scale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_8002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8002,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_7963(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_7814r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_7814r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_7814r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7818,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_7818(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_7818(t12,t11);}}

/* k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7818,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_7821(t6,t5);}
else{
t3=t2;
f_7821(t3,C_SCHEME_UNDEFINED);}}

/* k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7821,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7823,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li78),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 375  fit1");
f_7823(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7924 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7925(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7925,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  fit1");
f_7823(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7823(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7823,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7830,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k7828 in fit1 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7830,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7853,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t9=*((C_word*)lf[123]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7872,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t8=*((C_word*)lf[123]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[124],((C_word*)t0)[2]);}}}

/* k7870 in k7828 in fit1 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7879,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[95]+1):*((C_word*)lf[93]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t2,t1);}}

/* k7877 in k7870 in k7828 in fit1 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7879,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k7851 in k7828 in fit1 in k7819 in k7816 in fit in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7853,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_7747r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_7747r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_7747r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[121]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7751,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_7751(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_7751(t16,t15);}}

/* k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7751(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7751,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7754,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7797,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_7615(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_7754(t3,C_SCHEME_UNDEFINED);}}

/* k7795 in k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7754(t3,t2);}

/* k7752 in k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7754,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7790,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_7615(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_7757(t3,C_SCHEME_UNDEFINED);}}

/* k7788 in k7752 in k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7757(t3,t2);}

/* k7755 in k7752 in k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7757,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7770,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k7768 in k7755 in k7752 in k7749 in tendency in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7770,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7701(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7701r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7701r(t0,t1,t2,t3);}}

static void C_ccall f_7701r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7705,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[119]);}
else{
t5=t4;
f_7705(2,t5,C_SCHEME_UNDEFINED);}}

/* k7703 in interp in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 375  interp1");
f_7615(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 375  interp1");
f_7615(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7615(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7615,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7619,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[117],t3);}
else{
t6=t5;
f_7619(2,t6,(C_word)C_i_car(t3));}}

/* k7617 in interp1 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7619,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 375  err");
t6=C_retrieve(lf[115]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[116],((C_word*)t0)[4]);}
else{
t6=t4;
f_7622(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k7620 in k7617 in interp1 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7622,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7631,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li73),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_7631(t13,((C_word*)t0)[2],t9);}

/* do427 in k7620 in k7617 in interp1 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7631(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7631,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_6789(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7653,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 375  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[114],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_7653(2,t13,t12);}}}

/* k7651 in do427 in k7620 in k7617 in interp1 in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7631(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7600(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7600,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:scaler->cents");
t3=C_retrieve2(lf[71],"tb:scaler->cents");
f_6894(3,t3,t1,t2);}}

/* cents->ratio in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7585(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7585,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[70],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:cents->scaler");
t3=C_retrieve2(lf[70],"tb:cents->scaler");
f_6887(3,t3,t1,t2);}}

/* rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7349(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7349r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7349r(t0,t1,t2,t3);}}

static void C_ccall f_7349r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[107];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[108];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7353,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7353(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[109]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7498,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[109]);}
else{
t20=t19;
f_7498(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[110]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7533,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[110]);}
else{
t21=t20;
f_7533(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7562,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7562(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7560 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7562,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7577,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7575 in k7560 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7569(2,t2,C_SCHEME_UNDEFINED);}}

/* k7567 in k7560 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7353(t5,t4);}

/* k7531 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7535 in k7531 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7353(t7,t6);}

/* k7496 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7502,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7502(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7500 in k7496 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7353(t7,t6);}

/* k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7353(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7353,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7356,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7356(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[109]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7398,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[109]);}
else{
t6=t5;
f_7398(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[110]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7433,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[110]);}
else{
t7=t6;
f_7433(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7462,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7462(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7460 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7462,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7477,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7475 in k7460 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7469(2,t2,C_SCHEME_UNDEFINED);}}

/* k7467 in k7460 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7356(t5,t4);}

/* k7431 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7435 in k7431 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7356(t7,t6);}

/* k7396 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7400 in k7396 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7356(t7,t6);}

/* k7354 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7356,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7359,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7359(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7357 in k7354 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7359,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li69),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_6872(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7369 in k7357 in k7354 in k7351 in rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7370(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7370,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_6872(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7309,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7313,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  expt");
t5=*((C_word*)lf[104]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[105],t3);}

/* k7311 in decimals in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7313,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7324,a[2]=t1,a[3]=((C_word)li67),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,C_retrieve(lf[103]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7343,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[2],t1);
C_trace("ChickenBridge.scm: 375  round");
t4=*((C_word*)lf[102]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k7341 in k7311 in decimals in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7343,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a7323 in k7311 in decimals in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7324(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7324,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7332,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  round");
t5=*((C_word*)lf[102]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k7330 in a7323 in k7311 in decimals in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7332,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7288,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7300,a[2]=t3,a[3]=((C_word)li65),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_6861(t1,t2,t3);}}

/* a7299 in quantize in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7300(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7300,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_6861(t1,t2,((C_word*)t0)[2]);}

/* minus in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7262r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7262r(t0,t1,t2,t3);}}

static void C_ccall f_7262r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[95]+1),t2);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[95]+1),t2,t3);}}

/* plus in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7220r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7220r(t0,t1,t2);}}

static void C_ccall f_7220r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[93]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[93]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[93]+1),t2);}}}

/* int in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7205(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7205,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[67],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:int");
t3=C_retrieve2(lf[67],"tb:int");
f_6843(3,t3,t1,t2);}}

/* discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7094r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7094r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7094r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7098,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7098(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7169,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 375  not?");
t20=C_retrieve(lf[90]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7098(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7098(t19,t18);}}}

/* k7167 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7098(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7098(t2,C_SCHEME_UNDEFINED);}}

/* k7096 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7098,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7112,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li59),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7127,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_6816(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li60),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_6816(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a7137 in k7096 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7138(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7138,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_6816(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7125 in k7096 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a7111 in k7096 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7112(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7112,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7120,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_6816(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7118 in a7111 in k7096 in discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7060(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7060r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7060r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7060r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7072,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li57),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_6789(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_6789(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7071 in rescale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7072(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7072,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[88]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7057,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub338(t2));}

/* tb:ranpink in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7054,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub335(t2));}

/* tb:ranpoisson in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7047(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7047,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub332(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7044,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub328(t2));}

/* tb:rangamma in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7037(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7037,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub324(t3,t4));}

/* tb:ranexp in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7019(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7019,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub312(t3,t4));}

/* tb:rangauss in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_7008(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7008,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub306(t4,t5,t6));}

/* tb:ranmiddle in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7005,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub301(t2));}

/* tb:ranhigh in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_7002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7002,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub298(t2));}

/* tb:ranlow in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6999,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub295(t2));}

/* tb:ranf in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6970(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6970,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub278(t3,t4));}

/* tb:rani in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6963(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6963,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub274(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6960,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub270(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6939(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6939,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub256(t3,t4));}

/* tb:geoseg in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_6920,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub248(t6,t7,t8,t9,t10));}

/* tb:explseg in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_6901,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub237(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6894,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub230(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6887(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6887,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub225(t3,t4));}

/* tb:rhythm->seconds in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6872(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6872,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub218(t5,t6,t7,t8));}

/* tb:quantize in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6861(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6861,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub210(t4,t5,t6));}

/* tb:int in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6843(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6843,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub198(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6816(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6816,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub189(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6789(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6789,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub174(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6748(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6748,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6754,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li32),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6754(t9,t1,C_SCHEME_FALSE);}

/* do143 in bitwise-test in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6754(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6754,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6764,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6764(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6764(t7,t6);}}
else{
t5=t4;
f_6764(t5,C_SCHEME_UNDEFINED);}}}

/* k6762 in do143 in bitwise-test in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6764(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6764,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6754(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6662r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6662r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6662r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[63],"list-prop"),t7,t3,t4);}}}

/* make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6563(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_6563r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6563r(t0,t1,t2,t3);}}

static void C_ccall f_6563r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6567,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 374  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[62],t2);}
else{
t5=t4;
f_6567(2,t5,C_SCHEME_UNDEFINED);}}

/* k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6567,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6569,a[2]=t3,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6592,a[2]=t5,a[3]=((C_word)li29),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 374  l1");
t8=((C_word*)t3)[1];
f_6569(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 374  l2");
t9=((C_word*)t5)[1];
f_6592(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  l1");
t10=((C_word*)t3)[1];
f_6569(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6592(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6592,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6609,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k6607 in l2 in k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6613,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 374  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_6592(t4,t2,t3,((C_word*)t0)[2]);}

/* k6611 in k6607 in l2 in k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6613,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6569(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6569,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6586,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 374  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6584 in l1 in k6565 in make-list in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6586,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6553,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6513(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6513r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6513r(t0,t1,t2);}}

static void C_ccall f_6513r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6543,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6541 in list* in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6543,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6375(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6375,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6409,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6407 in butlast in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6409,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6352(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6352,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6346,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6331(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6331,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6317(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6317,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6307(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6307,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6297(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6297,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6287(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6287,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6277(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6277,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6248(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6248r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6248r(t0,t1,t2);}}

static void C_ccall f_6248r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6257,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6257 in chdir in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6257(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6257,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6262,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6262(2,t4,C_SCHEME_FALSE);}}

/* k6260 */
static void C_ccall f_6262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6242,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6242 in cwd in k6233 in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6242,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5944,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6224,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6213,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6222,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5954,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 280  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5954(2,t11,t2);}}

/* k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5957,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6205,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 281  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6204 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6205,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5960(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 282  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5960,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5975,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5975(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_5975(t9,C_SCHEME_FALSE);}}

/* k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_5975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5975,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5985,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 296  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5985,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5987(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_5987(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5987,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5999,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5999(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6040,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6046(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 311  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6046,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6040(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6100,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6173,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 332  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6056,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 322  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6056(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6054 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6056,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6040(t9,t8);}

/* k6171 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6173,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6146,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 337  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6100(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6159,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6161,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6160 in k6171 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6161(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6161,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 341  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6157 in k6171 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6144 in k6171 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 336  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6098 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6100,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6106,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6106(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6127,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 348  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6125 in k6098 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 347  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6104 in k6098 in k6044 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6040(t6,t5);}

/* k6038 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5987(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_5999(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5999,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6012,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6012(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6012(t5,C_SCHEME_UNDEFINED);}}}

/* k6010 in do69 in do63 in k5983 in k5973 in k5958 in k5955 in k5952 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_fcall f_6012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5999(t3,((C_word*)t0)[2],t2);}

/* f_6222 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6222(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6222,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6213 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6213(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6213,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6221,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 278  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6219 */
static void C_ccall f_6221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 278  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6224 in expand-send in k5940 in k5937 in k5933 in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_6224(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6224r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6224r(t0,t1,t2,t3);}}

static void C_ccall f_6224r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6232,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6230 */
static void C_ccall f_6232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 274  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5646,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5807,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5899,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5898 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5899,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5913,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5917,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 226  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5928,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5932,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 227  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5930 in a5898 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5926 in a5898 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5928,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5915 in a5898 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 226  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5911 in a5898 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5913,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5810,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 229  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5816,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5893,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5892 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5893(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5893,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5659,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5718,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 190  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5716 in a5892 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 190  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5657 in a5892 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5659,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5823,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5869,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5883,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5882 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5883(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5883,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5867 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5869,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 236  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5833 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5839,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5843,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5860 in k5833 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5861(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5861,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5796,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5794 in a5860 in k5833 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5796,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k5841 in k5833 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5843,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5837 in k5833 in k5821 in k5814 in k5811 in k5808 in k5805 in expand-optkeys in k5642 in k5639 in k5636 in k5633 */
static void C_ccall f_5839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5839,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2396] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5635ChickenBridge.scm",(void*)f_5635},
{"f_5638ChickenBridge.scm",(void*)f_5638},
{"f_5641ChickenBridge.scm",(void*)f_5641},
{"f_5644ChickenBridge.scm",(void*)f_5644},
{"f_35585ChickenBridge.scm",(void*)f_35585},
{"f_5935ChickenBridge.scm",(void*)f_5935},
{"f_5939ChickenBridge.scm",(void*)f_5939},
{"f_35533ChickenBridge.scm",(void*)f_35533},
{"f_35580ChickenBridge.scm",(void*)f_35580},
{"f_35570ChickenBridge.scm",(void*)f_35570},
{"f_35537ChickenBridge.scm",(void*)f_35537},
{"f_5942ChickenBridge.scm",(void*)f_5942},
{"f_35527ChickenBridge.scm",(void*)f_35527},
{"f_6235ChickenBridge.scm",(void*)f_6235},
{"f_9021ChickenBridge.scm",(void*)f_9021},
{"f_35311ChickenBridge.scm",(void*)f_35311},
{"f_35525ChickenBridge.scm",(void*)f_35525},
{"f_35345ChickenBridge.scm",(void*)f_35345},
{"f_35357ChickenBridge.scm",(void*)f_35357},
{"f_35361ChickenBridge.scm",(void*)f_35361},
{"f_35365ChickenBridge.scm",(void*)f_35365},
{"f_35509ChickenBridge.scm",(void*)f_35509},
{"f_35371ChickenBridge.scm",(void*)f_35371},
{"f_35391ChickenBridge.scm",(void*)f_35391},
{"f_35394ChickenBridge.scm",(void*)f_35394},
{"f_35402ChickenBridge.scm",(void*)f_35402},
{"f_35409ChickenBridge.scm",(void*)f_35409},
{"f_35412ChickenBridge.scm",(void*)f_35412},
{"f_35416ChickenBridge.scm",(void*)f_35416},
{"f_35423ChickenBridge.scm",(void*)f_35423},
{"f_35426ChickenBridge.scm",(void*)f_35426},
{"f_35430ChickenBridge.scm",(void*)f_35430},
{"f_35437ChickenBridge.scm",(void*)f_35437},
{"f_35381ChickenBridge.scm",(void*)f_35381},
{"f_35334ChickenBridge.scm",(void*)f_35334},
{"f_35324ChickenBridge.scm",(void*)f_35324},
{"f_35327ChickenBridge.scm",(void*)f_35327},
{"f_9024ChickenBridge.scm",(void*)f_9024},
{"f_35297ChickenBridge.scm",(void*)f_35297},
{"f_35305ChickenBridge.scm",(void*)f_35305},
{"f_35309ChickenBridge.scm",(void*)f_35309},
{"f_17599ChickenBridge.scm",(void*)f_17599},
{"f_17650ChickenBridge.scm",(void*)f_17650},
{"f_35287ChickenBridge.scm",(void*)f_35287},
{"f_35295ChickenBridge.scm",(void*)f_35295},
{"f_17755ChickenBridge.scm",(void*)f_17755},
{"f_35184ChickenBridge.scm",(void*)f_35184},
{"f_35247ChickenBridge.scm",(void*)f_35247},
{"f_35251ChickenBridge.scm",(void*)f_35251},
{"f_35265ChickenBridge.scm",(void*)f_35265},
{"f_35187ChickenBridge.scm",(void*)f_35187},
{"f_35207ChickenBridge.scm",(void*)f_35207},
{"f_35211ChickenBridge.scm",(void*)f_35211},
{"f_17758ChickenBridge.scm",(void*)f_17758},
{"f_35170ChickenBridge.scm",(void*)f_35170},
{"f_35178ChickenBridge.scm",(void*)f_35178},
{"f_35182ChickenBridge.scm",(void*)f_35182},
{"f_17951ChickenBridge.scm",(void*)f_17951},
{"f_35144ChickenBridge.scm",(void*)f_35144},
{"f_35148ChickenBridge.scm",(void*)f_35148},
{"f_35154ChickenBridge.scm",(void*)f_35154},
{"f_35165ChickenBridge.scm",(void*)f_35165},
{"f_35161ChickenBridge.scm",(void*)f_35161},
{"f_18020ChickenBridge.scm",(void*)f_18020},
{"f_35122ChickenBridge.scm",(void*)f_35122},
{"f_19265ChickenBridge.scm",(void*)f_19265},
{"f_35102ChickenBridge.scm",(void*)f_35102},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_35062ChickenBridge.scm",(void*)f_35062},
{"f_19271ChickenBridge.scm",(void*)f_19271},
{"f_34968ChickenBridge.scm",(void*)f_34968},
{"f_34972ChickenBridge.scm",(void*)f_34972},
{"f_34975ChickenBridge.scm",(void*)f_34975},
{"f_34993ChickenBridge.scm",(void*)f_34993},
{"f_34996ChickenBridge.scm",(void*)f_34996},
{"f_35027ChickenBridge.scm",(void*)f_35027},
{"f_34999ChickenBridge.scm",(void*)f_34999},
{"f_35005ChickenBridge.scm",(void*)f_35005},
{"f_34958ChickenBridge.scm",(void*)f_34958},
{"f_34952ChickenBridge.scm",(void*)f_34952},
{"f_19274ChickenBridge.scm",(void*)f_19274},
{"f_34860ChickenBridge.scm",(void*)f_34860},
{"f_34862ChickenBridge.scm",(void*)f_34862},
{"f_34866ChickenBridge.scm",(void*)f_34866},
{"f_34869ChickenBridge.scm",(void*)f_34869},
{"f_34872ChickenBridge.scm",(void*)f_34872},
{"f_34912ChickenBridge.scm",(void*)f_34912},
{"f_34904ChickenBridge.scm",(void*)f_34904},
{"f_34875ChickenBridge.scm",(void*)f_34875},
{"f_34878ChickenBridge.scm",(void*)f_34878},
{"f_34881ChickenBridge.scm",(void*)f_34881},
{"f_34852ChickenBridge.scm",(void*)f_34852},
{"f_19277ChickenBridge.scm",(void*)f_19277},
{"f_34824ChickenBridge.scm",(void*)f_34824},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_34788ChickenBridge.scm",(void*)f_34788},
{"f_34800ChickenBridge.scm",(void*)f_34800},
{"f_34796ChickenBridge.scm",(void*)f_34796},
{"f_34770ChickenBridge.scm",(void*)f_34770},
{"f_34764ChickenBridge.scm",(void*)f_34764},
{"f_19283ChickenBridge.scm",(void*)f_19283},
{"f_34678ChickenBridge.scm",(void*)f_34678},
{"f_34682ChickenBridge.scm",(void*)f_34682},
{"f_34685ChickenBridge.scm",(void*)f_34685},
{"f_34688ChickenBridge.scm",(void*)f_34688},
{"f_34701ChickenBridge.scm",(void*)f_34701},
{"f_34647ChickenBridge.scm",(void*)f_34647},
{"f_34651ChickenBridge.scm",(void*)f_34651},
{"f_34666ChickenBridge.scm",(void*)f_34666},
{"f_34641ChickenBridge.scm",(void*)f_34641},
{"f_19286ChickenBridge.scm",(void*)f_19286},
{"f_34527ChickenBridge.scm",(void*)f_34527},
{"f_34543ChickenBridge.scm",(void*)f_34543},
{"f_34554ChickenBridge.scm",(void*)f_34554},
{"f_34521ChickenBridge.scm",(void*)f_34521},
{"f_19342ChickenBridge.scm",(void*)f_19342},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34411ChickenBridge.scm",(void*)f_34411},
{"f_34408ChickenBridge.scm",(void*)f_34408},
{"f_34382ChickenBridge.scm",(void*)f_34382},
{"f_19345ChickenBridge.scm",(void*)f_19345},
{"f_34236ChickenBridge.scm",(void*)f_34236},
{"f_34254ChickenBridge.scm",(void*)f_34254},
{"f_34263ChickenBridge.scm",(void*)f_34263},
{"f_34230ChickenBridge.scm",(void*)f_34230},
{"f_19348ChickenBridge.scm",(void*)f_19348},
{"f_34183ChickenBridge.scm",(void*)f_34183},
{"f_34187ChickenBridge.scm",(void*)f_34187},
{"f_34190ChickenBridge.scm",(void*)f_34190},
{"f_34206ChickenBridge.scm",(void*)f_34206},
{"f_34165ChickenBridge.scm",(void*)f_34165},
{"f_34159ChickenBridge.scm",(void*)f_34159},
{"f_19351ChickenBridge.scm",(void*)f_19351},
{"f_34083ChickenBridge.scm",(void*)f_34083},
{"f_19490ChickenBridge.scm",(void*)f_19490},
{"f_34009ChickenBridge.scm",(void*)f_34009},
{"f_34016ChickenBridge.scm",(void*)f_34016},
{"f_34003ChickenBridge.scm",(void*)f_34003},
{"f_19493ChickenBridge.scm",(void*)f_19493},
{"f_33899ChickenBridge.scm",(void*)f_33899},
{"f_33907ChickenBridge.scm",(void*)f_33907},
{"f_33873ChickenBridge.scm",(void*)f_33873},
{"f_33890ChickenBridge.scm",(void*)f_33890},
{"f_33881ChickenBridge.scm",(void*)f_33881},
{"f_33867ChickenBridge.scm",(void*)f_33867},
{"f_19496ChickenBridge.scm",(void*)f_19496},
{"f_33823ChickenBridge.scm",(void*)f_33823},
{"f_19499ChickenBridge.scm",(void*)f_19499},
{"f_33741ChickenBridge.scm",(void*)f_33741},
{"f_33752ChickenBridge.scm",(void*)f_33752},
{"f_33754ChickenBridge.scm",(void*)f_33754},
{"f_33783ChickenBridge.scm",(void*)f_33783},
{"f_33719ChickenBridge.scm",(void*)f_33719},
{"f_33735ChickenBridge.scm",(void*)f_33735},
{"f_33713ChickenBridge.scm",(void*)f_33713},
{"f_19502ChickenBridge.scm",(void*)f_19502},
{"f_33666ChickenBridge.scm",(void*)f_33666},
{"f_33670ChickenBridge.scm",(void*)f_33670},
{"f_33677ChickenBridge.scm",(void*)f_33677},
{"f_33644ChickenBridge.scm",(void*)f_33644},
{"f_33660ChickenBridge.scm",(void*)f_33660},
{"f_33638ChickenBridge.scm",(void*)f_33638},
{"f_19505ChickenBridge.scm",(void*)f_19505},
{"f_33506ChickenBridge.scm",(void*)f_33506},
{"f_33546ChickenBridge.scm",(void*)f_33546},
{"f_33510ChickenBridge.scm",(void*)f_33510},
{"f_33526ChickenBridge.scm",(void*)f_33526},
{"f_33538ChickenBridge.scm",(void*)f_33538},
{"f_33542ChickenBridge.scm",(void*)f_33542},
{"f_33534ChickenBridge.scm",(void*)f_33534},
{"f_33431ChickenBridge.scm",(void*)f_33431},
{"f_33474ChickenBridge.scm",(void*)f_33474},
{"f_33478ChickenBridge.scm",(void*)f_33478},
{"f_33438ChickenBridge.scm",(void*)f_33438},
{"f_33449ChickenBridge.scm",(void*)f_33449},
{"f_33425ChickenBridge.scm",(void*)f_33425},
{"f_19508ChickenBridge.scm",(void*)f_19508},
{"f_33405ChickenBridge.scm",(void*)f_33405},
{"f_33399ChickenBridge.scm",(void*)f_33399},
{"f_19511ChickenBridge.scm",(void*)f_19511},
{"f_33379ChickenBridge.scm",(void*)f_33379},
{"f_33383ChickenBridge.scm",(void*)f_33383},
{"f_33371ChickenBridge.scm",(void*)f_33371},
{"f_19514ChickenBridge.scm",(void*)f_19514},
{"f_33351ChickenBridge.scm",(void*)f_33351},
{"f_33355ChickenBridge.scm",(void*)f_33355},
{"f_33343ChickenBridge.scm",(void*)f_33343},
{"f_19517ChickenBridge.scm",(void*)f_19517},
{"f_33323ChickenBridge.scm",(void*)f_33323},
{"f_33327ChickenBridge.scm",(void*)f_33327},
{"f_33315ChickenBridge.scm",(void*)f_33315},
{"f_19520ChickenBridge.scm",(void*)f_19520},
{"f_33295ChickenBridge.scm",(void*)f_33295},
{"f_33299ChickenBridge.scm",(void*)f_33299},
{"f_33287ChickenBridge.scm",(void*)f_33287},
{"f_19523ChickenBridge.scm",(void*)f_19523},
{"f_33186ChickenBridge.scm",(void*)f_33186},
{"f_33156ChickenBridge.scm",(void*)f_33156},
{"f_33180ChickenBridge.scm",(void*)f_33180},
{"f_33150ChickenBridge.scm",(void*)f_33150},
{"f_19526ChickenBridge.scm",(void*)f_19526},
{"f_33100ChickenBridge.scm",(void*)f_33100},
{"f_33102ChickenBridge.scm",(void*)f_33102},
{"f_33106ChickenBridge.scm",(void*)f_33106},
{"f_33134ChickenBridge.scm",(void*)f_33134},
{"f_33126ChickenBridge.scm",(void*)f_33126},
{"f_33122ChickenBridge.scm",(void*)f_33122},
{"f_33109ChickenBridge.scm",(void*)f_33109},
{"f_33092ChickenBridge.scm",(void*)f_33092},
{"f_19529ChickenBridge.scm",(void*)f_19529},
{"f_33039ChickenBridge.scm",(void*)f_33039},
{"f_33041ChickenBridge.scm",(void*)f_33041},
{"f_33045ChickenBridge.scm",(void*)f_33045},
{"f_33076ChickenBridge.scm",(void*)f_33076},
{"f_33068ChickenBridge.scm",(void*)f_33068},
{"f_33064ChickenBridge.scm",(void*)f_33064},
{"f_33048ChickenBridge.scm",(void*)f_33048},
{"f_33051ChickenBridge.scm",(void*)f_33051},
{"f_33031ChickenBridge.scm",(void*)f_33031},
{"f_19532ChickenBridge.scm",(void*)f_19532},
{"f_32981ChickenBridge.scm",(void*)f_32981},
{"f_32995ChickenBridge.scm",(void*)f_32995},
{"f_32987ChickenBridge.scm",(void*)f_32987},
{"f_32946ChickenBridge.scm",(void*)f_32946},
{"f_32979ChickenBridge.scm",(void*)f_32979},
{"f_32940ChickenBridge.scm",(void*)f_32940},
{"f_19535ChickenBridge.scm",(void*)f_19535},
{"f_32887ChickenBridge.scm",(void*)f_32887},
{"f_32891ChickenBridge.scm",(void*)f_32891},
{"f_32904ChickenBridge.scm",(void*)f_32904},
{"f_32896ChickenBridge.scm",(void*)f_32896},
{"f_32844ChickenBridge.scm",(void*)f_32844},
{"f_32877ChickenBridge.scm",(void*)f_32877},
{"f_32838ChickenBridge.scm",(void*)f_32838},
{"f_19538ChickenBridge.scm",(void*)f_19538},
{"f_32758ChickenBridge.scm",(void*)f_32758},
{"f_32752ChickenBridge.scm",(void*)f_32752},
{"f_19541ChickenBridge.scm",(void*)f_19541},
{"f_32521ChickenBridge.scm",(void*)f_32521},
{"f_32525ChickenBridge.scm",(void*)f_32525},
{"f_32533ChickenBridge.scm",(void*)f_32533},
{"f_32556ChickenBridge.scm",(void*)f_32556},
{"f_32559ChickenBridge.scm",(void*)f_32559},
{"f_32562ChickenBridge.scm",(void*)f_32562},
{"f_32565ChickenBridge.scm",(void*)f_32565},
{"f_32625ChickenBridge.scm",(void*)f_32625},
{"f_32632ChickenBridge.scm",(void*)f_32632},
{"f_32642ChickenBridge.scm",(void*)f_32642},
{"f_32652ChickenBridge.scm",(void*)f_32652},
{"f_32666ChickenBridge.scm",(void*)f_32666},
{"f_32676ChickenBridge.scm",(void*)f_32676},
{"f_32686ChickenBridge.scm",(void*)f_32686},
{"f_32696ChickenBridge.scm",(void*)f_32696},
{"f_32568ChickenBridge.scm",(void*)f_32568},
{"f_32592ChickenBridge.scm",(void*)f_32592},
{"f_32571ChickenBridge.scm",(void*)f_32571},
{"f_32478ChickenBridge.scm",(void*)f_32478},
{"f_32511ChickenBridge.scm",(void*)f_32511},
{"f_32472ChickenBridge.scm",(void*)f_32472},
{"f_19544ChickenBridge.scm",(void*)f_19544},
{"f_32390ChickenBridge.scm",(void*)f_32390},
{"f_32394ChickenBridge.scm",(void*)f_32394},
{"f_32400ChickenBridge.scm",(void*)f_32400},
{"f_32420ChickenBridge.scm",(void*)f_32420},
{"f_32364ChickenBridge.scm",(void*)f_32364},
{"f_32374ChickenBridge.scm",(void*)f_32374},
{"f_32358ChickenBridge.scm",(void*)f_32358},
{"f_19547ChickenBridge.scm",(void*)f_19547},
{"f_32235ChickenBridge.scm",(void*)f_32235},
{"f_32239ChickenBridge.scm",(void*)f_32239},
{"f_32167ChickenBridge.scm",(void*)f_32167},
{"f_32186ChickenBridge.scm",(void*)f_32186},
{"f_32221ChickenBridge.scm",(void*)f_32221},
{"f_32192ChickenBridge.scm",(void*)f_32192},
{"f_32196ChickenBridge.scm",(void*)f_32196},
{"f_32210ChickenBridge.scm",(void*)f_32210},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_32180ChickenBridge.scm",(void*)f_32180},
{"f_32161ChickenBridge.scm",(void*)f_32161},
{"f_19550ChickenBridge.scm",(void*)f_19550},
{"f_31889ChickenBridge.scm",(void*)f_31889},
{"f_20073ChickenBridge.scm",(void*)f_20073},
{"f_31841ChickenBridge.scm",(void*)f_31841},
{"f_31833ChickenBridge.scm",(void*)f_31833},
{"f_20076ChickenBridge.scm",(void*)f_20076},
{"f_31713ChickenBridge.scm",(void*)f_31713},
{"f_20082ChickenBridge.scm",(void*)f_20082},
{"f_20541ChickenBridge.scm",(void*)f_20541},
{"f_20575ChickenBridge.scm",(void*)f_20575},
{"f_20567ChickenBridge.scm",(void*)f_20567},
{"f_20563ChickenBridge.scm",(void*)f_20563},
{"f_20548ChickenBridge.scm",(void*)f_20548},
{"f_20552ChickenBridge.scm",(void*)f_20552},
{"f_20545ChickenBridge.scm",(void*)f_20545},
{"f_20100ChickenBridge.scm",(void*)f_20100},
{"f_20534ChickenBridge.scm",(void*)f_20534},
{"f_20530ChickenBridge.scm",(void*)f_20530},
{"f_20107ChickenBridge.scm",(void*)f_20107},
{"f_20405ChickenBridge.scm",(void*)f_20405},
{"f_20426ChickenBridge.scm",(void*)f_20426},
{"f_20428ChickenBridge.scm",(void*)f_20428},
{"f_20442ChickenBridge.scm",(void*)f_20442},
{"f_20495ChickenBridge.scm",(void*)f_20495},
{"f_20445ChickenBridge.scm",(void*)f_20445},
{"f_20480ChickenBridge.scm",(void*)f_20480},
{"f_20448ChickenBridge.scm",(void*)f_20448},
{"f_20461ChickenBridge.scm",(void*)f_20461},
{"f_20473ChickenBridge.scm",(void*)f_20473},
{"f_20465ChickenBridge.scm",(void*)f_20465},
{"f_20451ChickenBridge.scm",(void*)f_20451},
{"f_20415ChickenBridge.scm",(void*)f_20415},
{"f_20110ChickenBridge.scm",(void*)f_20110},
{"f_20369ChickenBridge.scm",(void*)f_20369},
{"f_20395ChickenBridge.scm",(void*)f_20395},
{"f_20380ChickenBridge.scm",(void*)f_20380},
{"f_20113ChickenBridge.scm",(void*)f_20113},
{"f_20117ChickenBridge.scm",(void*)f_20117},
{"f_20313ChickenBridge.scm",(void*)f_20313},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20326ChickenBridge.scm",(void*)f_20326},
{"f_20347ChickenBridge.scm",(void*)f_20347},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20333ChickenBridge.scm",(void*)f_20333},
{"f_20120ChickenBridge.scm",(void*)f_20120},
{"f_20123ChickenBridge.scm",(void*)f_20123},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20284ChickenBridge.scm",(void*)f_20284},
{"f_20280ChickenBridge.scm",(void*)f_20280},
{"f_20126ChickenBridge.scm",(void*)f_20126},
{"f_20154ChickenBridge.scm",(void*)f_20154},
{"f_20157ChickenBridge.scm",(void*)f_20157},
{"f_20160ChickenBridge.scm",(void*)f_20160},
{"f_20163ChickenBridge.scm",(void*)f_20163},
{"f_20166ChickenBridge.scm",(void*)f_20166},
{"f_20225ChickenBridge.scm",(void*)f_20225},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31683ChickenBridge.scm",(void*)f_31683},
{"f_31686ChickenBridge.scm",(void*)f_31686},
{"f_31689ChickenBridge.scm",(void*)f_31689},
{"f_31692ChickenBridge.scm",(void*)f_31692},
{"f_31703ChickenBridge.scm",(void*)f_31703},
{"f_31661ChickenBridge.scm",(void*)f_31661},
{"f_20582ChickenBridge.scm",(void*)f_20582},
{"f_31522ChickenBridge.scm",(void*)f_31522},
{"f_31561ChickenBridge.scm",(void*)f_31561},
{"f_31535ChickenBridge.scm",(void*)f_31535},
{"f_31516ChickenBridge.scm",(void*)f_31516},
{"f_20585ChickenBridge.scm",(void*)f_20585},
{"f_31104ChickenBridge.scm",(void*)f_31104},
{"f_31108ChickenBridge.scm",(void*)f_31108},
{"f_31120ChickenBridge.scm",(void*)f_31120},
{"f_31178ChickenBridge.scm",(void*)f_31178},
{"f_31181ChickenBridge.scm",(void*)f_31181},
{"f_31184ChickenBridge.scm",(void*)f_31184},
{"f_31396ChickenBridge.scm",(void*)f_31396},
{"f_31334ChickenBridge.scm",(void*)f_31334},
{"f_31368ChickenBridge.scm",(void*)f_31368},
{"f_31343ChickenBridge.scm",(void*)f_31343},
{"f_31354ChickenBridge.scm",(void*)f_31354},
{"f_31350ChickenBridge.scm",(void*)f_31350},
{"f_31193ChickenBridge.scm",(void*)f_31193},
{"f_31271ChickenBridge.scm",(void*)f_31271},
{"f_31312ChickenBridge.scm",(void*)f_31312},
{"f_31316ChickenBridge.scm",(void*)f_31316},
{"f_31320ChickenBridge.scm",(void*)f_31320},
{"f_31275ChickenBridge.scm",(void*)f_31275},
{"f_31279ChickenBridge.scm",(void*)f_31279},
{"f_31306ChickenBridge.scm",(void*)f_31306},
{"f_31282ChickenBridge.scm",(void*)f_31282},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_31268ChickenBridge.scm",(void*)f_31268},
{"f_31210ChickenBridge.scm",(void*)f_31210},
{"f_31212ChickenBridge.scm",(void*)f_31212},
{"f_31260ChickenBridge.scm",(void*)f_31260},
{"f_31231ChickenBridge.scm",(void*)f_31231},
{"f_31248ChickenBridge.scm",(void*)f_31248},
{"f_31234ChickenBridge.scm",(void*)f_31234},
{"f_31227ChickenBridge.scm",(void*)f_31227},
{"f_31199ChickenBridge.scm",(void*)f_31199},
{"f_31129ChickenBridge.scm",(void*)f_31129},
{"f_31139ChickenBridge.scm",(void*)f_31139},
{"f_31145ChickenBridge.scm",(void*)f_31145},
{"f_31117ChickenBridge.scm",(void*)f_31117},
{"f_31065ChickenBridge.scm",(void*)f_31065},
{"f_31082ChickenBridge.scm",(void*)f_31082},
{"f_31098ChickenBridge.scm",(void*)f_31098},
{"f_31076ChickenBridge.scm",(void*)f_31076},
{"f_31059ChickenBridge.scm",(void*)f_31059},
{"f_20588ChickenBridge.scm",(void*)f_20588},
{"f_30983ChickenBridge.scm",(void*)f_30983},
{"f_20591ChickenBridge.scm",(void*)f_20591},
{"f_30959ChickenBridge.scm",(void*)f_30959},
{"f_30971ChickenBridge.scm",(void*)f_30971},
{"f_30967ChickenBridge.scm",(void*)f_30967},
{"f_30945ChickenBridge.scm",(void*)f_30945},
{"f_30953ChickenBridge.scm",(void*)f_30953},
{"f_30939ChickenBridge.scm",(void*)f_30939},
{"f_20594ChickenBridge.scm",(void*)f_20594},
{"f_30931ChickenBridge.scm",(void*)f_30931},
{"f_24365ChickenBridge.scm",(void*)f_24365},
{"f_24368ChickenBridge.scm",(void*)f_24368},
{"f_24534ChickenBridge.scm",(void*)f_24534},
{"f_24530ChickenBridge.scm",(void*)f_24530},
{"f_24520ChickenBridge.scm",(void*)f_24520},
{"f_24375ChickenBridge.scm",(void*)f_24375},
{"f_24379ChickenBridge.scm",(void*)f_24379},
{"f_24382ChickenBridge.scm",(void*)f_24382},
{"f_24393ChickenBridge.scm",(void*)f_24393},
{"f_24401ChickenBridge.scm",(void*)f_24401},
{"f_24473ChickenBridge.scm",(void*)f_24473},
{"f_24481ChickenBridge.scm",(void*)f_24481},
{"f_24477ChickenBridge.scm",(void*)f_24477},
{"f_24469ChickenBridge.scm",(void*)f_24469},
{"f_24465ChickenBridge.scm",(void*)f_24465},
{"f_24437ChickenBridge.scm",(void*)f_24437},
{"f_24433ChickenBridge.scm",(void*)f_24433},
{"f_24397ChickenBridge.scm",(void*)f_24397},
{"f_21012ChickenBridge.scm",(void*)f_21012},
{"f_30917ChickenBridge.scm",(void*)f_30917},
{"f_21015ChickenBridge.scm",(void*)f_21015},
{"f_30888ChickenBridge.scm",(void*)f_30888},
{"f_30892ChickenBridge.scm",(void*)f_30892},
{"f_21018ChickenBridge.scm",(void*)f_21018},
{"f_30885ChickenBridge.scm",(void*)f_30885},
{"f_21021ChickenBridge.scm",(void*)f_21021},
{"f_30743ChickenBridge.scm",(void*)f_30743},
{"f_24547ChickenBridge.scm",(void*)f_24547},
{"f_24679ChickenBridge.scm",(void*)f_24679},
{"f_24550ChickenBridge.scm",(void*)f_24550},
{"f_24561ChickenBridge.scm",(void*)f_24561},
{"f_24569ChickenBridge.scm",(void*)f_24569},
{"f_24593ChickenBridge.scm",(void*)f_24593},
{"f_24596ChickenBridge.scm",(void*)f_24596},
{"f_24604ChickenBridge.scm",(void*)f_24604},
{"f_24612ChickenBridge.scm",(void*)f_24612},
{"f_24632ChickenBridge.scm",(void*)f_24632},
{"f_24628ChickenBridge.scm",(void*)f_24628},
{"f_24608ChickenBridge.scm",(void*)f_24608},
{"f_24600ChickenBridge.scm",(void*)f_24600},
{"f_24589ChickenBridge.scm",(void*)f_24589},
{"f_24565ChickenBridge.scm",(void*)f_24565},
{"f_24541ChickenBridge.scm",(void*)f_24541},
{"f_29463ChickenBridge.scm",(void*)f_29463},
{"f_29466ChickenBridge.scm",(void*)f_29466},
{"f_29469ChickenBridge.scm",(void*)f_29469},
{"f_29472ChickenBridge.scm",(void*)f_29472},
{"f_29475ChickenBridge.scm",(void*)f_29475},
{"f_29478ChickenBridge.scm",(void*)f_29478},
{"f_29481ChickenBridge.scm",(void*)f_29481},
{"f_29484ChickenBridge.scm",(void*)f_29484},
{"f_29487ChickenBridge.scm",(void*)f_29487},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29493ChickenBridge.scm",(void*)f_29493},
{"f_29618ChickenBridge.scm",(void*)f_29618},
{"f_29621ChickenBridge.scm",(void*)f_29621},
{"f_29624ChickenBridge.scm",(void*)f_29624},
{"f_30680ChickenBridge.scm",(void*)f_30680},
{"f_30708ChickenBridge.scm",(void*)f_30708},
{"f_30347ChickenBridge.scm",(void*)f_30347},
{"f_30674ChickenBridge.scm",(void*)f_30674},
{"f_30392ChickenBridge.scm",(void*)f_30392},
{"f_30398ChickenBridge.scm",(void*)f_30398},
{"f_30401ChickenBridge.scm",(void*)f_30401},
{"f_30404ChickenBridge.scm",(void*)f_30404},
{"f_30408ChickenBridge.scm",(void*)f_30408},
{"f_30618ChickenBridge.scm",(void*)f_30618},
{"f_30630ChickenBridge.scm",(void*)f_30630},
{"f_30626ChickenBridge.scm",(void*)f_30626},
{"f_30411ChickenBridge.scm",(void*)f_30411},
{"f_30575ChickenBridge.scm",(void*)f_30575},
{"f_30611ChickenBridge.scm",(void*)f_30611},
{"f_30604ChickenBridge.scm",(void*)f_30604},
{"f_30414ChickenBridge.scm",(void*)f_30414},
{"f_30513ChickenBridge.scm",(void*)f_30513},
{"f_30521ChickenBridge.scm",(void*)f_30521},
{"f_30517ChickenBridge.scm",(void*)f_30517},
{"f_30509ChickenBridge.scm",(void*)f_30509},
{"f_30505ChickenBridge.scm",(void*)f_30505},
{"f_30461ChickenBridge.scm",(void*)f_30461},
{"f_30457ChickenBridge.scm",(void*)f_30457},
{"f_30424ChickenBridge.scm",(void*)f_30424},
{"f_30435ChickenBridge.scm",(void*)f_30435},
{"f_30443ChickenBridge.scm",(void*)f_30443},
{"f_30439ChickenBridge.scm",(void*)f_30439},
{"f_30637ChickenBridge.scm",(void*)f_30637},
{"f_30645ChickenBridge.scm",(void*)f_30645},
{"f_30659ChickenBridge.scm",(void*)f_30659},
{"f_30649ChickenBridge.scm",(void*)f_30649},
{"f_30640ChickenBridge.scm",(void*)f_30640},
{"f_30643ChickenBridge.scm",(void*)f_30643},
{"f_30349ChickenBridge.scm",(void*)f_30349},
{"f_30365ChickenBridge.scm",(void*)f_30365},
{"f_30276ChickenBridge.scm",(void*)f_30276},
{"f_30287ChickenBridge.scm",(void*)f_30287},
{"f_30290ChickenBridge.scm",(void*)f_30290},
{"f_30297ChickenBridge.scm",(void*)f_30297},
{"f_30266ChickenBridge.scm",(void*)f_30266},
{"f_29929ChickenBridge.scm",(void*)f_29929},
{"f_30270ChickenBridge.scm",(void*)f_30270},
{"f_30208ChickenBridge.scm",(void*)f_30208},
{"f_30226ChickenBridge.scm",(void*)f_30226},
{"f_30236ChickenBridge.scm",(void*)f_30236},
{"f_30212ChickenBridge.scm",(void*)f_30212},
{"f_30199ChickenBridge.scm",(void*)f_30199},
{"f_29907ChickenBridge.scm",(void*)f_29907},
{"f_30203ChickenBridge.scm",(void*)f_30203},
{"f_30193ChickenBridge.scm",(void*)f_30193},
{"f_29889ChickenBridge.scm",(void*)f_29889},
{"f_30184ChickenBridge.scm",(void*)f_30184},
{"f_29898ChickenBridge.scm",(void*)f_29898},
{"f_30188ChickenBridge.scm",(void*)f_30188},
{"f_30121ChickenBridge.scm",(void*)f_30121},
{"f_30146ChickenBridge.scm",(void*)f_30146},
{"f_29854ChickenBridge.scm",(void*)f_29854},
{"f_30134ChickenBridge.scm",(void*)f_30134},
{"f_29953ChickenBridge.scm",(void*)f_29953},
{"f_30072ChickenBridge.scm",(void*)f_30072},
{"f_30067ChickenBridge.scm",(void*)f_30067},
{"f_29955ChickenBridge.scm",(void*)f_29955},
{"f_30062ChickenBridge.scm",(void*)f_30062},
{"f_30066ChickenBridge.scm",(void*)f_30066},
{"f_30058ChickenBridge.scm",(void*)f_30058},
{"f_30026ChickenBridge.scm",(void*)f_30026},
{"f_30051ChickenBridge.scm",(void*)f_30051},
{"f_30055ChickenBridge.scm",(void*)f_30055},
{"f_30036ChickenBridge.scm",(void*)f_30036},
{"f_30015ChickenBridge.scm",(void*)f_30015},
{"f_29985ChickenBridge.scm",(void*)f_29985},
{"f_29957ChickenBridge.scm",(void*)f_29957},
{"f_29934ChickenBridge.scm",(void*)f_29934},
{"f_29939ChickenBridge.scm",(void*)f_29939},
{"f_29944ChickenBridge.scm",(void*)f_29944},
{"f_29912ChickenBridge.scm",(void*)f_29912},
{"f_29916ChickenBridge.scm",(void*)f_29916},
{"f_29868ChickenBridge.scm",(void*)f_29868},
{"f_29872ChickenBridge.scm",(void*)f_29872},
{"f_29859ChickenBridge.scm",(void*)f_29859},
{"f_29863ChickenBridge.scm",(void*)f_29863},
{"f_29847ChickenBridge.scm",(void*)f_29847},
{"f_29844ChickenBridge.scm",(void*)f_29844},
{"f_29830ChickenBridge.scm",(void*)f_29830},
{"f_29835ChickenBridge.scm",(void*)f_29835},
{"f_29816ChickenBridge.scm",(void*)f_29816},
{"f_29821ChickenBridge.scm",(void*)f_29821},
{"f_29626ChickenBridge.scm",(void*)f_29626},
{"f_29687ChickenBridge.scm",(void*)f_29687},
{"f_29689ChickenBridge.scm",(void*)f_29689},
{"f_29699ChickenBridge.scm",(void*)f_29699},
{"f_29718ChickenBridge.scm",(void*)f_29718},
{"f_29758ChickenBridge.scm",(void*)f_29758},
{"f_29800ChickenBridge.scm",(void*)f_29800},
{"f_29770ChickenBridge.scm",(void*)f_29770},
{"f_29755ChickenBridge.scm",(void*)f_29755},
{"f_29673ChickenBridge.scm",(void*)f_29673},
{"f_29638ChickenBridge.scm",(void*)f_29638},
{"f_29665ChickenBridge.scm",(void*)f_29665},
{"f_29646ChickenBridge.scm",(void*)f_29646},
{"f_29653ChickenBridge.scm",(void*)f_29653},
{"f_29657ChickenBridge.scm",(void*)f_29657},
{"f_29661ChickenBridge.scm",(void*)f_29661},
{"f_29738ChickenBridge.scm",(void*)f_29738},
{"f_29716ChickenBridge.scm",(void*)f_29716},
{"f_29702ChickenBridge.scm",(void*)f_29702},
{"f_29705ChickenBridge.scm",(void*)f_29705},
{"f_29680ChickenBridge.scm",(void*)f_29680},
{"f_29609ChickenBridge.scm",(void*)f_29609},
{"f_29614ChickenBridge.scm",(void*)f_29614},
{"f_29552ChickenBridge.scm",(void*)f_29552},
{"f_29585ChickenBridge.scm",(void*)f_29585},
{"f_29565ChickenBridge.scm",(void*)f_29565},
{"f_29573ChickenBridge.scm",(void*)f_29573},
{"f_29556ChickenBridge.scm",(void*)f_29556},
{"f_29495ChickenBridge.scm",(void*)f_29495},
{"f_29528ChickenBridge.scm",(void*)f_29528},
{"f_29508ChickenBridge.scm",(void*)f_29508},
{"f_29516ChickenBridge.scm",(void*)f_29516},
{"f_29499ChickenBridge.scm",(void*)f_29499},
{"f_29405ChickenBridge.scm",(void*)f_29405},
{"f_29459ChickenBridge.scm",(void*)f_29459},
{"f_29454ChickenBridge.scm",(void*)f_29454},
{"f_29417ChickenBridge.scm",(void*)f_29417},
{"f_29423ChickenBridge.scm",(void*)f_29423},
{"f_29449ChickenBridge.scm",(void*)f_29449},
{"f_29453ChickenBridge.scm",(void*)f_29453},
{"f_29429ChickenBridge.scm",(void*)f_29429},
{"f_29447ChickenBridge.scm",(void*)f_29447},
{"f_29444ChickenBridge.scm",(void*)f_29444},
{"f_29440ChickenBridge.scm",(void*)f_29440},
{"f_29433ChickenBridge.scm",(void*)f_29433},
{"f_29390ChickenBridge.scm",(void*)f_29390},
{"f_29395ChickenBridge.scm",(void*)f_29395},
{"f_29362ChickenBridge.scm",(void*)f_29362},
{"f_29367ChickenBridge.scm",(void*)f_29367},
{"f_29334ChickenBridge.scm",(void*)f_29334},
{"f_29339ChickenBridge.scm",(void*)f_29339},
{"f_29306ChickenBridge.scm",(void*)f_29306},
{"f_29311ChickenBridge.scm",(void*)f_29311},
{"f_29278ChickenBridge.scm",(void*)f_29278},
{"f_29283ChickenBridge.scm",(void*)f_29283},
{"f_29250ChickenBridge.scm",(void*)f_29250},
{"f_29255ChickenBridge.scm",(void*)f_29255},
{"f_29222ChickenBridge.scm",(void*)f_29222},
{"f_29227ChickenBridge.scm",(void*)f_29227},
{"f_29194ChickenBridge.scm",(void*)f_29194},
{"f_29199ChickenBridge.scm",(void*)f_29199},
{"f_29166ChickenBridge.scm",(void*)f_29166},
{"f_29171ChickenBridge.scm",(void*)f_29171},
{"f_29138ChickenBridge.scm",(void*)f_29138},
{"f_29143ChickenBridge.scm",(void*)f_29143},
{"f_29115ChickenBridge.scm",(void*)f_29115},
{"f_29120ChickenBridge.scm",(void*)f_29120},
{"f_29119ChickenBridge.scm",(void*)f_29119},
{"f_29096ChickenBridge.scm",(void*)f_29096},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29041ChickenBridge.scm",(void*)f_29041},
{"f_29048ChickenBridge.scm",(void*)f_29048},
{"f_29051ChickenBridge.scm",(void*)f_29051},
{"f_29075ChickenBridge.scm",(void*)f_29075},
{"f_29055ChickenBridge.scm",(void*)f_29055},
{"f_29045ChickenBridge.scm",(void*)f_29045},
{"f_28994ChickenBridge.scm",(void*)f_28994},
{"f_29001ChickenBridge.scm",(void*)f_29001},
{"f_29004ChickenBridge.scm",(void*)f_29004},
{"f_29024ChickenBridge.scm",(void*)f_29024},
{"f_29008ChickenBridge.scm",(void*)f_29008},
{"f_28971ChickenBridge.scm",(void*)f_28971},
{"f_28976ChickenBridge.scm",(void*)f_28976},
{"f_28975ChickenBridge.scm",(void*)f_28975},
{"f_28952ChickenBridge.scm",(void*)f_28952},
{"f_28957ChickenBridge.scm",(void*)f_28957},
{"f_28929ChickenBridge.scm",(void*)f_28929},
{"f_28934ChickenBridge.scm",(void*)f_28934},
{"f_28933ChickenBridge.scm",(void*)f_28933},
{"f_28910ChickenBridge.scm",(void*)f_28910},
{"f_28915ChickenBridge.scm",(void*)f_28915},
{"f_28891ChickenBridge.scm",(void*)f_28891},
{"f_28896ChickenBridge.scm",(void*)f_28896},
{"f_28895ChickenBridge.scm",(void*)f_28895},
{"f_28876ChickenBridge.scm",(void*)f_28876},
{"f_28881ChickenBridge.scm",(void*)f_28881},
{"f_28857ChickenBridge.scm",(void*)f_28857},
{"f_28862ChickenBridge.scm",(void*)f_28862},
{"f_28861ChickenBridge.scm",(void*)f_28861},
{"f_28842ChickenBridge.scm",(void*)f_28842},
{"f_28847ChickenBridge.scm",(void*)f_28847},
{"f_28827ChickenBridge.scm",(void*)f_28827},
{"f_28832ChickenBridge.scm",(void*)f_28832},
{"f_28809ChickenBridge.scm",(void*)f_28809},
{"f_28817ChickenBridge.scm",(void*)f_28817},
{"f_28813ChickenBridge.scm",(void*)f_28813},
{"f_28339ChickenBridge.scm",(void*)f_28339},
{"f_28767ChickenBridge.scm",(void*)f_28767},
{"f_28782ChickenBridge.scm",(void*)f_28782},
{"f_28774ChickenBridge.scm",(void*)f_28774},
{"f_28738ChickenBridge.scm",(void*)f_28738},
{"f_28742ChickenBridge.scm",(void*)f_28742},
{"f_28703ChickenBridge.scm",(void*)f_28703},
{"f_28707ChickenBridge.scm",(void*)f_28707},
{"f_28668ChickenBridge.scm",(void*)f_28668},
{"f_28672ChickenBridge.scm",(void*)f_28672},
{"f_28343ChickenBridge.scm",(void*)f_28343},
{"f_28632ChickenBridge.scm",(void*)f_28632},
{"f_28647ChickenBridge.scm",(void*)f_28647},
{"f_28639ChickenBridge.scm",(void*)f_28639},
{"f_28603ChickenBridge.scm",(void*)f_28603},
{"f_28607ChickenBridge.scm",(void*)f_28607},
{"f_28568ChickenBridge.scm",(void*)f_28568},
{"f_28572ChickenBridge.scm",(void*)f_28572},
{"f_28533ChickenBridge.scm",(void*)f_28533},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28346ChickenBridge.scm",(void*)f_28346},
{"f_28497ChickenBridge.scm",(void*)f_28497},
{"f_28512ChickenBridge.scm",(void*)f_28512},
{"f_28504ChickenBridge.scm",(void*)f_28504},
{"f_28468ChickenBridge.scm",(void*)f_28468},
{"f_28472ChickenBridge.scm",(void*)f_28472},
{"f_28433ChickenBridge.scm",(void*)f_28433},
{"f_28437ChickenBridge.scm",(void*)f_28437},
{"f_28398ChickenBridge.scm",(void*)f_28398},
{"f_28402ChickenBridge.scm",(void*)f_28402},
{"f_28349ChickenBridge.scm",(void*)f_28349},
{"f_28352ChickenBridge.scm",(void*)f_28352},
{"f_28356ChickenBridge.scm",(void*)f_28356},
{"f_28320ChickenBridge.scm",(void*)f_28320},
{"f_28325ChickenBridge.scm",(void*)f_28325},
{"f_27869ChickenBridge.scm",(void*)f_27869},
{"f_28297ChickenBridge.scm",(void*)f_28297},
{"f_28312ChickenBridge.scm",(void*)f_28312},
{"f_28304ChickenBridge.scm",(void*)f_28304},
{"f_28268ChickenBridge.scm",(void*)f_28268},
{"f_28272ChickenBridge.scm",(void*)f_28272},
{"f_28233ChickenBridge.scm",(void*)f_28233},
{"f_28237ChickenBridge.scm",(void*)f_28237},
{"f_28198ChickenBridge.scm",(void*)f_28198},
{"f_28202ChickenBridge.scm",(void*)f_28202},
{"f_27873ChickenBridge.scm",(void*)f_27873},
{"f_28162ChickenBridge.scm",(void*)f_28162},
{"f_28177ChickenBridge.scm",(void*)f_28177},
{"f_28169ChickenBridge.scm",(void*)f_28169},
{"f_28133ChickenBridge.scm",(void*)f_28133},
{"f_28137ChickenBridge.scm",(void*)f_28137},
{"f_28098ChickenBridge.scm",(void*)f_28098},
{"f_28102ChickenBridge.scm",(void*)f_28102},
{"f_28063ChickenBridge.scm",(void*)f_28063},
{"f_28067ChickenBridge.scm",(void*)f_28067},
{"f_27876ChickenBridge.scm",(void*)f_27876},
{"f_28027ChickenBridge.scm",(void*)f_28027},
{"f_28042ChickenBridge.scm",(void*)f_28042},
{"f_28034ChickenBridge.scm",(void*)f_28034},
{"f_27998ChickenBridge.scm",(void*)f_27998},
{"f_28002ChickenBridge.scm",(void*)f_28002},
{"f_27963ChickenBridge.scm",(void*)f_27963},
{"f_27967ChickenBridge.scm",(void*)f_27967},
{"f_27928ChickenBridge.scm",(void*)f_27928},
{"f_27932ChickenBridge.scm",(void*)f_27932},
{"f_27879ChickenBridge.scm",(void*)f_27879},
{"f_27882ChickenBridge.scm",(void*)f_27882},
{"f_27886ChickenBridge.scm",(void*)f_27886},
{"f_27850ChickenBridge.scm",(void*)f_27850},
{"f_27855ChickenBridge.scm",(void*)f_27855},
{"f_27399ChickenBridge.scm",(void*)f_27399},
{"f_27827ChickenBridge.scm",(void*)f_27827},
{"f_27842ChickenBridge.scm",(void*)f_27842},
{"f_27834ChickenBridge.scm",(void*)f_27834},
{"f_27798ChickenBridge.scm",(void*)f_27798},
{"f_27802ChickenBridge.scm",(void*)f_27802},
{"f_27763ChickenBridge.scm",(void*)f_27763},
{"f_27767ChickenBridge.scm",(void*)f_27767},
{"f_27728ChickenBridge.scm",(void*)f_27728},
{"f_27732ChickenBridge.scm",(void*)f_27732},
{"f_27403ChickenBridge.scm",(void*)f_27403},
{"f_27692ChickenBridge.scm",(void*)f_27692},
{"f_27707ChickenBridge.scm",(void*)f_27707},
{"f_27699ChickenBridge.scm",(void*)f_27699},
{"f_27663ChickenBridge.scm",(void*)f_27663},
{"f_27667ChickenBridge.scm",(void*)f_27667},
{"f_27628ChickenBridge.scm",(void*)f_27628},
{"f_27632ChickenBridge.scm",(void*)f_27632},
{"f_27593ChickenBridge.scm",(void*)f_27593},
{"f_27597ChickenBridge.scm",(void*)f_27597},
{"f_27406ChickenBridge.scm",(void*)f_27406},
{"f_27557ChickenBridge.scm",(void*)f_27557},
{"f_27572ChickenBridge.scm",(void*)f_27572},
{"f_27564ChickenBridge.scm",(void*)f_27564},
{"f_27528ChickenBridge.scm",(void*)f_27528},
{"f_27532ChickenBridge.scm",(void*)f_27532},
{"f_27493ChickenBridge.scm",(void*)f_27493},
{"f_27497ChickenBridge.scm",(void*)f_27497},
{"f_27458ChickenBridge.scm",(void*)f_27458},
{"f_27462ChickenBridge.scm",(void*)f_27462},
{"f_27409ChickenBridge.scm",(void*)f_27409},
{"f_27412ChickenBridge.scm",(void*)f_27412},
{"f_27416ChickenBridge.scm",(void*)f_27416},
{"f_27380ChickenBridge.scm",(void*)f_27380},
{"f_27385ChickenBridge.scm",(void*)f_27385},
{"f_26651ChickenBridge.scm",(void*)f_26651},
{"f_27357ChickenBridge.scm",(void*)f_27357},
{"f_27372ChickenBridge.scm",(void*)f_27372},
{"f_27364ChickenBridge.scm",(void*)f_27364},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27293ChickenBridge.scm",(void*)f_27293},
{"f_27297ChickenBridge.scm",(void*)f_27297},
{"f_27258ChickenBridge.scm",(void*)f_27258},
{"f_27262ChickenBridge.scm",(void*)f_27262},
{"f_27223ChickenBridge.scm",(void*)f_27223},
{"f_27227ChickenBridge.scm",(void*)f_27227},
{"f_26655ChickenBridge.scm",(void*)f_26655},
{"f_27187ChickenBridge.scm",(void*)f_27187},
{"f_27202ChickenBridge.scm",(void*)f_27202},
{"f_27194ChickenBridge.scm",(void*)f_27194},
{"f_27158ChickenBridge.scm",(void*)f_27158},
{"f_27162ChickenBridge.scm",(void*)f_27162},
{"f_27123ChickenBridge.scm",(void*)f_27123},
{"f_27127ChickenBridge.scm",(void*)f_27127},
{"f_27088ChickenBridge.scm",(void*)f_27088},
{"f_27092ChickenBridge.scm",(void*)f_27092},
{"f_27053ChickenBridge.scm",(void*)f_27053},
{"f_27057ChickenBridge.scm",(void*)f_27057},
{"f_26658ChickenBridge.scm",(void*)f_26658},
{"f_27017ChickenBridge.scm",(void*)f_27017},
{"f_27032ChickenBridge.scm",(void*)f_27032},
{"f_27024ChickenBridge.scm",(void*)f_27024},
{"f_26988ChickenBridge.scm",(void*)f_26988},
{"f_26992ChickenBridge.scm",(void*)f_26992},
{"f_26953ChickenBridge.scm",(void*)f_26953},
{"f_26957ChickenBridge.scm",(void*)f_26957},
{"f_26918ChickenBridge.scm",(void*)f_26918},
{"f_26922ChickenBridge.scm",(void*)f_26922},
{"f_26883ChickenBridge.scm",(void*)f_26883},
{"f_26887ChickenBridge.scm",(void*)f_26887},
{"f_26661ChickenBridge.scm",(void*)f_26661},
{"f_26847ChickenBridge.scm",(void*)f_26847},
{"f_26862ChickenBridge.scm",(void*)f_26862},
{"f_26854ChickenBridge.scm",(void*)f_26854},
{"f_26818ChickenBridge.scm",(void*)f_26818},
{"f_26822ChickenBridge.scm",(void*)f_26822},
{"f_26783ChickenBridge.scm",(void*)f_26783},
{"f_26787ChickenBridge.scm",(void*)f_26787},
{"f_26748ChickenBridge.scm",(void*)f_26748},
{"f_26752ChickenBridge.scm",(void*)f_26752},
{"f_26713ChickenBridge.scm",(void*)f_26713},
{"f_26717ChickenBridge.scm",(void*)f_26717},
{"f_26664ChickenBridge.scm",(void*)f_26664},
{"f_26667ChickenBridge.scm",(void*)f_26667},
{"f_26671ChickenBridge.scm",(void*)f_26671},
{"f_26632ChickenBridge.scm",(void*)f_26632},
{"f_26637ChickenBridge.scm",(void*)f_26637},
{"f_25903ChickenBridge.scm",(void*)f_25903},
{"f_26609ChickenBridge.scm",(void*)f_26609},
{"f_26624ChickenBridge.scm",(void*)f_26624},
{"f_26616ChickenBridge.scm",(void*)f_26616},
{"f_26580ChickenBridge.scm",(void*)f_26580},
{"f_26584ChickenBridge.scm",(void*)f_26584},
{"f_26545ChickenBridge.scm",(void*)f_26545},
{"f_26549ChickenBridge.scm",(void*)f_26549},
{"f_26510ChickenBridge.scm",(void*)f_26510},
{"f_26514ChickenBridge.scm",(void*)f_26514},
{"f_26475ChickenBridge.scm",(void*)f_26475},
{"f_26479ChickenBridge.scm",(void*)f_26479},
{"f_25907ChickenBridge.scm",(void*)f_25907},
{"f_26439ChickenBridge.scm",(void*)f_26439},
{"f_26454ChickenBridge.scm",(void*)f_26454},
{"f_26446ChickenBridge.scm",(void*)f_26446},
{"f_26410ChickenBridge.scm",(void*)f_26410},
{"f_26414ChickenBridge.scm",(void*)f_26414},
{"f_26375ChickenBridge.scm",(void*)f_26375},
{"f_26379ChickenBridge.scm",(void*)f_26379},
{"f_26340ChickenBridge.scm",(void*)f_26340},
{"f_26344ChickenBridge.scm",(void*)f_26344},
{"f_26305ChickenBridge.scm",(void*)f_26305},
{"f_26309ChickenBridge.scm",(void*)f_26309},
{"f_25910ChickenBridge.scm",(void*)f_25910},
{"f_26269ChickenBridge.scm",(void*)f_26269},
{"f_26284ChickenBridge.scm",(void*)f_26284},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26240ChickenBridge.scm",(void*)f_26240},
{"f_26244ChickenBridge.scm",(void*)f_26244},
{"f_26205ChickenBridge.scm",(void*)f_26205},
{"f_26209ChickenBridge.scm",(void*)f_26209},
{"f_26170ChickenBridge.scm",(void*)f_26170},
{"f_26174ChickenBridge.scm",(void*)f_26174},
{"f_26135ChickenBridge.scm",(void*)f_26135},
{"f_26139ChickenBridge.scm",(void*)f_26139},
{"f_25913ChickenBridge.scm",(void*)f_25913},
{"f_26099ChickenBridge.scm",(void*)f_26099},
{"f_26114ChickenBridge.scm",(void*)f_26114},
{"f_26106ChickenBridge.scm",(void*)f_26106},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_26074ChickenBridge.scm",(void*)f_26074},
{"f_26035ChickenBridge.scm",(void*)f_26035},
{"f_26039ChickenBridge.scm",(void*)f_26039},
{"f_26000ChickenBridge.scm",(void*)f_26000},
{"f_26004ChickenBridge.scm",(void*)f_26004},
{"f_25965ChickenBridge.scm",(void*)f_25965},
{"f_25969ChickenBridge.scm",(void*)f_25969},
{"f_25916ChickenBridge.scm",(void*)f_25916},
{"f_25919ChickenBridge.scm",(void*)f_25919},
{"f_25923ChickenBridge.scm",(void*)f_25923},
{"f_25884ChickenBridge.scm",(void*)f_25884},
{"f_25889ChickenBridge.scm",(void*)f_25889},
{"f_25433ChickenBridge.scm",(void*)f_25433},
{"f_25861ChickenBridge.scm",(void*)f_25861},
{"f_25876ChickenBridge.scm",(void*)f_25876},
{"f_25868ChickenBridge.scm",(void*)f_25868},
{"f_25832ChickenBridge.scm",(void*)f_25832},
{"f_25836ChickenBridge.scm",(void*)f_25836},
{"f_25797ChickenBridge.scm",(void*)f_25797},
{"f_25801ChickenBridge.scm",(void*)f_25801},
{"f_25762ChickenBridge.scm",(void*)f_25762},
{"f_25766ChickenBridge.scm",(void*)f_25766},
{"f_25437ChickenBridge.scm",(void*)f_25437},
{"f_25726ChickenBridge.scm",(void*)f_25726},
{"f_25741ChickenBridge.scm",(void*)f_25741},
{"f_25733ChickenBridge.scm",(void*)f_25733},
{"f_25697ChickenBridge.scm",(void*)f_25697},
{"f_25701ChickenBridge.scm",(void*)f_25701},
{"f_25662ChickenBridge.scm",(void*)f_25662},
{"f_25666ChickenBridge.scm",(void*)f_25666},
{"f_25627ChickenBridge.scm",(void*)f_25627},
{"f_25631ChickenBridge.scm",(void*)f_25631},
{"f_25440ChickenBridge.scm",(void*)f_25440},
{"f_25591ChickenBridge.scm",(void*)f_25591},
{"f_25606ChickenBridge.scm",(void*)f_25606},
{"f_25598ChickenBridge.scm",(void*)f_25598},
{"f_25562ChickenBridge.scm",(void*)f_25562},
{"f_25566ChickenBridge.scm",(void*)f_25566},
{"f_25527ChickenBridge.scm",(void*)f_25527},
{"f_25531ChickenBridge.scm",(void*)f_25531},
{"f_25492ChickenBridge.scm",(void*)f_25492},
{"f_25496ChickenBridge.scm",(void*)f_25496},
{"f_25443ChickenBridge.scm",(void*)f_25443},
{"f_25446ChickenBridge.scm",(void*)f_25446},
{"f_25450ChickenBridge.scm",(void*)f_25450},
{"f_25414ChickenBridge.scm",(void*)f_25414},
{"f_25419ChickenBridge.scm",(void*)f_25419},
{"f_24685ChickenBridge.scm",(void*)f_24685},
{"f_25391ChickenBridge.scm",(void*)f_25391},
{"f_25406ChickenBridge.scm",(void*)f_25406},
{"f_25398ChickenBridge.scm",(void*)f_25398},
{"f_25362ChickenBridge.scm",(void*)f_25362},
{"f_25366ChickenBridge.scm",(void*)f_25366},
{"f_25327ChickenBridge.scm",(void*)f_25327},
{"f_25331ChickenBridge.scm",(void*)f_25331},
{"f_25292ChickenBridge.scm",(void*)f_25292},
{"f_25296ChickenBridge.scm",(void*)f_25296},
{"f_25257ChickenBridge.scm",(void*)f_25257},
{"f_25261ChickenBridge.scm",(void*)f_25261},
{"f_24689ChickenBridge.scm",(void*)f_24689},
{"f_25221ChickenBridge.scm",(void*)f_25221},
{"f_25236ChickenBridge.scm",(void*)f_25236},
{"f_25228ChickenBridge.scm",(void*)f_25228},
{"f_25192ChickenBridge.scm",(void*)f_25192},
{"f_25196ChickenBridge.scm",(void*)f_25196},
{"f_25157ChickenBridge.scm",(void*)f_25157},
{"f_25161ChickenBridge.scm",(void*)f_25161},
{"f_25122ChickenBridge.scm",(void*)f_25122},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_24692ChickenBridge.scm",(void*)f_24692},
{"f_25051ChickenBridge.scm",(void*)f_25051},
{"f_25066ChickenBridge.scm",(void*)f_25066},
{"f_25058ChickenBridge.scm",(void*)f_25058},
{"f_25022ChickenBridge.scm",(void*)f_25022},
{"f_25026ChickenBridge.scm",(void*)f_25026},
{"f_24987ChickenBridge.scm",(void*)f_24987},
{"f_24991ChickenBridge.scm",(void*)f_24991},
{"f_24952ChickenBridge.scm",(void*)f_24952},
{"f_24956ChickenBridge.scm",(void*)f_24956},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_24921ChickenBridge.scm",(void*)f_24921},
{"f_24695ChickenBridge.scm",(void*)f_24695},
{"f_24881ChickenBridge.scm",(void*)f_24881},
{"f_24896ChickenBridge.scm",(void*)f_24896},
{"f_24888ChickenBridge.scm",(void*)f_24888},
{"f_24852ChickenBridge.scm",(void*)f_24852},
{"f_24856ChickenBridge.scm",(void*)f_24856},
{"f_24817ChickenBridge.scm",(void*)f_24817},
{"f_24821ChickenBridge.scm",(void*)f_24821},
{"f_24782ChickenBridge.scm",(void*)f_24782},
{"f_24786ChickenBridge.scm",(void*)f_24786},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_24751ChickenBridge.scm",(void*)f_24751},
{"f_24698ChickenBridge.scm",(void*)f_24698},
{"f_24701ChickenBridge.scm",(void*)f_24701},
{"f_24705ChickenBridge.scm",(void*)f_24705},
{"f_24347ChickenBridge.scm",(void*)f_24347},
{"f_24187ChickenBridge.scm",(void*)f_24187},
{"f_24222ChickenBridge.scm",(void*)f_24222},
{"f_24232ChickenBridge.scm",(void*)f_24232},
{"f_24236ChickenBridge.scm",(void*)f_24236},
{"f_24239ChickenBridge.scm",(void*)f_24239},
{"f_24300ChickenBridge.scm",(void*)f_24300},
{"f_24291ChickenBridge.scm",(void*)f_24291},
{"f_24242ChickenBridge.scm",(void*)f_24242},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24268ChickenBridge.scm",(void*)f_24268},
{"f_24245ChickenBridge.scm",(void*)f_24245},
{"f_24251ChickenBridge.scm",(void*)f_24251},
{"f_24220ChickenBridge.scm",(void*)f_24220},
{"f_24195ChickenBridge.scm",(void*)f_24195},
{"f_24194ChickenBridge.scm",(void*)f_24194},
{"f_24355ChickenBridge.scm",(void*)f_24355},
{"f_23933ChickenBridge.scm",(void*)f_23933},
{"f_23955ChickenBridge.scm",(void*)f_23955},
{"f_23970ChickenBridge.scm",(void*)f_23970},
{"f_23973ChickenBridge.scm",(void*)f_23973},
{"f_24149ChickenBridge.scm",(void*)f_24149},
{"f_24143ChickenBridge.scm",(void*)f_24143},
{"f_23976ChickenBridge.scm",(void*)f_23976},
{"f_24125ChickenBridge.scm",(void*)f_24125},
{"f_23979ChickenBridge.scm",(void*)f_23979},
{"f_23982ChickenBridge.scm",(void*)f_23982},
{"f_24118ChickenBridge.scm",(void*)f_24118},
{"f_24106ChickenBridge.scm",(void*)f_24106},
{"f_24002ChickenBridge.scm",(void*)f_24002},
{"f_24009ChickenBridge.scm",(void*)f_24009},
{"f_24079ChickenBridge.scm",(void*)f_24079},
{"f_24065ChickenBridge.scm",(void*)f_24065},
{"f_24073ChickenBridge.scm",(void*)f_24073},
{"f_24012ChickenBridge.scm",(void*)f_24012},
{"f_24051ChickenBridge.scm",(void*)f_24051},
{"f_24015ChickenBridge.scm",(void*)f_24015},
{"f_24044ChickenBridge.scm",(void*)f_24044},
{"f_24021ChickenBridge.scm",(void*)f_24021},
{"f_24024ChickenBridge.scm",(void*)f_24024},
{"f_24028ChickenBridge.scm",(void*)f_24028},
{"f_23989ChickenBridge.scm",(void*)f_23989},
{"f_23992ChickenBridge.scm",(void*)f_23992},
{"f_23802ChickenBridge.scm",(void*)f_23802},
{"f_23811ChickenBridge.scm",(void*)f_23811},
{"f_23759ChickenBridge.scm",(void*)f_23759},
{"f_23765ChickenBridge.scm",(void*)f_23765},
{"f_23828ChickenBridge.scm",(void*)f_23828},
{"f_23914ChickenBridge.scm",(void*)f_23914},
{"f_23901ChickenBridge.scm",(void*)f_23901},
{"f_23909ChickenBridge.scm",(void*)f_23909},
{"f_23831ChickenBridge.scm",(void*)f_23831},
{"f_23835ChickenBridge.scm",(void*)f_23835},
{"f_23878ChickenBridge.scm",(void*)f_23878},
{"f_23840ChickenBridge.scm",(void*)f_23840},
{"f_23806ChickenBridge.scm",(void*)f_23806},
{"f_23701ChickenBridge.scm",(void*)f_23701},
{"f_23708ChickenBridge.scm",(void*)f_23708},
{"f_23739ChickenBridge.scm",(void*)f_23739},
{"f_23735ChickenBridge.scm",(void*)f_23735},
{"f_23727ChickenBridge.scm",(void*)f_23727},
{"f_23610ChickenBridge.scm",(void*)f_23610},
{"f_23617ChickenBridge.scm",(void*)f_23617},
{"f_23685ChickenBridge.scm",(void*)f_23685},
{"f_23628ChickenBridge.scm",(void*)f_23628},
{"f_23655ChickenBridge.scm",(void*)f_23655},
{"f_23639ChickenBridge.scm",(void*)f_23639},
{"f_23544ChickenBridge.scm",(void*)f_23544},
{"f_23555ChickenBridge.scm",(void*)f_23555},
{"f_23558ChickenBridge.scm",(void*)f_23558},
{"f_23565ChickenBridge.scm",(void*)f_23565},
{"f_23538ChickenBridge.scm",(void*)f_23538},
{"f_22992ChickenBridge.scm",(void*)f_22992},
{"f_23023ChickenBridge.scm",(void*)f_23023},
{"f_23487ChickenBridge.scm",(void*)f_23487},
{"f_23493ChickenBridge.scm",(void*)f_23493},
{"f_23034ChickenBridge.scm",(void*)f_23034},
{"f_22919ChickenBridge.scm",(void*)f_22919},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_22879ChickenBridge.scm",(void*)f_22879},
{"f_22892ChickenBridge.scm",(void*)f_22892},
{"f_22933ChickenBridge.scm",(void*)f_22933},
{"f_23038ChickenBridge.scm",(void*)f_23038},
{"f_23475ChickenBridge.scm",(void*)f_23475},
{"f_23471ChickenBridge.scm",(void*)f_23471},
{"f_23467ChickenBridge.scm",(void*)f_23467},
{"f_23041ChickenBridge.scm",(void*)f_23041},
{"f_23261ChickenBridge.scm",(void*)f_23261},
{"f_23370ChickenBridge.scm",(void*)f_23370},
{"f_23435ChickenBridge.scm",(void*)f_23435},
{"f_23377ChickenBridge.scm",(void*)f_23377},
{"f_23381ChickenBridge.scm",(void*)f_23381},
{"f_23385ChickenBridge.scm",(void*)f_23385},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_23423ChickenBridge.scm",(void*)f_23423},
{"f_23401ChickenBridge.scm",(void*)f_23401},
{"f_23264ChickenBridge.scm",(void*)f_23264},
{"f_23267ChickenBridge.scm",(void*)f_23267},
{"f_23166ChickenBridge.scm",(void*)f_23166},
{"f_23249ChickenBridge.scm",(void*)f_23249},
{"f_23216ChickenBridge.scm",(void*)f_23216},
{"f_23242ChickenBridge.scm",(void*)f_23242},
{"f_23224ChickenBridge.scm",(void*)f_23224},
{"f_23172ChickenBridge.scm",(void*)f_23172},
{"f_23212ChickenBridge.scm",(void*)f_23212},
{"f_23154ChickenBridge.scm",(void*)f_23154},
{"f_23125ChickenBridge.scm",(void*)f_23125},
{"f_23147ChickenBridge.scm",(void*)f_23147},
{"f_23133ChickenBridge.scm",(void*)f_23133},
{"f_23087ChickenBridge.scm",(void*)f_23087},
{"f_23044ChickenBridge.scm",(void*)f_23044},
{"f_23055ChickenBridge.scm",(void*)f_23055},
{"f_23059ChickenBridge.scm",(void*)f_23059},
{"f_23063ChickenBridge.scm",(void*)f_23063},
{"f_23067ChickenBridge.scm",(void*)f_23067},
{"f_23051ChickenBridge.scm",(void*)f_23051},
{"f_23011ChickenBridge.scm",(void*)f_23011},
{"f_23006ChickenBridge.scm",(void*)f_23006},
{"f_23001ChickenBridge.scm",(void*)f_23001},
{"f_22833ChickenBridge.scm",(void*)f_22833},
{"f_22844ChickenBridge.scm",(void*)f_22844},
{"f_22859ChickenBridge.scm",(void*)f_22859},
{"f_22795ChickenBridge.scm",(void*)f_22795},
{"f_22806ChickenBridge.scm",(void*)f_22806},
{"f_22821ChickenBridge.scm",(void*)f_22821},
{"f_22728ChickenBridge.scm",(void*)f_22728},
{"f_22748ChickenBridge.scm",(void*)f_22748},
{"f_22758ChickenBridge.scm",(void*)f_22758},
{"f_22771ChickenBridge.scm",(void*)f_22771},
{"f_22739ChickenBridge.scm",(void*)f_22739},
{"f_22746ChickenBridge.scm",(void*)f_22746},
{"f_22535ChickenBridge.scm",(void*)f_22535},
{"f_22595ChickenBridge.scm",(void*)f_22595},
{"f_22605ChickenBridge.scm",(void*)f_22605},
{"f_22719ChickenBridge.scm",(void*)f_22719},
{"f_22684ChickenBridge.scm",(void*)f_22684},
{"f_22676ChickenBridge.scm",(void*)f_22676},
{"f_22647ChickenBridge.scm",(void*)f_22647},
{"f_22625ChickenBridge.scm",(void*)f_22625},
{"f_22628ChickenBridge.scm",(void*)f_22628},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_22542ChickenBridge.scm",(void*)f_22542},
{"f_22593ChickenBridge.scm",(void*)f_22593},
{"f_22585ChickenBridge.scm",(void*)f_22585},
{"f_22545ChickenBridge.scm",(void*)f_22545},
{"f_22556ChickenBridge.scm",(void*)f_22556},
{"f_22560ChickenBridge.scm",(void*)f_22560},
{"f_22552ChickenBridge.scm",(void*)f_22552},
{"f_22393ChickenBridge.scm",(void*)f_22393},
{"f_22441ChickenBridge.scm",(void*)f_22441},
{"f_22451ChickenBridge.scm",(void*)f_22451},
{"f_22462ChickenBridge.scm",(void*)f_22462},
{"f_22499ChickenBridge.scm",(void*)f_22499},
{"f_22474ChickenBridge.scm",(void*)f_22474},
{"f_22465ChickenBridge.scm",(void*)f_22465},
{"f_22403ChickenBridge.scm",(void*)f_22403},
{"f_22439ChickenBridge.scm",(void*)f_22439},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22042ChickenBridge.scm",(void*)f_22042},
{"f_22049ChickenBridge.scm",(void*)f_22049},
{"f_22283ChickenBridge.scm",(void*)f_22283},
{"f_22293ChickenBridge.scm",(void*)f_22293},
{"f_22304ChickenBridge.scm",(void*)f_22304},
{"f_22316ChickenBridge.scm",(void*)f_22316},
{"f_22319ChickenBridge.scm",(void*)f_22319},
{"f_22307ChickenBridge.scm",(void*)f_22307},
{"f_22055ChickenBridge.scm",(void*)f_22055},
{"f_22281ChickenBridge.scm",(void*)f_22281},
{"f_22277ChickenBridge.scm",(void*)f_22277},
{"f_22223ChickenBridge.scm",(void*)f_22223},
{"f_22188ChickenBridge.scm",(void*)f_22188},
{"f_22204ChickenBridge.scm",(void*)f_22204},
{"f_22159ChickenBridge.scm",(void*)f_22159},
{"f_22083ChickenBridge.scm",(void*)f_22083},
{"f_22086ChickenBridge.scm",(void*)f_22086},
{"f_22150ChickenBridge.scm",(void*)f_22150},
{"f_22146ChickenBridge.scm",(void*)f_22146},
{"f_22066ChickenBridge.scm",(void*)f_22066},
{"f_22077ChickenBridge.scm",(void*)f_22077},
{"f_22073ChickenBridge.scm",(void*)f_22073},
{"f_21995ChickenBridge.scm",(void*)f_21995},
{"f_22028ChickenBridge.scm",(void*)f_22028},
{"f_22010ChickenBridge.scm",(void*)f_22010},
{"f_22022ChickenBridge.scm",(void*)f_22022},
{"f_21613ChickenBridge.scm",(void*)f_21613},
{"f_21822ChickenBridge.scm",(void*)f_21822},
{"f_21832ChickenBridge.scm",(void*)f_21832},
{"f_21843ChickenBridge.scm",(void*)f_21843},
{"f_21963ChickenBridge.scm",(void*)f_21963},
{"f_21942ChickenBridge.scm",(void*)f_21942},
{"f_21921ChickenBridge.scm",(void*)f_21921},
{"f_21900ChickenBridge.scm",(void*)f_21900},
{"f_21879ChickenBridge.scm",(void*)f_21879},
{"f_21858ChickenBridge.scm",(void*)f_21858},
{"f_21846ChickenBridge.scm",(void*)f_21846},
{"f_21623ChickenBridge.scm",(void*)f_21623},
{"f_21626ChickenBridge.scm",(void*)f_21626},
{"f_21789ChickenBridge.scm",(void*)f_21789},
{"f_21629ChickenBridge.scm",(void*)f_21629},
{"f_21780ChickenBridge.scm",(void*)f_21780},
{"f_21760ChickenBridge.scm",(void*)f_21760},
{"f_21632ChickenBridge.scm",(void*)f_21632},
{"f_21725ChickenBridge.scm",(void*)f_21725},
{"f_21742ChickenBridge.scm",(void*)f_21742},
{"f_21635ChickenBridge.scm",(void*)f_21635},
{"f_21674ChickenBridge.scm",(void*)f_21674},
{"f_21708ChickenBridge.scm",(void*)f_21708},
{"f_21692ChickenBridge.scm",(void*)f_21692},
{"f_21677ChickenBridge.scm",(void*)f_21677},
{"f_21642ChickenBridge.scm",(void*)f_21642},
{"f_21653ChickenBridge.scm",(void*)f_21653},
{"f_21657ChickenBridge.scm",(void*)f_21657},
{"f_21649ChickenBridge.scm",(void*)f_21649},
{"f_21531ChickenBridge.scm",(void*)f_21531},
{"f_21535ChickenBridge.scm",(void*)f_21535},
{"f_21553ChickenBridge.scm",(void*)f_21553},
{"f_21371ChickenBridge.scm",(void*)f_21371},
{"f_21379ChickenBridge.scm",(void*)f_21379},
{"f_21389ChickenBridge.scm",(void*)f_21389},
{"f_21427ChickenBridge.scm",(void*)f_21427},
{"f_21430ChickenBridge.scm",(void*)f_21430},
{"f_21433ChickenBridge.scm",(void*)f_21433},
{"f_21508ChickenBridge.scm",(void*)f_21508},
{"f_21518ChickenBridge.scm",(void*)f_21518},
{"f_21436ChickenBridge.scm",(void*)f_21436},
{"f_21439ChickenBridge.scm",(void*)f_21439},
{"f_21442ChickenBridge.scm",(void*)f_21442},
{"f_21462ChickenBridge.scm",(void*)f_21462},
{"f_21472ChickenBridge.scm",(void*)f_21472},
{"f_21475ChickenBridge.scm",(void*)f_21475},
{"f_21478ChickenBridge.scm",(void*)f_21478},
{"f_21445ChickenBridge.scm",(void*)f_21445},
{"f_21448ChickenBridge.scm",(void*)f_21448},
{"f_21365ChickenBridge.scm",(void*)f_21365},
{"f_21359ChickenBridge.scm",(void*)f_21359},
{"f_21353ChickenBridge.scm",(void*)f_21353},
{"f_21282ChickenBridge.scm",(void*)f_21282},
{"f_21323ChickenBridge.scm",(void*)f_21323},
{"f_21327ChickenBridge.scm",(void*)f_21327},
{"f_21331ChickenBridge.scm",(void*)f_21331},
{"f_21335ChickenBridge.scm",(void*)f_21335},
{"f_21339ChickenBridge.scm",(void*)f_21339},
{"f_21343ChickenBridge.scm",(void*)f_21343},
{"f_21347ChickenBridge.scm",(void*)f_21347},
{"f_21351ChickenBridge.scm",(void*)f_21351},
{"f_21284ChickenBridge.scm",(void*)f_21284},
{"f_21290ChickenBridge.scm",(void*)f_21290},
{"f_21312ChickenBridge.scm",(void*)f_21312},
{"f_21301ChickenBridge.scm",(void*)f_21301},
{"f_21131ChickenBridge.scm",(void*)f_21131},
{"f_21146ChickenBridge.scm",(void*)f_21146},
{"f_21159ChickenBridge.scm",(void*)f_21159},
{"f_21119ChickenBridge.scm",(void*)f_21119},
{"f_21107ChickenBridge.scm",(void*)f_21107},
{"f_21095ChickenBridge.scm",(void*)f_21095},
{"f_21089ChickenBridge.scm",(void*)f_21089},
{"f_21083ChickenBridge.scm",(void*)f_21083},
{"f_21071ChickenBridge.scm",(void*)f_21071},
{"f_21059ChickenBridge.scm",(void*)f_21059},
{"f_21047ChickenBridge.scm",(void*)f_21047},
{"f_21035ChickenBridge.scm",(void*)f_21035},
{"f_21029ChickenBridge.scm",(void*)f_21029},
{"f_20993ChickenBridge.scm",(void*)f_20993},
{"f_20987ChickenBridge.scm",(void*)f_20987},
{"f_20940ChickenBridge.scm",(void*)f_20940},
{"f_20944ChickenBridge.scm",(void*)f_20944},
{"f_20960ChickenBridge.scm",(void*)f_20960},
{"f_20969ChickenBridge.scm",(void*)f_20969},
{"f_20947ChickenBridge.scm",(void*)f_20947},
{"f_20931ChickenBridge.scm",(void*)f_20931},
{"f_20935ChickenBridge.scm",(void*)f_20935},
{"f_20778ChickenBridge.scm",(void*)f_20778},
{"f_20905ChickenBridge.scm",(void*)f_20905},
{"f_20918ChickenBridge.scm",(void*)f_20918},
{"f_20900ChickenBridge.scm",(void*)f_20900},
{"f_20781ChickenBridge.scm",(void*)f_20781},
{"f_20897ChickenBridge.scm",(void*)f_20897},
{"f_20881ChickenBridge.scm",(void*)f_20881},
{"f_20809ChickenBridge.scm",(void*)f_20809},
{"f_20817ChickenBridge.scm",(void*)f_20817},
{"f_20827ChickenBridge.scm",(void*)f_20827},
{"f_20830ChickenBridge.scm",(void*)f_20830},
{"f_20812ChickenBridge.scm",(void*)f_20812},
{"f_20601ChickenBridge.scm",(void*)f_20601},
{"f_20605ChickenBridge.scm",(void*)f_20605},
{"f_20610ChickenBridge.scm",(void*)f_20610},
{"f_20613ChickenBridge.scm",(void*)f_20613},
{"f_18425ChickenBridge.scm",(void*)f_18425},
{"f_18438ChickenBridge.scm",(void*)f_18438},
{"f_18445ChickenBridge.scm",(void*)f_18445},
{"f_18452ChickenBridge.scm",(void*)f_18452},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_20617ChickenBridge.scm",(void*)f_20617},
{"f_20654ChickenBridge.scm",(void*)f_20654},
{"f_20747ChickenBridge.scm",(void*)f_20747},
{"f_20757ChickenBridge.scm",(void*)f_20757},
{"f_20660ChickenBridge.scm",(void*)f_20660},
{"f_20717ChickenBridge.scm",(void*)f_20717},
{"f_20727ChickenBridge.scm",(void*)f_20727},
{"f_20668ChickenBridge.scm",(void*)f_20668},
{"f_20682ChickenBridge.scm",(void*)f_20682},
{"f_20686ChickenBridge.scm",(void*)f_20686},
{"f_20690ChickenBridge.scm",(void*)f_20690},
{"f_20694ChickenBridge.scm",(void*)f_20694},
{"f_20701ChickenBridge.scm",(void*)f_20701},
{"f_20678ChickenBridge.scm",(void*)f_20678},
{"f_20671ChickenBridge.scm",(void*)f_20671},
{"f_20620ChickenBridge.scm",(void*)f_20620},
{"f_19552ChickenBridge.scm",(void*)f_19552},
{"f_19565ChickenBridge.scm",(void*)f_19565},
{"f_19615ChickenBridge.scm",(void*)f_19615},
{"f_19712ChickenBridge.scm",(void*)f_19712},
{"f_19780ChickenBridge.scm",(void*)f_19780},
{"f_20037ChickenBridge.scm",(void*)f_20037},
{"f_19787ChickenBridge.scm",(void*)f_19787},
{"f_20025ChickenBridge.scm",(void*)f_20025},
{"f_19976ChickenBridge.scm",(void*)f_19976},
{"f_19982ChickenBridge.scm",(void*)f_19982},
{"f_20006ChickenBridge.scm",(void*)f_20006},
{"f_20002ChickenBridge.scm",(void*)f_20002},
{"f_19990ChickenBridge.scm",(void*)f_19990},
{"f_19790ChickenBridge.scm",(void*)f_19790},
{"f_19952ChickenBridge.scm",(void*)f_19952},
{"f_19956ChickenBridge.scm",(void*)f_19956},
{"f_19793ChickenBridge.scm",(void*)f_19793},
{"f_19929ChickenBridge.scm",(void*)f_19929},
{"f_19933ChickenBridge.scm",(void*)f_19933},
{"f_19796ChickenBridge.scm",(void*)f_19796},
{"f_19906ChickenBridge.scm",(void*)f_19906},
{"f_19910ChickenBridge.scm",(void*)f_19910},
{"f_19799ChickenBridge.scm",(void*)f_19799},
{"f_19831ChickenBridge.scm",(void*)f_19831},
{"f_19849ChickenBridge.scm",(void*)f_19849},
{"f_19867ChickenBridge.scm",(void*)f_19867},
{"f_19885ChickenBridge.scm",(void*)f_19885},
{"f_19802ChickenBridge.scm",(void*)f_19802},
{"f_19806ChickenBridge.scm",(void*)f_19806},
{"f_19716ChickenBridge.scm",(void*)f_19716},
{"f_19720ChickenBridge.scm",(void*)f_19720},
{"f_19724ChickenBridge.scm",(void*)f_19724},
{"f_19619ChickenBridge.scm",(void*)f_19619},
{"f_19623ChickenBridge.scm",(void*)f_19623},
{"f_19627ChickenBridge.scm",(void*)f_19627},
{"f_19646ChickenBridge.scm",(void*)f_19646},
{"f_19650ChickenBridge.scm",(void*)f_19650},
{"f_19630ChickenBridge.scm",(void*)f_19630},
{"f_19634ChickenBridge.scm",(void*)f_19634},
{"f_19569ChickenBridge.scm",(void*)f_19569},
{"f_19573ChickenBridge.scm",(void*)f_19573},
{"f_19577ChickenBridge.scm",(void*)f_19577},
{"f_19559ChickenBridge.scm",(void*)f_19559},
{"f_19374ChickenBridge.scm",(void*)f_19374},
{"f_19386ChickenBridge.scm",(void*)f_19386},
{"f_19405ChickenBridge.scm",(void*)f_19405},
{"f_19423ChickenBridge.scm",(void*)f_19423},
{"f_19455ChickenBridge.scm",(void*)f_19455},
{"f_19458ChickenBridge.scm",(void*)f_19458},
{"f_19451ChickenBridge.scm",(void*)f_19451},
{"f_19437ChickenBridge.scm",(void*)f_19437},
{"f_19408ChickenBridge.scm",(void*)f_19408},
{"f_19353ChickenBridge.scm",(void*)f_19353},
{"f_19360ChickenBridge.scm",(void*)f_19360},
{"f_19363ChickenBridge.scm",(void*)f_19363},
{"f_19369ChickenBridge.scm",(void*)f_19369},
{"f_19288ChickenBridge.scm",(void*)f_19288},
{"f_19297ChickenBridge.scm",(void*)f_19297},
{"f_19320ChickenBridge.scm",(void*)f_19320},
{"f_19310ChickenBridge.scm",(void*)f_19310},
{"f_19244ChickenBridge.scm",(void*)f_19244},
{"f_19232ChickenBridge.scm",(void*)f_19232},
{"f_19130ChickenBridge.scm",(void*)f_19130},
{"f_19082ChickenBridge.scm",(void*)f_19082},
{"f_18463ChickenBridge.scm",(void*)f_18463},
{"f_18467ChickenBridge.scm",(void*)f_18467},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18896ChickenBridge.scm",(void*)f_18896},
{"f_18892ChickenBridge.scm",(void*)f_18892},
{"f_18888ChickenBridge.scm",(void*)f_18888},
{"f_18473ChickenBridge.scm",(void*)f_18473},
{"f_18596ChickenBridge.scm",(void*)f_18596},
{"f_17829ChickenBridge.scm",(void*)f_17829},
{"f_18602ChickenBridge.scm",(void*)f_18602},
{"f_17845ChickenBridge.scm",(void*)f_17845},
{"f_18690ChickenBridge.scm",(void*)f_18690},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_17861ChickenBridge.scm",(void*)f_17861},
{"f_18763ChickenBridge.scm",(void*)f_18763},
{"f_17893ChickenBridge.scm",(void*)f_17893},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_18867ChickenBridge.scm",(void*)f_18867},
{"f_18861ChickenBridge.scm",(void*)f_18861},
{"f_18850ChickenBridge.scm",(void*)f_18850},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18802ChickenBridge.scm",(void*)f_18802},
{"f_18828ChickenBridge.scm",(void*)f_18828},
{"f_18822ChickenBridge.scm",(void*)f_18822},
{"f_18805ChickenBridge.scm",(void*)f_18805},
{"f_18815ChickenBridge.scm",(void*)f_18815},
{"f_18808ChickenBridge.scm",(void*)f_18808},
{"f_18769ChickenBridge.scm",(void*)f_18769},
{"f_18778ChickenBridge.scm",(void*)f_18778},
{"f_18772ChickenBridge.scm",(void*)f_18772},
{"f_18696ChickenBridge.scm",(void*)f_18696},
{"f_18714ChickenBridge.scm",(void*)f_18714},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_18733ChickenBridge.scm",(void*)f_18733},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_18724ChickenBridge.scm",(void*)f_18724},
{"f_18699ChickenBridge.scm",(void*)f_18699},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18633ChickenBridge.scm",(void*)f_18633},
{"f_18680ChickenBridge.scm",(void*)f_18680},
{"f_18666ChickenBridge.scm",(void*)f_18666},
{"f_18674ChickenBridge.scm",(void*)f_18674},
{"f_18646ChickenBridge.scm",(void*)f_18646},
{"f_18649ChickenBridge.scm",(void*)f_18649},
{"f_18614ChickenBridge.scm",(void*)f_18614},
{"f_18631ChickenBridge.scm",(void*)f_18631},
{"f_18617ChickenBridge.scm",(void*)f_18617},
{"f_18482ChickenBridge.scm",(void*)f_18482},
{"f_18488ChickenBridge.scm",(void*)f_18488},
{"f_18546ChickenBridge.scm",(void*)f_18546},
{"f_18549ChickenBridge.scm",(void*)f_18549},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18581ChickenBridge.scm",(void*)f_18581},
{"f_18560ChickenBridge.scm",(void*)f_18560},
{"f_18494ChickenBridge.scm",(void*)f_18494},
{"f_18504ChickenBridge.scm",(void*)f_18504},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18510ChickenBridge.scm",(void*)f_18510},
{"f_18525ChickenBridge.scm",(void*)f_18525},
{"f_18529ChickenBridge.scm",(void*)f_18529},
{"f_18533ChickenBridge.scm",(void*)f_18533},
{"f_18517ChickenBridge.scm",(void*)f_18517},
{"f_18359ChickenBridge.scm",(void*)f_18359},
{"f_18361ChickenBridge.scm",(void*)f_18361},
{"f_18409ChickenBridge.scm",(void*)f_18409},
{"f_18365ChickenBridge.scm",(void*)f_18365},
{"f_18368ChickenBridge.scm",(void*)f_18368},
{"f_18373ChickenBridge.scm",(void*)f_18373},
{"f_18394ChickenBridge.scm",(void*)f_18394},
{"f_18351ChickenBridge.scm",(void*)f_18351},
{"f_18353ChickenBridge.scm",(void*)f_18353},
{"f_18143ChickenBridge.scm",(void*)f_18143},
{"f_18160ChickenBridge.scm",(void*)f_18160},
{"f_18164ChickenBridge.scm",(void*)f_18164},
{"f_18110ChickenBridge.scm",(void*)f_18110},
{"f_18117ChickenBridge.scm",(void*)f_18117},
{"f_18061ChickenBridge.scm",(void*)f_18061},
{"f_18068ChickenBridge.scm",(void*)f_18068},
{"f_18126ChickenBridge.scm",(void*)f_18126},
{"f_18349ChickenBridge.scm",(void*)f_18349},
{"f_18326ChickenBridge.scm",(void*)f_18326},
{"f_18342ChickenBridge.scm",(void*)f_18342},
{"f_18188ChickenBridge.scm",(void*)f_18188},
{"f_18191ChickenBridge.scm",(void*)f_18191},
{"f_18215ChickenBridge.scm",(void*)f_18215},
{"f_18272ChickenBridge.scm",(void*)f_18272},
{"f_18278ChickenBridge.scm",(void*)f_18278},
{"f_18287ChickenBridge.scm",(void*)f_18287},
{"f_18296ChickenBridge.scm",(void*)f_18296},
{"f_18305ChickenBridge.scm",(void*)f_18305},
{"f_18314ChickenBridge.scm",(void*)f_18314},
{"f_18266ChickenBridge.scm",(void*)f_18266},
{"f_18221ChickenBridge.scm",(void*)f_18221},
{"f_18227ChickenBridge.scm",(void*)f_18227},
{"f_18233ChickenBridge.scm",(void*)f_18233},
{"f_18239ChickenBridge.scm",(void*)f_18239},
{"f_18245ChickenBridge.scm",(void*)f_18245},
{"f_18251ChickenBridge.scm",(void*)f_18251},
{"f_18092ChickenBridge.scm",(void*)f_18092},
{"f_18099ChickenBridge.scm",(void*)f_18099},
{"f_18082ChickenBridge.scm",(void*)f_18082},
{"f_18070ChickenBridge.scm",(void*)f_18070},
{"f_18038ChickenBridge.scm",(void*)f_18038},
{"f_18045ChickenBridge.scm",(void*)f_18045},
{"f_18052ChickenBridge.scm",(void*)f_18052},
{"f_18022ChickenBridge.scm",(void*)f_18022},
{"f_18029ChickenBridge.scm",(void*)f_18029},
{"f_18036ChickenBridge.scm",(void*)f_18036},
{"f_18010ChickenBridge.scm",(void*)f_18010},
{"f_17992ChickenBridge.scm",(void*)f_17992},
{"f_17974ChickenBridge.scm",(void*)f_17974},
{"f_17959ChickenBridge.scm",(void*)f_17959},
{"f_17953ChickenBridge.scm",(void*)f_17953},
{"f_17941ChickenBridge.scm",(void*)f_17941},
{"f_17923ChickenBridge.scm",(void*)f_17923},
{"f_17902ChickenBridge.scm",(void*)f_17902},
{"f_17870ChickenBridge.scm",(void*)f_17870},
{"f_17877ChickenBridge.scm",(void*)f_17877},
{"f_17812ChickenBridge.scm",(void*)f_17812},
{"f_17820ChickenBridge.scm",(void*)f_17820},
{"f_17802ChickenBridge.scm",(void*)f_17802},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17796ChickenBridge.scm",(void*)f_17796},
{"f_17784ChickenBridge.scm",(void*)f_17784},
{"f_17781ChickenBridge.scm",(void*)f_17781},
{"f_17760ChickenBridge.scm",(void*)f_17760},
{"f_17673ChickenBridge.scm",(void*)f_17673},
{"f_17652ChickenBridge.scm",(void*)f_17652},
{"f_17642ChickenBridge.scm",(void*)f_17642},
{"f_17630ChickenBridge.scm",(void*)f_17630},
{"f_17601ChickenBridge.scm",(void*)f_17601},
{"f_17589ChickenBridge.scm",(void*)f_17589},
{"f_17571ChickenBridge.scm",(void*)f_17571},
{"f_17553ChickenBridge.scm",(void*)f_17553},
{"f_17532ChickenBridge.scm",(void*)f_17532},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_17514ChickenBridge.scm",(void*)f_17514},
{"f_16708ChickenBridge.scm",(void*)f_16708},
{"f_17422ChickenBridge.scm",(void*)f_17422},
{"f_17445ChickenBridge.scm",(void*)f_17445},
{"f_17498ChickenBridge.scm",(void*)f_17498},
{"f_17480ChickenBridge.scm",(void*)f_17480},
{"f_17473ChickenBridge.scm",(void*)f_17473},
{"f_17455ChickenBridge.scm",(void*)f_17455},
{"f_17432ChickenBridge.scm",(void*)f_17432},
{"f_16902ChickenBridge.scm",(void*)f_16902},
{"f_17384ChickenBridge.scm",(void*)f_17384},
{"f_17406ChickenBridge.scm",(void*)f_17406},
{"f_17390ChickenBridge.scm",(void*)f_17390},
{"f_17398ChickenBridge.scm",(void*)f_17398},
{"f_17402ChickenBridge.scm",(void*)f_17402},
{"f_17388ChickenBridge.scm",(void*)f_17388},
{"f_17378ChickenBridge.scm",(void*)f_17378},
{"f_16905ChickenBridge.scm",(void*)f_16905},
{"f_17255ChickenBridge.scm",(void*)f_17255},
{"f_17279ChickenBridge.scm",(void*)f_17279},
{"f_17341ChickenBridge.scm",(void*)f_17341},
{"f_17282ChickenBridge.scm",(void*)f_17282},
{"f_17298ChickenBridge.scm",(void*)f_17298},
{"f_17323ChickenBridge.scm",(void*)f_17323},
{"f_17289ChickenBridge.scm",(void*)f_17289},
{"f_17266ChickenBridge.scm",(void*)f_17266},
{"f_16908ChickenBridge.scm",(void*)f_16908},
{"f_17241ChickenBridge.scm",(void*)f_17241},
{"f_16912ChickenBridge.scm",(void*)f_16912},
{"f_16963ChickenBridge.scm",(void*)f_16963},
{"f_16966ChickenBridge.scm",(void*)f_16966},
{"f_17222ChickenBridge.scm",(void*)f_17222},
{"f_17232ChickenBridge.scm",(void*)f_17232},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_17160ChickenBridge.scm",(void*)f_17160},
{"f_17170ChickenBridge.scm",(void*)f_17170},
{"f_17173ChickenBridge.scm",(void*)f_17173},
{"f_17193ChickenBridge.scm",(void*)f_17193},
{"f_17195ChickenBridge.scm",(void*)f_17195},
{"f_17205ChickenBridge.scm",(void*)f_17205},
{"f_17179ChickenBridge.scm",(void*)f_17179},
{"f_17182ChickenBridge.scm",(void*)f_17182},
{"f_16972ChickenBridge.scm",(void*)f_16972},
{"f_16980ChickenBridge.scm",(void*)f_16980},
{"f_16993ChickenBridge.scm",(void*)f_16993},
{"f_16860ChickenBridge.scm",(void*)f_16860},
{"f_16869ChickenBridge.scm",(void*)f_16869},
{"f_16891ChickenBridge.scm",(void*)f_16891},
{"f_16880ChickenBridge.scm",(void*)f_16880},
{"f_16996ChickenBridge.scm",(void*)f_16996},
{"f_17131ChickenBridge.scm",(void*)f_17131},
{"f_17133ChickenBridge.scm",(void*)f_17133},
{"f_17143ChickenBridge.scm",(void*)f_17143},
{"f_17002ChickenBridge.scm",(void*)f_17002},
{"f_17104ChickenBridge.scm",(void*)f_17104},
{"f_17106ChickenBridge.scm",(void*)f_17106},
{"f_17116ChickenBridge.scm",(void*)f_17116},
{"f_17005ChickenBridge.scm",(void*)f_17005},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_17043ChickenBridge.scm",(void*)f_17043},
{"f_17049ChickenBridge.scm",(void*)f_17049},
{"f_17055ChickenBridge.scm",(void*)f_17055},
{"f_17065ChickenBridge.scm",(void*)f_17065},
{"f_17067ChickenBridge.scm",(void*)f_17067},
{"f_17077ChickenBridge.scm",(void*)f_17077},
{"f_17058ChickenBridge.scm",(void*)f_17058},
{"f_17030ChickenBridge.scm",(void*)f_17030},
{"f_17008ChickenBridge.scm",(void*)f_17008},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_16915ChickenBridge.scm",(void*)f_16915},
{"f_16945ChickenBridge.scm",(void*)f_16945},
{"f_16943ChickenBridge.scm",(void*)f_16943},
{"f_16918ChickenBridge.scm",(void*)f_16918},
{"f_16792ChickenBridge.scm",(void*)f_16792},
{"f_16840ChickenBridge.scm",(void*)f_16840},
{"f_16802ChickenBridge.scm",(void*)f_16802},
{"f_16830ChickenBridge.scm",(void*)f_16830},
{"f_16805ChickenBridge.scm",(void*)f_16805},
{"f_16710ChickenBridge.scm",(void*)f_16710},
{"f_16782ChickenBridge.scm",(void*)f_16782},
{"f_16714ChickenBridge.scm",(void*)f_16714},
{"f_16732ChickenBridge.scm",(void*)f_16732},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_16598ChickenBridge.scm",(void*)f_16598},
{"f_16602ChickenBridge.scm",(void*)f_16602},
{"f_16631ChickenBridge.scm",(void*)f_16631},
{"f_16636ChickenBridge.scm",(void*)f_16636},
{"f_16661ChickenBridge.scm",(void*)f_16661},
{"f_16646ChickenBridge.scm",(void*)f_16646},
{"f_16080ChickenBridge.scm",(void*)f_16080},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_16355ChickenBridge.scm",(void*)f_16355},
{"f_16360ChickenBridge.scm",(void*)f_16360},
{"f_16566ChickenBridge.scm",(void*)f_16566},
{"f_16581ChickenBridge.scm",(void*)f_16581},
{"f_16573ChickenBridge.scm",(void*)f_16573},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16541ChickenBridge.scm",(void*)f_16541},
{"f_16502ChickenBridge.scm",(void*)f_16502},
{"f_16506ChickenBridge.scm",(void*)f_16506},
{"f_16364ChickenBridge.scm",(void*)f_16364},
{"f_16466ChickenBridge.scm",(void*)f_16466},
{"f_16481ChickenBridge.scm",(void*)f_16481},
{"f_16473ChickenBridge.scm",(void*)f_16473},
{"f_16437ChickenBridge.scm",(void*)f_16437},
{"f_16441ChickenBridge.scm",(void*)f_16441},
{"f_16402ChickenBridge.scm",(void*)f_16402},
{"f_16406ChickenBridge.scm",(void*)f_16406},
{"f_16367ChickenBridge.scm",(void*)f_16367},
{"f_16370ChickenBridge.scm",(void*)f_16370},
{"f_16373ChickenBridge.scm",(void*)f_16373},
{"f_16342ChickenBridge.scm",(void*)f_16342},
{"f_16084ChickenBridge.scm",(void*)f_16084},
{"f_16311ChickenBridge.scm",(void*)f_16311},
{"f_16326ChickenBridge.scm",(void*)f_16326},
{"f_16318ChickenBridge.scm",(void*)f_16318},
{"f_16282ChickenBridge.scm",(void*)f_16282},
{"f_16286ChickenBridge.scm",(void*)f_16286},
{"f_16247ChickenBridge.scm",(void*)f_16247},
{"f_16251ChickenBridge.scm",(void*)f_16251},
{"f_16087ChickenBridge.scm",(void*)f_16087},
{"f_16211ChickenBridge.scm",(void*)f_16211},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_16218ChickenBridge.scm",(void*)f_16218},
{"f_16182ChickenBridge.scm",(void*)f_16182},
{"f_16186ChickenBridge.scm",(void*)f_16186},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16151ChickenBridge.scm",(void*)f_16151},
{"f_16090ChickenBridge.scm",(void*)f_16090},
{"f_16093ChickenBridge.scm",(void*)f_16093},
{"f_16096ChickenBridge.scm",(void*)f_16096},
{"f_16108ChickenBridge.scm",(void*)f_16108},
{"f_16126ChickenBridge.scm",(void*)f_16126},
{"f_16114ChickenBridge.scm",(void*)f_16114},
{"f_16102ChickenBridge.scm",(void*)f_16102},
{"f_16017ChickenBridge.scm",(void*)f_16017},
{"f_15677ChickenBridge.scm",(void*)f_15677},
{"f_15859ChickenBridge.scm",(void*)f_15859},
{"f_15863ChickenBridge.scm",(void*)f_15863},
{"f_15865ChickenBridge.scm",(void*)f_15865},
{"f_15790ChickenBridge.scm",(void*)f_15790},
{"f_15800ChickenBridge.scm",(void*)f_15800},
{"f_15807ChickenBridge.scm",(void*)f_15807},
{"f_15875ChickenBridge.scm",(void*)f_15875},
{"f_15878ChickenBridge.scm",(void*)f_15878},
{"f_15882ChickenBridge.scm",(void*)f_15882},
{"f_15902ChickenBridge.scm",(void*)f_15902},
{"f_15918ChickenBridge.scm",(void*)f_15918},
{"f_15885ChickenBridge.scm",(void*)f_15885},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15692ChickenBridge.scm",(void*)f_15692},
{"f_15728ChickenBridge.scm",(void*)f_15728},
{"f_15748ChickenBridge.scm",(void*)f_15748},
{"f_15753ChickenBridge.scm",(void*)f_15753},
{"f_15190ChickenBridge.scm",(void*)f_15190},
{"f_15117ChickenBridge.scm",(void*)f_15117},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14968ChickenBridge.scm",(void*)f_14968},
{"f_15053ChickenBridge.scm",(void*)f_15053},
{"f_14980ChickenBridge.scm",(void*)f_14980},
{"f_14996ChickenBridge.scm",(void*)f_14996},
{"f_15000ChickenBridge.scm",(void*)f_15000},
{"f_15003ChickenBridge.scm",(void*)f_15003},
{"f_14983ChickenBridge.scm",(void*)f_14983},
{"f_14994ChickenBridge.scm",(void*)f_14994},
{"f_15134ChickenBridge.scm",(void*)f_15134},
{"f_15671ChickenBridge.scm",(void*)f_15671},
{"f_15194ChickenBridge.scm",(void*)f_15194},
{"f_15640ChickenBridge.scm",(void*)f_15640},
{"f_15655ChickenBridge.scm",(void*)f_15655},
{"f_15647ChickenBridge.scm",(void*)f_15647},
{"f_15611ChickenBridge.scm",(void*)f_15611},
{"f_15615ChickenBridge.scm",(void*)f_15615},
{"f_15576ChickenBridge.scm",(void*)f_15576},
{"f_15580ChickenBridge.scm",(void*)f_15580},
{"f_15541ChickenBridge.scm",(void*)f_15541},
{"f_15545ChickenBridge.scm",(void*)f_15545},
{"f_15197ChickenBridge.scm",(void*)f_15197},
{"f_15505ChickenBridge.scm",(void*)f_15505},
{"f_15520ChickenBridge.scm",(void*)f_15520},
{"f_15512ChickenBridge.scm",(void*)f_15512},
{"f_15476ChickenBridge.scm",(void*)f_15476},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15441ChickenBridge.scm",(void*)f_15441},
{"f_15445ChickenBridge.scm",(void*)f_15445},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15200ChickenBridge.scm",(void*)f_15200},
{"f_15370ChickenBridge.scm",(void*)f_15370},
{"f_15385ChickenBridge.scm",(void*)f_15385},
{"f_15377ChickenBridge.scm",(void*)f_15377},
{"f_15341ChickenBridge.scm",(void*)f_15341},
{"f_15345ChickenBridge.scm",(void*)f_15345},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15310ChickenBridge.scm",(void*)f_15310},
{"f_15271ChickenBridge.scm",(void*)f_15271},
{"f_15275ChickenBridge.scm",(void*)f_15275},
{"f_15203ChickenBridge.scm",(void*)f_15203},
{"f_15206ChickenBridge.scm",(void*)f_15206},
{"f_15209ChickenBridge.scm",(void*)f_15209},
{"f_15242ChickenBridge.scm",(void*)f_15242},
{"f_15250ChickenBridge.scm",(void*)f_15250},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15228ChickenBridge.scm",(void*)f_15228},
{"f_15218ChickenBridge.scm",(void*)f_15218},
{"f_15221ChickenBridge.scm",(void*)f_15221},
{"f_14757ChickenBridge.scm",(void*)f_14757},
{"f_14761ChickenBridge.scm",(void*)f_14761},
{"f_14764ChickenBridge.scm",(void*)f_14764},
{"f_14767ChickenBridge.scm",(void*)f_14767},
{"f_14936ChickenBridge.scm",(void*)f_14936},
{"f_14949ChickenBridge.scm",(void*)f_14949},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_14773ChickenBridge.scm",(void*)f_14773},
{"f_14929ChickenBridge.scm",(void*)f_14929},
{"f_14910ChickenBridge.scm",(void*)f_14910},
{"f_14917ChickenBridge.scm",(void*)f_14917},
{"f_14921ChickenBridge.scm",(void*)f_14921},
{"f_14779ChickenBridge.scm",(void*)f_14779},
{"f_14785ChickenBridge.scm",(void*)f_14785},
{"f_14869ChickenBridge.scm",(void*)f_14869},
{"f_14871ChickenBridge.scm",(void*)f_14871},
{"f_14893ChickenBridge.scm",(void*)f_14893},
{"f_14900ChickenBridge.scm",(void*)f_14900},
{"f_14904ChickenBridge.scm",(void*)f_14904},
{"f_14890ChickenBridge.scm",(void*)f_14890},
{"f_14886ChickenBridge.scm",(void*)f_14886},
{"f_14827ChickenBridge.scm",(void*)f_14827},
{"f_14844ChickenBridge.scm",(void*)f_14844},
{"f_14854ChickenBridge.scm",(void*)f_14854},
{"f_14830ChickenBridge.scm",(void*)f_14830},
{"f_14789ChickenBridge.scm",(void*)f_14789},
{"f_14797ChickenBridge.scm",(void*)f_14797},
{"f_14799ChickenBridge.scm",(void*)f_14799},
{"f_14820ChickenBridge.scm",(void*)f_14820},
{"f_14645ChickenBridge.scm",(void*)f_14645},
{"f_14755ChickenBridge.scm",(void*)f_14755},
{"f_14714ChickenBridge.scm",(void*)f_14714},
{"f_14747ChickenBridge.scm",(void*)f_14747},
{"f_14743ChickenBridge.scm",(void*)f_14743},
{"f_14728ChickenBridge.scm",(void*)f_14728},
{"f_14652ChickenBridge.scm",(void*)f_14652},
{"f_14660ChickenBridge.scm",(void*)f_14660},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14693ChickenBridge.scm",(void*)f_14693},
{"f_14677ChickenBridge.scm",(void*)f_14677},
{"f_13878ChickenBridge.scm",(void*)f_13878},
{"f_14195ChickenBridge.scm",(void*)f_14195},
{"f_14202ChickenBridge.scm",(void*)f_14202},
{"f_14607ChickenBridge.scm",(void*)f_14607},
{"f_14622ChickenBridge.scm",(void*)f_14622},
{"f_14614ChickenBridge.scm",(void*)f_14614},
{"f_14578ChickenBridge.scm",(void*)f_14578},
{"f_14582ChickenBridge.scm",(void*)f_14582},
{"f_14543ChickenBridge.scm",(void*)f_14543},
{"f_14547ChickenBridge.scm",(void*)f_14547},
{"f_14508ChickenBridge.scm",(void*)f_14508},
{"f_14512ChickenBridge.scm",(void*)f_14512},
{"f_14205ChickenBridge.scm",(void*)f_14205},
{"f_14472ChickenBridge.scm",(void*)f_14472},
{"f_14487ChickenBridge.scm",(void*)f_14487},
{"f_14479ChickenBridge.scm",(void*)f_14479},
{"f_14443ChickenBridge.scm",(void*)f_14443},
{"f_14447ChickenBridge.scm",(void*)f_14447},
{"f_14408ChickenBridge.scm",(void*)f_14408},
{"f_14412ChickenBridge.scm",(void*)f_14412},
{"f_14373ChickenBridge.scm",(void*)f_14373},
{"f_14377ChickenBridge.scm",(void*)f_14377},
{"f_14208ChickenBridge.scm",(void*)f_14208},
{"f_14337ChickenBridge.scm",(void*)f_14337},
{"f_14352ChickenBridge.scm",(void*)f_14352},
{"f_14344ChickenBridge.scm",(void*)f_14344},
{"f_14308ChickenBridge.scm",(void*)f_14308},
{"f_14312ChickenBridge.scm",(void*)f_14312},
{"f_14273ChickenBridge.scm",(void*)f_14273},
{"f_14277ChickenBridge.scm",(void*)f_14277},
{"f_14238ChickenBridge.scm",(void*)f_14238},
{"f_14242ChickenBridge.scm",(void*)f_14242},
{"f_14211ChickenBridge.scm",(void*)f_14211},
{"f_14214ChickenBridge.scm",(void*)f_14214},
{"f_13882ChickenBridge.scm",(void*)f_13882},
{"f_13885ChickenBridge.scm",(void*)f_13885},
{"f_14159ChickenBridge.scm",(void*)f_14159},
{"f_14163ChickenBridge.scm",(void*)f_14163},
{"f_14166ChickenBridge.scm",(void*)f_14166},
{"f_14169ChickenBridge.scm",(void*)f_14169},
{"f_14172ChickenBridge.scm",(void*)f_14172},
{"f_14185ChickenBridge.scm",(void*)f_14185},
{"f_14175ChickenBridge.scm",(void*)f_14175},
{"f_13891ChickenBridge.scm",(void*)f_13891},
{"f_13898ChickenBridge.scm",(void*)f_13898},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_14144ChickenBridge.scm",(void*)f_14144},
{"f_14136ChickenBridge.scm",(void*)f_14136},
{"f_14100ChickenBridge.scm",(void*)f_14100},
{"f_14104ChickenBridge.scm",(void*)f_14104},
{"f_14065ChickenBridge.scm",(void*)f_14065},
{"f_14069ChickenBridge.scm",(void*)f_14069},
{"f_13901ChickenBridge.scm",(void*)f_13901},
{"f_14029ChickenBridge.scm",(void*)f_14029},
{"f_14044ChickenBridge.scm",(void*)f_14044},
{"f_14036ChickenBridge.scm",(void*)f_14036},
{"f_14000ChickenBridge.scm",(void*)f_14000},
{"f_14004ChickenBridge.scm",(void*)f_14004},
{"f_13965ChickenBridge.scm",(void*)f_13965},
{"f_13969ChickenBridge.scm",(void*)f_13969},
{"f_13904ChickenBridge.scm",(void*)f_13904},
{"f_13907ChickenBridge.scm",(void*)f_13907},
{"f_13922ChickenBridge.scm",(void*)f_13922},
{"f_13944ChickenBridge.scm",(void*)f_13944},
{"f_13928ChickenBridge.scm",(void*)f_13928},
{"f_13936ChickenBridge.scm",(void*)f_13936},
{"f_13910ChickenBridge.scm",(void*)f_13910},
{"f_13913ChickenBridge.scm",(void*)f_13913},
{"f_13795ChickenBridge.scm",(void*)f_13795},
{"f_13786ChickenBridge.scm",(void*)f_13786},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_13759ChickenBridge.scm",(void*)f_13759},
{"f_13741ChickenBridge.scm",(void*)f_13741},
{"f_13723ChickenBridge.scm",(void*)f_13723},
{"f_13714ChickenBridge.scm",(void*)f_13714},
{"f_13705ChickenBridge.scm",(void*)f_13705},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13533ChickenBridge.scm",(void*)f_13533},
{"f_13678ChickenBridge.scm",(void*)f_13678},
{"f_13559ChickenBridge.scm",(void*)f_13559},
{"f_13674ChickenBridge.scm",(void*)f_13674},
{"f_13659ChickenBridge.scm",(void*)f_13659},
{"f_13640ChickenBridge.scm",(void*)f_13640},
{"f_13613ChickenBridge.scm",(void*)f_13613},
{"f_13566ChickenBridge.scm",(void*)f_13566},
{"f_13536ChickenBridge.scm",(void*)f_13536},
{"f_13486ChickenBridge.scm",(void*)f_13486},
{"f_13492ChickenBridge.scm",(void*)f_13492},
{"f_13508ChickenBridge.scm",(void*)f_13508},
{"f_13511ChickenBridge.scm",(void*)f_13511},
{"f_13009ChickenBridge.scm",(void*)f_13009},
{"f_13473ChickenBridge.scm",(void*)f_13473},
{"f_13013ChickenBridge.scm",(void*)f_13013},
{"f_13445ChickenBridge.scm",(void*)f_13445},
{"f_13460ChickenBridge.scm",(void*)f_13460},
{"f_13452ChickenBridge.scm",(void*)f_13452},
{"f_13416ChickenBridge.scm",(void*)f_13416},
{"f_13420ChickenBridge.scm",(void*)f_13420},
{"f_13381ChickenBridge.scm",(void*)f_13381},
{"f_13385ChickenBridge.scm",(void*)f_13385},
{"f_13346ChickenBridge.scm",(void*)f_13346},
{"f_13350ChickenBridge.scm",(void*)f_13350},
{"f_13016ChickenBridge.scm",(void*)f_13016},
{"f_13310ChickenBridge.scm",(void*)f_13310},
{"f_13325ChickenBridge.scm",(void*)f_13325},
{"f_13317ChickenBridge.scm",(void*)f_13317},
{"f_13281ChickenBridge.scm",(void*)f_13281},
{"f_13285ChickenBridge.scm",(void*)f_13285},
{"f_13246ChickenBridge.scm",(void*)f_13246},
{"f_13250ChickenBridge.scm",(void*)f_13250},
{"f_13211ChickenBridge.scm",(void*)f_13211},
{"f_13215ChickenBridge.scm",(void*)f_13215},
{"f_13019ChickenBridge.scm",(void*)f_13019},
{"f_13175ChickenBridge.scm",(void*)f_13175},
{"f_13190ChickenBridge.scm",(void*)f_13190},
{"f_13182ChickenBridge.scm",(void*)f_13182},
{"f_13146ChickenBridge.scm",(void*)f_13146},
{"f_13150ChickenBridge.scm",(void*)f_13150},
{"f_13111ChickenBridge.scm",(void*)f_13111},
{"f_13115ChickenBridge.scm",(void*)f_13115},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_13080ChickenBridge.scm",(void*)f_13080},
{"f_13022ChickenBridge.scm",(void*)f_13022},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13028ChickenBridge.scm",(void*)f_13028},
{"f_13043ChickenBridge.scm",(void*)f_13043},
{"f_13055ChickenBridge.scm",(void*)f_13055},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13037ChickenBridge.scm",(void*)f_13037},
{"f_12933ChickenBridge.scm",(void*)f_12933},
{"f_12937ChickenBridge.scm",(void*)f_12937},
{"f_12956ChickenBridge.scm",(void*)f_12956},
{"f_12966ChickenBridge.scm",(void*)f_12966},
{"f_12968ChickenBridge.scm",(void*)f_12968},
{"f_12985ChickenBridge.scm",(void*)f_12985},
{"f_12988ChickenBridge.scm",(void*)f_12988},
{"f_12999ChickenBridge.scm",(void*)f_12999},
{"f_12940ChickenBridge.scm",(void*)f_12940},
{"f_12670ChickenBridge.scm",(void*)f_12670},
{"f_12923ChickenBridge.scm",(void*)f_12923},
{"f_12674ChickenBridge.scm",(void*)f_12674},
{"f_12895ChickenBridge.scm",(void*)f_12895},
{"f_12910ChickenBridge.scm",(void*)f_12910},
{"f_12902ChickenBridge.scm",(void*)f_12902},
{"f_12866ChickenBridge.scm",(void*)f_12866},
{"f_12870ChickenBridge.scm",(void*)f_12870},
{"f_12831ChickenBridge.scm",(void*)f_12831},
{"f_12835ChickenBridge.scm",(void*)f_12835},
{"f_12677ChickenBridge.scm",(void*)f_12677},
{"f_12795ChickenBridge.scm",(void*)f_12795},
{"f_12810ChickenBridge.scm",(void*)f_12810},
{"f_12802ChickenBridge.scm",(void*)f_12802},
{"f_12766ChickenBridge.scm",(void*)f_12766},
{"f_12770ChickenBridge.scm",(void*)f_12770},
{"f_12731ChickenBridge.scm",(void*)f_12731},
{"f_12735ChickenBridge.scm",(void*)f_12735},
{"f_12680ChickenBridge.scm",(void*)f_12680},
{"f_12683ChickenBridge.scm",(void*)f_12683},
{"f_12686ChickenBridge.scm",(void*)f_12686},
{"f_12698ChickenBridge.scm",(void*)f_12698},
{"f_12710ChickenBridge.scm",(void*)f_12710},
{"f_12692ChickenBridge.scm",(void*)f_12692},
{"f_12634ChickenBridge.scm",(void*)f_12634},
{"f_12638ChickenBridge.scm",(void*)f_12638},
{"f_12660ChickenBridge.scm",(void*)f_12660},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12647ChickenBridge.scm",(void*)f_12647},
{"f_12387ChickenBridge.scm",(void*)f_12387},
{"f_12391ChickenBridge.scm",(void*)f_12391},
{"f_12604ChickenBridge.scm",(void*)f_12604},
{"f_12619ChickenBridge.scm",(void*)f_12619},
{"f_12611ChickenBridge.scm",(void*)f_12611},
{"f_12575ChickenBridge.scm",(void*)f_12575},
{"f_12579ChickenBridge.scm",(void*)f_12579},
{"f_12540ChickenBridge.scm",(void*)f_12540},
{"f_12544ChickenBridge.scm",(void*)f_12544},
{"f_12394ChickenBridge.scm",(void*)f_12394},
{"f_12504ChickenBridge.scm",(void*)f_12504},
{"f_12519ChickenBridge.scm",(void*)f_12519},
{"f_12511ChickenBridge.scm",(void*)f_12511},
{"f_12475ChickenBridge.scm",(void*)f_12475},
{"f_12479ChickenBridge.scm",(void*)f_12479},
{"f_12440ChickenBridge.scm",(void*)f_12440},
{"f_12444ChickenBridge.scm",(void*)f_12444},
{"f_12397ChickenBridge.scm",(void*)f_12397},
{"f_12400ChickenBridge.scm",(void*)f_12400},
{"f_12403ChickenBridge.scm",(void*)f_12403},
{"f_12411ChickenBridge.scm",(void*)f_12411},
{"f_12419ChickenBridge.scm",(void*)f_12419},
{"f_12409ChickenBridge.scm",(void*)f_12409},
{"f_12172ChickenBridge.scm",(void*)f_12172},
{"f_12176ChickenBridge.scm",(void*)f_12176},
{"f_12385ChickenBridge.scm",(void*)f_12385},
{"f_12338ChickenBridge.scm",(void*)f_12338},
{"f_12350ChickenBridge.scm",(void*)f_12350},
{"f_12206ChickenBridge.scm",(void*)f_12206},
{"f_12209ChickenBridge.scm",(void*)f_12209},
{"f_12215ChickenBridge.scm",(void*)f_12215},
{"f_12218ChickenBridge.scm",(void*)f_12218},
{"f_12306ChickenBridge.scm",(void*)f_12306},
{"f_12221ChickenBridge.scm",(void*)f_12221},
{"f_12300ChickenBridge.scm",(void*)f_12300},
{"f_12227ChickenBridge.scm",(void*)f_12227},
{"f_12230ChickenBridge.scm",(void*)f_12230},
{"f_12182ChickenBridge.scm",(void*)f_12182},
{"f_12185ChickenBridge.scm",(void*)f_12185},
{"f_12192ChickenBridge.scm",(void*)f_12192},
{"f_11702ChickenBridge.scm",(void*)f_11702},
{"f_11706ChickenBridge.scm",(void*)f_11706},
{"f_12142ChickenBridge.scm",(void*)f_12142},
{"f_12157ChickenBridge.scm",(void*)f_12157},
{"f_12149ChickenBridge.scm",(void*)f_12149},
{"f_12113ChickenBridge.scm",(void*)f_12113},
{"f_12117ChickenBridge.scm",(void*)f_12117},
{"f_12078ChickenBridge.scm",(void*)f_12078},
{"f_12082ChickenBridge.scm",(void*)f_12082},
{"f_12043ChickenBridge.scm",(void*)f_12043},
{"f_12047ChickenBridge.scm",(void*)f_12047},
{"f_11709ChickenBridge.scm",(void*)f_11709},
{"f_12007ChickenBridge.scm",(void*)f_12007},
{"f_12022ChickenBridge.scm",(void*)f_12022},
{"f_12014ChickenBridge.scm",(void*)f_12014},
{"f_11978ChickenBridge.scm",(void*)f_11978},
{"f_11982ChickenBridge.scm",(void*)f_11982},
{"f_11943ChickenBridge.scm",(void*)f_11943},
{"f_11947ChickenBridge.scm",(void*)f_11947},
{"f_11908ChickenBridge.scm",(void*)f_11908},
{"f_11912ChickenBridge.scm",(void*)f_11912},
{"f_11712ChickenBridge.scm",(void*)f_11712},
{"f_11872ChickenBridge.scm",(void*)f_11872},
{"f_11887ChickenBridge.scm",(void*)f_11887},
{"f_11879ChickenBridge.scm",(void*)f_11879},
{"f_11843ChickenBridge.scm",(void*)f_11843},
{"f_11847ChickenBridge.scm",(void*)f_11847},
{"f_11808ChickenBridge.scm",(void*)f_11808},
{"f_11812ChickenBridge.scm",(void*)f_11812},
{"f_11773ChickenBridge.scm",(void*)f_11773},
{"f_11777ChickenBridge.scm",(void*)f_11777},
{"f_11715ChickenBridge.scm",(void*)f_11715},
{"f_11718ChickenBridge.scm",(void*)f_11718},
{"f_11721ChickenBridge.scm",(void*)f_11721},
{"f_11744ChickenBridge.scm",(void*)f_11744},
{"f_11752ChickenBridge.scm",(void*)f_11752},
{"f_11727ChickenBridge.scm",(void*)f_11727},
{"f_11730ChickenBridge.scm",(void*)f_11730},
{"f_11622ChickenBridge.scm",(void*)f_11622},
{"f_11613ChickenBridge.scm",(void*)f_11613},
{"f_11541ChickenBridge.scm",(void*)f_11541},
{"f_11545ChickenBridge.scm",(void*)f_11545},
{"f_11548ChickenBridge.scm",(void*)f_11548},
{"f_11286ChickenBridge.scm",(void*)f_11286},
{"f_11290ChickenBridge.scm",(void*)f_11290},
{"f_11511ChickenBridge.scm",(void*)f_11511},
{"f_11526ChickenBridge.scm",(void*)f_11526},
{"f_11518ChickenBridge.scm",(void*)f_11518},
{"f_11482ChickenBridge.scm",(void*)f_11482},
{"f_11486ChickenBridge.scm",(void*)f_11486},
{"f_11447ChickenBridge.scm",(void*)f_11447},
{"f_11451ChickenBridge.scm",(void*)f_11451},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11411ChickenBridge.scm",(void*)f_11411},
{"f_11426ChickenBridge.scm",(void*)f_11426},
{"f_11418ChickenBridge.scm",(void*)f_11418},
{"f_11382ChickenBridge.scm",(void*)f_11382},
{"f_11386ChickenBridge.scm",(void*)f_11386},
{"f_11347ChickenBridge.scm",(void*)f_11347},
{"f_11351ChickenBridge.scm",(void*)f_11351},
{"f_11296ChickenBridge.scm",(void*)f_11296},
{"f_11299ChickenBridge.scm",(void*)f_11299},
{"f_11302ChickenBridge.scm",(void*)f_11302},
{"f_11314ChickenBridge.scm",(void*)f_11314},
{"f_11326ChickenBridge.scm",(void*)f_11326},
{"f_11308ChickenBridge.scm",(void*)f_11308},
{"f_11171ChickenBridge.scm",(void*)f_11171},
{"f_11284ChickenBridge.scm",(void*)f_11284},
{"f_11181ChickenBridge.scm",(void*)f_11181},
{"f_11269ChickenBridge.scm",(void*)f_11269},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_11276ChickenBridge.scm",(void*)f_11276},
{"f_11184ChickenBridge.scm",(void*)f_11184},
{"f_11266ChickenBridge.scm",(void*)f_11266},
{"f_11192ChickenBridge.scm",(void*)f_11192},
{"f_11256ChickenBridge.scm",(void*)f_11256},
{"f_11201ChickenBridge.scm",(void*)f_11201},
{"f_11220ChickenBridge.scm",(void*)f_11220},
{"f_11249ChickenBridge.scm",(void*)f_11249},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11245ChickenBridge.scm",(void*)f_11245},
{"f_11233ChickenBridge.scm",(void*)f_11233},
{"f_11204ChickenBridge.scm",(void*)f_11204},
{"f_11214ChickenBridge.scm",(void*)f_11214},
{"f_11195ChickenBridge.scm",(void*)f_11195},
{"f_11198ChickenBridge.scm",(void*)f_11198},
{"f_11125ChickenBridge.scm",(void*)f_11125},
{"f_11116ChickenBridge.scm",(void*)f_11116},
{"f_10815ChickenBridge.scm",(void*)f_10815},
{"f_10822ChickenBridge.scm",(void*)f_10822},
{"f_11111ChickenBridge.scm",(void*)f_11111},
{"f_10825ChickenBridge.scm",(void*)f_10825},
{"f_11096ChickenBridge.scm",(void*)f_11096},
{"f_11088ChickenBridge.scm",(void*)f_11088},
{"f_11080ChickenBridge.scm",(void*)f_11080},
{"f_11083ChickenBridge.scm",(void*)f_11083},
{"f_11051ChickenBridge.scm",(void*)f_11051},
{"f_11074ChickenBridge.scm",(void*)f_11074},
{"f_11057ChickenBridge.scm",(void*)f_11057},
{"f_11061ChickenBridge.scm",(void*)f_11061},
{"f_10828ChickenBridge.scm",(void*)f_10828},
{"f_10834ChickenBridge.scm",(void*)f_10834},
{"f_10926ChickenBridge.scm",(void*)f_10926},
{"f_11038ChickenBridge.scm",(void*)f_11038},
{"f_11045ChickenBridge.scm",(void*)f_11045},
{"f_10949ChickenBridge.scm",(void*)f_10949},
{"f_10951ChickenBridge.scm",(void*)f_10951},
{"f_11000ChickenBridge.scm",(void*)f_11000},
{"f_11035ChickenBridge.scm",(void*)f_11035},
{"f_11024ChickenBridge.scm",(void*)f_11024},
{"f_11169ChickenBridge.scm",(void*)f_11169},
{"f_11144ChickenBridge.scm",(void*)f_11144},
{"f_11165ChickenBridge.scm",(void*)f_11165},
{"f_11161ChickenBridge.scm",(void*)f_11161},
{"f_11153ChickenBridge.scm",(void*)f_11153},
{"f_11017ChickenBridge.scm",(void*)f_11017},
{"f_11010ChickenBridge.scm",(void*)f_11010},
{"f_10958ChickenBridge.scm",(void*)f_10958},
{"f_10998ChickenBridge.scm",(void*)f_10998},
{"f_10962ChickenBridge.scm",(void*)f_10962},
{"f_10994ChickenBridge.scm",(void*)f_10994},
{"f_10981ChickenBridge.scm",(void*)f_10981},
{"f_10989ChickenBridge.scm",(void*)f_10989},
{"f_10985ChickenBridge.scm",(void*)f_10985},
{"f_10965ChickenBridge.scm",(void*)f_10965},
{"f_10968ChickenBridge.scm",(void*)f_10968},
{"f_10942ChickenBridge.scm",(void*)f_10942},
{"f_10929ChickenBridge.scm",(void*)f_10929},
{"f_10938ChickenBridge.scm",(void*)f_10938},
{"f_10933ChickenBridge.scm",(void*)f_10933},
{"f_10840ChickenBridge.scm",(void*)f_10840},
{"f_10920ChickenBridge.scm",(void*)f_10920},
{"f_10900ChickenBridge.scm",(void*)f_10900},
{"f_10906ChickenBridge.scm",(void*)f_10906},
{"f_10917ChickenBridge.scm",(void*)f_10917},
{"f_10897ChickenBridge.scm",(void*)f_10897},
{"f_10885ChickenBridge.scm",(void*)f_10885},
{"f_10888ChickenBridge.scm",(void*)f_10888},
{"f_10843ChickenBridge.scm",(void*)f_10843},
{"f_10879ChickenBridge.scm",(void*)f_10879},
{"f_10874ChickenBridge.scm",(void*)f_10874},
{"f_10846ChickenBridge.scm",(void*)f_10846},
{"f_10859ChickenBridge.scm",(void*)f_10859},
{"f_10849ChickenBridge.scm",(void*)f_10849},
{"f_10852ChickenBridge.scm",(void*)f_10852},
{"f_10855ChickenBridge.scm",(void*)f_10855},
{"f_10692ChickenBridge.scm",(void*)f_10692},
{"f_10751ChickenBridge.scm",(void*)f_10751},
{"f_10761ChickenBridge.scm",(void*)f_10761},
{"f_10763ChickenBridge.scm",(void*)f_10763},
{"f_10792ChickenBridge.scm",(void*)f_10792},
{"f_10797ChickenBridge.scm",(void*)f_10797},
{"f_10782ChickenBridge.scm",(void*)f_10782},
{"f_10713ChickenBridge.scm",(void*)f_10713},
{"f_10745ChickenBridge.scm",(void*)f_10745},
{"f_10673ChickenBridge.scm",(void*)f_10673},
{"f_10680ChickenBridge.scm",(void*)f_10680},
{"f_10687ChickenBridge.scm",(void*)f_10687},
{"f_10654ChickenBridge.scm",(void*)f_10654},
{"f_10661ChickenBridge.scm",(void*)f_10661},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10474ChickenBridge.scm",(void*)f_10474},
{"f_10478ChickenBridge.scm",(void*)f_10478},
{"f_10481ChickenBridge.scm",(void*)f_10481},
{"f_10484ChickenBridge.scm",(void*)f_10484},
{"f_10487ChickenBridge.scm",(void*)f_10487},
{"f_10644ChickenBridge.scm",(void*)f_10644},
{"f_10651ChickenBridge.scm",(void*)f_10651},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10499ChickenBridge.scm",(void*)f_10499},
{"f_10505ChickenBridge.scm",(void*)f_10505},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10582ChickenBridge.scm",(void*)f_10582},
{"f_10508ChickenBridge.scm",(void*)f_10508},
{"f_10511ChickenBridge.scm",(void*)f_10511},
{"f_10517ChickenBridge.scm",(void*)f_10517},
{"f_10530ChickenBridge.scm",(void*)f_10530},
{"f_10520ChickenBridge.scm",(void*)f_10520},
{"f_10523ChickenBridge.scm",(void*)f_10523},
{"f_10464ChickenBridge.scm",(void*)f_10464},
{"f_10409ChickenBridge.scm",(void*)f_10409},
{"f_10400ChickenBridge.scm",(void*)f_10400},
{"f_10283ChickenBridge.scm",(void*)f_10283},
{"f_10274ChickenBridge.scm",(void*)f_10274},
{"f_10265ChickenBridge.scm",(void*)f_10265},
{"f_10256ChickenBridge.scm",(void*)f_10256},
{"f_10247ChickenBridge.scm",(void*)f_10247},
{"f_10229ChickenBridge.scm",(void*)f_10229},
{"f_10220ChickenBridge.scm",(void*)f_10220},
{"f_10211ChickenBridge.scm",(void*)f_10211},
{"f_10193ChickenBridge.scm",(void*)f_10193},
{"f_10184ChickenBridge.scm",(void*)f_10184},
{"f_10175ChickenBridge.scm",(void*)f_10175},
{"f_10160ChickenBridge.scm",(void*)f_10160},
{"f_10115ChickenBridge.scm",(void*)f_10115},
{"f_10097ChickenBridge.scm",(void*)f_10097},
{"f_10088ChickenBridge.scm",(void*)f_10088},
{"f_10061ChickenBridge.scm",(void*)f_10061},
{"f_10043ChickenBridge.scm",(void*)f_10043},
{"f_10025ChickenBridge.scm",(void*)f_10025},
{"f_10016ChickenBridge.scm",(void*)f_10016},
{"f_10004ChickenBridge.scm",(void*)f_10004},
{"f_9696ChickenBridge.scm",(void*)f_9696},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9846ChickenBridge.scm",(void*)f_9846},
{"f_9842ChickenBridge.scm",(void*)f_9842},
{"f_9814ChickenBridge.scm",(void*)f_9814},
{"f_9749ChickenBridge.scm",(void*)f_9749},
{"f_9758ChickenBridge.scm",(void*)f_9758},
{"f_9742ChickenBridge.scm",(void*)f_9742},
{"f_9561ChickenBridge.scm",(void*)f_9561},
{"f_9687ChickenBridge.scm",(void*)f_9687},
{"f_9683ChickenBridge.scm",(void*)f_9683},
{"f_9661ChickenBridge.scm",(void*)f_9661},
{"f_9591ChickenBridge.scm",(void*)f_9591},
{"f_9607ChickenBridge.scm",(void*)f_9607},
{"f_9516ChickenBridge.scm",(void*)f_9516},
{"f_9559ChickenBridge.scm",(void*)f_9559},
{"f_9548ChickenBridge.scm",(void*)f_9548},
{"f_9400ChickenBridge.scm",(void*)f_9400},
{"f_9514ChickenBridge.scm",(void*)f_9514},
{"f_9415ChickenBridge.scm",(void*)f_9415},
{"f_9445ChickenBridge.scm",(void*)f_9445},
{"f_9464ChickenBridge.scm",(void*)f_9464},
{"f_9449ChickenBridge.scm",(void*)f_9449},
{"f_9428ChickenBridge.scm",(void*)f_9428},
{"f_9278ChickenBridge.scm",(void*)f_9278},
{"f_9398ChickenBridge.scm",(void*)f_9398},
{"f_9293ChickenBridge.scm",(void*)f_9293},
{"f_9323ChickenBridge.scm",(void*)f_9323},
{"f_9342ChickenBridge.scm",(void*)f_9342},
{"f_9327ChickenBridge.scm",(void*)f_9327},
{"f_9306ChickenBridge.scm",(void*)f_9306},
{"f_9181ChickenBridge.scm",(void*)f_9181},
{"f_9276ChickenBridge.scm",(void*)f_9276},
{"f_9196ChickenBridge.scm",(void*)f_9196},
{"f_9242ChickenBridge.scm",(void*)f_9242},
{"f_9227ChickenBridge.scm",(void*)f_9227},
{"f_9209ChickenBridge.scm",(void*)f_9209},
{"f_9128ChickenBridge.scm",(void*)f_9128},
{"f_9166ChickenBridge.scm",(void*)f_9166},
{"f_9173ChickenBridge.scm",(void*)f_9173},
{"f_9151ChickenBridge.scm",(void*)f_9151},
{"f_9126ChickenBridge.scm",(void*)f_9126},
{"f_9098ChickenBridge.scm",(void*)f_9098},
{"f_9100ChickenBridge.scm",(void*)f_9100},
{"f_9078ChickenBridge.scm",(void*)f_9078},
{"f_9026ChickenBridge.scm",(void*)f_9026},
{"f_9063ChickenBridge.scm",(void*)f_9063},
{"f_9030ChickenBridge.scm",(void*)f_9030},
{"f_9046ChickenBridge.scm",(void*)f_9046},
{"f_9048ChickenBridge.scm",(void*)f_9048},
{"f_8812ChickenBridge.scm",(void*)f_8812},
{"f_8825ChickenBridge.scm",(void*)f_8825},
{"f_8907ChickenBridge.scm",(void*)f_8907},
{"f_8910ChickenBridge.scm",(void*)f_8910},
{"f_8918ChickenBridge.scm",(void*)f_8918},
{"f_8930ChickenBridge.scm",(void*)f_8930},
{"f_8951ChickenBridge.scm",(void*)f_8951},
{"f_8959ChickenBridge.scm",(void*)f_8959},
{"f_8846ChickenBridge.scm",(void*)f_8846},
{"f_8851ChickenBridge.scm",(void*)f_8851},
{"f_8883ChickenBridge.scm",(void*)f_8883},
{"f_8791ChickenBridge.scm",(void*)f_8791},
{"f_8772ChickenBridge.scm",(void*)f_8772},
{"f_8731ChickenBridge.scm",(void*)f_8731},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8484ChickenBridge.scm",(void*)f_8484},
{"f_8689ChickenBridge.scm",(void*)f_8689},
{"f_8704ChickenBridge.scm",(void*)f_8704},
{"f_8696ChickenBridge.scm",(void*)f_8696},
{"f_8660ChickenBridge.scm",(void*)f_8660},
{"f_8664ChickenBridge.scm",(void*)f_8664},
{"f_8625ChickenBridge.scm",(void*)f_8625},
{"f_8629ChickenBridge.scm",(void*)f_8629},
{"f_8488ChickenBridge.scm",(void*)f_8488},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8596ChickenBridge.scm",(void*)f_8596},
{"f_8560ChickenBridge.scm",(void*)f_8560},
{"f_8564ChickenBridge.scm",(void*)f_8564},
{"f_8525ChickenBridge.scm",(void*)f_8525},
{"f_8529ChickenBridge.scm",(void*)f_8529},
{"f_8491ChickenBridge.scm",(void*)f_8491},
{"f_8494ChickenBridge.scm",(void*)f_8494},
{"f_8497ChickenBridge.scm",(void*)f_8497},
{"f_8382ChickenBridge.scm",(void*)f_8382},
{"f_8386ChickenBridge.scm",(void*)f_8386},
{"f_8389ChickenBridge.scm",(void*)f_8389},
{"f_8454ChickenBridge.scm",(void*)f_8454},
{"f_8391ChickenBridge.scm",(void*)f_8391},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_8359ChickenBridge.scm",(void*)f_8359},
{"f_8374ChickenBridge.scm",(void*)f_8374},
{"f_8366ChickenBridge.scm",(void*)f_8366},
{"f_8330ChickenBridge.scm",(void*)f_8330},
{"f_8334ChickenBridge.scm",(void*)f_8334},
{"f_8295ChickenBridge.scm",(void*)f_8295},
{"f_8299ChickenBridge.scm",(void*)f_8299},
{"f_8158ChickenBridge.scm",(void*)f_8158},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8274ChickenBridge.scm",(void*)f_8274},
{"f_8266ChickenBridge.scm",(void*)f_8266},
{"f_8230ChickenBridge.scm",(void*)f_8230},
{"f_8234ChickenBridge.scm",(void*)f_8234},
{"f_8195ChickenBridge.scm",(void*)f_8195},
{"f_8199ChickenBridge.scm",(void*)f_8199},
{"f_8161ChickenBridge.scm",(void*)f_8161},
{"f_8164ChickenBridge.scm",(void*)f_8164},
{"f_8174ChickenBridge.scm",(void*)f_8174},
{"f_8111ChickenBridge.scm",(void*)f_8111},
{"f_8144ChickenBridge.scm",(void*)f_8144},
{"f_8129ChickenBridge.scm",(void*)f_8129},
{"f_8090ChickenBridge.scm",(void*)f_8090},
{"f_8055ChickenBridge.scm",(void*)f_8055},
{"f_8059ChickenBridge.scm",(void*)f_8059},
{"f_7947ChickenBridge.scm",(void*)f_7947},
{"f_8034ChickenBridge.scm",(void*)f_8034},
{"f_7954ChickenBridge.scm",(void*)f_7954},
{"f_7963ChickenBridge.scm",(void*)f_7963},
{"f_8010ChickenBridge.scm",(void*)f_8010},
{"f_7976ChickenBridge.scm",(void*)f_7976},
{"f_8002ChickenBridge.scm",(void*)f_8002},
{"f_7814ChickenBridge.scm",(void*)f_7814},
{"f_7818ChickenBridge.scm",(void*)f_7818},
{"f_7821ChickenBridge.scm",(void*)f_7821},
{"f_7925ChickenBridge.scm",(void*)f_7925},
{"f_7823ChickenBridge.scm",(void*)f_7823},
{"f_7830ChickenBridge.scm",(void*)f_7830},
{"f_7872ChickenBridge.scm",(void*)f_7872},
{"f_7879ChickenBridge.scm",(void*)f_7879},
{"f_7853ChickenBridge.scm",(void*)f_7853},
{"f_7747ChickenBridge.scm",(void*)f_7747},
{"f_7751ChickenBridge.scm",(void*)f_7751},
{"f_7797ChickenBridge.scm",(void*)f_7797},
{"f_7754ChickenBridge.scm",(void*)f_7754},
{"f_7790ChickenBridge.scm",(void*)f_7790},
{"f_7757ChickenBridge.scm",(void*)f_7757},
{"f_7770ChickenBridge.scm",(void*)f_7770},
{"f_7701ChickenBridge.scm",(void*)f_7701},
{"f_7705ChickenBridge.scm",(void*)f_7705},
{"f_7615ChickenBridge.scm",(void*)f_7615},
{"f_7619ChickenBridge.scm",(void*)f_7619},
{"f_7622ChickenBridge.scm",(void*)f_7622},
{"f_7631ChickenBridge.scm",(void*)f_7631},
{"f_7653ChickenBridge.scm",(void*)f_7653},
{"f_7600ChickenBridge.scm",(void*)f_7600},
{"f_7585ChickenBridge.scm",(void*)f_7585},
{"f_7349ChickenBridge.scm",(void*)f_7349},
{"f_7562ChickenBridge.scm",(void*)f_7562},
{"f_7577ChickenBridge.scm",(void*)f_7577},
{"f_7569ChickenBridge.scm",(void*)f_7569},
{"f_7533ChickenBridge.scm",(void*)f_7533},
{"f_7537ChickenBridge.scm",(void*)f_7537},
{"f_7498ChickenBridge.scm",(void*)f_7498},
{"f_7502ChickenBridge.scm",(void*)f_7502},
{"f_7353ChickenBridge.scm",(void*)f_7353},
{"f_7462ChickenBridge.scm",(void*)f_7462},
{"f_7477ChickenBridge.scm",(void*)f_7477},
{"f_7469ChickenBridge.scm",(void*)f_7469},
{"f_7433ChickenBridge.scm",(void*)f_7433},
{"f_7437ChickenBridge.scm",(void*)f_7437},
{"f_7398ChickenBridge.scm",(void*)f_7398},
{"f_7402ChickenBridge.scm",(void*)f_7402},
{"f_7356ChickenBridge.scm",(void*)f_7356},
{"f_7359ChickenBridge.scm",(void*)f_7359},
{"f_7370ChickenBridge.scm",(void*)f_7370},
{"f_7309ChickenBridge.scm",(void*)f_7309},
{"f_7313ChickenBridge.scm",(void*)f_7313},
{"f_7343ChickenBridge.scm",(void*)f_7343},
{"f_7324ChickenBridge.scm",(void*)f_7324},
{"f_7332ChickenBridge.scm",(void*)f_7332},
{"f_7288ChickenBridge.scm",(void*)f_7288},
{"f_7300ChickenBridge.scm",(void*)f_7300},
{"f_7262ChickenBridge.scm",(void*)f_7262},
{"f_7220ChickenBridge.scm",(void*)f_7220},
{"f_7205ChickenBridge.scm",(void*)f_7205},
{"f_7094ChickenBridge.scm",(void*)f_7094},
{"f_7169ChickenBridge.scm",(void*)f_7169},
{"f_7098ChickenBridge.scm",(void*)f_7098},
{"f_7138ChickenBridge.scm",(void*)f_7138},
{"f_7127ChickenBridge.scm",(void*)f_7127},
{"f_7112ChickenBridge.scm",(void*)f_7112},
{"f_7120ChickenBridge.scm",(void*)f_7120},
{"f_7060ChickenBridge.scm",(void*)f_7060},
{"f_7072ChickenBridge.scm",(void*)f_7072},
{"f_7057ChickenBridge.scm",(void*)f_7057},
{"f_7054ChickenBridge.scm",(void*)f_7054},
{"f_7047ChickenBridge.scm",(void*)f_7047},
{"f_7044ChickenBridge.scm",(void*)f_7044},
{"f_7037ChickenBridge.scm",(void*)f_7037},
{"f_7019ChickenBridge.scm",(void*)f_7019},
{"f_7008ChickenBridge.scm",(void*)f_7008},
{"f_7005ChickenBridge.scm",(void*)f_7005},
{"f_7002ChickenBridge.scm",(void*)f_7002},
{"f_6999ChickenBridge.scm",(void*)f_6999},
{"f_6970ChickenBridge.scm",(void*)f_6970},
{"f_6963ChickenBridge.scm",(void*)f_6963},
{"f_6960ChickenBridge.scm",(void*)f_6960},
{"f_6939ChickenBridge.scm",(void*)f_6939},
{"f_6920ChickenBridge.scm",(void*)f_6920},
{"f_6901ChickenBridge.scm",(void*)f_6901},
{"f_6894ChickenBridge.scm",(void*)f_6894},
{"f_6887ChickenBridge.scm",(void*)f_6887},
{"f_6872ChickenBridge.scm",(void*)f_6872},
{"f_6861ChickenBridge.scm",(void*)f_6861},
{"f_6843ChickenBridge.scm",(void*)f_6843},
{"f_6816ChickenBridge.scm",(void*)f_6816},
{"f_6789ChickenBridge.scm",(void*)f_6789},
{"f_6748ChickenBridge.scm",(void*)f_6748},
{"f_6754ChickenBridge.scm",(void*)f_6754},
{"f_6764ChickenBridge.scm",(void*)f_6764},
{"f_6662ChickenBridge.scm",(void*)f_6662},
{"f_6563ChickenBridge.scm",(void*)f_6563},
{"f_6567ChickenBridge.scm",(void*)f_6567},
{"f_6592ChickenBridge.scm",(void*)f_6592},
{"f_6609ChickenBridge.scm",(void*)f_6609},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6569ChickenBridge.scm",(void*)f_6569},
{"f_6586ChickenBridge.scm",(void*)f_6586},
{"f_6553ChickenBridge.scm",(void*)f_6553},
{"f_6513ChickenBridge.scm",(void*)f_6513},
{"f_6543ChickenBridge.scm",(void*)f_6543},
{"f_6375ChickenBridge.scm",(void*)f_6375},
{"f_6409ChickenBridge.scm",(void*)f_6409},
{"f_6352ChickenBridge.scm",(void*)f_6352},
{"f_6346ChickenBridge.scm",(void*)f_6346},
{"f_6331ChickenBridge.scm",(void*)f_6331},
{"f_6317ChickenBridge.scm",(void*)f_6317},
{"f_6307ChickenBridge.scm",(void*)f_6307},
{"f_6297ChickenBridge.scm",(void*)f_6297},
{"f_6287ChickenBridge.scm",(void*)f_6287},
{"f_6277ChickenBridge.scm",(void*)f_6277},
{"f_6248ChickenBridge.scm",(void*)f_6248},
{"f_6257ChickenBridge.scm",(void*)f_6257},
{"f_6262ChickenBridge.scm",(void*)f_6262},
{"f_6237ChickenBridge.scm",(void*)f_6237},
{"f_6242ChickenBridge.scm",(void*)f_6242},
{"f_5944ChickenBridge.scm",(void*)f_5944},
{"f_5954ChickenBridge.scm",(void*)f_5954},
{"f_6205ChickenBridge.scm",(void*)f_6205},
{"f_5957ChickenBridge.scm",(void*)f_5957},
{"f_5960ChickenBridge.scm",(void*)f_5960},
{"f_5975ChickenBridge.scm",(void*)f_5975},
{"f_5985ChickenBridge.scm",(void*)f_5985},
{"f_5987ChickenBridge.scm",(void*)f_5987},
{"f_6046ChickenBridge.scm",(void*)f_6046},
{"f_6056ChickenBridge.scm",(void*)f_6056},
{"f_6173ChickenBridge.scm",(void*)f_6173},
{"f_6161ChickenBridge.scm",(void*)f_6161},
{"f_6159ChickenBridge.scm",(void*)f_6159},
{"f_6146ChickenBridge.scm",(void*)f_6146},
{"f_6100ChickenBridge.scm",(void*)f_6100},
{"f_6127ChickenBridge.scm",(void*)f_6127},
{"f_6106ChickenBridge.scm",(void*)f_6106},
{"f_6040ChickenBridge.scm",(void*)f_6040},
{"f_5999ChickenBridge.scm",(void*)f_5999},
{"f_6012ChickenBridge.scm",(void*)f_6012},
{"f_6222ChickenBridge.scm",(void*)f_6222},
{"f_6213ChickenBridge.scm",(void*)f_6213},
{"f_6221ChickenBridge.scm",(void*)f_6221},
{"f_6224ChickenBridge.scm",(void*)f_6224},
{"f_6232ChickenBridge.scm",(void*)f_6232},
{"f_5646ChickenBridge.scm",(void*)f_5646},
{"f_5899ChickenBridge.scm",(void*)f_5899},
{"f_5932ChickenBridge.scm",(void*)f_5932},
{"f_5928ChickenBridge.scm",(void*)f_5928},
{"f_5917ChickenBridge.scm",(void*)f_5917},
{"f_5913ChickenBridge.scm",(void*)f_5913},
{"f_5807ChickenBridge.scm",(void*)f_5807},
{"f_5810ChickenBridge.scm",(void*)f_5810},
{"f_5813ChickenBridge.scm",(void*)f_5813},
{"f_5893ChickenBridge.scm",(void*)f_5893},
{"f_5718ChickenBridge.scm",(void*)f_5718},
{"f_5659ChickenBridge.scm",(void*)f_5659},
{"f_5816ChickenBridge.scm",(void*)f_5816},
{"f_5823ChickenBridge.scm",(void*)f_5823},
{"f_5883ChickenBridge.scm",(void*)f_5883},
{"f_5869ChickenBridge.scm",(void*)f_5869},
{"f_5835ChickenBridge.scm",(void*)f_5835},
{"f_5861ChickenBridge.scm",(void*)f_5861},
{"f_5796ChickenBridge.scm",(void*)f_5796},
{"f_5843ChickenBridge.scm",(void*)f_5843},
{"f_5839ChickenBridge.scm",(void*)f_5839},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
