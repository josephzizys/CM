;; 1st order Markov harmonizer a la messiaen

;; markov pattern of diatonic and chromatic intervals to produce
;; Messiaen-like sonorites

define variable mark =
  make-markov( {
                {1 -> {1 .25} {2 2} {3 .5} {4 .4} {5 .3} {6 .1} }
                {2 -> {3 1} {4 .5} {5 .3} {6 .2} }
                {3 -> {1 .2} {2 1} {4 .5} {5 .3} {6 .2} }
                {4 -> {1 .2} {2 1} {3 .4} {4 .3} {6 .2} }
                {5 -> {1 1} {2 1} {3 .5} {4 .5} {5 .5} {6 .5} }
                {6 -> {1 1} {2 1} {3 .5} {4 .5} {5 .5} }
                } )

;; try it out 

begin with n = 5
  print note( scale( n, 60, next(mark, n - 1)))
end

;; define a player for chords

define function playchord( ch, d, a)
  loop for c in ch
    send "mp:midi", key: c, dur: d, amp: a
   end

;; try out the player

begin with n = 5
  exec playchord( scale( n, 60, next( mark, n - 1)),
                  1, .7)
end

;; define an input hook. The louder the note the more chord tones are
;; added

define function chordhook(mm)
  if mm:on?( mm) then
    begin 
      with n = int( interp( mm:vel( mm), 20, 2, 100, 6))
      ;; the louder we play the more notes are added
      exec playchord( scale(n, mm:key( mm), next(mark, n - 1)),
                      .5, mm:vel(mm))
    end

;; Set the inhook.

send "mp:inhook", chordhook

;; clear the hook when you are done

send "mp:inhook", #f
