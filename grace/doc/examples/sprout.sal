;; Sprouting processes

define process pinkscale(len, scale)
  ;; map pink noise onto a scale
  run repeat len
    send "mp:midi", key: discrete( ranpink(), -1, 1, scale)
    wait .125
  end

define variable dorian = scale(50, 20, 2, 1, 2, 2, 2, 1, 2)

sprout pinkscale(60, dorian)

;; sprouting more than one process at a time

define process piano-phase (stop, keys, rate)
  run 
    with pat = make(<cycle>, of: keys)
    until now() >= stop
    output make(<midi>, time: now(), keynum: next(pat), duration: rate)
    wait rate
  end

begin
  with trope = {e4 fs4 b4 cs5 d5 fs4 e4 cs5 b4 fs4 d5 cs5} ,
       nsecs = 20
  sprout list( piano-phase(nsecs, trope, .167),
               piano-phase(nsecs, trope, .17))
end

;; Using ids to selectively stop processes

define process chopin (n, r, d, k)
  run repeat n
    send "mp:midi", dur: d, key: k
    wait r
  end

;; sprout D# minor chord with ids

begin
  sprout chopin(50, .5, .25, 63), 0, 1
  sprout chopin(50, .5, .25, 66), 0, 2
  sprout chopin(50, .5, .25, 70), 0, 3
  sprout chopin(50, .5, .25, 75), 0, 1
end
