;; Sending data to Csound

;; To run these examples your Ports menu in the Console window must
;; have a Csound port menu available and the Csound5 package must be
;; installed on your machine.  Choose Ports>Csound>Open... to open
;; Csound with the default orchestra file "grace.orc".

;; the "cs:i" message sends data to instruments. its positional values
;; are interpreted: ins, time, dur, p4...

send "cs:i", 1, 0, 2, between(48, 72), 8000

;; you can send future time stamps out the port:

loop for i from 0 below 10 by .5
  send "cs:i", 1, i, 2, between(60, 75), 8000
end

;; now put the port in score mode so data are routed to the score
;; rather than out the (open) port:

send "cs:score", #t

;; send some events to the score:

loop for i from 0 below 10 by .5
  send "cs:i", 1, i, 2, between(60, 75), 8000
end

;; print contents of score. (Use Ports>Csound>Export for full control
;; over printing the score to the Console, clipboard or file. )

send "cs:print"

;; print contents of score between time 5 to 7

send "cs:print", 5, 7

;; send contents of score between time out the open port

send "cs:play", 5, 7, -5

;; delete current score contents and switch to record mode

send "cs:clear"
send "cs:record", #t

;; now eval this statement several times. on each eval the data will
;; be sent out the port and also recorded to the score

send "cs:i", 1, 0, 2, between(60, 75), 8000

;; print the data recorded in score

send "cs:print"

;; clear score and stop record mode

send "cs:clear"
send "cs:record", #f

;; the "cs:f" message sends func data to csound:

send "cs:f", 1, 0, 65536, 10, 1

;; now try out instrument 2

send "cs:i", 2, 0, .5, between(60, 80), 5000

;; sprout a process that sends csound data in realtime

define process ranins1(len, rhy, lb, ub, amp)
  run with dur = rhy * 2
    repeat len
    for k = lb then between(lb,ub)
    send "cs:i", 1, 0, dur, k, amp
    wait rhy
  end

sprout ranins1(10, .2, 60, 72, 1000)

