# C++ Console Executable Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Release
endif

ifeq ($(CONFIG),Release)
  BINDIR := build
  LIBDIR := .
  OBJDIR := build/grace.obj/Release
  OUTDIR := build/Release/Grace/bin
  CPPFLAGS := -MMD -D "LINUX=1" -D "SCHEME=1" -D "PORTCSOUND=1" -I "../../../juce/" -I "/usr/local/include" -I "/usr/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O2
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s /usr/local/lib/libchicken.a -L"../../../juce//bin" -L"/usr/local/lib" -lcsound -lsndfile -ljuce -lfreetype -lGLU -lGL -lasound
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "SCHEME=1" -D "PORTCSOUND=1" -I "../../../juce/" -I "/usr/local/include" -I "/usr/include"
  TARGET := grace
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),Debug)
  BINDIR := build
  LIBDIR := .
  OBJDIR := build/grace.obj/Debug
  OUTDIR := build/Debug/Grace/bin
  CPPFLAGS := -MMD -D "LINUX=1" -D "SCHEME=1" -D "PORTCSOUND=1" -I "../../../juce/" -I "/usr/local/include" -I "/usr/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) /usr/local/lib/libchickendebug.a -L"../../../juce//bin" -L"/usr/local/lib" -lcsound -lsndfile -ljucedebug -lfreetype -lGLU -lGL -lasound
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "SCHEME=1" -D "PORTCSOUND=1" -I "../../../juce/" -I "/usr/local/include" -I "/usr/include"
  TARGET := grace
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/Buffer.o \
	$(OBJDIR)/ChickenBridge.o \
	$(OBJDIR)/Console.o \
	$(OBJDIR)/Csound.o \
	$(OBJDIR)/Fomus.o \
	$(OBJDIR)/Editor.o \
	$(OBJDIR)/Grace.o \
	$(OBJDIR)/Help.o \
	$(OBJDIR)/Layer.o \
	$(OBJDIR)/Midi.o \
	$(OBJDIR)/MidiReceiveComponent.o \
	$(OBJDIR)/Resources.o \
	$(OBJDIR)/Plotter.o \
	$(OBJDIR)/Points.o \
	$(OBJDIR)/Scheme.o \
	$(OBJDIR)/Syntab.o \
	$(OBJDIR)/Syntax.o \
	$(OBJDIR)/Toolbox.o \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	-$(CMD_MKBINDIR)
	-$(CMD_MKLIBDIR)
	-$(CMD_MKOUTDIR)
	$(BLDCMD)

clean:
	@echo Cleaning Grace
ifeq ($(MKDIR_TYPE),posix)
	-rm -f $(OUTDIR)/$(TARGET)
	-rm -rf $(OBJDIR)
else
	-if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/Buffer.o: ../../src/Buffer.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/ChickenBridge.o: ../../src/ChickenBridge.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Console.o: ../../src/Console.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Csound.o: ../../src/Csound.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Fomus.o: ../../src/Fomus.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Editor.o: ../../src/Editor.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Grace.o: ../../src/Grace.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Help.o: ../../src/Help.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Layer.o: ../../src/Layer.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Midi.o: ../../src/Midi.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/MidiReceiveComponent.o: ../../src/MidiReceiveComponent.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Resources.o: ../../src/Resources.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Plotter.o: ../../src/Plotter.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Points.o: ../../src/Points.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Scheme.o: ../../src/Scheme.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Syntab.o: ../../src/Syntab.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Syntax.o: ../../src/Syntax.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Toolbox.o: ../../src/Toolbox.cpp
	-$(CMD_MKOBJDIR)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)

