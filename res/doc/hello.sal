;;; -*- syntax: Sal2;  -*-

; A SAL program consists of comments and expressions.  Comments start
; with a semi-colon and last until the end of the line. You are
; reading a block of comments.  An expression is something you execute
; to produce a result. To execute an expression place your cursor at
; the end of the line and press Command-enter. (On Windows and Linux
; the Control key is the Command key.)  Look in the Console window to
; see the result.

123

; Operators MUST be delimited by spaces in math expressions:

1 + 2 * 3 

; You can use parentheses to group and nest terms as you like. If you
; don't use parentheses then normal operator precedence applies:

(1 + 2) * 3

; Function calls look like this:

print("Hello, world!")

; You can nest function calls and function arguments are separated by
; commas. Execute this command several times to see what it does:

print("My key number: ", between(60, 90))

; You can read help about commands and functions by placing your
; cursor on the word you want to look up and pressing COMMAND-D. Try
; this on the symbols 'print' and 'between' in the previous example.

; Errors: when you execute something that contains a mistake you will
; see an error message printed in the Console window. Sometimes this
; message is helpful, sometimes its not so helpful. Such is life.
; Many mistakes involve syntax errors or undefined terms as shown in
; these two examples:

print (1 + 2 * 3

foo

; Expressions can become quite complex and may span more than one
; line.  Here is an example of a moderately complex expression. To
; execute it, place your cursor just after the word 'end' and press
; Command-enter to see what it does.

begin
  with root = between(60, 90),
       third = root + pick(3,4) ,
       fifth = root + 7
  print("My random chord: ", note( list( root, third, fifth)))
end

