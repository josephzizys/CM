(definstrument (jl-reverb :optional (decay 3.0))
  (let* ((allpass1 (make-all-pass -0.700 0.700 2111))
	 (allpass2 (make-all-pass -0.700 0.700  673))
	 (allpass3 (make-all-pass -0.700 0.700  223))
	 (comb1 (make-comb 0.742 9601))
	 (comb2 (make-comb 0.733 10007))
	 (comb3 (make-comb 0.715 10799))
	 (comb4 (make-comb 0.697 11597))
	 (chns (mus-channels *output*))
	 (outdel1 (make-delay (seconds->samples .013)))
	 (outdel2 (if (> chns 1) (make-delay (seconds->samples .011)) #f))
	 (comb-sum 0.0)
	 (comb-sum-1 0.0)
	 (comb-sum-2 0.0)
	 (all-sums 0.0)
	 (delA 0.0)
	 (delB 0.0)
	 (decay-dur (* decay (mus-srate)))
	 (len (+ decay-dur (mus-length *reverb*))))
    (ws-interrupt?)
    (run
     (lambda ()
       (do ((i 0 (+ i 1)))
	   ((= i len))
	 (let ((allpass-sum (all-pass allpass3 (all-pass allpass2 (all-pass allpass1 (ina i *reverb*))))))
	   (set! comb-sum 
		 (+ (comb comb1 allpass-sum)
		    (comb comb2 allpass-sum)
		    (comb comb3 allpass-sum)
		    (comb comb4 allpass-sum)))
	   (outa i (delay outdel1 comb-sum))
	   (if (> chns 1) (outb i (delay outdel2 comb-sum)))))))))
