/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-12-23 10:59
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: cm
*/

#include "chicken.h"


#include "juce.h"
#include "CmSupport.h"


static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[991];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,15),40,108,111,103,116,101,115,116,32,97,48,32,98,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,26),40,108,105,115,116,45,115,101,116,33,32,108,105,115,50,32,112,111,115,51,32,118,97,108,52,41,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,23),40,109,97,107,101,45,101,113,117,97,108,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,20),40,109,97,107,101,45,101,113,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,20),40,104,97,115,104,45,114,101,102,32,116,97,98,54,32,118,97,108,55,41,0,0,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,114,101,97,100,45,102,114,111,109,45,115,116,114,105,110,103,32,115,116,114,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,112,114,105,110,116,95,111,117,116,112,117,116,32,97,51,51,51,55,32,97,51,50,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,49),40,102,102,105,95,114,101,115,99,97,108,101,32,97,54,51,54,54,32,97,54,50,54,55,32,97,54,49,54,56,32,97,54,48,54,57,32,97,53,57,55,48,32,97,53,56,55,49,41,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,102,108,111,97,116,95,116,111,95,102,105,120,110,117,109,32,97,56,55,57,48,41,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,26),40,102,102,105,95,113,117,97,110,116,105,122,101,32,97,57,50,57,53,32,97,57,49,57,54,41,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,114,104,121,116,104,109,95,116,111,95,115,101,99,111,110,100,115,32,97,49,48,48,49,48,51,32,97,57,57,49,48,52,32,97,57,56,49,48,53,41,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,99,101,110,116,115,95,116,111,95,115,99,97,108,101,114,32,97,49,48,55,49,49,48,41,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,115,99,97,108,101,114,95,116,111,95,99,101,110,116,115,32,97,49,49,50,49,49,53,41,0,0,0,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,101,120,112,108,115,101,103,32,97,49,49,57,49,50,50,32,97,49,49,56,49,50,51,32,97,49,49,55,49,50,52,32,97,49,49,54,49,50,53,41,0,0,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,44),40,102,102,105,95,103,101,111,115,101,103,32,97,49,51,48,49,51,51,32,97,49,50,57,49,51,52,32,97,49,50,56,49,51,53,32,97,49,50,55,49,51,54,41,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,107,101,121,110,117,109,95,116,111,95,104,101,114,116,122,32,97,49,51,56,49,52,49,41,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,21),40,102,102,105,95,114,97,110,115,101,101,100,32,97,49,53,50,49,53,53,41,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,105,110,116,32,97,49,53,54,49,53,57,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,102,108,111,97,116,32,97,49,54,48,49,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,12),40,102,102,105,95,114,97,110,108,111,119,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,104,105,103,104,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,114,97,110,103,97,117,115,115,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,101,120,112,32,97,49,57,52,49,57,55,41,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,103,97,109,109,97,32,97,50,48,54,50,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,114,97,110,112,111,105,115,115,111,110,32,97,50,49,52,50,49,55,41};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,112,105,110,107,41,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,102,102,105,95,114,97,110,98,114,111,119,110,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,42),40,102,102,105,95,115,99,104,101,100,95,115,112,114,111,117,116,32,97,50,52,54,50,52,57,32,97,50,52,53,50,53,48,32,97,50,52,52,50,53,49,41,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,116,111,112,32,97,50,53,56,50,54,49,41};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,112,97,116,104,110,97,109,101,95,116,121,112,101,32,97,51,48,54,51,49,48,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,58),40,102,102,105,95,109,112,95,115,101,110,100,95,100,97,116,97,32,97,51,55,57,51,56,50,32,97,51,55,56,51,56,51,32,97,51,55,55,51,56,52,32,97,51,55,54,51,56,53,32,97,51,55,53,51,56,54,41,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,6),40,113,117,105,116,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,20),40,112,114,105,110,116,45,101,114,114,111,114,32,109,115,103,52,57,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,30),40,112,114,105,110,116,45,111,117,116,112,117,116,32,109,115,103,52,57,50,32,46,32,113,117,111,52,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,115,116,114,52,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,52,57,56,41,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,52,57,57,41,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,53,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,53,48,49,41,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,53,48,50,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,53,48,51,41,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,53,48,52,41,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,53,48,53,41,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,53,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,53,48,55,41,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,100,111,53,50,53,32,116,53,50,55,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,12),40,100,111,53,50,48,32,97,53,50,50,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,53,49,55,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,53,53,48,32,98,53,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,53,53,50,32,98,53,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,53,52,54,32,46,32,111,98,106,53,52,55,41,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,25),40,100,111,53,53,57,32,116,97,105,108,53,54,49,32,105,53,54,50,32,102,53,54,51,41,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,53,53,55,32,108,53,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,53,56,57,32,112,114,111,112,53,57,48,32,46,32,100,101,102,53,57,49,41,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,32),40,100,111,54,48,53,32,105,54,48,55,32,108,54,48,56,32,101,54,48,57,32,102,54,49,48,32,114,54,49,49,41};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,53),40,37,109,97,112,115,101,113,32,102,117,110,99,53,57,53,32,115,101,113,53,57,54,32,101,108,101,109,101,110,116,115,63,53,57,55,32,115,116,97,114,116,53,57,56,32,101,110,100,53,57,57,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,13),40,102,95,56,51,52,54,32,97,54,50,52,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,13),40,102,95,56,51,53,53,32,97,54,50,53,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,28),40,102,105,110,100,32,120,54,50,49,32,115,101,113,54,50,50,32,46,32,97,114,103,115,54,50,51,41,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,13),40,102,95,56,51,57,48,32,97,54,50,57,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,13),40,102,95,56,51,57,57,32,97,54,51,48,41,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,32),40,112,111,115,105,116,105,111,110,32,120,54,50,54,32,115,101,113,54,50,55,32,46,32,97,114,103,115,54,50,56,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,30),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,54,54,52,32,120,54,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,54,54,54,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,54,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,54,55,50,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,54,55,53,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,54,55,56,41,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,29),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,54,55,57,32,120,54,56,48,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,54,56,49,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,54,56,52,41,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,54,56,55,41,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,100,111,54,57,50,32,97,54,57,52,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,54,57,48,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,100,111,55,48,52,32,108,55,48,54,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,38),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,55,48,50,32,97,99,99,101,115,115,111,114,55,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,37),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,54,57,57,32,99,108,97,117,115,101,115,55,48,48,41,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,111,112,63,32,120,55,49,48,32,111,112,115,55,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,55,49,50,41,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,28),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,55,49,51,32,118,97,108,55,49,52,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,55,51,54,32,116,97,105,108,55,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,15),40,100,111,55,51,49,32,116,97,105,108,55,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,17),40,100,111,55,50,49,32,104,55,50,51,32,108,55,50,52,41,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,36),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,55,49,53,32,102,111,114,109,115,55,49,54,32,97,114,103,115,55,49,55,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,38),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,55,53,48,32,99,108,97,117,115,101,115,55,53,49,32,111,112,115,55,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,15),40,100,111,55,55,48,32,110,101,120,116,55,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,48),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,55,53,54,32,99,108,97,117,115,101,115,55,53,55,32,111,112,115,55,53,56,41};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,7),40,97,57,52,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,27),40,97,57,52,50,49,32,99,108,97,117,115,101,56,53,49,32,105,103,110,111,114,101,56,53,50,41,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,56,52,56,32,99,108,97,117,115,101,115,56,52,57,32,111,112,115,56,53,48,41,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,100,111,56,54,57,32,110,101,120,116,56,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,53),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,56,53,52,32,99,108,97,117,115,101,115,56,53,53,32,111,112,115,56,53,54,41,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,100,111,57,51,54,32,110,101,120,116,57,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,52),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,57,50,54,32,99,108,97,117,115,101,115,57,50,55,32,111,112,115,57,50,56,41,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,23),40,100,111,57,55,52,32,110,101,101,100,57,55,54,32,110,101,120,116,57,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,39),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,57,54,52,32,99,108,97,117,115,101,115,57,54,53,32,111,112,115,57,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,49,56,41};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,48,48,57,32,99,108,97,117,115,101,115,49,48,49,48,32,111,112,115,49,48,49,49,41};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,48,50,56,32,99,108,97,117,115,101,115,49,48,50,57,32,111,112,115,49,48,51,48,41,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,48,52,50,32,99,108,97,117,115,101,115,49,48,52,51,32,111,112,115,49,48,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,49,48,57,32,116,121,112,101,49,49,49,48,32,97,99,99,49,49,49,49,32,104,101,97,100,49,49,49,50,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,49,49,51,41};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,49,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,54,49,32,97,49,48,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,54,57,32,99,49,48,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,48,56,56,32,99,108,97,117,115,101,115,49,48,56,57,32,111,112,115,49,48,57,48,41,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,49,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,49,49,57,48,32,99,108,97,117,115,101,115,49,49,57,49,32,111,112,115,49,49,57,50,41,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,49,50,49,49,32,99,108,97,117,115,101,115,49,50,49,50,32,111,112,115,49,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,49,50,50,55,32,99,108,97,117,115,101,115,49,50,50,56,32,111,112,115,49,50,50,57,41,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,8),40,97,49,49,50,57,52,41};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,20),40,97,49,49,51,48,55,32,97,49,50,53,52,32,98,49,50,53,53,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,38),40,100,111,49,50,52,55,32,111,112,49,50,52,57,32,99,108,97,117,115,101,49,50,53,48,32,114,101,109,97,105,110,115,49,50,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,49,50,52,49,32,99,108,97,117,115,101,115,49,50,52,50,32,111,112,115,49,50,52,51,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,8),40,97,49,49,52,53,56,41};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,55,50,32,97,49,50,56,51,32,98,49,50,56,52,41,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,8),40,97,49,49,53,51,54,41};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,20),40,97,49,49,53,52,50,32,97,49,50,56,48,32,98,49,50,56,49,41,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,49,50,54,55,32,99,108,97,117,115,101,115,49,50,54,56,32,111,112,115,49,50,54,57,41,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,52,48,48,32,108,101,110,103,116,104,49,52,48,49,32,115,116,114,101,97,109,49,52,48,50,32,100,101,102,97,117,108,116,49,52,48,51,32,111,109,105,116,49,52,48,52,32,114,101,112,115,49,52,48,53,41,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,48,55,32,118,97,108,49,52,48,56,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,52,49,48,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,52,49,54,41,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,52,50,50,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,52,51,49,32,118,97,108,49,52,51,50,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,52,51,52,41,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,52,52,48,41,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,52,54,53,41};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,52,54,57,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,52,55,50,32,118,97,108,49,52,55,51,41,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,52,55,53,41,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,52,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,52,56,52,32,118,97,108,49,52,56,53,41,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,52,56,55,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,52,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,52,57,54,32,118,97,108,49,52,57,55,41,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,51,51,55,32,120,49,52,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,53,48,50,32,118,97,108,49,53,48,51,41,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,53,48,53,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,53,52,52,32,118,97,108,49,53,52,53,41,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,53,52,55,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,14),40,97,49,50,55,49,57,32,120,49,53,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,53,54,54,32,100,97,116,97,49,53,54,55,32,102,111,114,49,53,54,56,32,114,101,112,49,53,54,57,32,102,108,97,103,115,49,53,55,48,32,108,101,110,49,53,55,49,32,100,112,101,114,49,53,55,50,32,103,101,116,114,49,53,55,51,32,109,97,112,114,49,53,55,52,41,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,54,48,49,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,54,48,50,41,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,20),40,100,111,49,54,48,55,32,105,49,54,48,57,32,101,49,54,49,48,41,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,49,52,32,110,49,54,49,54,32,101,49,54,49,55,32,102,49,54,49,56,41,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,54,48,51,32,46,32,97,114,103,115,49,54,48,52,41,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,52,50,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,51,56,32,100,121,110,63,49,54,52,48,32,115,116,111,112,49,54,52,49,41,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,54,50,52,41};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,54,54,50,41,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,54,54,51,32,111,98,106,49,54,54,52,41,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,14),40,97,49,51,50,56,54,32,120,49,54,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,54,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,23),40,97,49,51,51,56,48,32,102,110,49,55,50,53,32,111,98,106,49,55,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,54,56,50,32,46,32,97,114,103,115,49,54,56,51,41};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,55,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,55,53,50,41,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,55,53,53,32,118,97,108,49,55,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,23),40,97,49,51,56,49,48,32,102,110,49,56,53,51,32,111,98,106,49,56,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,55,56,49,32,46,32,97,114,103,115,49,55,56,50,41,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,56,54,50,41,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,23),40,97,49,52,52,55,55,32,102,110,49,57,50,52,32,111,98,106,49,57,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,56,56,49,32,46,32,97,114,103,115,49,56,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,57,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,23),40,97,49,52,55,54,52,32,102,110,49,57,55,57,32,111,98,106,49,57,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,57,51,54,32,46,32,97,114,103,115,49,57,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,26),40,100,111,49,57,57,48,32,105,49,57,57,50,32,106,49,57,57,51,32,118,49,57,57,52,41,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,57,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,23),40,97,49,53,49,48,57,32,102,110,50,48,55,52,32,111,98,106,50,48,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,48,48,50,32,46,32,97,114,103,115,50,48,48,51,41,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,14),40,100,111,50,48,57,48,32,105,50,48,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,48,56,53,32,115,116,97,114,116,50,48,56,54,32,115,116,101,112,50,48,56,55,32,119,105,100,116,104,50,48,56,56,32,101,110,100,50,48,56,57,41,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,48,56,51,41,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,49,49,55,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,49,50,48,32,118,97,108,50,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,49,50,51,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,49,50,57,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,49,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,49,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,49,52,52,32,118,97,108,50,49,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,49,52,55,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,14),40,97,49,53,57,57,52,32,105,50,50,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,56,56,32,102,110,50,50,50,55,32,111,98,106,50,50,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,17),40,97,49,54,50,50,53,32,105,116,101,109,50,49,56,50,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,50,52,48,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,49,55,50,32,46,32,97,114,103,115,50,49,55,51,41,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,37),40,100,111,50,51,50,55,32,116,97,105,108,50,51,50,57,32,105,110,100,101,120,50,51,51,48,32,116,111,116,97,108,50,51,51,49,41,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,50,49,32,116,97,105,108,50,51,50,51,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,51,49,55,32,102,105,120,63,50,51,49,56,41,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,27),40,100,111,50,51,52,57,32,116,97,105,108,50,51,53,49,32,105,110,100,101,120,50,51,53,50,41,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,51,52,55,32,114,50,51,52,56,41,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,53,56,32,116,97,105,108,50,51,54,48,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,53,52,32,105,116,101,109,50,51,53,54,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,51,51,55,41,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,23),40,97,49,55,50,57,54,32,102,110,50,52,56,54,32,111,98,106,50,52,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,14),40,97,49,55,48,53,48,32,115,50,51,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,8),40,100,111,50,51,56,48,41};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,41),40,100,111,50,52,48,50,32,116,97,105,108,50,52,48,52,32,111,114,100,101,114,50,52,48,53,32,108,105,115,50,52,48,54,32,112,50,52,48,55,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,52,49,52,32,46,32,97,114,103,115,50,52,49,53,41,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,49,49,32,116,97,105,108,50,53,49,51,41,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,33),40,100,111,50,53,48,49,32,116,97,105,108,50,53,48,51,32,111,117,116,50,53,48,52,32,115,117,109,50,53,48,53,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,52,57,57,32,111,117,116,112,117,116,115,50,53,48,48,41,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,49,32,108,97,115,116,50,53,52,51,41,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,26),40,100,111,50,53,49,55,32,105,50,53,49,57,32,106,50,53,50,48,32,102,50,53,50,49,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,35),40,100,111,50,53,51,50,32,116,97,105,108,50,53,51,52,32,112,97,115,116,50,53,51,53,32,105,116,101,109,50,53,51,54,41,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,52,57,54,41};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,53,54,49,41};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,14),40,97,49,56,49,54,56,32,110,50,54,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,23),40,97,49,56,49,54,50,32,102,110,50,54,50,53,32,111,98,106,50,54,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,28),40,97,49,56,52,49,52,32,105,116,101,109,50,54,51,55,32,46,32,97,114,103,115,50,54,51,56,41,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,54,51,54,41,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,53,56,50,32,46,32,97,114,103,115,50,53,56,51,41};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,57,49,32,116,97,105,108,50,54,57,51,41,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,54,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,52,49,32,120,50,55,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,25),40,100,111,53,55,48,32,116,97,105,108,53,55,50,32,120,53,55,51,32,102,53,55,52,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,55,53,52,32,110,101,120,116,50,55,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,56,57,32,122,50,55,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,57,57,32,122,50,55,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,55,53,57,32,121,50,55,54,48,32,108,50,55,54,49,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,16),40,97,49,56,57,57,55,32,114,111,119,50,56,57,49,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,54,52,32,105,50,56,54,54,32,109,50,56,54,55,41,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,53,53,32,108,50,56,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,52,56,32,105,50,56,53,48,32,109,50,56,53,49,41,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,52,50,32,105,50,56,52,52,32,109,50,56,52,53,41,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,54,56,32,120,50,55,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,51,54,32,116,97,105,108,50,56,51,56,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,50,54,32,105,50,56,50,56,32,109,50,56,50,57,41,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,50,49,32,108,50,56,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,49,54,32,105,50,56,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,20),40,97,49,57,51,49,56,32,120,50,56,49,50,32,121,50,56,49,51,41,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,48,51,32,101,50,56,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,20),40,100,111,50,55,57,55,32,101,50,55,57,57,32,115,50,56,48,48,41,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,25),40,100,111,50,55,56,57,32,116,97,105,108,50,55,57,49,32,108,101,110,50,55,57,50,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,20),40,97,49,57,52,54,55,32,120,50,55,56,55,32,121,50,55,56,56,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,29),40,100,111,50,55,55,54,32,112,114,101,118,50,55,55,56,32,106,50,55,55,57,32,120,50,55,56,48,41,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,55,51,32,105,50,55,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,54,57,57,32,46,32,97,114,103,115,50,55,48,48,41,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,48,53,32,122,50,57,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,51),40,114,101,115,99,97,108,101,32,120,50,57,51,53,32,120,49,50,57,51,54,32,120,50,50,57,51,55,32,121,49,50,57,51,56,32,121,50,50,57,51,57,32,46,32,98,50,57,52,48,41,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,52,53,32,122,50,57,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,55,49,32,122,50,57,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,48),40,100,105,115,99,114,101,116,101,32,120,50,57,52,50,32,120,49,50,57,52,51,32,120,50,50,57,52,52,32,105,49,50,57,52,53,32,46,32,97,114,103,115,50,57,52,54,41};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,11),40,105,110,116,32,102,50,57,53,54,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,97,49,57,57,54,53,32,120,50,57,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,13),40,102,108,111,97,116,32,110,50,57,53,55,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,13),40,108,111,103,49,48,32,110,50,57,53,57,41,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,12),40,108,111,103,50,32,110,50,57,54,48,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,97,50,48,48,51,48,32,120,50,57,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,17),40,112,108,117,115,32,46,32,97,114,103,115,50,57,54,49,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,97,50,48,48,57,57,32,120,50,57,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,18),40,116,105,109,101,115,32,46,32,97,114,103,115,50,57,54,51,41,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,14),40,97,50,48,49,53,52,32,120,50,57,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,26),40,109,105,110,117,115,32,97,114,103,50,57,54,53,32,46,32,97,114,103,115,50,57,54,54,41,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,14),40,97,50,48,49,57,55,32,120,50,57,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,27),40,100,105,118,105,100,101,32,97,114,103,50,57,54,56,32,46,32,97,114,103,115,50,57,54,57,41,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,50,50,32,110,50,57,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,28),40,113,117,97,110,116,105,122,101,32,110,117,109,50,57,55,49,32,115,116,101,112,115,50,57,55,50,41,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,52,54,32,118,50,57,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,31),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,50,57,55,52,32,112,108,97,99,101,115,50,57,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,57,50,32,120,51,48,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,38),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,50,57,55,56,32,46,32,97,114,103,115,50,57,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,48,50,50,41};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,22),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,48,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,51,50,32,116,97,105,108,51,48,51,52,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,35),40,105,110,116,101,114,112,49,32,120,51,48,50,52,32,99,111,111,114,100,115,51,48,50,53,32,98,97,115,101,51,48,50,54,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,25),40,105,110,116,101,114,112,32,120,51,48,52,50,32,46,32,97,114,103,115,51,48,52,51,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,44),40,116,101,110,100,101,110,99,121,32,120,51,48,52,53,32,108,111,119,51,48,52,54,32,104,105,103,104,51,48,52,55,32,46,32,97,114,103,115,51,48,52,56,41,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,37),40,102,105,116,49,32,110,117,109,51,48,54,49,32,108,98,51,48,54,50,32,117,98,51,48,54,51,32,109,111,100,101,51,48,54,52,41,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,52,55,32,110,51,48,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,38),40,102,105,116,32,110,117,109,51,48,53,52,32,108,98,51,48,53,53,32,117,98,51,48,53,54,32,46,32,109,111,100,101,51,48,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,32),40,100,111,51,48,56,49,32,105,51,48,56,51,32,107,51,48,56,52,32,108,51,48,56,53,32,116,51,48,56,54,41};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,37),40,115,99,97,108,101,32,108,101,110,51,48,55,51,32,107,101,121,110,117,109,51,48,55,52,32,46,32,97,114,103,115,51,48,55,53,41,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,48,52,32,105,51,49,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,50,48,32,116,97,105,108,51,49,50,50,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,20),40,100,111,51,49,49,54,32,105,51,49,49,56,32,110,51,49,49,57,41,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,33),40,115,101,103,115,32,110,117,109,51,48,57,51,32,115,117,109,51,48,57,52,32,46,32,97,114,103,115,51,48,57,53,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,110,117,109,51,49,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,21),40,98,101,116,119,101,101,110,32,97,51,49,51,52,32,98,51,49,51,53,41,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,17),40,112,105,99,107,32,46,32,97,114,103,115,51,49,51,54,41,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,33),40,118,97,114,121,49,32,118,97,108,51,49,56,52,32,118,97,114,105,51,49,56,53,32,109,111,100,101,51,49,56,54,41,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,97,50,49,53,56,51,32,118,51,49,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,34),40,118,97,114,121,32,118,97,108,51,49,56,48,32,118,97,114,105,51,49,56,49,32,46,32,109,111,100,101,51,49,56,50,41,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,26),40,100,111,51,49,57,55,32,105,51,49,57,57,32,106,51,50,48,48,32,118,51,50,48,49,41,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,16),40,115,104,117,102,102,108,101,33,32,108,51,49,57,53,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,20),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,51,50,48,54,41,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,20),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,50,48,55,41,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,19),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,50,53,48,41,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,50,53,49,41,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,23),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,50,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,50,53,51,41,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,44),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,51,50,57,53,32,111,99,116,51,50,57,54,32,101,114,114,51,50,57,55,41,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,37),40,110,111,116,101,45,97,117,120,32,102,114,101,113,51,51,48,57,32,100,111,99,116,51,51,49,48,32,101,114,114,63,51,51,49,49,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,49,52,32,116,97,105,108,51,51,49,54,32,100,101,102,111,51,51,49,55,32,116,104,105,115,51,51,49,56,32,114,101,115,108,51,51,49,57,41,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,15),40,110,111,116,101,32,102,114,101,113,51,51,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,50,56,32,116,97,105,108,51,51,51,48,32,100,101,102,111,51,51,51,49,32,116,104,105,115,51,51,51,50,32,114,101,115,108,51,51,51,51,41,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,107,101,121,32,102,114,101,113,51,51,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,52,52,32,116,97,105,108,51,51,52,54,32,100,101,102,111,51,51,52,55,32,116,104,105,115,51,51,52,56,32,114,101,115,108,51,51,52,57,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,13),40,104,122,32,102,114,101,113,51,51,52,50,41,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,10),40,112,99,32,120,51,51,53,56,41,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,54,52,32,116,97,105,108,51,51,54,54,32,108,97,115,116,51,51,54,55,41,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,18),40,105,110,118,107,101,121,115,32,107,101,121,115,51,51,54,49,41,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,14),40,97,50,50,54,55,52,32,122,51,51,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,14),40,105,110,118,101,114,116,32,120,51,51,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,55,57,32,116,97,105,108,51,51,56,49,32,108,97,115,116,51,51,56,50,41,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,30),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,51,51,55,54,32,111,114,105,103,51,51,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,14),40,97,50,50,56,50,55,32,122,51,51,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,23),40,116,114,97,110,115,112,111,115,101,32,120,51,51,55,50,32,121,51,51,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,20),40,97,50,50,56,57,48,32,97,51,51,56,57,32,98,51,51,57,48,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,20),40,97,50,50,57,52,56,32,97,51,51,57,49,32,98,51,51,57,50,41,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,51,51,56,55,32,46,32,109,111,100,101,51,51,56,56,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,31),40,114,115,121,109,32,112,114,101,51,51,57,56,32,114,97,119,51,51,57,57,32,112,111,115,116,51,52,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,25),40,97,100,100,114,121,116,104,32,115,116,114,51,52,48,49,32,118,97,108,51,52,48,50,41,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,22),40,100,111,51,52,52,48,32,111,112,115,51,52,52,50,32,105,51,52,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,41),40,110,101,120,116,45,116,111,107,101,110,45,115,116,97,114,116,32,115,116,114,51,52,51,55,32,108,98,51,52,51,56,32,108,101,110,51,52,51,57,41,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,45),40,100,111,51,52,53,48,32,110,117,109,51,52,53,50,32,118,97,108,51,52,53,51,32,116,111,107,51,52,53,52,32,111,112,51,52,53,53,32,105,51,52,53,54,41,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,14),40,97,50,51,49,48,52,32,120,51,52,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,27),40,114,104,121,116,104,109,32,118,97,108,51,52,50,50,32,46,32,97,114,103,115,51,52,50,51,41,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,26),40,105,110,45,116,101,109,112,111,32,110,51,52,55,54,32,116,101,109,112,111,51,52,55,55,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,115,116,114,51,52,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,24),40,112,97,116,104,110,97,109,101,45,116,121,112,101,32,112,97,116,104,51,54,49,48,41};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,24),40,102,117,108,108,45,112,97,116,104,110,97,109,101,32,112,97,116,104,51,54,49,52,41};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,52),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,51,54,56,55,32,115,105,122,101,51,54,56,56,32,102,114,101,113,115,51,54,56,57,32,97,109,112,115,51,54,57,48,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,17),40,115,112,101,99,116,114,117,109,63,32,120,51,54,57,49,41,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,51,54,57,53,41,0,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,51,54,57,56,32,118,97,108,51,54,57,57,41,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,51,55,48,49,41,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,35),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,51,55,48,52,32,118,97,108,51,55,48,53,41,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,22),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,51,55,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,51,55,49,48,32,118,97,108,51,55,49,49,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,51,55,49,51,41,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,51,55,50,49,41,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,100,111,51,55,50,56,32,105,51,55,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,51,55,50,50,41,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,51,55,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,51,55,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,14),40,97,50,52,53,52,54,32,97,51,55,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,51,55,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,14),40,97,50,52,53,55,55,32,97,51,55,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,51,55,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,54,54,41};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,55,49,41};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,14),40,103,101,116,107,101,121,32,104,51,55,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,11),40,97,100,100,32,107,51,55,55,54,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,14),40,97,100,100,107,101,121,32,104,51,55,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,20),40,97,100,100,117,110,105,113,117,101,107,101,121,32,104,51,55,55,57,41,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,22),40,100,111,53,51,54,32,105,53,51,56,32,106,53,51,57,32,116,53,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,20),40,97,50,52,55,56,57,32,97,51,55,56,51,32,98,51,55,56,52,41,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,20),40,97,50,52,56,48,52,32,97,51,55,56,53,32,98,51,55,56,54,41,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,51,55,57,52,32,46,32,97,114,103,115,51,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,35),40,100,111,52,48,53,51,32,116,97,105,108,52,48,53,53,32,115,105,122,101,52,48,53,54,32,97,109,112,108,52,48,53,55,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,51,49,32,105,52,48,51,51,32,102,52,48,51,52,32,120,52,48,51,53,41,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,24),40,100,111,52,48,50,53,32,110,101,103,52,48,50,55,32,112,111,115,52,48,50,56,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,49,51,32,107,52,48,49,53,32,102,52,48,49,54,32,97,52,48,49,55,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,52,48,48,53,32,109,114,97,116,105,111,52,48,48,54,32,105,110,100,101,120,52,48,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,47),40,100,111,52,48,57,49,32,102,114,101,113,115,52,48,57,51,32,97,109,112,115,52,48,57,52,32,108,97,115,116,102,52,48,57,53,32,108,97,115,116,97,52,48,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,52,48,56,56,32,102,114,101,113,52,48,56,57,32,97,109,112,52,48,57,48,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,52,49,49,56,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,52,49,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,52,49,50,48,32,102,49,52,49,50,49,32,102,50,52,49,50,51,41,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,51,52,32,108,49,52,49,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,51,49,32,108,50,52,49,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,52,49,32,108,49,52,49,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,52,54,32,115,50,52,49,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,52,49,49,51,32,115,112,101,99,50,52,49,49,52,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,44),40,100,111,52,49,53,51,32,109,97,120,102,52,49,53,53,32,109,105,110,102,52,49,53,54,32,116,97,105,108,52,49,53,55,32,102,108,105,112,52,49,53,56,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,52,49,53,50,41,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,55,50,32,116,97,105,108,52,49,55,52,41,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,55,55,32,116,97,105,108,52,49,55,57,41,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,55,53,32,116,97,105,108,52,48,55,55,32,97,109,112,108,52,48,55,56,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,20),40,97,50,54,54,55,52,32,97,52,48,55,49,32,98,52,48,55,50,41,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,20),40,97,50,54,54,56,56,32,97,52,48,54,57,32,98,52,48,55,48,41,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,57,57,32,116,97,105,108,52,50,48,49,41,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,48,52,32,116,97,105,108,52,50,48,54,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,57,48,32,116,97,105,108,52,49,57,50,41,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,23),40,100,111,53,56,49,32,116,97,105,108,53,56,51,32,102,108,97,103,53,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,52,49,54,50,32,109,111,100,101,52,49,54,51,32,46,32,97,114,103,115,52,49,54,52,41};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,52,50,52,53,41,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,52,50,50,52,41,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,50,55,32,105,52,50,50,57,32,97,52,50,51,48,32,102,52,50,51,49,41,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,53,56,32,108,105,110,101,52,50,54,48,32,115,112,101,99,52,50,54,49,41,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,8),40,100,111,52,50,52,56,41};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,8),40,97,50,55,54,54,57,41};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,52,50,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,36),40,100,111,52,50,56,51,32,102,114,101,113,115,52,50,56,53,32,97,109,112,115,52,50,56,54,32,115,105,122,101,52,50,56,55,41,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,27),40,100,111,52,50,55,55,32,116,97,105,108,52,50,55,57,32,99,111,117,110,116,52,50,56,48,41,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,8),40,97,50,55,56,48,52,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,55,49,32,116,97,105,108,52,50,55,51,41,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,52,50,54,55,32,102,105,108,101,52,50,54,56,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,52,51,49,56,32,115,116,114,105,110,103,52,51,49,57,32,112,111,115,105,116,105,111,110,52,51,50,48,41,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,52,51,50,53,41,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,51,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,51,52,52,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,51,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,51,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,51,52,56,32,116,121,112,101,52,51,52,57,32,112,97,116,116,101,114,110,52,51,53,48,32,112,97,114,115,101,114,52,51,53,49,32,101,109,105,116,101,114,52,51,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,18),40,103,101,116,45,114,117,108,101,32,116,121,112,52,51,57,49,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,52,51,57,54,41,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,51,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,51,57,57,41,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,52,48,48,41,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,52,48,49,32,105,52,52,48,50,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,52,48,54,41,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,52,48,56,32,112,111,115,105,116,105,111,110,52,52,48,57,41,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,52,52,50,54,32,112,97,114,115,101,100,52,52,50,55,32,112,111,115,105,116,105,111,110,52,52,50,56,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,52,52,50,57,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,52,52,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,52,52,51,57,41,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,52,52,52,53,41,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,52,52,53,50,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,52,52,53,51,32,116,121,112,52,52,53,52,41,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,52,53,54,32,105,110,102,111,52,52,53,55,41,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,52,53,57,32,100,97,116,97,52,52,54,48,32,105,110,102,111,52,52,54,49,41,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,52,52,55,50,32,100,97,116,97,52,52,55,51,32,105,110,102,111,52,52,55,52,41,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,52,52,55,55,32,105,110,102,111,52,52,55,56,32,101,114,114,102,52,52,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,52,52,56,48,32,105,110,102,111,52,52,56,49,32,101,114,114,102,52,52,56,50,41,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,52,52,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,27),40,102,95,50,56,56,52,48,32,97,114,103,115,52,52,57,53,32,101,114,114,102,52,52,57,54,41,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,52,52,57,52,41,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,17),40,100,111,52,53,48,52,32,116,97,105,108,52,53,48,54,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,36),40,102,95,50,56,56,52,56,32,117,110,105,116,52,52,57,56,32,105,110,102,111,52,52,57,57,32,101,114,114,102,52,53,48,48,41,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,52,52,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,8),40,97,50,57,48,52,54,41};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,26),40,97,50,57,48,53,54,32,97,52,53,51,54,32,98,52,53,51,55,32,99,52,53,51,56,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,8),40,97,50,57,49,53,50,41};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,26),40,97,50,57,49,54,54,32,97,52,53,53,50,32,98,52,53,53,51,32,99,52,53,53,52,41,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,52,55,32,105,52,53,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,8),40,97,50,57,50,49,57,41};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,97,50,57,50,51,51,32,97,52,53,55,52,32,98,52,53,55,53,32,99,52,53,55,54,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,54,57,32,105,52,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,8),40,97,50,57,51,48,56,41};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,26),40,97,50,57,51,49,52,32,97,52,53,57,51,32,98,52,53,57,52,32,99,52,53,57,53,41,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,8),40,100,111,52,53,56,57,41};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,8),40,97,50,57,51,52,55,41};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,26),40,97,50,57,51,53,51,32,97,52,54,49,49,32,98,52,54,49,50,32,99,52,54,49,51,41,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,52,53,50,51,32,116,111,107,101,110,115,52,53,50,52,32,102,111,114,99,101,45,97,110,100,52,53,50,53,32,108,101,118,101,108,52,53,50,54,32,116,114,97,99,101,52,53,50,55,32,101,114,114,102,52,53,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,52,55,56,56,41,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,52,55,57,50,41,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,52,56,48,49,41,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,52,56,48,50,32,116,121,112,50,52,56,48,51,41,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,17),40,100,111,52,56,53,50,32,116,111,107,115,52,56,53,52,41,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,52,56,52,56,32,116,121,112,52,56,52,57,41,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,52,56,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,29),40,100,111,52,56,56,56,32,119,50,52,56,57,48,32,111,107,52,56,57,49,32,108,105,52,56,57,50,41,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,100,111,52,56,56,54,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,52,56,56,49,41,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,53,48,52,54,32,101,114,114,102,53,48,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,14),40,100,111,53,51,50,57,32,102,53,51,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,14),40,100,111,53,51,50,50,32,102,53,51,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,8),40,97,50,56,57,49,55,41};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,44),40,97,50,56,57,50,52,32,115,117,99,99,101,115,115,52,53,49,56,32,114,101,115,117,108,116,115,52,53,49,57,32,114,101,109,97,105,110,115,52,53,50,48,41,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,17),40,97,50,56,57,49,49,32,101,114,114,102,52,53,49,54,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,24),40,115,97,108,32,115,116,114,53,50,51,53,32,46,32,97,114,103,115,53,50,51,54,41};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,105,122,101,32,105,110,112,117,116,53,51,49,51,41,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,53,48,32,116,97,105,108,53,51,53,50,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,35),40,112,114,105,110,116,101,114,32,116,104,105,110,103,53,51,52,55,32,108,101,118,53,51,52,56,32,113,117,111,53,51,52,57,41,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,53,56,32,116,97,105,108,53,51,54,48,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,53,51,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,53,51,54,53,41,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,53,51,54,55,41,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,53,51,55,49,41,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,7),40,112,111,114,116,115,41,0,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,30),40,111,112,101,110,45,102,105,108,101,32,115,116,114,53,52,57,48,32,46,32,97,114,103,115,53,52,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,20),40,109,112,58,111,112,101,110,32,46,32,97,114,103,115,53,53,48,48,41,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,24),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,32,100,101,118,53,53,52,50,41};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,23),40,109,112,58,111,112,101,110,45,105,110,112,117,116,32,100,101,118,53,53,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,53,53,52,54,32,46,32,97,114,103,115,53,53,52,55,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,20),40,109,112,58,109,105,100,105,32,46,32,97,114,103,115,53,53,52,56,41,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,19),40,109,112,58,111,102,102,32,46,32,97,114,103,115,53,55,48,52,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,18),40,109,112,58,111,110,32,46,32,97,114,103,115,53,55,55,54,41,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,21),40,109,112,58,116,111,117,99,104,32,46,32,97,114,103,115,53,56,56,54,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,20),40,109,112,58,99,116,114,108,32,46,32,97,114,103,115,53,57,57,54,41,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,20),40,109,112,58,112,114,111,103,32,46,32,97,114,103,115,54,49,48,54,41,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,21),40,109,112,58,112,114,101,115,115,32,46,32,97,114,103,115,54,49,55,56,41,0,0,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,20),40,109,112,58,98,101,110,100,32,46,32,97,114,103,115,54,50,53,48,41,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,51,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,51,50,52,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,50,57,32,97,54,51,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,51,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,51,55,32,97,54,51,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,116,121,112,101,115,32,46,32,97,114,103,115,54,51,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,54,51,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,42),40,115,110,100,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,102,105,108,101,54,51,52,54,32,46,32,97,114,103,115,54,51,52,55,41,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,18),40,100,111,54,52,48,53,32,99,104,101,99,107,54,52,48,55,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,8),40,100,111,54,51,57,55,41};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,8),40,100,111,54,51,57,49,41};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,17),40,100,111,54,51,56,51,32,116,97,105,108,54,51,56,53,41,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,19),40,97,51,56,48,49,51,32,114,101,116,117,114,110,54,51,56,48,41,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,18),40,102,95,51,56,48,48,56,32,97,114,103,115,54,51,55,57,41,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,100,111,54,51,55,50,32,116,97,105,108,54,51,55,52,32,109,111,100,101,54,51,55,53,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,109,101,115,115,97,103,101,45,112,97,114,115,101,114,32,116,101,109,112,108,97,116,101,54,51,54,54,41,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,53,50,54,32,99,108,97,117,115,101,115,54,53,50,55,32,111,112,115,54,53,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,53,53,54,32,115,116,111,112,54,53,53,55,41,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,14),40,100,111,54,54,50,49,32,112,54,54,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,49,48,32,116,97,105,108,54,54,49,50,41,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,57,57,32,116,97,105,108,54,54,48,49,41,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,26),40,100,111,54,53,56,55,32,116,97,105,108,54,53,56,57,32,97,114,103,110,54,53,57,48,41,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,56,50,32,116,97,105,108,54,53,56,52,41,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,53,55,51,32,46,32,97,114,103,115,54,53,55,52,41,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,10),40,99,111,110,116,105,110,117,101,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,51,51,32,116,97,105,108,54,54,51,53,41,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,54,51,50,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,16),40,100,111,54,53,52,57,32,111,112,115,54,53,53,49,41};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,54,48,32,97,114,103,115,53,50,51,48,32,101,114,114,102,53,50,51,49,41,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,35),40,97,51,57,53,55,52,32,117,110,105,116,53,50,51,50,32,105,110,102,111,53,50,51,51,32,101,114,114,102,53,50,51,52,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,26),40,97,51,57,54,56,48,32,97,114,103,115,53,49,55,57,32,101,114,114,102,53,49,56,48,41,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,57,49,32,114,101,115,116,53,49,57,51,41,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,26),40,100,111,53,50,49,55,32,97,114,103,115,53,50,49,57,32,116,97,105,108,53,50,50,48,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,35),40,97,51,57,55,49,57,32,117,110,105,116,53,49,56,52,32,105,110,102,111,53,49,56,53,32,101,114,114,102,53,49,56,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,26),40,97,52,48,49,51,55,32,97,114,103,115,53,49,55,50,32,101,114,114,102,53,49,55,51,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,56,50,32,97,114,103,115,53,49,53,56,32,101,114,114,102,53,49,53,57,41,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,49,51,49,48,32,116,121,112,101,49,51,49,49,41,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,8),40,97,49,49,54,56,52,41};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,20),40,97,49,49,54,57,51,32,97,49,51,50,51,32,98,49,51,50,52,41,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,49,52,32,111,112,49,51,49,54,32,99,108,97,117,115,101,49,51,49,55,32,114,101,109,97,105,110,115,49,51,49,56,32,98,111,100,121,49,51,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,51,55,32,116,97,105,108,53,49,51,57,41,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,51,48,32,116,97,105,108,53,49,51,50,41,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,20),40,100,111,53,49,49,57,32,99,108,97,117,115,101,115,53,49,50,49,41,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,49,54,32,116,97,105,108,53,49,49,56,41,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,35),40,97,52,48,51,50,56,32,117,110,105,116,53,49,54,56,32,105,110,102,111,53,49,54,57,32,101,114,114,102,53,49,55,48,41,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,26),40,97,52,48,55,56,50,32,97,114,103,115,53,48,51,48,32,101,114,114,102,53,48,51,49,41,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,35),40,97,52,48,56,53,48,32,117,110,105,116,53,48,52,50,32,105,110,102,111,53,48,52,51,32,101,114,114,102,53,48,52,52,41,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,26),40,97,52,49,48,52,49,32,97,114,103,115,53,48,49,56,32,101,114,114,102,53,48,49,57,41,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,35),40,97,52,49,48,54,55,32,117,110,105,116,53,48,50,51,32,105,110,102,111,53,48,50,52,32,101,114,114,102,53,48,50,53,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,26),40,97,52,49,49,53,53,32,97,114,103,115,52,57,57,54,32,101,114,114,102,52,57,57,55,41,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,48,52,32,105,116,101,114,53,48,48,54,41,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,35),40,97,52,49,49,57,56,32,117,110,105,116,52,57,57,56,32,105,110,102,111,52,57,57,57,32,101,114,114,102,53,48,48,48,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,26),40,97,52,49,52,51,53,32,97,114,103,115,52,57,57,51,32,101,114,114,102,52,57,57,52,41,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,50,49,32,97,114,103,115,52,57,56,53,32,101,114,114,102,52,57,56,54,41,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,14),40,97,52,49,53,55,51,32,101,52,57,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,35),40,97,52,49,53,54,52,32,117,110,105,116,52,57,56,55,32,105,110,102,111,52,57,56,56,32,101,114,114,102,52,57,56,57,41,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,26),40,97,52,49,54,50,51,32,97,114,103,115,52,57,55,56,32,101,114,114,102,52,57,55,57,41,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,14),40,97,52,49,54,54,52,32,101,52,57,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,35),40,97,52,49,54,53,56,32,117,110,105,116,52,57,56,48,32,105,110,102,111,52,57,56,49,32,101,114,114,102,52,57,56,50,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,49,56,32,117,110,105,116,52,57,55,49,32,105,110,102,111,52,57,55,50,32,101,114,114,102,52,57,55,51,41,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,55,57,32,117,110,105,116,52,57,54,53,32,105,110,102,111,52,57,54,54,32,101,114,114,102,52,57,54,55,41,0,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,26),40,97,52,49,56,51,51,32,97,114,103,115,52,57,53,57,32,101,114,114,102,52,57,54,48,41,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,35),40,97,52,49,56,54,51,32,117,110,105,116,52,57,54,49,32,105,110,102,111,52,57,54,50,32,101,114,114,102,52,57,54,51,41,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,26),40,97,52,50,48,56,50,32,97,114,103,115,52,57,53,50,32,101,114,114,102,52,57,53,51,41,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,26),40,97,52,50,49,48,56,32,97,114,103,115,52,57,52,48,32,101,114,114,102,52,57,52,49,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,16),40,97,52,50,50,48,51,32,115,116,114,52,57,53,48,41};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,35),40,97,52,50,49,56,51,32,117,110,105,116,52,57,52,53,32,105,110,102,111,52,57,52,54,32,101,114,114,102,52,57,52,55,41,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,26),40,97,52,50,51,49,55,32,97,114,103,115,52,57,51,51,32,101,114,114,102,52,57,51,52,41,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,35),40,97,52,50,51,53,49,32,117,110,105,116,52,57,51,53,32,105,110,102,111,52,57,51,54,32,101,114,114,102,52,57,51,55,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,26),40,97,52,50,52,50,56,32,97,114,103,115,52,57,49,57,32,101,114,114,102,52,57,50,48,41,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,17),40,100,111,52,57,50,54,32,97,114,103,115,52,57,50,56,41,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,35),40,97,52,50,52,53,48,32,117,110,105,116,52,57,50,49,32,105,110,102,111,52,57,50,50,32,101,114,114,102,52,57,50,51,41,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,26),40,97,52,50,53,56,50,32,97,114,103,115,52,57,49,50,32,101,114,114,102,52,57,49,51,41,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,35),40,97,52,50,54,48,56,32,117,110,105,116,52,57,49,52,32,105,110,102,111,52,57,49,53,32,101,114,114,102,52,57,49,54,41,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,97,52,50,55,49,56,32,97,114,103,115,52,57,48,56,32,101,114,114,102,52,57,48,57,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,26),40,97,52,50,56,55,52,32,97,114,103,115,52,56,55,49,32,101,114,114,102,52,56,55,50,41,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,35),40,97,52,50,56,57,50,32,117,110,105,116,52,56,55,51,32,105,110,102,111,52,56,55,52,32,101,114,114,102,52,56,55,53,41,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,26),40,97,52,50,57,52,53,32,97,114,103,115,52,56,54,53,32,101,114,114,102,52,56,54,54,41,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,97,52,51,48,57,55,32,97,114,103,115,52,56,54,50,32,101,114,114,102,52,56,54,51,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,26),40,97,52,51,50,51,54,32,97,114,103,115,52,56,53,57,32,101,114,114,102,52,56,54,48,41,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,26),40,97,52,51,51,53,54,32,97,114,103,115,52,56,51,56,32,101,114,114,102,52,56,51,57,41,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,35),40,97,52,51,51,56,55,32,117,110,105,116,52,56,52,49,32,105,110,102,111,52,56,52,50,32,101,114,114,102,52,56,52,51,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,52,51,52,55,57,32,97,114,103,115,52,56,51,50,32,101,114,114,102,52,56,51,51,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,35),40,97,52,51,52,57,55,32,117,110,105,116,52,56,51,52,32,105,110,102,111,52,56,51,53,32,101,114,114,102,52,56,51,54,41,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,54,54,32,100,97,116,97,52,52,54,56,41,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,35),40,97,52,51,53,55,49,32,117,110,105,116,52,56,50,49,32,105,110,102,111,52,56,50,50,32,101,114,114,102,52,56,50,51,41,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,26),40,97,52,51,54,55,49,32,97,114,103,115,52,56,48,57,32,101,114,114,102,52,56,49,48,41,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,52,51,54,56,49,32,117,110,105,116,52,56,49,49,32,105,110,102,111,52,56,49,50,32,101,114,114,102,52,56,49,51,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,32),40,100,111,51,52,48,56,32,105,51,52,49,48,32,120,51,52,49,49,32,100,51,52,49,50,32,114,51,52,49,51,41};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,14),40,97,52,51,56,53,55,32,101,51,52,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,84),40,100,111,51,50,54,51,32,100,51,50,54,53,32,107,51,50,54,54,32,112,51,50,54,55,32,107,60,51,50,54,56,32,107,62,51,50,54,57,32,102,51,50,55,48,32,102,62,51,50,55,49,32,102,60,51,50,55,50,32,111,51,50,55,51,32,120,51,50,55,52,32,110,51,50,55,53,32,101,51,50,55,54,41,0,0,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,16),40,100,111,51,50,53,55,32,107,101,121,51,50,53,57,41};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k7490 in tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub410(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub410(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)sal_tokenize(t0));
return C_r;}

/* from ffi_mp_clear_seq */
static C_word C_fcall stub407(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub407(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_seq();
return C_r;}

/* from ffi_mp_plot_seq */
static C_word C_fcall stub405(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub405(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plot_seq();
return C_r;}

/* from ffi_mp_copy_seq */
static C_word C_fcall stub403(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub403(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copy_seq();
return C_r;}

/* from ffi_mp_save_seq */
static C_word C_fcall stub401(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub401(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_save_seq();
return C_r;}

/* from ffi_mp_play_seq */
static C_word C_fcall stub399(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub399(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_play_seq();
return C_r;}

/* from k7464 */
static C_word C_fcall stub396(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub396(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_tuning(t0);
return C_r;}

/* from k7457 */
static C_word C_fcall stub392(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub392(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_message_mask(t0);
return C_r;}

/* from k7450 */
static C_word C_fcall stub388(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub388(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_channel_mask(t0);
return C_r;}

/* from k7443 */
static C_word C_fcall stub380(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_send_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k7420 */
static C_word C_fcall stub368(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub368(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_send_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k7390 in mp:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub358(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
mp_set_output_file(t0);
return C_r;}

/* from k7383 */
static C_word C_fcall stub354(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub354(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_input(t0);
return C_r;}

/* from k7376 */
static C_word C_fcall stub350(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub350(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_output(t0);
return C_r;}

/* from k7369 */
static C_word C_fcall stub346(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub346(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_input(t0));
return C_r;}

/* from k7362 */
static C_word C_fcall stub342(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub342(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_output(t0));
return C_r;}

/* from ffi_port_info */
static C_word C_fcall stub338(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub338(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_port_info());
return C_r;}

/* from k7342 */
static C_word C_fcall stub333(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub333(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_directory_p(t0));
return C_r;}

/* from k7328 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub327(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub327(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_writable_p(t0));
return C_r;}

/* from k7314 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub321(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub321(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_exists_p(t0));
return C_r;}

/* from k7300 in full-pathname in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub314(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub314(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_full_pathname(t0));
return C_r;}

/* from k7282 in ffi_pathname_type in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub307(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub307(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_type(t0));
return C_r;}

/* from k7264 */
static C_word C_fcall stub300(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_name(t0));
return C_r;}

/* from k7246 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_directory(t0));
return C_r;}

/* from k7228 in chdir in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_set_current_directory(t0));
return C_r;}

/* from ffi_current_directory */
static C_word C_fcall stub283(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub283(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_current_directory());
return C_r;}

/* from ffi_temp_directory */
static C_word C_fcall stub280(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub280(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_temp_directory());
return C_r;}

/* from ffi_user_home_directory */
static C_word C_fcall stub277(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub277(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_user_home_directory());
return C_r;}

/* from ffi_set_inhook */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
cm_sched_set_inhook(t0);
return C_r;}

/* from ffi_sched_score_time */
static C_word C_fcall stub270(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_sched_score_time());
return C_r;}

/* from k7197 */
static C_word C_fcall stub267(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_set_score_mode(t0);
return C_r;}

/* from ffi_sched_score_mode_p */
static C_word C_fcall stub264(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub264(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_score_mode_p());
return C_r;}

/* from ffi_sched_busy_p */
static C_word C_fcall stub262(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_busy_p());
return C_r;}

/* from k7184 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_stop(t0);
return C_r;}

/* from ffi_sched_continue */
static C_word C_fcall stub256(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_continue();
return C_r;}

/* from ffi_sched_pause */
static C_word C_fcall stub254(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub254(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_pause();
return C_r;}

/* from ffi_sched_paused_p */
static C_word C_fcall stub252(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_paused_p());
return C_r;}

/* from k7168 */
static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
cm_sched_sprout(t0,t1,t2);
return C_r;}

/* from ffi_now */
static C_word C_fcall stub241(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_now());
return C_r;}

/* from k7154 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_two(t0));
return C_r;}

/* from k7147 */
static C_word C_fcall stub232(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub232(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_ten(t0));
return C_r;}

/* from k7140 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_bes_jn(t0,t1));
return C_r;}

/* from ffi_ranbrown in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub221(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub221(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranbrown());
return C_r;}

/* from ffi_ranpink in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub218(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranpink());
return C_r;}

/* from k7123 */
static C_word C_fcall stub215(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub215(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_ranpoisson(t0));
return C_r;}

/* from ffi_rancauchy in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub211(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_rancauchy());
return C_r;}

/* from k7113 */
static C_word C_fcall stub207(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub207(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_rangamma(t0));
return C_r;}

/* from k7106 */
static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranbeta(t0,t1));
return C_r;}

/* from k7095 */
static C_word C_fcall stub195(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub195(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranexp(t0));
return C_r;}

/* from k7088 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_rangauss(t0,t1));
return C_r;}

/* from ffi_ranmiddle in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub184(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub184(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranmiddle());
return C_r;}

/* from ffi_ranhigh in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub181(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub181(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranhigh());
return C_r;}

/* from ffi_ranlow in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub178(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub178(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranlow());
return C_r;}

/* from k7068 */
static C_word C_fcall stub173(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub173(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranfloat2(t0,t1));
return C_r;}

/* from k7057 */
static C_word C_fcall stub167(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub167(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)cm_ranint2(t0,t1));
return C_r;}

/* from k7046 */
static C_word C_fcall stub161(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub161(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranfloat(t0));
return C_r;}

/* from k7039 */
static C_word C_fcall stub157(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub157(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)cm_ranint(t0));
return C_r;}

/* from ffi_ranseed in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub153(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub153(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
cm_ranseed(t0);
return C_r;}

/* from k7029 */
static C_word C_fcall stub148(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub148(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_hertz_to_keynum(t0));
return C_r;}

/* from k7022 */
static C_word C_fcall stub144(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub144(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_keynum_to_pc(t0));
return C_r;}

/* from k7015 */
static C_word C_fcall stub139(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub139(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_keynum_to_hertz(t0));
return C_r;}

/* from k7008 */
static C_word C_fcall stub131(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub131(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_geoseg(t0,t1,t2,t3));
return C_r;}

/* from k6989 */
static C_word C_fcall stub120(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub120(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_explseg(t0,t1,t2,t3));
return C_r;}

/* from k6970 */
static C_word C_fcall stub113(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub113(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_scaler_to_cents(t0));
return C_r;}

/* from k6963 */
static C_word C_fcall stub108(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub108(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,cm_cents_to_scaler(t0));
return C_r;}

/* from k6956 */
static C_word C_fcall stub101(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub101(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,cm_rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6941 */
static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_quantize(t0,t1));
return C_r;}

/* from k6930 */
static C_word C_fcall stub88(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub88(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_float_to_fixnum(t0));
return C_r;}

/* from k6923 */
static C_word C_fcall stub79(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub79(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)cm_discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6896 */
static C_word C_fcall stub64(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub64(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,cm_rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6862 */
static C_word C_fcall stub53(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub53(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_play(t0);
return C_r;}

/* from k6848 in shell in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub47(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub47(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_shell(t0);
return C_r;}

/* from k6834 */
static C_word C_fcall stub41(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub41(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_values(t0);
return C_r;}

/* from k6820 in ffi_print_output in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub34(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub34(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
cm_print_output(t0,t1);
return C_r;}

/* from k6806 in print-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static C_word C_fcall stub27(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub27(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_error(t0);
return C_r;}

/* from ffi_quit */
static C_word C_fcall stub24(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub24(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_quit();
return C_r;}

C_noret_decl(C_cm_toplevel)
C_externexport void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6676)
static void C_ccall f_6676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6679)
static void C_ccall f_6679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6682)
static void C_ccall f_6682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6685)
static void C_ccall f_6685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6798)
static void C_ccall f_6798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22038)
static void C_ccall f_22038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43953)
static void C_fcall f_43953(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_44179)
static void C_ccall f_44179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43987)
static void C_ccall f_43987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43999)
static void C_ccall f_43999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44003)
static void C_ccall f_44003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44007)
static void C_ccall f_44007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44163)
static void C_ccall f_44163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44013)
static void C_fcall f_44013(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_44033)
static void C_fcall f_44033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44036)
static void C_fcall f_44036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44044)
static void C_ccall f_44044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44051)
static void C_ccall f_44051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44054)
static void C_ccall f_44054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44058)
static void C_ccall f_44058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44065)
static void C_ccall f_44065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44068)
static void C_ccall f_44068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44072)
static void C_ccall f_44072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44079)
static void C_ccall f_44079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44023)
static void C_ccall f_44023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43976)
static void C_ccall f_43976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43966)
static void C_ccall f_43966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43969)
static void C_ccall f_43969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22041)
static void C_ccall f_22041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23022)
static void C_ccall f_23022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43858)
static void C_ccall f_43858(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43871)
static void C_ccall f_43871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43947)
static void C_ccall f_43947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43874)
static void C_ccall f_43874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43879)
static void C_fcall f_43879(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_43931)
static void C_ccall f_43931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43901)
static void C_ccall f_43901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43915)
static void C_ccall f_43915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43927)
static void C_ccall f_43927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43904)
static void C_ccall f_43904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23042)
static void C_ccall f_23042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28095)
static void C_ccall f_28095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43836)
static void C_ccall f_43836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29752)
static void C_ccall f_29752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43816)
static void C_ccall f_43816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29755)
static void C_ccall f_29755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43776)
static void C_ccall f_43776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29758)
static void C_ccall f_29758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43682)
static void C_ccall f_43682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43686)
static void C_ccall f_43686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43689)
static void C_ccall f_43689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43707)
static void C_ccall f_43707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43710)
static void C_ccall f_43710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43741)
static void C_ccall f_43741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43713)
static void C_fcall f_43713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43719)
static void C_ccall f_43719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43672)
static void C_ccall f_43672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43666)
static void C_ccall f_43666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29761)
static void C_ccall f_29761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43570)
static void C_ccall f_43570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43572)
static void C_ccall f_43572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43576)
static void C_ccall f_43576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43579)
static void C_ccall f_43579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43582)
static void C_ccall f_43582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43626)
static void C_ccall f_43626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43618)
static void C_ccall f_43618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43585)
static void C_ccall f_43585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28531)
static void C_fcall f_28531(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28577)
static void C_ccall f_28577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28544)
static void C_fcall f_28544(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43608)
static void C_ccall f_43608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43588)
static void C_ccall f_43588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43591)
static void C_ccall f_43591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43562)
static void C_ccall f_43562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29764)
static void C_ccall f_29764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43534)
static void C_ccall f_43534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29767)
static void C_ccall f_29767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43498)
static void C_ccall f_43498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43510)
static void C_ccall f_43510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43506)
static void C_ccall f_43506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43480)
static void C_ccall f_43480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43474)
static void C_ccall f_43474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29770)
static void C_ccall f_29770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43388)
static void C_ccall f_43388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43392)
static void C_ccall f_43392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43395)
static void C_ccall f_43395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43398)
static void C_ccall f_43398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43411)
static void C_ccall f_43411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43357)
static void C_ccall f_43357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43361)
static void C_ccall f_43361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43376)
static void C_ccall f_43376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43351)
static void C_ccall f_43351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29773)
static void C_ccall f_29773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43237)
static void C_ccall f_43237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43253)
static void C_ccall f_43253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43264)
static void C_ccall f_43264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43231)
static void C_ccall f_43231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29829)
static void C_ccall f_29829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43098)
static void C_ccall f_43098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43121)
static void C_ccall f_43121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43118)
static void C_ccall f_43118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43092)
static void C_ccall f_43092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29832)
static void C_ccall f_29832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42946)
static void C_ccall f_42946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42964)
static void C_ccall f_42964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42973)
static void C_ccall f_42973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42940)
static void C_ccall f_42940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29835)
static void C_ccall f_29835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42893)
static void C_ccall f_42893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42897)
static void C_ccall f_42897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42900)
static void C_ccall f_42900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42916)
static void C_ccall f_42916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42875)
static void C_ccall f_42875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42869)
static void C_ccall f_42869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29838)
static void C_ccall f_29838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42793)
static void C_ccall f_42793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29977)
static void C_ccall f_29977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42719)
static void C_ccall f_42719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42726)
static void C_ccall f_42726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42713)
static void C_ccall f_42713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29980)
static void C_ccall f_29980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42609)
static void C_ccall f_42609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42617)
static void C_ccall f_42617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42583)
static void C_ccall f_42583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42600)
static void C_ccall f_42600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42591)
static void C_fcall f_42591(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42577)
static void C_ccall f_42577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29983)
static void C_ccall f_29983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42533)
static void C_ccall f_42533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29986)
static void C_ccall f_29986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42451)
static void C_ccall f_42451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42462)
static void C_ccall f_42462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42464)
static void C_fcall f_42464(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42493)
static void C_ccall f_42493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42429)
static void C_ccall f_42429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42445)
static void C_ccall f_42445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42423)
static void C_ccall f_42423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29989)
static void C_ccall f_29989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42352)
static void C_ccall f_42352(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42356)
static void C_ccall f_42356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42363)
static void C_ccall f_42363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42318)
static void C_ccall f_42318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42338)
static void C_ccall f_42338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42342)
static void C_ccall f_42342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42334)
static void C_ccall f_42334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42312)
static void C_ccall f_42312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29992)
static void C_ccall f_29992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42184)
static void C_ccall f_42184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42220)
static void C_ccall f_42220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42188)
static void C_ccall f_42188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37917)
static void C_fcall f_37917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37926)
static void C_ccall f_37926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37939)
static void C_ccall f_37939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37942)
static void C_ccall f_37942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37958)
static void C_ccall f_37958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42204)
static void C_ccall f_42204(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42216)
static void C_ccall f_42216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42212)
static void C_ccall f_42212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42109)
static void C_ccall f_42109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42152)
static void C_ccall f_42152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42156)
static void C_ccall f_42156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42116)
static void C_fcall f_42116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42127)
static void C_ccall f_42127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42103)
static void C_ccall f_42103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29995)
static void C_ccall f_29995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42083)
static void C_ccall f_42083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42077)
static void C_ccall f_42077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29998)
static void C_ccall f_29998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42057)
static void C_ccall f_42057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42061)
static void C_ccall f_42061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42049)
static void C_ccall f_42049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30001)
static void C_ccall f_30001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42029)
static void C_ccall f_42029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42033)
static void C_ccall f_42033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42021)
static void C_ccall f_42021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30004)
static void C_ccall f_30004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42001)
static void C_ccall f_42001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42005)
static void C_ccall f_42005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41993)
static void C_ccall f_41993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30007)
static void C_ccall f_30007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41973)
static void C_ccall f_41973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41977)
static void C_ccall f_41977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41965)
static void C_ccall f_41965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30010)
static void C_ccall f_30010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41864)
static void C_ccall f_41864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41834)
static void C_ccall f_41834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41858)
static void C_ccall f_41858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41828)
static void C_ccall f_41828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30013)
static void C_ccall f_30013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41778)
static void C_ccall f_41778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41780)
static void C_ccall f_41780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41784)
static void C_ccall f_41784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41812)
static void C_ccall f_41812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41804)
static void C_ccall f_41804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41800)
static void C_ccall f_41800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41787)
static void C_ccall f_41787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41770)
static void C_ccall f_41770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30016)
static void C_ccall f_30016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41717)
static void C_ccall f_41717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41719)
static void C_ccall f_41719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41723)
static void C_ccall f_41723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41754)
static void C_ccall f_41754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41746)
static void C_ccall f_41746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41742)
static void C_ccall f_41742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41726)
static void C_ccall f_41726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41729)
static void C_ccall f_41729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41709)
static void C_ccall f_41709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30019)
static void C_ccall f_30019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41659)
static void C_ccall f_41659(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41673)
static void C_ccall f_41673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41665)
static void C_ccall f_41665(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41624)
static void C_ccall f_41624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41657)
static void C_ccall f_41657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41618)
static void C_ccall f_41618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30022)
static void C_ccall f_30022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41565)
static void C_ccall f_41565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41569)
static void C_ccall f_41569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41582)
static void C_ccall f_41582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41574)
static void C_ccall f_41574(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41522)
static void C_ccall f_41522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41555)
static void C_ccall f_41555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41516)
static void C_ccall f_41516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30025)
static void C_ccall f_30025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41436)
static void C_ccall f_41436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41430)
static void C_ccall f_41430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30028)
static void C_ccall f_30028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41199)
static void C_ccall f_41199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41203)
static void C_ccall f_41203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41211)
static void C_fcall f_41211(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41234)
static void C_ccall f_41234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41237)
static void C_ccall f_41237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41240)
static void C_ccall f_41240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41243)
static void C_ccall f_41243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41303)
static void C_ccall f_41303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41310)
static void C_ccall f_41310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41320)
static void C_ccall f_41320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41330)
static void C_ccall f_41330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41344)
static void C_ccall f_41344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41354)
static void C_ccall f_41354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41364)
static void C_ccall f_41364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41374)
static void C_ccall f_41374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41246)
static void C_fcall f_41246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41270)
static void C_fcall f_41270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41249)
static void C_fcall f_41249(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41156)
static void C_ccall f_41156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41189)
static void C_ccall f_41189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41150)
static void C_ccall f_41150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30031)
static void C_ccall f_30031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41068)
static void C_ccall f_41068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41072)
static void C_ccall f_41072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41078)
static void C_ccall f_41078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41098)
static void C_ccall f_41098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41042)
static void C_ccall f_41042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41052)
static void C_fcall f_41052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41036)
static void C_ccall f_41036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30034)
static void C_ccall f_30034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40851)
static void C_ccall f_40851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40855)
static void C_ccall f_40855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40861)
static void C_ccall f_40861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40870)
static void C_ccall f_40870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40908)
static void C_ccall f_40908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40900)
static void C_ccall f_40900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40877)
static void C_ccall f_40877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40881)
static void C_ccall f_40881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40783)
static void C_ccall f_40783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40802)
static void C_ccall f_40802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40837)
static void C_ccall f_40837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40808)
static void C_fcall f_40808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40812)
static void C_ccall f_40812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40826)
static void C_ccall f_40826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40815)
static void C_fcall f_40815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40796)
static void C_fcall f_40796(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40777)
static void C_ccall f_40777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30037)
static void C_ccall f_30037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40505)
static void C_ccall f_40505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30560)
static void C_ccall f_30560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40457)
static void C_ccall f_40457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40449)
static void C_ccall f_40449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30563)
static void C_ccall f_30563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40329)
static void C_ccall f_40329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30569)
static void C_ccall f_30569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31053)
static void C_ccall f_31053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31087)
static void C_ccall f_31087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31079)
static void C_ccall f_31079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31075)
static void C_ccall f_31075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31060)
static void C_ccall f_31060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31064)
static void C_ccall f_31064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31057)
static void C_ccall f_31057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30593)
static void C_fcall f_30593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31046)
static void C_ccall f_31046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31042)
static void C_ccall f_31042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30600)
static void C_fcall f_30600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30917)
static void C_fcall f_30917(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30938)
static void C_ccall f_30938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30940)
static void C_fcall f_30940(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30954)
static void C_ccall f_30954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31007)
static void C_ccall f_31007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30957)
static void C_fcall f_30957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30992)
static void C_ccall f_30992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30960)
static void C_fcall f_30960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30973)
static void C_ccall f_30973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30985)
static void C_ccall f_30985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_ccall f_30977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30963)
static void C_fcall f_30963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30927)
static void C_ccall f_30927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30603)
static void C_ccall f_30603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30881)
static void C_fcall f_30881(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30907)
static void C_ccall f_30907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30892)
static void C_ccall f_30892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30606)
static void C_ccall f_30606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30821)
static void C_fcall f_30821(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30831)
static void C_ccall f_30831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30834)
static void C_ccall f_30834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30855)
static void C_ccall f_30855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30837)
static void C_fcall f_30837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30841)
static void C_ccall f_30841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30789)
static void C_ccall f_30789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30792)
static void C_fcall f_30792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30609)
static void C_fcall f_30609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30612)
static void C_fcall f_30612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30746)
static void C_ccall f_30746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30754)
static void C_ccall f_30754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30750)
static void C_ccall f_30750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30615)
static void C_fcall f_30615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30709)
static void C_ccall f_30709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30705)
static void C_ccall f_30705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30701)
static void C_ccall f_30701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30654)
static void C_ccall f_30654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30650)
static void C_ccall f_30650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30732)
static void C_ccall f_30732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30716)
static void C_ccall f_30716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11581)
static void C_fcall f_11581(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11616)
static void C_fcall f_11616(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11626)
static void C_fcall f_11626(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11630)
static void C_ccall f_11630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11633)
static void C_ccall f_11633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11694)
static void C_ccall f_11694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11685)
static void C_ccall f_11685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11636)
static void C_ccall f_11636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11655)
static void C_ccall f_11655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11662)
static void C_ccall f_11662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11639)
static void C_ccall f_11639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11645)
static void C_ccall f_11645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11614)
static void C_ccall f_11614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11589)
static void C_fcall f_11589(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11588)
static void C_ccall f_11588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11749)
static void C_fcall f_11749(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38634)
static void C_ccall f_38634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38637)
static void C_ccall f_38637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38640)
static void C_ccall f_38640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38644)
static void C_ccall f_38644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38858)
static void C_ccall f_38858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38846)
static void C_ccall f_38846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38842)
static void C_ccall f_38842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38647)
static void C_fcall f_38647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38791)
static void C_fcall f_38791(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38827)
static void C_ccall f_38827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38820)
static void C_ccall f_38820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38650)
static void C_ccall f_38650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38721)
static void C_ccall f_38721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38725)
static void C_ccall f_38725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38717)
static void C_ccall f_38717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6752)
static void C_ccall f_6752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38697)
static void C_ccall f_38697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38693)
static void C_ccall f_38693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38660)
static void C_fcall f_38660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38671)
static void C_ccall f_38671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38679)
static void C_ccall f_38679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38675)
static void C_ccall f_38675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40283)
static void C_ccall f_40283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40299)
static void C_ccall f_40299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40302)
static void C_ccall f_40302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40305)
static void C_fcall f_40305(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40308)
static void C_fcall f_40308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40319)
static void C_ccall f_40319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40277)
static void C_ccall f_40277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31094)
static void C_ccall f_31094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40138)
static void C_ccall f_40138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40177)
static void C_ccall f_40177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40151)
static void C_fcall f_40151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40132)
static void C_ccall f_40132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31097)
static void C_ccall f_31097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39720)
static void C_ccall f_39720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39724)
static void C_ccall f_39724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39736)
static void C_ccall f_39736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39794)
static void C_ccall f_39794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39797)
static void C_ccall f_39797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39800)
static void C_ccall f_39800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40012)
static void C_ccall f_40012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39950)
static void C_ccall f_39950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39984)
static void C_ccall f_39984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39959)
static void C_fcall f_39959(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39970)
static void C_ccall f_39970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39966)
static void C_ccall f_39966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39809)
static void C_fcall f_39809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39887)
static void C_ccall f_39887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39928)
static void C_ccall f_39928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39932)
static void C_ccall f_39932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39936)
static void C_ccall f_39936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39891)
static void C_ccall f_39891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39895)
static void C_ccall f_39895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39922)
static void C_ccall f_39922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39898)
static void C_fcall f_39898(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39812)
static void C_fcall f_39812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39884)
static void C_ccall f_39884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39826)
static void C_ccall f_39826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39828)
static void C_fcall f_39828(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39876)
static void C_ccall f_39876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39847)
static void C_ccall f_39847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39864)
static void C_ccall f_39864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39850)
static void C_fcall f_39850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39843)
static void C_ccall f_39843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39815)
static void C_ccall f_39815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39745)
static void C_fcall f_39745(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39755)
static void C_ccall f_39755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39761)
static void C_ccall f_39761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39733)
static void C_ccall f_39733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39681)
static void C_ccall f_39681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39698)
static void C_ccall f_39698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39714)
static void C_ccall f_39714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39692)
static void C_fcall f_39692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39675)
static void C_ccall f_39675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31100)
static void C_ccall f_31100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39599)
static void C_ccall f_39599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31103)
static void C_ccall f_31103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39575)
static void C_ccall f_39575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39587)
static void C_ccall f_39587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39583)
static void C_ccall f_39583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39561)
static void C_ccall f_39561(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39569)
static void C_ccall f_39569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39555)
static void C_ccall f_39555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31106)
static void C_ccall f_31106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37911)
static void C_ccall f_37911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39551)
static void C_ccall f_39551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38461)
static void C_ccall f_38461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39543)
static void C_ccall f_39543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38464)
static void C_ccall f_38464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39535)
static void C_ccall f_39535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38467)
static void C_ccall f_38467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39527)
static void C_ccall f_39527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38470)
static void C_ccall f_38470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39519)
static void C_ccall f_39519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38473)
static void C_ccall f_38473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39511)
static void C_ccall f_39511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38476)
static void C_ccall f_38476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39503)
static void C_ccall f_39503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38479)
static void C_ccall f_38479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39495)
static void C_ccall f_39495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38482)
static void C_ccall f_38482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39487)
static void C_ccall f_39487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38485)
static void C_ccall f_38485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39479)
static void C_ccall f_39479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38488)
static void C_ccall f_38488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39471)
static void C_ccall f_39471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38491)
static void C_ccall f_38491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39463)
static void C_ccall f_39463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38494)
static void C_ccall f_38494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39455)
static void C_ccall f_39455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38497)
static void C_ccall f_38497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39447)
static void C_ccall f_39447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38500)
static void C_ccall f_38500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39439)
static void C_ccall f_39439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38503)
static void C_ccall f_38503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39431)
static void C_ccall f_39431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38506)
static void C_ccall f_38506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39423)
static void C_ccall f_39423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38509)
static void C_ccall f_38509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39415)
static void C_ccall f_39415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38512)
static void C_ccall f_38512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39407)
static void C_ccall f_39407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38515)
static void C_ccall f_38515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39338)
static void C_fcall f_39338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39366)
static void C_fcall f_39366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38589)
static void C_ccall f_38589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39336)
static void C_ccall f_39336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39318)
static void C_ccall f_39318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39260)
static void C_ccall f_39260(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39260)
static void C_ccall f_39260r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39278)
static void C_fcall f_39278(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39288)
static void C_ccall f_39288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39264)
static void C_ccall f_39264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39254)
static void C_ccall f_39254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39248)
static void C_ccall f_39248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39242)
static void C_ccall f_39242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39236)
static void C_ccall f_39236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38866)
static void C_ccall f_38866(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38866)
static void C_ccall f_38866r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39203)
static void C_fcall f_39203(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39213)
static void C_ccall f_39213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39189)
static void C_ccall f_39189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38873)
static void C_ccall f_38873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39127)
static void C_fcall f_39127(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39141)
static void C_ccall f_39141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38876)
static void C_ccall f_38876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39074)
static void C_fcall f_39074(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39097)
static void C_fcall f_39097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39084)
static void C_ccall f_39084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39060)
static void C_ccall f_39060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38882)
static void C_ccall f_38882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39022)
static void C_fcall f_39022(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39032)
static void C_ccall f_39032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39008)
static void C_ccall f_39008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38888)
static void C_ccall f_38888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39005)
static void C_ccall f_39005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38891)
static void C_fcall f_38891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38997)
static void C_ccall f_38997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39001)
static void C_ccall f_39001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38961)
static void C_fcall f_38961(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38986)
static void C_ccall f_38986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38990)
static void C_ccall f_38990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38971)
static void C_ccall f_38971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38950)
static void C_ccall f_38950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38920)
static void C_fcall f_38920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38892)
static void C_fcall f_38892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38591)
static void C_fcall f_38591(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38607)
static void C_ccall f_38607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38518)
static void C_ccall f_38518(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38529)
static void C_ccall f_38529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38532)
static void C_fcall f_38532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38539)
static void C_ccall f_38539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37987)
static void C_fcall f_37987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38320)
static void C_fcall f_38320(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38340)
static void C_ccall f_38340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38409)
static void C_ccall f_38409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38405)
static void C_ccall f_38405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38366)
static void C_ccall f_38366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38378)
static void C_ccall f_38378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38374)
static void C_ccall f_38374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38330)
static void C_ccall f_38330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37991)
static void C_ccall f_37991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37995)
static void C_ccall f_37995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37999)
static void C_ccall f_37999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38003)
static void C_ccall f_38003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38007)
static void C_ccall f_38007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38008)
static void C_ccall f_38008(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38014)
static void C_ccall f_38014(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38018)
static void C_ccall f_38018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38247)
static void C_fcall f_38247(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38294)
static void C_ccall f_38294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38284)
static void C_fcall f_38284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38291)
static void C_ccall f_38291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38278)
static void C_ccall f_38278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38257)
static void C_ccall f_38257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38021)
static void C_ccall f_38021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38202)
static void C_fcall f_38202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38207)
static void C_fcall f_38207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38217)
static void C_ccall f_38217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38024)
static void C_ccall f_38024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38156)
static void C_fcall f_38156(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38161)
static void C_fcall f_38161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38171)
static void C_ccall f_38171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38027)
static void C_ccall f_38027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38053)
static void C_fcall f_38053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38062)
static void C_fcall f_38062(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38078)
static void C_ccall f_38078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38131)
static void C_ccall f_38131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38112)
static void C_ccall f_38112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38081)
static void C_ccall f_38081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38102)
static void C_ccall f_38102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38088)
static void C_ccall f_38088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38072)
static void C_ccall f_38072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38030)
static void C_ccall f_38030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38043)
static void C_ccall f_38043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37796)
static void C_ccall f_37796(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37796)
static void C_ccall f_37796r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_37801)
static void C_ccall f_37801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37805)
static void C_ccall f_37805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37856)
static void C_ccall f_37856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37852)
static void C_fcall f_37852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37848)
static void C_ccall f_37848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37808)
static void C_fcall f_37808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37841)
static void C_ccall f_37841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37837)
static void C_fcall f_37837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37833)
static void C_ccall f_37833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37811)
static void C_fcall f_37811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37814)
static void C_ccall f_37814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37826)
static void C_ccall f_37826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37818)
static void C_ccall f_37818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37723)
static void C_ccall f_37723(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37614)
static void C_ccall f_37614(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37614)
static void C_ccall f_37614r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37633)
static void C_fcall f_37633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37640)
static void C_fcall f_37640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37646)
static void C_fcall f_37646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37666)
static void C_ccall f_37666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37674)
static void C_ccall f_37674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37670)
static void C_ccall f_37670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37656)
static void C_ccall f_37656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37618)
static void C_ccall f_37618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37509)
static void C_ccall f_37509(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37509)
static void C_ccall f_37509r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37528)
static void C_fcall f_37528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37535)
static void C_fcall f_37535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37541)
static void C_fcall f_37541(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37561)
static void C_ccall f_37561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37569)
static void C_ccall f_37569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37565)
static void C_ccall f_37565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37551)
static void C_ccall f_37551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37513)
static void C_ccall f_37513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37503)
static void C_ccall f_37503(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37488)
static void C_ccall f_37488(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37488)
static void C_ccall f_37488r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37482)
static void C_ccall f_37482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37476)
static void C_ccall f_37476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37470)
static void C_ccall f_37470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37464)
static void C_ccall f_37464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37458)
static void C_ccall f_37458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37428)
static void C_ccall f_37428(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37428)
static void C_ccall f_37428r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37438)
static void C_ccall f_37438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36999)
static void C_ccall f_36999(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36999)
static void C_ccall f_36999r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37405)
static void C_ccall f_37405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37420)
static void C_ccall f_37420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37412)
static void C_ccall f_37412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37376)
static void C_ccall f_37376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37380)
static void C_ccall f_37380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37341)
static void C_ccall f_37341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37345)
static void C_ccall f_37345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37306)
static void C_ccall f_37306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37310)
static void C_ccall f_37310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37003)
static void C_fcall f_37003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37270)
static void C_ccall f_37270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37285)
static void C_ccall f_37285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37277)
static void C_ccall f_37277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37241)
static void C_ccall f_37241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37245)
static void C_ccall f_37245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37206)
static void C_ccall f_37206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37210)
static void C_ccall f_37210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37171)
static void C_ccall f_37171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37175)
static void C_ccall f_37175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37006)
static void C_fcall f_37006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37135)
static void C_ccall f_37135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37150)
static void C_ccall f_37150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37142)
static void C_ccall f_37142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37106)
static void C_ccall f_37106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37110)
static void C_ccall f_37110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37071)
static void C_ccall f_37071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37075)
static void C_ccall f_37075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37036)
static void C_ccall f_37036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37040)
static void C_ccall f_37040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37009)
static void C_fcall f_37009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37012)
static void C_ccall f_37012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36570)
static void C_ccall f_36570(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36570)
static void C_ccall f_36570r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36976)
static void C_ccall f_36976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36991)
static void C_ccall f_36991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36983)
static void C_ccall f_36983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36947)
static void C_ccall f_36947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36951)
static void C_ccall f_36951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36912)
static void C_ccall f_36912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36916)
static void C_ccall f_36916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36877)
static void C_ccall f_36877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36881)
static void C_ccall f_36881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36574)
static void C_fcall f_36574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36841)
static void C_ccall f_36841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36856)
static void C_ccall f_36856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36848)
static void C_ccall f_36848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36812)
static void C_ccall f_36812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36816)
static void C_ccall f_36816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36777)
static void C_ccall f_36777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36781)
static void C_ccall f_36781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36742)
static void C_ccall f_36742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36746)
static void C_ccall f_36746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36577)
static void C_fcall f_36577(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36706)
static void C_ccall f_36706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36721)
static void C_ccall f_36721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36713)
static void C_ccall f_36713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36677)
static void C_ccall f_36677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36681)
static void C_ccall f_36681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36642)
static void C_ccall f_36642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36646)
static void C_ccall f_36646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36607)
static void C_ccall f_36607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36611)
static void C_ccall f_36611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36580)
static void C_fcall f_36580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36583)
static void C_ccall f_36583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36141)
static void C_ccall f_36141(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36141)
static void C_ccall f_36141r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36547)
static void C_ccall f_36547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36562)
static void C_ccall f_36562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36554)
static void C_ccall f_36554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36518)
static void C_ccall f_36518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36522)
static void C_ccall f_36522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36483)
static void C_ccall f_36483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36487)
static void C_ccall f_36487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36448)
static void C_ccall f_36448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36452)
static void C_ccall f_36452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36145)
static void C_fcall f_36145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36412)
static void C_ccall f_36412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36427)
static void C_ccall f_36427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36419)
static void C_ccall f_36419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36383)
static void C_ccall f_36383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36387)
static void C_ccall f_36387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36348)
static void C_ccall f_36348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36352)
static void C_ccall f_36352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36313)
static void C_ccall f_36313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36317)
static void C_ccall f_36317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36148)
static void C_fcall f_36148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36277)
static void C_ccall f_36277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36292)
static void C_ccall f_36292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36284)
static void C_ccall f_36284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36248)
static void C_ccall f_36248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36252)
static void C_ccall f_36252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36213)
static void C_ccall f_36213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36217)
static void C_ccall f_36217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36178)
static void C_ccall f_36178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36182)
static void C_ccall f_36182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36151)
static void C_fcall f_36151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36154)
static void C_ccall f_36154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35434)
static void C_ccall f_35434(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35434)
static void C_ccall f_35434r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36118)
static void C_ccall f_36118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36133)
static void C_ccall f_36133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36125)
static void C_ccall f_36125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36089)
static void C_ccall f_36089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36093)
static void C_ccall f_36093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36054)
static void C_ccall f_36054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36058)
static void C_ccall f_36058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36019)
static void C_ccall f_36019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36023)
static void C_ccall f_36023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35984)
static void C_ccall f_35984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35988)
static void C_ccall f_35988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35438)
static void C_fcall f_35438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35948)
static void C_ccall f_35948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35963)
static void C_ccall f_35963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35955)
static void C_ccall f_35955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35919)
static void C_ccall f_35919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35923)
static void C_ccall f_35923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35884)
static void C_ccall f_35884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35888)
static void C_ccall f_35888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35849)
static void C_ccall f_35849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35853)
static void C_ccall f_35853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35814)
static void C_ccall f_35814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35818)
static void C_ccall f_35818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35441)
static void C_fcall f_35441(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35778)
static void C_ccall f_35778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35793)
static void C_ccall f_35793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35785)
static void C_ccall f_35785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35749)
static void C_ccall f_35749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35753)
static void C_ccall f_35753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35714)
static void C_ccall f_35714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35718)
static void C_ccall f_35718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35679)
static void C_ccall f_35679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35683)
static void C_ccall f_35683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35644)
static void C_ccall f_35644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35648)
static void C_ccall f_35648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35444)
static void C_fcall f_35444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35608)
static void C_ccall f_35608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35623)
static void C_ccall f_35623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35615)
static void C_ccall f_35615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35579)
static void C_ccall f_35579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35583)
static void C_ccall f_35583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35544)
static void C_ccall f_35544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35548)
static void C_ccall f_35548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35509)
static void C_ccall f_35509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35513)
static void C_ccall f_35513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35474)
static void C_ccall f_35474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35478)
static void C_ccall f_35478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35447)
static void C_fcall f_35447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35450)
static void C_ccall f_35450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34727)
static void C_ccall f_34727(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34727)
static void C_ccall f_34727r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35411)
static void C_ccall f_35411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35426)
static void C_ccall f_35426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35418)
static void C_ccall f_35418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35382)
static void C_ccall f_35382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35386)
static void C_ccall f_35386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35347)
static void C_ccall f_35347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35351)
static void C_ccall f_35351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35312)
static void C_ccall f_35312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35316)
static void C_ccall f_35316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35277)
static void C_ccall f_35277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35281)
static void C_ccall f_35281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34731)
static void C_fcall f_34731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35241)
static void C_ccall f_35241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35256)
static void C_ccall f_35256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35248)
static void C_ccall f_35248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35212)
static void C_ccall f_35212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35216)
static void C_ccall f_35216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35177)
static void C_ccall f_35177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35181)
static void C_ccall f_35181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35142)
static void C_ccall f_35142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35146)
static void C_ccall f_35146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35107)
static void C_ccall f_35107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35111)
static void C_ccall f_35111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34734)
static void C_fcall f_34734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35071)
static void C_ccall f_35071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35086)
static void C_ccall f_35086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35078)
static void C_ccall f_35078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35042)
static void C_ccall f_35042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35046)
static void C_ccall f_35046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35007)
static void C_ccall f_35007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35011)
static void C_ccall f_35011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34972)
static void C_ccall f_34972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34976)
static void C_ccall f_34976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34937)
static void C_ccall f_34937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34941)
static void C_ccall f_34941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34737)
static void C_fcall f_34737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34901)
static void C_ccall f_34901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34916)
static void C_ccall f_34916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34908)
static void C_ccall f_34908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34872)
static void C_ccall f_34872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34876)
static void C_ccall f_34876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34837)
static void C_ccall f_34837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34841)
static void C_ccall f_34841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34802)
static void C_ccall f_34802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34806)
static void C_ccall f_34806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34767)
static void C_ccall f_34767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34771)
static void C_ccall f_34771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34740)
static void C_fcall f_34740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34743)
static void C_ccall f_34743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34020)
static void C_ccall f_34020(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34020)
static void C_ccall f_34020r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34704)
static void C_ccall f_34704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34719)
static void C_ccall f_34719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34711)
static void C_ccall f_34711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34675)
static void C_ccall f_34675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34679)
static void C_ccall f_34679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34640)
static void C_ccall f_34640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34644)
static void C_ccall f_34644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34605)
static void C_ccall f_34605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34609)
static void C_ccall f_34609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34570)
static void C_ccall f_34570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34574)
static void C_ccall f_34574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34024)
static void C_fcall f_34024(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34534)
static void C_ccall f_34534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34549)
static void C_ccall f_34549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34541)
static void C_ccall f_34541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34505)
static void C_ccall f_34505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34509)
static void C_ccall f_34509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34470)
static void C_ccall f_34470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34474)
static void C_ccall f_34474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34435)
static void C_ccall f_34435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34439)
static void C_ccall f_34439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34400)
static void C_ccall f_34400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34404)
static void C_ccall f_34404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34027)
static void C_fcall f_34027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34364)
static void C_ccall f_34364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34379)
static void C_ccall f_34379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34371)
static void C_ccall f_34371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34335)
static void C_ccall f_34335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34339)
static void C_ccall f_34339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34300)
static void C_ccall f_34300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34304)
static void C_ccall f_34304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34265)
static void C_ccall f_34265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34269)
static void C_ccall f_34269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34230)
static void C_ccall f_34230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34234)
static void C_ccall f_34234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34030)
static void C_fcall f_34030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34194)
static void C_ccall f_34194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34209)
static void C_ccall f_34209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34201)
static void C_ccall f_34201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34165)
static void C_ccall f_34165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34169)
static void C_ccall f_34169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34130)
static void C_ccall f_34130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34134)
static void C_ccall f_34134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34095)
static void C_ccall f_34095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34099)
static void C_ccall f_34099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34060)
static void C_ccall f_34060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34064)
static void C_ccall f_34064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34033)
static void C_fcall f_34033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34036)
static void C_ccall f_34036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33591)
static void C_ccall f_33591(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33591)
static void C_ccall f_33591r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33997)
static void C_ccall f_33997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34012)
static void C_ccall f_34012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34004)
static void C_ccall f_34004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33968)
static void C_ccall f_33968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33972)
static void C_ccall f_33972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33933)
static void C_ccall f_33933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33937)
static void C_ccall f_33937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33898)
static void C_ccall f_33898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33902)
static void C_ccall f_33902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33595)
static void C_fcall f_33595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33862)
static void C_ccall f_33862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33877)
static void C_ccall f_33877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33869)
static void C_ccall f_33869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33833)
static void C_ccall f_33833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33837)
static void C_ccall f_33837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33798)
static void C_ccall f_33798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33802)
static void C_ccall f_33802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33763)
static void C_ccall f_33763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33767)
static void C_ccall f_33767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33598)
static void C_fcall f_33598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33727)
static void C_ccall f_33727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33742)
static void C_ccall f_33742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33734)
static void C_ccall f_33734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33698)
static void C_ccall f_33698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33702)
static void C_ccall f_33702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33663)
static void C_ccall f_33663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33667)
static void C_ccall f_33667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33628)
static void C_ccall f_33628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33632)
static void C_ccall f_33632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33601)
static void C_fcall f_33601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33604)
static void C_ccall f_33604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32536)
static void C_ccall f_32536(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32536)
static void C_ccall f_32536r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33568)
static void C_ccall f_33568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33583)
static void C_ccall f_33583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33575)
static void C_ccall f_33575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33539)
static void C_ccall f_33539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33543)
static void C_ccall f_33543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33504)
static void C_ccall f_33504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33508)
static void C_ccall f_33508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33469)
static void C_ccall f_33469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33473)
static void C_ccall f_33473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33434)
static void C_ccall f_33434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33438)
static void C_ccall f_33438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33399)
static void C_ccall f_33399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33403)
static void C_ccall f_33403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32540)
static void C_fcall f_32540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33363)
static void C_ccall f_33363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33378)
static void C_ccall f_33378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33370)
static void C_ccall f_33370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33334)
static void C_ccall f_33334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33338)
static void C_ccall f_33338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33299)
static void C_ccall f_33299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33303)
static void C_ccall f_33303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33264)
static void C_ccall f_33264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33268)
static void C_ccall f_33268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33229)
static void C_ccall f_33229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33233)
static void C_ccall f_33233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33194)
static void C_ccall f_33194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33198)
static void C_ccall f_33198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32543)
static void C_fcall f_32543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33158)
static void C_ccall f_33158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33173)
static void C_ccall f_33173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33165)
static void C_ccall f_33165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33129)
static void C_ccall f_33129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33133)
static void C_ccall f_33133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33094)
static void C_ccall f_33094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33098)
static void C_ccall f_33098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33059)
static void C_ccall f_33059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33063)
static void C_ccall f_33063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33024)
static void C_ccall f_33024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33028)
static void C_ccall f_33028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32989)
static void C_ccall f_32989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32993)
static void C_ccall f_32993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32546)
static void C_fcall f_32546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32953)
static void C_ccall f_32953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32968)
static void C_ccall f_32968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32960)
static void C_ccall f_32960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32924)
static void C_ccall f_32924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32928)
static void C_ccall f_32928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32889)
static void C_ccall f_32889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32893)
static void C_ccall f_32893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32854)
static void C_ccall f_32854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32858)
static void C_ccall f_32858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32819)
static void C_ccall f_32819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32823)
static void C_ccall f_32823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32784)
static void C_ccall f_32784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32788)
static void C_ccall f_32788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32549)
static void C_fcall f_32549(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32748)
static void C_ccall f_32748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32763)
static void C_ccall f_32763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32755)
static void C_ccall f_32755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32719)
static void C_ccall f_32719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32723)
static void C_ccall f_32723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32684)
static void C_ccall f_32684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32688)
static void C_ccall f_32688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32649)
static void C_ccall f_32649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32653)
static void C_ccall f_32653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32614)
static void C_ccall f_32614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32618)
static void C_ccall f_32618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32579)
static void C_ccall f_32579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32583)
static void C_ccall f_32583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32552)
static void C_fcall f_32552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32555)
static void C_ccall f_32555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32530)
static void C_ccall f_32530(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7392)
static void C_ccall f_7392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32377)
static void C_fcall f_32377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32384)
static void C_fcall f_32384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32322)
static void C_fcall f_32322(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32329)
static void C_fcall f_32329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32075)
static void C_ccall f_32075(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32075)
static void C_ccall f_32075r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32299)
static void C_ccall f_32299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32314)
static void C_ccall f_32314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32306)
static void C_ccall f_32306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32270)
static void C_ccall f_32270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32274)
static void C_ccall f_32274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32235)
static void C_ccall f_32235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32239)
static void C_ccall f_32239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32079)
static void C_fcall f_32079(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_ccall f_32199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32214)
static void C_ccall f_32214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32206)
static void C_ccall f_32206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32170)
static void C_ccall f_32170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32174)
static void C_ccall f_32174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32135)
static void C_ccall f_32135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32139)
static void C_ccall f_32139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32082)
static void C_fcall f_32082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32085)
static void C_ccall f_32085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32098)
static void C_ccall f_32098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32102)
static void C_ccall f_32102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32014)
static void C_ccall f_32014(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32014)
static void C_ccall f_32014r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32018)
static void C_ccall f_32018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32021)
static void C_ccall f_32021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7330)
static void C_ccall f_7330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32024)
static void C_ccall f_32024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32046)
static void C_ccall f_32046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32036)
static void C_ccall f_32036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32027)
static void C_ccall f_32027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31986)
static void C_ccall f_31986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31990)
static void C_ccall f_31990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31962)
static void C_ccall f_31962(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31913)
static void C_ccall f_31913(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7316)
static void C_ccall f_7316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31917)
static void C_ccall f_31917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31933)
static void C_ccall f_31933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31960)
static void C_ccall f_31960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31936)
static void C_ccall f_31936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31956)
static void C_ccall f_31956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31952)
static void C_ccall f_31952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31920)
static void C_ccall f_31920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31904)
static void C_ccall f_31904(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31908)
static void C_ccall f_31908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31751)
static void C_ccall f_31751(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31751)
static void C_ccall f_31751r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31878)
static void C_fcall f_31878(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31891)
static void C_ccall f_31891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31873)
static void C_ccall f_31873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31754)
static void C_fcall f_31754(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31870)
static void C_ccall f_31870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31854)
static void C_ccall f_31854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31782)
static void C_ccall f_31782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31790)
static void C_fcall f_31790(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31800)
static void C_ccall f_31800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31803)
static void C_ccall f_31803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31785)
static void C_ccall f_31785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_fcall f_31592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7492)
static void C_ccall f_7492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31614)
static void C_ccall f_31614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31618)
static void C_ccall f_31618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31596)
static void C_fcall f_31596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31108)
static void C_ccall f_31108(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31108)
static void C_ccall f_31108r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31569)
static void C_ccall f_31569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31584)
static void C_ccall f_31584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31576)
static void C_ccall f_31576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31540)
static void C_ccall f_31540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31544)
static void C_ccall f_31544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31505)
static void C_ccall f_31505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31509)
static void C_ccall f_31509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31470)
static void C_ccall f_31470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31112)
static void C_fcall f_31112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31434)
static void C_ccall f_31434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31449)
static void C_ccall f_31449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31405)
static void C_ccall f_31405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31409)
static void C_ccall f_31409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31370)
static void C_ccall f_31370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31374)
static void C_ccall f_31374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31335)
static void C_ccall f_31335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31339)
static void C_ccall f_31339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31115)
static void C_fcall f_31115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31299)
static void C_ccall f_31299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31314)
static void C_ccall f_31314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31306)
static void C_ccall f_31306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31270)
static void C_ccall f_31270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31274)
static void C_ccall f_31274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31235)
static void C_ccall f_31235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31239)
static void C_ccall f_31239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31200)
static void C_ccall f_31200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31204)
static void C_ccall f_31204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31118)
static void C_fcall f_31118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31121)
static void C_ccall f_31121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31176)
static void C_ccall f_31176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31172)
static void C_ccall f_31172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31124)
static void C_fcall f_31124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28912)
static void C_ccall f_28912(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28925)
static void C_ccall f_28925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28932)
static void C_fcall f_28932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28939)
static void C_ccall f_28939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28918)
static void C_ccall f_28918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31136)
static void C_ccall f_31136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31158)
static void C_ccall f_31158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31720)
static void C_fcall f_31720(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31730)
static void C_fcall f_31730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31633)
static void C_ccall f_31633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31690)
static void C_fcall f_31690(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31700)
static void C_fcall f_31700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31641)
static void C_ccall f_31641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31659)
static void C_ccall f_31659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31663)
static void C_ccall f_31663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31674)
static void C_ccall f_31674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31651)
static void C_ccall f_31651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31644)
static void C_ccall f_31644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31127)
static void C_ccall f_31127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30039)
static void C_ccall f_30039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30052)
static void C_ccall f_30052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30102)
static void C_ccall f_30102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30199)
static void C_ccall f_30199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30267)
static void C_ccall f_30267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30524)
static void C_ccall f_30524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30274)
static void C_fcall f_30274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30512)
static void C_ccall f_30512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30463)
static void C_ccall f_30463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30469)
static void C_ccall f_30469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30493)
static void C_ccall f_30493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30489)
static void C_ccall f_30489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30477)
static void C_ccall f_30477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30277)
static void C_fcall f_30277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30439)
static void C_ccall f_30439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30443)
static void C_ccall f_30443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30280)
static void C_fcall f_30280(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30416)
static void C_ccall f_30416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30420)
static void C_ccall f_30420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30283)
static void C_fcall f_30283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30393)
static void C_ccall f_30393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30397)
static void C_ccall f_30397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30286)
static void C_fcall f_30286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30318)
static void C_ccall f_30318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30336)
static void C_ccall f_30336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30354)
static void C_ccall f_30354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30372)
static void C_ccall f_30372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30289)
static void C_fcall f_30289(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30293)
static void C_ccall f_30293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30203)
static void C_ccall f_30203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30207)
static void C_ccall f_30207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30211)
static void C_ccall f_30211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30106)
static void C_ccall f_30106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30110)
static void C_ccall f_30110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30114)
static void C_ccall f_30114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30133)
static void C_ccall f_30133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30137)
static void C_ccall f_30137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30117)
static void C_fcall f_30117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30121)
static void C_ccall f_30121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30056)
static void C_ccall f_30056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_ccall f_30060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30064)
static void C_ccall f_30064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30046)
static void C_fcall f_30046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29861)
static void C_fcall f_29861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29873)
static void C_fcall f_29873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29892)
static void C_ccall f_29892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29910)
static void C_fcall f_29910(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29942)
static void C_ccall f_29942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29945)
static void C_fcall f_29945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29938)
static void C_ccall f_29938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29924)
static void C_ccall f_29924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29895)
static void C_ccall f_29895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29840)
static void C_fcall f_29840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29847)
static void C_ccall f_29847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29850)
static void C_ccall f_29850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29856)
static void C_ccall f_29856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29775)
static void C_fcall f_29775(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29784)
static void C_fcall f_29784(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29807)
static void C_ccall f_29807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29797)
static void C_fcall f_29797(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29731)
static void C_fcall f_29731(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29739)
static void C_ccall f_29739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29743)
static void C_ccall f_29743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29719)
static void C_fcall f_29719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29617)
static void C_fcall f_29617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29569)
static void C_fcall f_29569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28950)
static void C_fcall f_28950(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28954)
static void C_ccall f_28954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28957)
static void C_ccall f_28957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29383)
static void C_ccall f_29383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29379)
static void C_ccall f_29379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29375)
static void C_ccall f_29375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28960)
static void C_fcall f_28960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29083)
static void C_ccall f_29083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28265)
static void C_ccall f_28265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29089)
static void C_fcall f_29089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28281)
static void C_ccall f_28281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29177)
static void C_fcall f_29177(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29247)
static void C_ccall f_29247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28297)
static void C_ccall f_28297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29250)
static void C_fcall f_29250(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28329)
static void C_ccall f_28329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29328)
static void C_fcall f_29328(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29354)
static void C_ccall f_29354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29348)
static void C_ccall f_29348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29337)
static void C_ccall f_29337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29279)
static void C_fcall f_29279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29289)
static void C_ccall f_29289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29315)
static void C_ccall f_29315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29309)
static void C_ccall f_29309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29292)
static void C_ccall f_29292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29302)
static void C_ccall f_29302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29295)
static void C_fcall f_29295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29256)
static void C_ccall f_29256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29265)
static void C_ccall f_29265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29259)
static void C_fcall f_29259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29183)
static void C_ccall f_29183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29201)
static void C_fcall f_29201(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29234)
static void C_ccall f_29234(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29220)
static void C_ccall f_29220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29228)
static void C_ccall f_29228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29211)
static void C_ccall f_29211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29186)
static void C_ccall f_29186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29098)
static void C_ccall f_29098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29120)
static void C_fcall f_29120(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29167)
static void C_ccall f_29167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29153)
static void C_ccall f_29153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29161)
static void C_ccall f_29161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29133)
static void C_ccall f_29133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29136)
static void C_fcall f_29136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29101)
static void C_ccall f_29101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29118)
static void C_ccall f_29118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29104)
static void C_fcall f_29104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28969)
static void C_ccall f_28969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28975)
static void C_ccall f_28975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29033)
static void C_ccall f_29033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29036)
static void C_ccall f_29036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29057)
static void C_ccall f_29057(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29068)
static void C_ccall f_29068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29047)
static void C_ccall f_29047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28981)
static void C_ccall f_28981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28991)
static void C_ccall f_28991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29027)
static void C_ccall f_29027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28997)
static void C_ccall f_28997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29012)
static void C_ccall f_29012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29020)
static void C_ccall f_29020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29004)
static void C_ccall f_29004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28846)
static void C_fcall f_28846(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28848)
static void C_ccall f_28848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28896)
static void C_ccall f_28896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28852)
static void C_ccall f_28852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28855)
static void C_fcall f_28855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28860)
static void C_fcall f_28860(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28881)
static void C_ccall f_28881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28838)
static void C_fcall f_28838(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28840)
static void C_ccall f_28840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28661)
static void C_ccall f_28661(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28661)
static void C_ccall f_28661r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28669)
static void C_ccall f_28669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28630)
static void C_fcall f_28630(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28647)
static void C_ccall f_28647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28651)
static void C_ccall f_28651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28597)
static void C_fcall f_28597(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28604)
static void C_ccall f_28604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28491)
static void C_ccall f_28491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28498)
static void C_ccall f_28498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28613)
static void C_ccall f_28613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28836)
static void C_ccall f_28836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28813)
static void C_ccall f_28813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28829)
static void C_ccall f_28829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28675)
static void C_ccall f_28675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28678)
static void C_ccall f_28678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28702)
static void C_ccall f_28702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28759)
static void C_ccall f_28759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28765)
static void C_ccall f_28765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28774)
static void C_ccall f_28774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28783)
static void C_ccall f_28783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28792)
static void C_ccall f_28792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28801)
static void C_ccall f_28801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28753)
static void C_ccall f_28753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28708)
static void C_ccall f_28708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28714)
static void C_ccall f_28714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28720)
static void C_ccall f_28720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28726)
static void C_ccall f_28726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28732)
static void C_ccall f_28732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28738)
static void C_ccall f_28738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28579)
static void C_fcall f_28579(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28586)
static void C_ccall f_28586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28512)
static void C_fcall f_28512(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28500)
static void C_fcall f_28500(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28468)
static void C_fcall f_28468(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28475)
static void C_ccall f_28475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28482)
static void C_ccall f_28482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28452)
static void C_fcall f_28452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28459)
static void C_ccall f_28459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28466)
static void C_ccall f_28466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28443)
static void C_fcall f_28443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28425)
static void C_fcall f_28425(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28407)
static void C_fcall f_28407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28392)
static void C_fcall f_28392(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28386)
static void C_fcall f_28386(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28338)
static void C_fcall f_28338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28306)
static void C_fcall f_28306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28313)
static void C_ccall f_28313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28248)
static void C_fcall f_28248(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28256)
static void C_ccall f_28256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_fcall f_28238(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28246)
static void C_ccall f_28246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28232)
static void C_fcall f_28232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28220)
static void C_fcall f_28220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28217)
static void C_ccall f_28217(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28199)
static void C_fcall f_28199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28203)
static void C_ccall f_28203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28097)
static void C_fcall f_28097(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28087)
static void C_fcall f_28087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28075)
static void C_fcall f_28075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28052)
static void C_ccall f_28052(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28043)
static void C_fcall f_28043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28007)
static void C_fcall f_28007(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27986)
static void C_ccall f_27986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27790)
static void C_ccall f_27790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27794)
static void C_fcall f_27794(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27943)
static void C_fcall f_27943(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27969)
static void C_ccall f_27969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27954)
static void C_ccall f_27954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27800)
static void C_ccall f_27800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27805)
static void C_ccall f_27805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27809)
static void C_ccall f_27809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27812)
static void C_ccall f_27812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27815)
static void C_ccall f_27815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27818)
static void C_ccall f_27818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27821)
static void C_ccall f_27821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27824)
static void C_ccall f_27824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27829)
static void C_fcall f_27829(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27923)
static void C_ccall f_27923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27930)
static void C_ccall f_27930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27839)
static void C_ccall f_27839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27860)
static void C_ccall f_27860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27864)
static void C_ccall f_27864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27868)
static void C_ccall f_27868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27870)
static void C_fcall f_27870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27842)
static void C_ccall f_27842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27664)
static void C_ccall f_27664(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27670)
static void C_ccall f_27670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27674)
static void C_ccall f_27674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27692)
static void C_ccall f_27692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27695)
static void C_ccall f_27695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27699)
static void C_ccall f_27699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27702)
static void C_ccall f_27702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27754)
static void C_fcall f_27754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27765)
static void C_ccall f_27765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27705)
static void C_ccall f_27705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27715)
static void C_ccall f_27715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27717)
static void C_fcall f_27717(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27561)
static void C_ccall f_27561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27585)
static void C_ccall f_27585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27589)
static void C_ccall f_27589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27615)
static void C_fcall f_27615(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27625)
static void C_ccall f_27625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27662)
static void C_ccall f_27662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27654)
static void C_ccall f_27654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27592)
static void C_ccall f_27592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27562)
static void C_fcall f_27562(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27566)
static void C_ccall f_27566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27569)
static void C_ccall f_27569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27731)
static void C_ccall f_27731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27734)
static void C_fcall f_27734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27741)
static void C_ccall f_27741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27675)
static void C_fcall f_27675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27679)
static void C_ccall f_27679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27682)
static void C_ccall f_27682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27151)
static void C_ccall f_27151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_27151)
static void C_ccall f_27151r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_27530)
static void C_fcall f_27530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27524)
static void C_ccall f_27524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27155)
static void C_ccall f_27155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27508)
static void C_ccall f_27508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27158)
static void C_ccall f_27158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27494)
static void C_ccall f_27494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27490)
static void C_ccall f_27490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27161)
static void C_fcall f_27161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27483)
static void C_ccall f_27483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27479)
static void C_ccall f_27479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27164)
static void C_fcall f_27164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27167)
static void C_fcall f_27167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8136)
static void C_fcall f_8136(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8159)
static void C_ccall f_8159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8149)
static void C_fcall f_8149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27467)
static void C_ccall f_27467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27459)
static void C_ccall f_27459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27463)
static void C_ccall f_27463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27451)
static void C_ccall f_27451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27455)
static void C_ccall f_27455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27325)
static void C_fcall f_27325(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27440)
static void C_ccall f_27440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27444)
static void C_ccall f_27444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27432)
static void C_ccall f_27432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27436)
static void C_ccall f_27436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27328)
static void C_fcall f_27328(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27337)
static void C_fcall f_27337(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27347)
static void C_fcall f_27347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27350)
static void C_ccall f_27350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27231)
static void C_ccall f_27231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27294)
static void C_fcall f_27294(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27315)
static void C_ccall f_27315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27256)
static void C_fcall f_27256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27285)
static void C_ccall f_27285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27234)
static void C_ccall f_27234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27251)
static void C_ccall f_27251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27247)
static void C_ccall f_27247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26697)
static void C_ccall f_26697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26701)
static void C_ccall f_26701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26689)
static void C_ccall f_26689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26617)
static void C_ccall f_26617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26675)
static void C_ccall f_26675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26621)
static void C_ccall f_26621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26629)
static void C_fcall f_26629(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26639)
static void C_ccall f_26639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26642)
static void C_ccall f_26642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27211)
static void C_fcall f_27211(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27181)
static void C_fcall f_27181(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27170)
static void C_ccall f_27170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27094)
static void C_ccall f_27094(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27102)
static void C_ccall f_27102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27106)
static void C_ccall f_27106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27110)
static void C_ccall f_27110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27116)
static void C_fcall f_27116(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27126)
static void C_ccall f_27126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26882)
static void C_ccall f_26882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26950)
static void C_ccall f_26950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26953)
static void C_ccall f_26953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26956)
static void C_ccall f_26956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26959)
static void C_ccall f_26959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26962)
static void C_ccall f_26962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27060)
static void C_fcall f_27060(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27070)
static void C_ccall f_27070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27028)
static void C_fcall f_27028(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27038)
static void C_ccall f_27038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26979)
static void C_fcall f_26979(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26998)
static void C_fcall f_26998(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27008)
static void C_ccall f_27008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26989)
static void C_ccall f_26989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26965)
static void C_ccall f_26965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26918)
static void C_fcall f_26918(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26928)
static void C_ccall f_26928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26901)
static void C_fcall f_26901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26908)
static void C_ccall f_26908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26884)
static void C_fcall f_26884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26891)
static void C_ccall f_26891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26703)
static void C_ccall f_26703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26711)
static void C_ccall f_26711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26715)
static void C_ccall f_26715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26717)
static void C_fcall f_26717(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26727)
static void C_fcall f_26727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26858)
static void C_ccall f_26858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26807)
static void C_ccall f_26807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26810)
static void C_ccall f_26810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26821)
static void C_ccall f_26821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26773)
static void C_ccall f_26773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26742)
static void C_ccall f_26742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26745)
static void C_ccall f_26745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26730)
static void C_ccall f_26730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26297)
static void C_ccall f_26297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26611)
static void C_ccall f_26611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26540)
static void C_ccall f_26540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26542)
static void C_fcall f_26542(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26564)
static void C_fcall f_26564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26310)
static void C_ccall f_26310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26383)
static void C_fcall f_26383(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26536)
static void C_ccall f_26536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26520)
static void C_ccall f_26520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26472)
static void C_fcall f_26472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26486)
static void C_fcall f_26486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26439)
static void C_ccall f_26439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26414)
static void C_fcall f_26414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26313)
static void C_ccall f_26313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26321)
static void C_fcall f_26321(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24824)
static void C_ccall f_24824(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_24824)
static void C_ccall f_24824r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_26274)
static void C_ccall f_26274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26289)
static void C_ccall f_26289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26281)
static void C_ccall f_26281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26245)
static void C_ccall f_26245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26249)
static void C_ccall f_26249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26210)
static void C_ccall f_26210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26214)
static void C_ccall f_26214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26175)
static void C_ccall f_26175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26179)
static void C_ccall f_26179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26140)
static void C_ccall f_26140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26144)
static void C_ccall f_26144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26105)
static void C_ccall f_26105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26109)
static void C_ccall f_26109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26074)
static void C_ccall f_26074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24828)
static void C_fcall f_24828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26034)
static void C_ccall f_26034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26049)
static void C_ccall f_26049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26041)
static void C_ccall f_26041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26005)
static void C_ccall f_26005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26009)
static void C_ccall f_26009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25970)
static void C_ccall f_25970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25974)
static void C_ccall f_25974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25935)
static void C_ccall f_25935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25939)
static void C_ccall f_25939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25900)
static void C_ccall f_25900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25904)
static void C_ccall f_25904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25865)
static void C_ccall f_25865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25869)
static void C_ccall f_25869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25830)
static void C_ccall f_25830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25834)
static void C_ccall f_25834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24831)
static void C_fcall f_24831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25794)
static void C_ccall f_25794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25809)
static void C_ccall f_25809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25801)
static void C_ccall f_25801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25765)
static void C_ccall f_25765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25769)
static void C_ccall f_25769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25730)
static void C_ccall f_25730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25734)
static void C_ccall f_25734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25695)
static void C_ccall f_25695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25699)
static void C_ccall f_25699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25660)
static void C_ccall f_25660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25664)
static void C_ccall f_25664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25625)
static void C_ccall f_25625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25629)
static void C_ccall f_25629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25590)
static void C_ccall f_25590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25594)
static void C_ccall f_25594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24834)
static void C_fcall f_24834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25554)
static void C_ccall f_25554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25569)
static void C_ccall f_25569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25561)
static void C_ccall f_25561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25525)
static void C_ccall f_25525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25529)
static void C_ccall f_25529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25490)
static void C_ccall f_25490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25494)
static void C_ccall f_25494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25455)
static void C_ccall f_25455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25459)
static void C_ccall f_25459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25420)
static void C_ccall f_25420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25424)
static void C_ccall f_25424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25385)
static void C_ccall f_25385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25389)
static void C_ccall f_25389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25350)
static void C_ccall f_25350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25354)
static void C_ccall f_25354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24837)
static void C_fcall f_24837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25329)
static void C_ccall f_25329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25321)
static void C_ccall f_25321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25285)
static void C_ccall f_25285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25289)
static void C_ccall f_25289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25250)
static void C_ccall f_25250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25254)
static void C_ccall f_25254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25215)
static void C_ccall f_25215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25219)
static void C_ccall f_25219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25180)
static void C_ccall f_25180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25184)
static void C_ccall f_25184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25145)
static void C_ccall f_25145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25149)
static void C_ccall f_25149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25110)
static void C_ccall f_25110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25114)
static void C_ccall f_25114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24840)
static void C_fcall f_24840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25074)
static void C_ccall f_25074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25089)
static void C_ccall f_25089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25081)
static void C_ccall f_25081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25045)
static void C_ccall f_25045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25049)
static void C_ccall f_25049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25010)
static void C_ccall f_25010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25014)
static void C_ccall f_25014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24975)
static void C_ccall f_24975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24979)
static void C_ccall f_24979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24940)
static void C_ccall f_24940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24944)
static void C_ccall f_24944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24905)
static void C_ccall f_24905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24909)
static void C_ccall f_24909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24870)
static void C_ccall f_24870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24874)
static void C_ccall f_24874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24843)
static void C_fcall f_24843(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24846)
static void C_ccall f_24846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24592)
static void C_fcall f_24592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24598)
static void C_ccall f_24598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24601)
static void C_ccall f_24601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24805)
static void C_ccall f_24805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24790)
static void C_ccall f_24790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24725)
static void C_ccall f_24725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7904)
static void C_fcall f_7904(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24701)
static void C_ccall f_24701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24705)
static void C_ccall f_24705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24691)
static void C_ccall f_24691(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24699)
static void C_ccall f_24699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24677)
static void C_fcall f_24677(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24603)
static void C_fcall f_24603(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24672)
static void C_ccall f_24672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24607)
static void C_ccall f_24607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24644)
static void C_fcall f_24644(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24618)
static void C_fcall f_24618(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24563)
static void C_ccall f_24563(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24567)
static void C_ccall f_24567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24578)
static void C_ccall f_24578(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24576)
static void C_ccall f_24576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24532)
static void C_ccall f_24532(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24536)
static void C_ccall f_24536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24547)
static void C_ccall f_24547(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24545)
static void C_ccall f_24545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24514)
static void C_ccall f_24514(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24522)
static void C_ccall f_24522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24530)
static void C_ccall f_24530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24504)
static void C_ccall f_24504(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24512)
static void C_ccall f_24512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24445)
static void C_ccall f_24445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24452)
static void C_ccall f_24452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24455)
static void C_ccall f_24455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24458)
static void C_ccall f_24458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24463)
static void C_fcall f_24463(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24407)
static void C_ccall f_24407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24415)
static void C_ccall f_24415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24419)
static void C_ccall f_24419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24439)
static void C_ccall f_24439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24423)
static void C_ccall f_24423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24431)
static void C_ccall f_24431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24427)
static void C_ccall f_24427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24398)
static void C_ccall f_24398(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24389)
static void C_fcall f_24389(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24380)
static void C_ccall f_24380(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24371)
static void C_fcall f_24371(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24362)
static void C_ccall f_24362(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24353)
static void C_fcall f_24353(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24344)
static void C_ccall f_24344(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24329)
static void C_fcall f_24329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24323)
static void C_fcall f_24323(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24278)
static void C_fcall f_24278(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7302)
static void C_ccall f_7302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24236)
static void C_fcall f_24236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24246)
static void C_ccall f_24246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23388)
static void C_ccall f_23388(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7230)
static void C_ccall f_7230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23382)
static void C_ccall f_23382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23360)
static void C_ccall f_23360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23044)
static void C_ccall f_23044(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23044)
static void C_ccall f_23044r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23048)
static void C_fcall f_23048(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23105)
static void C_ccall f_23105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23077)
static void C_ccall f_23077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23142)
static void C_ccall f_23142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23179)
static void C_ccall f_23179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23182)
static void C_ccall f_23182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23342)
static void C_ccall f_23342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23189)
static void C_ccall f_23189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23192)
static void C_ccall f_23192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23194)
static void C_fcall f_23194(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23204)
static void C_ccall f_23204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23207)
static void C_ccall f_23207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23240)
static void C_ccall f_23240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23328)
static void C_ccall f_23328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23243)
static void C_ccall f_23243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23314)
static void C_ccall f_23314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23300)
static void C_ccall f_23300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23280)
static void C_ccall f_23280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23283)
static void C_ccall f_23283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23260)
static void C_ccall f_23260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23263)
static void C_ccall f_23263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23246)
static void C_ccall f_23246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23143)
static void C_fcall f_23143(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23149)
static void C_fcall f_23149(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23159)
static void C_fcall f_23159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23028)
static void C_fcall f_23028(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23032)
static void C_ccall f_23032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23039)
static void C_ccall f_23039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23023)
static void C_fcall f_23023(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22876)
static void C_ccall f_22876(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_22876)
static void C_ccall f_22876r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22880)
static void C_fcall f_22880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22949)
static void C_ccall f_22949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22992)
static void C_ccall f_22992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22996)
static void C_ccall f_22996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22985)
static void C_ccall f_22985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22972)
static void C_ccall f_22972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22891)
static void C_ccall f_22891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22934)
static void C_ccall f_22934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22938)
static void C_ccall f_22938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22927)
static void C_ccall f_22927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22914)
static void C_ccall f_22914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22710)
static void C_ccall f_22710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22811)
static void C_ccall f_22811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22860)
static void C_ccall f_22860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22856)
static void C_ccall f_22856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22828)
static void C_ccall f_22828(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22763)
static void C_fcall f_22763(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22772)
static void C_fcall f_22772(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22756)
static void C_ccall f_22756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22575)
static void C_ccall f_22575(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22701)
static void C_ccall f_22701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22697)
static void C_ccall f_22697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22675)
static void C_ccall f_22675(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22605)
static void C_fcall f_22605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22621)
static void C_fcall f_22621(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22530)
static void C_ccall f_22530(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22573)
static void C_ccall f_22573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22562)
static void C_ccall f_22562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22414)
static void C_ccall f_22414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22528)
static void C_ccall f_22528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22429)
static void C_fcall f_22429(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22459)
static void C_fcall f_22459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22478)
static void C_ccall f_22478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22463)
static void C_ccall f_22463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22442)
static void C_fcall f_22442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22292)
static void C_ccall f_22292(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22412)
static void C_ccall f_22412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22307)
static void C_fcall f_22307(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22337)
static void C_fcall f_22337(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22356)
static void C_ccall f_22356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22341)
static void C_ccall f_22341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22320)
static void C_fcall f_22320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22195)
static void C_ccall f_22195(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22290)
static void C_ccall f_22290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22210)
static void C_fcall f_22210(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22256)
static void C_ccall f_22256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22241)
static void C_ccall f_22241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22223)
static void C_fcall f_22223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22142)
static void C_fcall f_22142(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22180)
static void C_ccall f_22180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22187)
static void C_ccall f_22187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22165)
static void C_ccall f_22165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22140)
static void C_ccall f_22140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22121)
static void C_fcall f_22121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22108)
static void C_ccall f_22108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22090)
static void C_ccall f_22090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22043)
static void C_fcall f_22043(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22072)
static void C_ccall f_22072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22059)
static void C_ccall f_22059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22015)
static void C_ccall f_22015(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22015)
static void C_ccall f_22015r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21996)
static void C_ccall f_21996(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21996)
static void C_ccall f_21996r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21955)
static void C_ccall f_21955(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21955)
static void C_ccall f_21955r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21936)
static void C_ccall f_21936(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21936)
static void C_ccall f_21936r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21708)
static void C_ccall f_21708(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21708)
static void C_ccall f_21708r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21913)
static void C_ccall f_21913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_ccall f_21928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21920)
static void C_ccall f_21920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21884)
static void C_ccall f_21884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21888)
static void C_ccall f_21888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21849)
static void C_ccall f_21849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21853)
static void C_ccall f_21853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21712)
static void C_fcall f_21712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21813)
static void C_ccall f_21813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21828)
static void C_ccall f_21828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21820)
static void C_ccall f_21820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21784)
static void C_ccall f_21784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21788)
static void C_ccall f_21788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21749)
static void C_ccall f_21749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21753)
static void C_ccall f_21753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21715)
static void C_fcall f_21715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21718)
static void C_ccall f_21718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21721)
static void C_fcall f_21721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21666)
static void C_ccall f_21666(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21666)
static void C_ccall f_21666r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21695)
static void C_ccall f_21695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21680)
static void C_ccall f_21680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21611)
static void C_ccall f_21611(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21622)
static void C_ccall f_21622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21624)
static void C_fcall f_21624(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21652)
static void C_ccall f_21652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21512)
static void C_ccall f_21512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21512)
static void C_ccall f_21512r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21516)
static void C_fcall f_21516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21519)
static void C_ccall f_21519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21584)
static void C_ccall f_21584(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21521)
static void C_fcall f_21521(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21537)
static void C_ccall f_21537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21241)
static void C_ccall f_21241(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21241)
static void C_ccall f_21241r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21274)
static void C_ccall f_21274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21259)
static void C_ccall f_21259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_ccall f_21220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21185)
static void C_ccall f_21185(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21185)
static void C_ccall f_21185r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21189)
static void C_fcall f_21189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20977)
static void C_ccall f_20977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_20977)
static void C_ccall f_20977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_20990)
static void C_fcall f_20990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21072)
static void C_fcall f_21072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21075)
static void C_ccall f_21075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21083)
static void C_fcall f_21083(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21095)
static void C_fcall f_21095(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21116)
static void C_ccall f_21116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21124)
static void C_ccall f_21124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21011)
static void C_ccall f_21011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21016)
static void C_fcall f_21016(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21048)
static void C_ccall f_21048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_20957)
static void C_ccall f_20957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20877)
static void C_fcall f_20877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20886)
static void C_fcall f_20886(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_20933)
static void C_ccall f_20933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20899)
static void C_fcall f_20899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20925)
static void C_ccall f_20925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20737)
static void C_ccall f_20737(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_20737)
static void C_ccall f_20737r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_20741)
static void C_fcall f_20741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20744)
static void C_fcall f_20744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20848)
static void C_ccall f_20848(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20746)
static void C_fcall f_20746(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20753)
static void C_ccall f_20753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20795)
static void C_ccall f_20795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20802)
static void C_ccall f_20802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20776)
static void C_ccall f_20776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20670)
static void C_ccall f_20670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_20670)
static void C_ccall f_20670r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_20674)
static void C_fcall f_20674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20720)
static void C_ccall f_20720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20677)
static void C_fcall f_20677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20713)
static void C_ccall f_20713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20680)
static void C_fcall f_20680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20693)
static void C_ccall f_20693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20624)
static void C_ccall f_20624(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20624)
static void C_ccall f_20624r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20628)
static void C_ccall f_20628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20538)
static void C_fcall f_20538(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20542)
static void C_ccall f_20542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_fcall f_20554(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20576)
static void C_ccall f_20576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20523)
static void C_ccall f_20523(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20508)
static void C_ccall f_20508(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20272)
static void C_ccall f_20272(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20272)
static void C_ccall f_20272r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20485)
static void C_ccall f_20485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20500)
static void C_ccall f_20500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20492)
static void C_ccall f_20492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20456)
static void C_ccall f_20456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20460)
static void C_ccall f_20460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20421)
static void C_ccall f_20421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20425)
static void C_ccall f_20425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20276)
static void C_fcall f_20276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20385)
static void C_ccall f_20385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20400)
static void C_ccall f_20400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20392)
static void C_ccall f_20392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20356)
static void C_ccall f_20356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20360)
static void C_ccall f_20360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20321)
static void C_ccall f_20321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20325)
static void C_ccall f_20325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20279)
static void C_fcall f_20279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20282)
static void C_ccall f_20282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20293)
static void C_ccall f_20293(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20232)
static void C_ccall f_20232(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20236)
static void C_ccall f_20236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20266)
static void C_ccall f_20266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20247)
static void C_ccall f_20247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20255)
static void C_ccall f_20255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20211)
static void C_ccall f_20211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20223)
static void C_ccall f_20223(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20168)
static void C_ccall f_20168(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20168)
static void C_ccall f_20168r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20198)
static void C_ccall f_20198(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20125)
static void C_ccall f_20125(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20125)
static void C_ccall f_20125r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20155)
static void C_ccall f_20155(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20056)
static void C_ccall f_20056(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20056)
static void C_ccall f_20056r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20100)
static void C_ccall f_20100(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19987)
static void C_ccall f_19987(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19987)
static void C_ccall f_19987r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20031)
static void C_ccall f_20031(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19981)
static void C_ccall f_19981(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19975)
static void C_ccall f_19975(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19954)
static void C_ccall f_19954(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19966)
static void C_ccall f_19966(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19939)
static void C_ccall f_19939(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19828)
static void C_ccall f_19828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_19828)
static void C_ccall f_19828r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_19903)
static void C_ccall f_19903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19832)
static void C_fcall f_19832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19872)
static void C_ccall f_19872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19861)
static void C_ccall f_19861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19846)
static void C_ccall f_19846(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19854)
static void C_ccall f_19854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19794)
static void C_ccall f_19794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_19794)
static void C_ccall f_19794r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_19806)
static void C_ccall f_19806(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19771)
static void C_ccall f_19771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19786)
static void C_ccall f_19786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19778)
static void C_ccall f_19778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19742)
static void C_ccall f_19742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19746)
static void C_ccall f_19746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19707)
static void C_ccall f_19707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19711)
static void C_ccall f_19711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18757)
static void C_fcall f_18757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19671)
static void C_ccall f_19671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19686)
static void C_ccall f_19686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19678)
static void C_ccall f_19678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19642)
static void C_ccall f_19642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19646)
static void C_ccall f_19646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19607)
static void C_ccall f_19607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19611)
static void C_ccall f_19611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18760)
static void C_fcall f_18760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18763)
static void C_ccall f_18763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18768)
static void C_ccall f_18768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19500)
static void C_fcall f_19500(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19523)
static void C_fcall f_19523(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19576)
static void C_ccall f_19576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19558)
static void C_fcall f_19558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19551)
static void C_ccall f_19551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19533)
static void C_ccall f_19533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19510)
static void C_ccall f_19510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18962)
static void C_ccall f_18962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19462)
static void C_fcall f_19462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19484)
static void C_ccall f_19484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19468)
static void C_ccall f_19468(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19476)
static void C_ccall f_19476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19480)
static void C_ccall f_19480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19466)
static void C_ccall f_19466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19456)
static void C_ccall f_19456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_fcall f_18965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19333)
static void C_fcall f_19333(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19357)
static void C_ccall f_19357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19419)
static void C_fcall f_19419(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19360)
static void C_ccall f_19360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19376)
static void C_fcall f_19376(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19401)
static void C_ccall f_19401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19367)
static void C_ccall f_19367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19344)
static void C_ccall f_19344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18968)
static void C_ccall f_18968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19319)
static void C_ccall f_19319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18972)
static void C_ccall f_18972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19016)
static void C_ccall f_19016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19019)
static void C_ccall f_19019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19300)
static void C_fcall f_19300(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19310)
static void C_ccall f_19310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19022)
static void C_ccall f_19022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19238)
static void C_fcall f_19238(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19248)
static void C_ccall f_19248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19251)
static void C_ccall f_19251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19271)
static void C_ccall f_19271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19273)
static void C_fcall f_19273(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19283)
static void C_ccall f_19283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19257)
static void C_ccall f_19257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19260)
static void C_ccall f_19260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19025)
static void C_ccall f_19025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19033)
static void C_fcall f_19033(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19046)
static void C_ccall f_19046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18920)
static void C_ccall f_18920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18929)
static void C_fcall f_18929(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18951)
static void C_ccall f_18951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18940)
static void C_ccall f_18940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19049)
static void C_ccall f_19049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19209)
static void C_ccall f_19209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19211)
static void C_fcall f_19211(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19221)
static void C_ccall f_19221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19055)
static void C_ccall f_19055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19182)
static void C_ccall f_19182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19184)
static void C_fcall f_19184(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19194)
static void C_ccall f_19194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19058)
static void C_ccall f_19058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19070)
static void C_fcall f_19070(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19096)
static void C_ccall f_19096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19102)
static void C_ccall f_19102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19108)
static void C_ccall f_19108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19150)
static void C_ccall f_19150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19162)
static void C_ccall f_19162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19154)
static void C_ccall f_19154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19111)
static void C_fcall f_19111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19121)
static void C_ccall f_19121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19123)
static void C_fcall f_19123(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19133)
static void C_ccall f_19133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19114)
static void C_ccall f_19114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19083)
static void C_ccall f_19083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19061)
static void C_ccall f_19061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19028)
static void C_ccall f_19028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18975)
static void C_ccall f_18975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18998)
static void C_ccall f_18998(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18987)
static void C_ccall f_18987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18852)
static void C_fcall f_18852(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18900)
static void C_ccall f_18900(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18862)
static void C_ccall f_18862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18890)
static void C_ccall f_18890(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18865)
static void C_ccall f_18865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18770)
static void C_fcall f_18770(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8097)
static void C_fcall f_8097(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8117)
static void C_ccall f_8117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8107)
static void C_fcall f_8107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18842)
static void C_fcall f_18842(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18774)
static void C_ccall f_18774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18792)
static void C_ccall f_18792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18824)
static void C_ccall f_18824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18653)
static void C_ccall f_18653(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18657)
static void C_ccall f_18657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18686)
static void C_ccall f_18686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18691)
static void C_fcall f_18691(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18716)
static void C_fcall f_18716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18701)
static void C_ccall f_18701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18135)
static void C_ccall f_18135(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18135)
static void C_ccall f_18135r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18406)
static void C_ccall f_18406(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18410)
static void C_ccall f_18410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18415)
static void C_ccall f_18415(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18415)
static void C_ccall f_18415r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18621)
static void C_ccall f_18621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18636)
static void C_ccall f_18636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18628)
static void C_ccall f_18628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18592)
static void C_ccall f_18592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18596)
static void C_ccall f_18596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18557)
static void C_ccall f_18557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18561)
static void C_ccall f_18561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18419)
static void C_fcall f_18419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18521)
static void C_ccall f_18521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18536)
static void C_ccall f_18536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18528)
static void C_ccall f_18528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18492)
static void C_ccall f_18492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18496)
static void C_ccall f_18496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18457)
static void C_ccall f_18457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18461)
static void C_ccall f_18461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18422)
static void C_fcall f_18422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18425)
static void C_ccall f_18425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18428)
static void C_fcall f_18428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18397)
static void C_ccall f_18397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18139)
static void C_ccall f_18139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18366)
static void C_ccall f_18366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18381)
static void C_ccall f_18381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18373)
static void C_ccall f_18373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18337)
static void C_ccall f_18337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18341)
static void C_ccall f_18341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18302)
static void C_ccall f_18302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18306)
static void C_ccall f_18306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18142)
static void C_fcall f_18142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18266)
static void C_ccall f_18266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18281)
static void C_ccall f_18281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18273)
static void C_ccall f_18273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18237)
static void C_ccall f_18237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18241)
static void C_ccall f_18241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18202)
static void C_ccall f_18202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18206)
static void C_ccall f_18206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18145)
static void C_fcall f_18145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18148)
static void C_ccall f_18148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18151)
static void C_ccall f_18151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18163)
static void C_ccall f_18163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18181)
static void C_ccall f_18181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18169)
static void C_ccall f_18169(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18157)
static void C_ccall f_18157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18072)
static void C_fcall f_18072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17732)
static void C_ccall f_17732(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17914)
static void C_ccall f_17914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17918)
static void C_ccall f_17918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17920)
static void C_fcall f_17920(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17845)
static void C_fcall f_17845(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17855)
static void C_fcall f_17855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17862)
static void C_fcall f_17862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17930)
static void C_ccall f_17930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17933)
static void C_ccall f_17933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17937)
static void C_ccall f_17937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17957)
static void C_fcall f_17957(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17973)
static void C_ccall f_17973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17940)
static void C_ccall f_17940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17735)
static void C_fcall f_17735(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17747)
static void C_fcall f_17747(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17783)
static void C_ccall f_17783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17803)
static void C_ccall f_17803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17808)
static void C_fcall f_17808(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17245)
static void C_ccall f_17245(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17245)
static void C_ccall f_17245r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17172)
static void C_fcall f_17172(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17017)
static void C_ccall f_17017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17023)
static void C_ccall f_17023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17108)
static void C_fcall f_17108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17035)
static void C_ccall f_17035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17051)
static void C_ccall f_17051(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17055)
static void C_fcall f_17055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17058)
static void C_fcall f_17058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17038)
static void C_ccall f_17038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17049)
static void C_ccall f_17049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17189)
static void C_ccall f_17189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17726)
static void C_ccall f_17726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17249)
static void C_ccall f_17249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17695)
static void C_ccall f_17695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17710)
static void C_ccall f_17710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17702)
static void C_ccall f_17702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17666)
static void C_ccall f_17666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17670)
static void C_ccall f_17670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17631)
static void C_ccall f_17631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17635)
static void C_ccall f_17635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17596)
static void C_ccall f_17596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17600)
static void C_ccall f_17600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17252)
static void C_fcall f_17252(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17560)
static void C_ccall f_17560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17575)
static void C_ccall f_17575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17567)
static void C_ccall f_17567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17531)
static void C_ccall f_17531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17535)
static void C_ccall f_17535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17496)
static void C_ccall f_17496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17500)
static void C_ccall f_17500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17461)
static void C_ccall f_17461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17465)
static void C_ccall f_17465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17255)
static void C_fcall f_17255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17425)
static void C_ccall f_17425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17440)
static void C_ccall f_17440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17432)
static void C_ccall f_17432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17396)
static void C_ccall f_17396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17400)
static void C_ccall f_17400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17361)
static void C_ccall f_17361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17365)
static void C_ccall f_17365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17326)
static void C_ccall f_17326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17330)
static void C_ccall f_17330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17258)
static void C_fcall f_17258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17261)
static void C_ccall f_17261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17264)
static void C_ccall f_17264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17297)
static void C_ccall f_17297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17305)
static void C_ccall f_17305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17270)
static void C_ccall f_17270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_ccall f_17283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17273)
static void C_fcall f_17273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17276)
static void C_ccall f_17276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16812)
static void C_ccall f_16812(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16816)
static void C_ccall f_16816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16819)
static void C_ccall f_16819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16822)
static void C_ccall f_16822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16991)
static void C_ccall f_16991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17004)
static void C_ccall f_17004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17008)
static void C_ccall f_17008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16828)
static void C_ccall f_16828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16984)
static void C_ccall f_16984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16965)
static void C_ccall f_16965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16972)
static void C_ccall f_16972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16976)
static void C_ccall f_16976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16834)
static void C_fcall f_16834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16840)
static void C_ccall f_16840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16924)
static void C_ccall f_16924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16926)
static void C_fcall f_16926(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16948)
static void C_ccall f_16948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16955)
static void C_ccall f_16955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16959)
static void C_ccall f_16959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16945)
static void C_fcall f_16945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16941)
static void C_ccall f_16941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16882)
static void C_ccall f_16882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16899)
static void C_fcall f_16899(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16909)
static void C_ccall f_16909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16885)
static void C_ccall f_16885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16844)
static void C_fcall f_16844(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16852)
static void C_ccall f_16852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16854)
static void C_fcall f_16854(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16875)
static void C_ccall f_16875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16712)
static void C_fcall f_16712(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16810)
static void C_ccall f_16810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16769)
static void C_fcall f_16769(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16802)
static void C_ccall f_16802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16798)
static void C_ccall f_16798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16783)
static void C_ccall f_16783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16719)
static void C_ccall f_16719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16727)
static void C_fcall f_16727(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16760)
static void C_ccall f_16760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16744)
static void C_ccall f_16744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15945)
static void C_ccall f_15945(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15945)
static void C_ccall f_15945r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16262)
static void C_ccall f_16262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16269)
static void C_fcall f_16269(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16674)
static void C_ccall f_16674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16689)
static void C_ccall f_16689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16681)
static void C_ccall f_16681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16645)
static void C_ccall f_16645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16649)
static void C_ccall f_16649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16610)
static void C_ccall f_16610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16614)
static void C_ccall f_16614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16575)
static void C_ccall f_16575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16579)
static void C_ccall f_16579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16272)
static void C_fcall f_16272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16539)
static void C_ccall f_16539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16554)
static void C_ccall f_16554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16546)
static void C_ccall f_16546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16510)
static void C_ccall f_16510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16514)
static void C_ccall f_16514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16475)
static void C_ccall f_16475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16479)
static void C_ccall f_16479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16440)
static void C_ccall f_16440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16444)
static void C_ccall f_16444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16275)
static void C_fcall f_16275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16404)
static void C_ccall f_16404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16419)
static void C_ccall f_16419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16411)
static void C_ccall f_16411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16375)
static void C_ccall f_16375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16379)
static void C_ccall f_16379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16340)
static void C_ccall f_16340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16344)
static void C_ccall f_16344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16305)
static void C_ccall f_16305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16309)
static void C_ccall f_16309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16278)
static void C_fcall f_16278(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16281)
static void C_ccall f_16281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15949)
static void C_ccall f_15949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15952)
static void C_ccall f_15952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16230)
static void C_ccall f_16230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16233)
static void C_ccall f_16233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16236)
static void C_ccall f_16236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16239)
static void C_ccall f_16239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16252)
static void C_ccall f_16252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16242)
static void C_fcall f_16242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15958)
static void C_ccall f_15958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16221)
static void C_ccall f_16221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15965)
static void C_fcall f_15965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16196)
static void C_ccall f_16196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16211)
static void C_ccall f_16211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16203)
static void C_ccall f_16203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16167)
static void C_ccall f_16167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_ccall f_16171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16132)
static void C_ccall f_16132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16136)
static void C_ccall f_16136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15968)
static void C_fcall f_15968(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16096)
static void C_ccall f_16096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16111)
static void C_ccall f_16111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16103)
static void C_ccall f_16103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16067)
static void C_ccall f_16067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16071)
static void C_ccall f_16071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16032)
static void C_ccall f_16032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16036)
static void C_ccall f_16036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15971)
static void C_fcall f_15971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15974)
static void C_ccall f_15974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15989)
static void C_ccall f_15989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16011)
static void C_ccall f_16011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15995)
static void C_ccall f_15995(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16003)
static void C_ccall f_16003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15977)
static void C_ccall f_15977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15980)
static void C_ccall f_15980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15862)
static void C_fcall f_15862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15853)
static void C_fcall f_15853(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15844)
static void C_fcall f_15844(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15826)
static void C_fcall f_15826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15808)
static void C_fcall f_15808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15790)
static void C_fcall f_15790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15781)
static void C_fcall f_15781(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15772)
static void C_fcall f_15772(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15550)
static void C_ccall f_15550(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15600)
static void C_ccall f_15600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15745)
static void C_ccall f_15745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15626)
static void C_ccall f_15626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15726)
static void C_ccall f_15726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15707)
static void C_ccall f_15707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15680)
static void C_ccall f_15680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15633)
static void C_ccall f_15633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15603)
static void C_fcall f_15603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15553)
static void C_ccall f_15553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15559)
static void C_fcall f_15559(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15575)
static void C_ccall f_15575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15578)
static void C_ccall f_15578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15076)
static void C_ccall f_15076(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15076)
static void C_ccall f_15076r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15540)
static void C_ccall f_15540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15080)
static void C_fcall f_15080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15512)
static void C_ccall f_15512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15527)
static void C_ccall f_15527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15519)
static void C_ccall f_15519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15483)
static void C_ccall f_15483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15487)
static void C_ccall f_15487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15448)
static void C_ccall f_15448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_ccall f_15452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15413)
static void C_ccall f_15413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15417)
static void C_ccall f_15417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15083)
static void C_fcall f_15083(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15377)
static void C_ccall f_15377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15392)
static void C_ccall f_15392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15384)
static void C_ccall f_15384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15348)
static void C_ccall f_15348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15352)
static void C_ccall f_15352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15313)
static void C_ccall f_15313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15317)
static void C_ccall f_15317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15278)
static void C_ccall f_15278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15086)
static void C_fcall f_15086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15242)
static void C_ccall f_15242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15257)
static void C_ccall f_15257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15249)
static void C_ccall f_15249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15213)
static void C_ccall f_15213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15217)
static void C_ccall f_15217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15178)
static void C_ccall f_15178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15182)
static void C_ccall f_15182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15143)
static void C_ccall f_15143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15147)
static void C_ccall f_15147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15089)
static void C_fcall f_15089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15092)
static void C_ccall f_15092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15095)
static void C_ccall f_15095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15110)
static void C_ccall f_15110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15122)
static void C_ccall f_15122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15101)
static void C_ccall f_15101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15104)
static void C_ccall f_15104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15000)
static void C_ccall f_15000(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15004)
static void C_ccall f_15004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15033)
static void C_ccall f_15033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15035)
static void C_fcall f_15035(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15052)
static void C_ccall f_15052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15055)
static void C_ccall f_15055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15066)
static void C_ccall f_15066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15007)
static void C_ccall f_15007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14737)
static void C_ccall f_14737(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14737)
static void C_ccall f_14737r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14990)
static void C_ccall f_14990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14741)
static void C_fcall f_14741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14962)
static void C_ccall f_14962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14977)
static void C_ccall f_14977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14969)
static void C_ccall f_14969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14933)
static void C_ccall f_14933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14937)
static void C_ccall f_14937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14898)
static void C_ccall f_14898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14902)
static void C_ccall f_14902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14744)
static void C_fcall f_14744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14862)
static void C_ccall f_14862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14877)
static void C_ccall f_14877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14869)
static void C_ccall f_14869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14833)
static void C_ccall f_14833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14837)
static void C_ccall f_14837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14798)
static void C_ccall f_14798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14802)
static void C_ccall f_14802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14747)
static void C_fcall f_14747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14750)
static void C_ccall f_14750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14753)
static void C_ccall f_14753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14765)
static void C_ccall f_14765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14777)
static void C_ccall f_14777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14759)
static void C_ccall f_14759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14701)
static void C_ccall f_14701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14705)
static void C_ccall f_14705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14727)
static void C_ccall f_14727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14721)
static void C_ccall f_14721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14714)
static void C_ccall f_14714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14454)
static void C_ccall f_14454(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14454)
static void C_ccall f_14454r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14458)
static void C_fcall f_14458(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14671)
static void C_ccall f_14671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14686)
static void C_ccall f_14686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14678)
static void C_ccall f_14678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14642)
static void C_ccall f_14642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14646)
static void C_ccall f_14646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14611)
static void C_ccall f_14611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14461)
static void C_fcall f_14461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14571)
static void C_ccall f_14571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14586)
static void C_ccall f_14586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14578)
static void C_ccall f_14578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14542)
static void C_ccall f_14542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14546)
static void C_ccall f_14546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14507)
static void C_ccall f_14507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14511)
static void C_ccall f_14511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14464)
static void C_fcall f_14464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14467)
static void C_ccall f_14467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14470)
static void C_ccall f_14470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14478)
static void C_ccall f_14478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14486)
static void C_ccall f_14486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14476)
static void C_ccall f_14476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14239)
static void C_ccall f_14239(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14243)
static void C_ccall f_14243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14452)
static void C_ccall f_14452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14405)
static void C_ccall f_14405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14417)
static void C_fcall f_14417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14273)
static void C_ccall f_14273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14276)
static void C_ccall f_14276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14282)
static void C_ccall f_14282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14285)
static void C_ccall f_14285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14373)
static void C_fcall f_14373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14288)
static void C_fcall f_14288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14367)
static void C_ccall f_14367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14294)
static void C_ccall f_14294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14297)
static void C_ccall f_14297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14249)
static void C_ccall f_14249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14252)
static void C_ccall f_14252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14259)
static void C_ccall f_14259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13769)
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13769)
static void C_ccall f_13769r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13773)
static void C_fcall f_13773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14209)
static void C_ccall f_14209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14224)
static void C_ccall f_14224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14216)
static void C_ccall f_14216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14180)
static void C_ccall f_14180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14184)
static void C_ccall f_14184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14145)
static void C_ccall f_14145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14149)
static void C_ccall f_14149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14110)
static void C_ccall f_14110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14114)
static void C_ccall f_14114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13776)
static void C_fcall f_13776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14074)
static void C_ccall f_14074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14089)
static void C_ccall f_14089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14081)
static void C_ccall f_14081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14045)
static void C_ccall f_14045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14049)
static void C_ccall f_14049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14010)
static void C_ccall f_14010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14014)
static void C_ccall f_14014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13975)
static void C_ccall f_13975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13979)
static void C_ccall f_13979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13779)
static void C_fcall f_13779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13939)
static void C_ccall f_13939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13954)
static void C_ccall f_13954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13946)
static void C_ccall f_13946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13910)
static void C_ccall f_13910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13914)
static void C_ccall f_13914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13875)
static void C_ccall f_13875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13879)
static void C_ccall f_13879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13840)
static void C_ccall f_13840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13844)
static void C_ccall f_13844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13782)
static void C_fcall f_13782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13785)
static void C_ccall f_13785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13788)
static void C_ccall f_13788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13811)
static void C_ccall f_13811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13819)
static void C_ccall f_13819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13794)
static void C_ccall f_13794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13797)
static void C_ccall f_13797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13689)
static void C_fcall f_13689(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13680)
static void C_fcall f_13680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13608)
static void C_ccall f_13608(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13612)
static void C_ccall f_13612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13615)
static void C_fcall f_13615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13353)
static void C_ccall f_13353(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13353)
static void C_ccall f_13353r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13357)
static void C_fcall f_13357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13578)
static void C_ccall f_13578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13593)
static void C_ccall f_13593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13585)
static void C_ccall f_13585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13549)
static void C_ccall f_13549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13514)
static void C_ccall f_13514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13518)
static void C_ccall f_13518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13360)
static void C_fcall f_13360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13478)
static void C_ccall f_13478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13493)
static void C_ccall f_13493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13485)
static void C_ccall f_13485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13449)
static void C_ccall f_13449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13453)
static void C_ccall f_13453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13414)
static void C_ccall f_13414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13418)
static void C_ccall f_13418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13363)
static void C_fcall f_13363(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13366)
static void C_ccall f_13366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13369)
static void C_ccall f_13369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13381)
static void C_ccall f_13381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13393)
static void C_ccall f_13393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13375)
static void C_ccall f_13375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13238)
static void C_fcall f_13238(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13248)
static void C_ccall f_13248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13336)
static void C_ccall f_13336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13347)
static void C_ccall f_13347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13343)
static void C_ccall f_13343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13251)
static void C_ccall f_13251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13333)
static void C_ccall f_13333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13259)
static void C_ccall f_13259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13323)
static void C_ccall f_13323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13268)
static void C_ccall f_13268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13287)
static void C_ccall f_13287(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13316)
static void C_ccall f_13316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13297)
static void C_ccall f_13297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13312)
static void C_ccall f_13312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13300)
static void C_ccall f_13300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13271)
static void C_ccall f_13271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13281)
static void C_ccall f_13281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13262)
static void C_fcall f_13262(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13265)
static void C_ccall f_13265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13192)
static void C_fcall f_13192(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13183)
static void C_fcall f_13183(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12891)
static void C_fcall f_12891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12898)
static void C_ccall f_12898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12901)
static void C_ccall f_12901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13172)
static void C_ccall f_13172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13164)
static void C_ccall f_13164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13156)
static void C_ccall f_13156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13159)
static void C_ccall f_13159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13127)
static void C_fcall f_13127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13150)
static void C_ccall f_13150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13133)
static void C_fcall f_13133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13137)
static void C_ccall f_13137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12904)
static void C_ccall f_12904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12910)
static void C_ccall f_12910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13002)
static void C_ccall f_13002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13114)
static void C_ccall f_13114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13121)
static void C_ccall f_13121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13025)
static void C_fcall f_13025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13027)
static void C_fcall f_13027(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13076)
static void C_fcall f_13076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13111)
static void C_ccall f_13111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13100)
static void C_ccall f_13100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13236)
static void C_ccall f_13236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13211)
static void C_ccall f_13211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13232)
static void C_ccall f_13232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13228)
static void C_ccall f_13228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13220)
static void C_ccall f_13220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13093)
static void C_ccall f_13093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13086)
static void C_ccall f_13086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13074)
static void C_ccall f_13074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13038)
static void C_ccall f_13038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13070)
static void C_ccall f_13070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13057)
static void C_ccall f_13057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13065)
static void C_ccall f_13065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13061)
static void C_ccall f_13061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13041)
static void C_fcall f_13041(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13044)
static void C_ccall f_13044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13018)
static void C_ccall f_13018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13005)
static void C_ccall f_13005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13014)
static void C_ccall f_13014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13009)
static void C_ccall f_13009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12916)
static void C_ccall f_12916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12996)
static void C_ccall f_12996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12976)
static void C_ccall f_12976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12982)
static void C_ccall f_12982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12993)
static void C_ccall f_12993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12973)
static void C_ccall f_12973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12961)
static void C_ccall f_12961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12964)
static void C_ccall f_12964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12919)
static void C_ccall f_12919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12955)
static void C_ccall f_12955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12950)
static void C_ccall f_12950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12922)
static void C_ccall f_12922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12935)
static void C_ccall f_12935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12925)
static void C_fcall f_12925(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12928)
static void C_ccall f_12928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12931)
static void C_ccall f_12931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12768)
static void C_ccall f_12768(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12768)
static void C_ccall f_12768r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12827)
static void C_ccall f_12827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12837)
static void C_ccall f_12837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12839)
static void C_fcall f_12839(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12868)
static void C_ccall f_12868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12873)
static void C_ccall f_12873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12858)
static void C_fcall f_12858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12789)
static void C_fcall f_12789(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12821)
static void C_ccall f_12821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12749)
static void C_ccall f_12749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12756)
static void C_ccall f_12756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12730)
static void C_ccall f_12730(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12737)
static void C_ccall f_12737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12744)
static void C_ccall f_12744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12550)
static void C_fcall f_12550(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_12554)
static void C_ccall f_12554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12557)
static void C_ccall f_12557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12560)
static void C_ccall f_12560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12563)
static void C_ccall f_12563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12720)
static void C_ccall f_12720(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12727)
static void C_ccall f_12727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12566)
static void C_ccall f_12566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12718)
static void C_ccall f_12718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12569)
static void C_fcall f_12569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12711)
static void C_ccall f_12711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12701)
static void C_ccall f_12701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12575)
static void C_ccall f_12575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12691)
static void C_ccall f_12691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12681)
static void C_ccall f_12681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12581)
static void C_ccall f_12581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12644)
static void C_ccall f_12644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12658)
static void C_ccall f_12658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12674)
static void C_ccall f_12674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12670)
static void C_ccall f_12670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12666)
static void C_ccall f_12666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12662)
static void C_ccall f_12662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12652)
static void C_ccall f_12652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12648)
static void C_ccall f_12648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12584)
static void C_fcall f_12584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12587)
static void C_ccall f_12587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12628)
static void C_ccall f_12628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12593)
static void C_fcall f_12593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12606)
static void C_ccall f_12606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12596)
static void C_ccall f_12596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12599)
static void C_ccall f_12599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12540)
static void C_fcall f_12540(C_word t0) C_noret;
C_noret_decl(f_12481)
static void C_fcall f_12481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12472)
static void C_fcall f_12472(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12355)
static void C_fcall f_12355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12346)
static void C_fcall f_12346(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12337)
static void C_ccall f_12337(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12328)
static void C_fcall f_12328(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12319)
static void C_fcall f_12319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12301)
static void C_fcall f_12301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12292)
static void C_fcall f_12292(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12283)
static void C_fcall f_12283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12265)
static void C_fcall f_12265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12256)
static void C_fcall f_12256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12247)
static void C_fcall f_12247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12232)
static void C_fcall f_12232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12187)
static void C_fcall f_12187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12169)
static void C_fcall f_12169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12160)
static void C_fcall f_12160(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12133)
static void C_fcall f_12133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12115)
static void C_fcall f_12115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12097)
static void C_fcall f_12097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12088)
static void C_fcall f_12088(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12076)
static void C_fcall f_12076(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11327)
static void C_ccall f_11327(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11349)
static void C_ccall f_11349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11364)
static void C_ccall f_11364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11367)
static void C_fcall f_11367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11543)
static void C_ccall f_11543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11537)
static void C_ccall f_11537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11370)
static void C_ccall f_11370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11519)
static void C_ccall f_11519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11373)
static void C_fcall f_11373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11376)
static void C_ccall f_11376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11512)
static void C_ccall f_11512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11500)
static void C_ccall f_11500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11396)
static void C_fcall f_11396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11403)
static void C_ccall f_11403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11473)
static void C_ccall f_11473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11459)
static void C_ccall f_11459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11467)
static void C_ccall f_11467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11406)
static void C_ccall f_11406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11445)
static void C_ccall f_11445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11409)
static void C_fcall f_11409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11438)
static void C_ccall f_11438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11415)
static void C_ccall f_11415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11418)
static void C_ccall f_11418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11422)
static void C_ccall f_11422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11383)
static void C_fcall f_11383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11386)
static void C_ccall f_11386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11196)
static void C_fcall f_11196(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11205)
static void C_fcall f_11205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11153)
static void C_ccall f_11153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11159)
static void C_fcall f_11159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11222)
static void C_ccall f_11222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11308)
static void C_ccall f_11308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11295)
static void C_ccall f_11295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11303)
static void C_ccall f_11303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11225)
static void C_ccall f_11225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11229)
static void C_ccall f_11229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11272)
static void C_ccall f_11272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11234)
static void C_ccall f_11234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11200)
static void C_ccall f_11200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11095)
static void C_ccall f_11095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11102)
static void C_ccall f_11102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11133)
static void C_ccall f_11133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11129)
static void C_ccall f_11129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11121)
static void C_ccall f_11121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11004)
static void C_ccall f_11004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11011)
static void C_ccall f_11011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11079)
static void C_ccall f_11079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11022)
static void C_fcall f_11022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11049)
static void C_ccall f_11049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11033)
static void C_ccall f_11033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10938)
static void C_ccall f_10938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10949)
static void C_ccall f_10949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10952)
static void C_fcall f_10952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10959)
static void C_ccall f_10959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10932)
static void C_ccall f_10932(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10386)
static void C_ccall f_10386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10417)
static void C_ccall f_10417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10881)
static void C_ccall f_10881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10887)
static void C_ccall f_10887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10428)
static void C_ccall f_10428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10313)
static void C_fcall f_10313(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10338)
static void C_ccall f_10338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10273)
static void C_fcall f_10273(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10286)
static void C_fcall f_10286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10327)
static void C_ccall f_10327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10432)
static void C_ccall f_10432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10869)
static void C_ccall f_10869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10865)
static void C_fcall f_10865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10861)
static void C_ccall f_10861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10435)
static void C_ccall f_10435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10655)
static void C_fcall f_10655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10764)
static void C_ccall f_10764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10829)
static void C_ccall f_10829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10771)
static void C_fcall f_10771(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10775)
static void C_ccall f_10775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10779)
static void C_ccall f_10779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10821)
static void C_ccall f_10821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10817)
static void C_ccall f_10817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10795)
static void C_ccall f_10795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10658)
static void C_fcall f_10658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10661)
static void C_fcall f_10661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10560)
static void C_ccall f_10560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10643)
static void C_ccall f_10643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10610)
static void C_ccall f_10610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10636)
static void C_ccall f_10636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10618)
static void C_ccall f_10618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10566)
static void C_fcall f_10566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10606)
static void C_ccall f_10606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10548)
static void C_ccall f_10548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10519)
static void C_ccall f_10519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10541)
static void C_ccall f_10541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10527)
static void C_ccall f_10527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10481)
static void C_fcall f_10481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10438)
static void C_fcall f_10438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10449)
static void C_ccall f_10449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10453)
static void C_ccall f_10453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10457)
static void C_ccall f_10457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10461)
static void C_ccall f_10461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10445)
static void C_ccall f_10445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10405)
static void C_fcall f_10405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10400)
static void C_fcall f_10400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10395)
static void C_fcall f_10395(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10227)
static void C_ccall f_10227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10238)
static void C_ccall f_10238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10253)
static void C_ccall f_10253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10189)
static void C_ccall f_10189(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10200)
static void C_ccall f_10200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10215)
static void C_ccall f_10215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10122)
static void C_ccall f_10122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10142)
static void C_fcall f_10142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10152)
static void C_ccall f_10152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10165)
static void C_ccall f_10165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10133)
static void C_ccall f_10133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10140)
static void C_ccall f_10140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9929)
static void C_ccall f_9929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9989)
static void C_fcall f_9989(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9999)
static void C_ccall f_9999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10113)
static void C_ccall f_10113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10078)
static void C_ccall f_10078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10070)
static void C_ccall f_10070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10041)
static void C_ccall f_10041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10019)
static void C_ccall f_10019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10022)
static void C_ccall f_10022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10010)
static void C_ccall f_10010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9936)
static void C_ccall f_9936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9987)
static void C_ccall f_9987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9979)
static void C_ccall f_9979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9939)
static void C_ccall f_9939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9950)
static void C_ccall f_9950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9954)
static void C_ccall f_9954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9946)
static void C_ccall f_9946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9787)
static void C_ccall f_9787(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9835)
static void C_fcall f_9835(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9845)
static void C_ccall f_9845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9856)
static void C_ccall f_9856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9893)
static void C_ccall f_9893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9868)
static void C_ccall f_9868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9859)
static void C_ccall f_9859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9804)
static void C_ccall f_9804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9436)
static void C_ccall f_9436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9677)
static void C_fcall f_9677(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9687)
static void C_ccall f_9687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9698)
static void C_ccall f_9698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9710)
static void C_fcall f_9710(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9701)
static void C_ccall f_9701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9449)
static void C_ccall f_9449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9675)
static void C_ccall f_9675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9617)
static void C_fcall f_9617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9582)
static void C_fcall f_9582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9598)
static void C_fcall f_9598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9553)
static void C_fcall f_9553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9477)
static void C_ccall f_9477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9480)
static void C_ccall f_9480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9544)
static void C_ccall f_9544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9540)
static void C_ccall f_9540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9460)
static void C_fcall f_9460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9471)
static void C_ccall f_9471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9467)
static void C_ccall f_9467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9389)
static void C_ccall f_9389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9422)
static void C_ccall f_9422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9404)
static void C_ccall f_9404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9416)
static void C_ccall f_9416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9007)
static void C_ccall f_9007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9216)
static void C_fcall f_9216(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9226)
static void C_ccall f_9226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9237)
static void C_ccall f_9237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9357)
static void C_ccall f_9357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9336)
static void C_ccall f_9336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9315)
static void C_ccall f_9315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9294)
static void C_ccall f_9294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9273)
static void C_ccall f_9273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9252)
static void C_ccall f_9252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9240)
static void C_ccall f_9240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9017)
static void C_ccall f_9017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9020)
static void C_fcall f_9020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9183)
static void C_fcall f_9183(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9023)
static void C_fcall f_9023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9174)
static void C_ccall f_9174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9154)
static void C_ccall f_9154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9026)
static void C_fcall f_9026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9119)
static void C_ccall f_9119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9136)
static void C_ccall f_9136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9029)
static void C_fcall f_9029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9068)
static void C_ccall f_9068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9102)
static void C_ccall f_9102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9086)
static void C_ccall f_9086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_fcall f_9071(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9036)
static void C_fcall f_9036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9047)
static void C_ccall f_9047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9051)
static void C_ccall f_9051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9043)
static void C_ccall f_9043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8925)
static void C_ccall f_8925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8929)
static void C_ccall f_8929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8947)
static void C_ccall f_8947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8765)
static void C_fcall f_8765(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8773)
static void C_fcall f_8773(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8783)
static void C_ccall f_8783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8821)
static void C_ccall f_8821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8824)
static void C_ccall f_8824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8827)
static void C_ccall f_8827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8902)
static void C_fcall f_8902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8912)
static void C_ccall f_8912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8830)
static void C_ccall f_8830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8833)
static void C_ccall f_8833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8836)
static void C_ccall f_8836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8856)
static void C_fcall f_8856(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8866)
static void C_ccall f_8866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8869)
static void C_ccall f_8869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8872)
static void C_ccall f_8872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8839)
static void C_ccall f_8839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8842)
static void C_ccall f_8842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8759)
static void C_fcall f_8759(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8753)
static void C_fcall f_8753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8747)
static void C_fcall f_8747(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8676)
static void C_fcall f_8676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8717)
static void C_ccall f_8717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8721)
static void C_ccall f_8721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8725)
static void C_ccall f_8725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8729)
static void C_ccall f_8729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8733)
static void C_ccall f_8733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8737)
static void C_ccall f_8737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8741)
static void C_ccall f_8741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8745)
static void C_ccall f_8745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8678)
static void C_fcall f_8678(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8684)
static void C_fcall f_8684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8706)
static void C_ccall f_8706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8695)
static void C_ccall f_8695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8525)
static void C_fcall f_8525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8540)
static void C_fcall f_8540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8553)
static void C_ccall f_8553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8513)
static void C_ccall f_8513(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8501)
static void C_ccall f_8501(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8489)
static void C_ccall f_8489(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8483)
static void C_fcall f_8483(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8477)
static void C_ccall f_8477(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8465)
static void C_ccall f_8465(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8453)
static void C_ccall f_8453(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8441)
static void C_ccall f_8441(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8429)
static void C_ccall f_8429(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8423)
static void C_fcall f_8423(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8373)
static void C_ccall f_8373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8373)
static void C_ccall f_8373r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8407)
static void C_ccall f_8407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8411)
static void C_ccall f_8411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8415)
static void C_ccall f_8415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8381)
static void C_ccall f_8381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8399)
static void C_ccall f_8399(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8390)
static void C_ccall f_8390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8398)
static void C_ccall f_8398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8385)
static void C_ccall f_8385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8329)
static void C_ccall f_8329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8329)
static void C_ccall f_8329r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8363)
static void C_ccall f_8363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8367)
static void C_ccall f_8367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8371)
static void C_ccall f_8371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8337)
static void C_ccall f_8337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8355)
static void C_ccall f_8355(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8346)
static void C_ccall f_8346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8354)
static void C_ccall f_8354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8341)
static void C_ccall f_8341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8255)
static void C_fcall f_8255(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8259)
static void C_ccall f_8259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8266)
static void C_ccall f_8266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8268)
static void C_fcall f_8268(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8282)
static void C_ccall f_8282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8295)
static void C_ccall f_8295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8285)
static void C_fcall f_8285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8169)
static void C_ccall f_8169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8169)
static void C_ccall f_8169r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8051)
static void C_fcall f_8051(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8057)
static void C_fcall f_8057(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8081)
static void C_ccall f_8081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8067)
static void C_fcall f_8067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7952)
static void C_ccall f_7952(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7952)
static void C_ccall f_7952r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7956)
static void C_ccall f_7956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7981)
static void C_fcall f_7981(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7998)
static void C_ccall f_7998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8002)
static void C_ccall f_8002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7958)
static void C_fcall f_7958(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7975)
static void C_ccall f_7975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7790)
static void C_ccall f_7790(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7790)
static void C_ccall f_7790r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7799)
static void C_fcall f_7799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7837)
static void C_fcall f_7837(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7815)
static void C_ccall f_7815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7700)
static void C_ccall f_7700(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7652)
static void C_ccall f_7652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7686)
static void C_ccall f_7686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7629)
static void C_ccall f_7629(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7623)
static void C_ccall f_7623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7608)
static void C_ccall f_7608(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7594)
static void C_ccall f_7594(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7584)
static void C_ccall f_7584(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7574)
static void C_ccall f_7574(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7564)
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7554)
static void C_ccall f_7554(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7544)
static void C_ccall f_7544(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6850)
static void C_ccall f_6850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7513)
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7513)
static void C_ccall f_7513r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7523)
static void C_fcall f_7523(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7507)
static void C_ccall f_7507(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6808)
static void C_ccall f_6808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7501)
static void C_ccall f_7501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7424)
static void C_fcall f_7424(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7275)
static void C_fcall f_7275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7284)
static void C_ccall f_7284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7181)
static void C_fcall f_7181(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7161)
static void C_fcall f_7161(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7130)
static void C_ccall f_7130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7127)
static void C_ccall f_7127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7120)
static void C_fcall f_7120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7117)
static void C_ccall f_7117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7110)
static void C_fcall f_7110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7092)
static void C_fcall f_7092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7081)
static void C_fcall f_7081(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7075)
static void C_ccall f_7075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7072)
static void C_ccall f_7072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7043)
static void C_fcall f_7043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7036)
static void C_fcall f_7036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7033)
static void C_ccall f_7033(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7012)
static void C_fcall f_7012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6993)
static void C_ccall f_6993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6974)
static void C_ccall f_6974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6960)
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6945)
static void C_fcall f_6945(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6934)
static void C_fcall f_6934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6927)
static void C_ccall f_6927(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6873)
static void C_fcall f_6873(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6817)
static void C_fcall f_6817(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6822)
static void C_ccall f_6822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6736)
static void C_fcall f_6736(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6730)
static void C_ccall f_6730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6723)
static void C_ccall f_6723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6717)
static void C_ccall f_6717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6707)
static void C_ccall f_6707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6687)
static void C_ccall f_6687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6699)
static void C_ccall f_6699(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_43953)
static void C_fcall trf_43953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43953(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_43953(t0,t1,t2);}

C_noret_decl(trf_44013)
static void C_fcall trf_44013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44013(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_44013(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_44033)
static void C_fcall trf_44033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44033(t0,t1);}

C_noret_decl(trf_44036)
static void C_fcall trf_44036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44036(t0,t1);}

C_noret_decl(trf_43879)
static void C_fcall trf_43879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43879(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_43879(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_43713)
static void C_fcall trf_43713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43713(t0,t1);}

C_noret_decl(trf_28531)
static void C_fcall trf_28531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28531(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28531(t0,t1,t2);}

C_noret_decl(trf_28544)
static void C_fcall trf_28544(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28544(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28544(t0,t1);}

C_noret_decl(trf_42591)
static void C_fcall trf_42591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42591(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42591(t0,t1);}

C_noret_decl(trf_42464)
static void C_fcall trf_42464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42464(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_42464(t0,t1,t2);}

C_noret_decl(trf_37917)
static void C_fcall trf_37917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37917(t0,t1);}

C_noret_decl(trf_42116)
static void C_fcall trf_42116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42116(t0,t1);}

C_noret_decl(trf_41211)
static void C_fcall trf_41211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41211(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41211(t0,t1,t2);}

C_noret_decl(trf_41246)
static void C_fcall trf_41246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41246(t0,t1);}

C_noret_decl(trf_41270)
static void C_fcall trf_41270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41270(t0,t1);}

C_noret_decl(trf_41249)
static void C_fcall trf_41249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41249(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41249(t0,t1);}

C_noret_decl(trf_41052)
static void C_fcall trf_41052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41052(t0,t1);}

C_noret_decl(trf_40808)
static void C_fcall trf_40808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40808(t0,t1);}

C_noret_decl(trf_40815)
static void C_fcall trf_40815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40815(t0,t1);}

C_noret_decl(trf_40796)
static void C_fcall trf_40796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40796(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40796(t0,t1);}

C_noret_decl(trf_30593)
static void C_fcall trf_30593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30593(t0,t1);}

C_noret_decl(trf_30600)
static void C_fcall trf_30600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30600(t0,t1);}

C_noret_decl(trf_30917)
static void C_fcall trf_30917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30917(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30917(t0,t1,t2);}

C_noret_decl(trf_30940)
static void C_fcall trf_30940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30940(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30940(t0,t1,t2);}

C_noret_decl(trf_30957)
static void C_fcall trf_30957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30957(t0,t1);}

C_noret_decl(trf_30960)
static void C_fcall trf_30960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30960(t0,t1);}

C_noret_decl(trf_30963)
static void C_fcall trf_30963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30963(t0,t1);}

C_noret_decl(trf_30881)
static void C_fcall trf_30881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30881(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30881(t0,t1,t2);}

C_noret_decl(trf_30821)
static void C_fcall trf_30821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30821(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30821(t0,t1,t2);}

C_noret_decl(trf_30837)
static void C_fcall trf_30837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30837(t0,t1);}

C_noret_decl(trf_30792)
static void C_fcall trf_30792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30792(t0,t1);}

C_noret_decl(trf_30609)
static void C_fcall trf_30609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30609(t0,t1);}

C_noret_decl(trf_30612)
static void C_fcall trf_30612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30612(t0,t1);}

C_noret_decl(trf_30615)
static void C_fcall trf_30615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30615(t0,t1);}

C_noret_decl(trf_11581)
static void C_fcall trf_11581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11581(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11581(t0,t1);}

C_noret_decl(trf_11616)
static void C_fcall trf_11616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11616(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_11616(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11626)
static void C_fcall trf_11626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11626(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11626(t0,t1);}

C_noret_decl(trf_11589)
static void C_fcall trf_11589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11589(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11589(t0,t1,t2);}

C_noret_decl(trf_11749)
static void C_fcall trf_11749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11749(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11749(t0,t1);}

C_noret_decl(trf_38647)
static void C_fcall trf_38647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38647(t0,t1);}

C_noret_decl(trf_38791)
static void C_fcall trf_38791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38791(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38791(t0,t1);}

C_noret_decl(trf_38660)
static void C_fcall trf_38660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38660(t0,t1);}

C_noret_decl(trf_40305)
static void C_fcall trf_40305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40305(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40305(t0,t1);}

C_noret_decl(trf_40308)
static void C_fcall trf_40308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40308(t0,t1);}

C_noret_decl(trf_40151)
static void C_fcall trf_40151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40151(t0,t1);}

C_noret_decl(trf_39959)
static void C_fcall trf_39959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39959(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39959(t0,t1);}

C_noret_decl(trf_39809)
static void C_fcall trf_39809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39809(t0,t1);}

C_noret_decl(trf_39898)
static void C_fcall trf_39898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39898(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39898(t0,t1);}

C_noret_decl(trf_39812)
static void C_fcall trf_39812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39812(t0,t1);}

C_noret_decl(trf_39828)
static void C_fcall trf_39828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39828(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39828(t0,t1,t2,t3);}

C_noret_decl(trf_39850)
static void C_fcall trf_39850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39850(t0,t1);}

C_noret_decl(trf_39745)
static void C_fcall trf_39745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39745(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39745(t0,t1,t2);}

C_noret_decl(trf_39692)
static void C_fcall trf_39692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39692(t0,t1);}

C_noret_decl(trf_39338)
static void C_fcall trf_39338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39338(t0,t1,t2);}

C_noret_decl(trf_39366)
static void C_fcall trf_39366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39366(t0,t1);}

C_noret_decl(trf_39278)
static void C_fcall trf_39278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39278(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39278(t0,t1,t2);}

C_noret_decl(trf_39203)
static void C_fcall trf_39203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39203(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39203(t0,t1,t2);}

C_noret_decl(trf_39127)
static void C_fcall trf_39127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39127(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39127(t0,t1,t2,t3);}

C_noret_decl(trf_39074)
static void C_fcall trf_39074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39074(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39074(t0,t1,t2);}

C_noret_decl(trf_39097)
static void C_fcall trf_39097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39097(t0,t1);}

C_noret_decl(trf_39022)
static void C_fcall trf_39022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39022(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39022(t0,t1,t2);}

C_noret_decl(trf_38891)
static void C_fcall trf_38891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38891(t0,t1);}

C_noret_decl(trf_38961)
static void C_fcall trf_38961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38961(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38961(t0,t1,t2);}

C_noret_decl(trf_38920)
static void C_fcall trf_38920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38920(t0,t1);}

C_noret_decl(trf_38892)
static void C_fcall trf_38892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38892(t0,t1);}

C_noret_decl(trf_38591)
static void C_fcall trf_38591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38591(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38591(t0,t1,t2);}

C_noret_decl(trf_38532)
static void C_fcall trf_38532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38532(t0,t1);}

C_noret_decl(trf_37987)
static void C_fcall trf_37987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37987(t0,t1);}

C_noret_decl(trf_38320)
static void C_fcall trf_38320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38320(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38320(t0,t1,t2,t3);}

C_noret_decl(trf_38247)
static void C_fcall trf_38247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38247(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38247(t0,t1,t2);}

C_noret_decl(trf_38284)
static void C_fcall trf_38284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38284(t0,t1);}

C_noret_decl(trf_38202)
static void C_fcall trf_38202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38202(t0,t1);}

C_noret_decl(trf_38207)
static void C_fcall trf_38207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38207(t0,t1);}

C_noret_decl(trf_38156)
static void C_fcall trf_38156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38156(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38156(t0,t1);}

C_noret_decl(trf_38161)
static void C_fcall trf_38161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38161(t0,t1);}

C_noret_decl(trf_38053)
static void C_fcall trf_38053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38053(t0,t1);}

C_noret_decl(trf_38062)
static void C_fcall trf_38062(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38062(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38062(t0,t1,t2);}

C_noret_decl(trf_37852)
static void C_fcall trf_37852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37852(t0,t1);}

C_noret_decl(trf_37808)
static void C_fcall trf_37808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37808(t0,t1);}

C_noret_decl(trf_37837)
static void C_fcall trf_37837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37837(t0,t1);}

C_noret_decl(trf_37811)
static void C_fcall trf_37811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37811(t0,t1);}

C_noret_decl(trf_37633)
static void C_fcall trf_37633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37633(t0,t1);}

C_noret_decl(trf_37640)
static void C_fcall trf_37640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37640(t0,t1);}

C_noret_decl(trf_37646)
static void C_fcall trf_37646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37646(t0,t1,t2);}

C_noret_decl(trf_37528)
static void C_fcall trf_37528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37528(t0,t1);}

C_noret_decl(trf_37535)
static void C_fcall trf_37535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37535(t0,t1);}

C_noret_decl(trf_37541)
static void C_fcall trf_37541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37541(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37541(t0,t1,t2);}

C_noret_decl(trf_37003)
static void C_fcall trf_37003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37003(t0,t1);}

C_noret_decl(trf_37006)
static void C_fcall trf_37006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37006(t0,t1);}

C_noret_decl(trf_37009)
static void C_fcall trf_37009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37009(t0,t1);}

C_noret_decl(trf_36574)
static void C_fcall trf_36574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36574(t0,t1);}

C_noret_decl(trf_36577)
static void C_fcall trf_36577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36577(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36577(t0,t1);}

C_noret_decl(trf_36580)
static void C_fcall trf_36580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36580(t0,t1);}

C_noret_decl(trf_36145)
static void C_fcall trf_36145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36145(t0,t1);}

C_noret_decl(trf_36148)
static void C_fcall trf_36148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36148(t0,t1);}

C_noret_decl(trf_36151)
static void C_fcall trf_36151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36151(t0,t1);}

C_noret_decl(trf_35438)
static void C_fcall trf_35438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35438(t0,t1);}

C_noret_decl(trf_35441)
static void C_fcall trf_35441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35441(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35441(t0,t1);}

C_noret_decl(trf_35444)
static void C_fcall trf_35444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35444(t0,t1);}

C_noret_decl(trf_35447)
static void C_fcall trf_35447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35447(t0,t1);}

C_noret_decl(trf_34731)
static void C_fcall trf_34731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34731(t0,t1);}

C_noret_decl(trf_34734)
static void C_fcall trf_34734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34734(t0,t1);}

C_noret_decl(trf_34737)
static void C_fcall trf_34737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34737(t0,t1);}

C_noret_decl(trf_34740)
static void C_fcall trf_34740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34740(t0,t1);}

C_noret_decl(trf_34024)
static void C_fcall trf_34024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34024(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34024(t0,t1);}

C_noret_decl(trf_34027)
static void C_fcall trf_34027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34027(t0,t1);}

C_noret_decl(trf_34030)
static void C_fcall trf_34030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34030(t0,t1);}

C_noret_decl(trf_34033)
static void C_fcall trf_34033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34033(t0,t1);}

C_noret_decl(trf_33595)
static void C_fcall trf_33595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33595(t0,t1);}

C_noret_decl(trf_33598)
static void C_fcall trf_33598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33598(t0,t1);}

C_noret_decl(trf_33601)
static void C_fcall trf_33601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33601(t0,t1);}

C_noret_decl(trf_32540)
static void C_fcall trf_32540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32540(t0,t1);}

C_noret_decl(trf_32543)
static void C_fcall trf_32543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32543(t0,t1);}

C_noret_decl(trf_32546)
static void C_fcall trf_32546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32546(t0,t1);}

C_noret_decl(trf_32549)
static void C_fcall trf_32549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32549(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32549(t0,t1);}

C_noret_decl(trf_32552)
static void C_fcall trf_32552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32552(t0,t1);}

C_noret_decl(trf_32377)
static void C_fcall trf_32377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32377(t0,t1);}

C_noret_decl(trf_32384)
static void C_fcall trf_32384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32384(t0,t1);}

C_noret_decl(trf_32322)
static void C_fcall trf_32322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32322(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32322(t0,t1);}

C_noret_decl(trf_32329)
static void C_fcall trf_32329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32329(t0,t1);}

C_noret_decl(trf_32079)
static void C_fcall trf_32079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32079(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32079(t0,t1);}

C_noret_decl(trf_32082)
static void C_fcall trf_32082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32082(t0,t1);}

C_noret_decl(trf_31878)
static void C_fcall trf_31878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31878(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31878(t0,t1,t2);}

C_noret_decl(trf_31754)
static void C_fcall trf_31754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31754(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_31754(t0,t1,t2,t3,t4);}

C_noret_decl(trf_31790)
static void C_fcall trf_31790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31790(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31790(t0,t1,t2);}

C_noret_decl(trf_31592)
static void C_fcall trf_31592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31592(t0,t1);}

C_noret_decl(trf_31596)
static void C_fcall trf_31596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31596(t0,t1);}

C_noret_decl(trf_31112)
static void C_fcall trf_31112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31112(t0,t1);}

C_noret_decl(trf_31115)
static void C_fcall trf_31115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31115(t0,t1);}

C_noret_decl(trf_31118)
static void C_fcall trf_31118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31118(t0,t1);}

C_noret_decl(trf_31124)
static void C_fcall trf_31124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31124(t0,t1);}

C_noret_decl(trf_28932)
static void C_fcall trf_28932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28932(t0,t1);}

C_noret_decl(trf_31720)
static void C_fcall trf_31720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31720(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31720(t0,t1,t2);}

C_noret_decl(trf_31730)
static void C_fcall trf_31730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31730(t0,t1);}

C_noret_decl(trf_31690)
static void C_fcall trf_31690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31690(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31690(t0,t1,t2);}

C_noret_decl(trf_31700)
static void C_fcall trf_31700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31700(t0,t1);}

C_noret_decl(trf_30274)
static void C_fcall trf_30274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30274(t0,t1);}

C_noret_decl(trf_30277)
static void C_fcall trf_30277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30277(t0,t1);}

C_noret_decl(trf_30280)
static void C_fcall trf_30280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30280(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30280(t0,t1);}

C_noret_decl(trf_30283)
static void C_fcall trf_30283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30283(t0,t1);}

C_noret_decl(trf_30286)
static void C_fcall trf_30286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30286(t0,t1);}

C_noret_decl(trf_30289)
static void C_fcall trf_30289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30289(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30289(t0,t1);}

C_noret_decl(trf_30117)
static void C_fcall trf_30117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30117(t0,t1);}

C_noret_decl(trf_30046)
static void C_fcall trf_30046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30046(t0,t1);}

C_noret_decl(trf_29861)
static void C_fcall trf_29861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29861(t0,t1);}

C_noret_decl(trf_29873)
static void C_fcall trf_29873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29873(t0,t1);}

C_noret_decl(trf_29910)
static void C_fcall trf_29910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29910(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_29910(t0,t1,t2,t3,t4);}

C_noret_decl(trf_29945)
static void C_fcall trf_29945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29945(t0,t1);}

C_noret_decl(trf_29840)
static void C_fcall trf_29840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29840(t0,t1);}

C_noret_decl(trf_29775)
static void C_fcall trf_29775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29775(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29775(t0,t1,t2);}

C_noret_decl(trf_29784)
static void C_fcall trf_29784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29784(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29784(t0,t1,t2);}

C_noret_decl(trf_29797)
static void C_fcall trf_29797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29797(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29797(t0,t1);}

C_noret_decl(trf_29731)
static void C_fcall trf_29731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29731(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29731(t0,t1,t2);}

C_noret_decl(trf_29719)
static void C_fcall trf_29719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29719(t0,t1);}

C_noret_decl(trf_29617)
static void C_fcall trf_29617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29617(t0,t1);}

C_noret_decl(trf_29569)
static void C_fcall trf_29569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29569(t0,t1);}

C_noret_decl(trf_28950)
static void C_fcall trf_28950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28950(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_28950(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_28960)
static void C_fcall trf_28960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28960(t0,t1);}

C_noret_decl(trf_29089)
static void C_fcall trf_29089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29089(t0,t1);}

C_noret_decl(trf_29177)
static void C_fcall trf_29177(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29177(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29177(t0,t1);}

C_noret_decl(trf_29250)
static void C_fcall trf_29250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29250(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29250(t0,t1);}

C_noret_decl(trf_29328)
static void C_fcall trf_29328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29328(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29328(t0,t1);}

C_noret_decl(trf_29279)
static void C_fcall trf_29279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29279(t0,t1);}

C_noret_decl(trf_29295)
static void C_fcall trf_29295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29295(t0,t1);}

C_noret_decl(trf_29259)
static void C_fcall trf_29259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29259(t0,t1);}

C_noret_decl(trf_29201)
static void C_fcall trf_29201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29201(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29201(t0,t1,t2);}

C_noret_decl(trf_29120)
static void C_fcall trf_29120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29120(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29120(t0,t1,t2);}

C_noret_decl(trf_29136)
static void C_fcall trf_29136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29136(t0,t1);}

C_noret_decl(trf_29104)
static void C_fcall trf_29104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29104(t0,t1);}

C_noret_decl(trf_28846)
static void C_fcall trf_28846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28846(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28846(t0,t1);}

C_noret_decl(trf_28855)
static void C_fcall trf_28855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28855(t0,t1);}

C_noret_decl(trf_28860)
static void C_fcall trf_28860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28860(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28860(t0,t1,t2);}

C_noret_decl(trf_28838)
static void C_fcall trf_28838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28838(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28838(t0,t1);}

C_noret_decl(trf_28630)
static void C_fcall trf_28630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28630(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28630(t0,t1,t2,t3);}

C_noret_decl(trf_28597)
static void C_fcall trf_28597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28597(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28597(t0,t1,t2,t3);}

C_noret_decl(trf_28579)
static void C_fcall trf_28579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28579(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28579(t0,t1,t2,t3);}

C_noret_decl(trf_28512)
static void C_fcall trf_28512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28512(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28512(t0,t1,t2,t3);}

C_noret_decl(trf_28500)
static void C_fcall trf_28500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28500(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28500(t0,t1,t2);}

C_noret_decl(trf_28468)
static void C_fcall trf_28468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28468(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28468(t0,t1,t2);}

C_noret_decl(trf_28452)
static void C_fcall trf_28452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28452(t0,t1);}

C_noret_decl(trf_28443)
static void C_fcall trf_28443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28443(t0,t1);}

C_noret_decl(trf_28425)
static void C_fcall trf_28425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28425(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28425(t0,t1);}

C_noret_decl(trf_28407)
static void C_fcall trf_28407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28407(t0,t1);}

C_noret_decl(trf_28392)
static void C_fcall trf_28392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28392(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28392(t0,t1);}

C_noret_decl(trf_28386)
static void C_fcall trf_28386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28386(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28386(t0,t1,t2,t3);}

C_noret_decl(trf_28338)
static void C_fcall trf_28338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28338(t0,t1,t2);}

C_noret_decl(trf_28306)
static void C_fcall trf_28306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28306(t0,t1);}

C_noret_decl(trf_28248)
static void C_fcall trf_28248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28248(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28248(t0,t1,t2);}

C_noret_decl(trf_28238)
static void C_fcall trf_28238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28238(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28238(t0,t1);}

C_noret_decl(trf_28232)
static void C_fcall trf_28232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28232(t0,t1);}

C_noret_decl(trf_28220)
static void C_fcall trf_28220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28220(t0,t1);}

C_noret_decl(trf_28199)
static void C_fcall trf_28199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28199(t0,t1);}

C_noret_decl(trf_28097)
static void C_fcall trf_28097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28097(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28097(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28087)
static void C_fcall trf_28087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28087(t0,t1);}

C_noret_decl(trf_28075)
static void C_fcall trf_28075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28075(t0,t1);}

C_noret_decl(trf_28043)
static void C_fcall trf_28043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28043(t0,t1);}

C_noret_decl(trf_28007)
static void C_fcall trf_28007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28007(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28007(t0,t1);}

C_noret_decl(trf_27794)
static void C_fcall trf_27794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27794(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27794(t0,t1);}

C_noret_decl(trf_27943)
static void C_fcall trf_27943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27943(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27943(t0,t1,t2);}

C_noret_decl(trf_27829)
static void C_fcall trf_27829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27829(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27829(t0,t1,t2,t3);}

C_noret_decl(trf_27870)
static void C_fcall trf_27870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27870(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27870(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27754)
static void C_fcall trf_27754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27754(t0,t1);}

C_noret_decl(trf_27717)
static void C_fcall trf_27717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27717(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27717(t0,t1,t2,t3);}

C_noret_decl(trf_27615)
static void C_fcall trf_27615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27615(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27615(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27562)
static void C_fcall trf_27562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27562(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27562(t0,t1,t2);}

C_noret_decl(trf_27734)
static void C_fcall trf_27734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27734(t0,t1);}

C_noret_decl(trf_27675)
static void C_fcall trf_27675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27675(t0,t1);}

C_noret_decl(trf_27530)
static void C_fcall trf_27530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27530(t0,t1);}

C_noret_decl(trf_27161)
static void C_fcall trf_27161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27161(t0,t1);}

C_noret_decl(trf_27164)
static void C_fcall trf_27164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27164(t0,t1);}

C_noret_decl(trf_27167)
static void C_fcall trf_27167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27167(t0,t1);}

C_noret_decl(trf_8136)
static void C_fcall trf_8136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8136(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8136(t0,t1,t2,t3);}

C_noret_decl(trf_8149)
static void C_fcall trf_8149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8149(t0,t1);}

C_noret_decl(trf_27325)
static void C_fcall trf_27325(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27325(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27325(t0,t1);}

C_noret_decl(trf_27328)
static void C_fcall trf_27328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27328(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27328(t0,t1);}

C_noret_decl(trf_27337)
static void C_fcall trf_27337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27337(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27337(t0,t1,t2);}

C_noret_decl(trf_27347)
static void C_fcall trf_27347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27347(t0,t1);}

C_noret_decl(trf_27294)
static void C_fcall trf_27294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27294(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27294(t0,t1,t2);}

C_noret_decl(trf_27256)
static void C_fcall trf_27256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27256(t0,t1,t2);}

C_noret_decl(trf_26629)
static void C_fcall trf_26629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26629(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26629(t0,t1,t2,t3);}

C_noret_decl(trf_27211)
static void C_fcall trf_27211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27211(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27211(t0,t1,t2);}

C_noret_decl(trf_27181)
static void C_fcall trf_27181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27181(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27181(t0,t1,t2);}

C_noret_decl(trf_27116)
static void C_fcall trf_27116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27116(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27116(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27060)
static void C_fcall trf_27060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27060(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27060(t0,t1,t2);}

C_noret_decl(trf_27028)
static void C_fcall trf_27028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27028(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27028(t0,t1,t2);}

C_noret_decl(trf_26979)
static void C_fcall trf_26979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26979(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26979(t0,t1,t2);}

C_noret_decl(trf_26998)
static void C_fcall trf_26998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26998(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26998(t0,t1,t2);}

C_noret_decl(trf_26918)
static void C_fcall trf_26918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26918(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26918(t0,t1,t2,t3);}

C_noret_decl(trf_26901)
static void C_fcall trf_26901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26901(t0,t1);}

C_noret_decl(trf_26884)
static void C_fcall trf_26884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26884(t0,t1);}

C_noret_decl(trf_26717)
static void C_fcall trf_26717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26717(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_26717(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_26727)
static void C_fcall trf_26727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26727(t0,t1);}

C_noret_decl(trf_26542)
static void C_fcall trf_26542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26542(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26542(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26564)
static void C_fcall trf_26564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26564(t0,t1);}

C_noret_decl(trf_26383)
static void C_fcall trf_26383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26383(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26383(t0,t1,t2,t3);}

C_noret_decl(trf_26472)
static void C_fcall trf_26472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26472(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26472(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26486)
static void C_fcall trf_26486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26486(t0,t1);}

C_noret_decl(trf_26414)
static void C_fcall trf_26414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26414(t0,t1);}

C_noret_decl(trf_26321)
static void C_fcall trf_26321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26321(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26321(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24828)
static void C_fcall trf_24828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24828(t0,t1);}

C_noret_decl(trf_24831)
static void C_fcall trf_24831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24831(t0,t1);}

C_noret_decl(trf_24834)
static void C_fcall trf_24834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24834(t0,t1);}

C_noret_decl(trf_24837)
static void C_fcall trf_24837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24837(t0,t1);}

C_noret_decl(trf_24840)
static void C_fcall trf_24840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24840(t0,t1);}

C_noret_decl(trf_24843)
static void C_fcall trf_24843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24843(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24843(t0,t1);}

C_noret_decl(trf_24592)
static void C_fcall trf_24592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24592(t0,t1);}

C_noret_decl(trf_7904)
static void C_fcall trf_7904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7904(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7904(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24677)
static void C_fcall trf_24677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24677(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24677(t0,t1,t2);}

C_noret_decl(trf_24603)
static void C_fcall trf_24603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24603(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24603(t0,t1,t2);}

C_noret_decl(trf_24644)
static void C_fcall trf_24644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24644(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24644(t0,t1);}

C_noret_decl(trf_24618)
static void C_fcall trf_24618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24618(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24618(t0,t1);}

C_noret_decl(trf_24463)
static void C_fcall trf_24463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24463(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24463(t0,t1,t2);}

C_noret_decl(trf_24389)
static void C_fcall trf_24389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24389(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24389(t0,t1,t2);}

C_noret_decl(trf_24371)
static void C_fcall trf_24371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24371(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24371(t0,t1,t2);}

C_noret_decl(trf_24353)
static void C_fcall trf_24353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24353(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24353(t0,t1,t2);}

C_noret_decl(trf_24329)
static void C_fcall trf_24329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24329(t0,t1);}

C_noret_decl(trf_24323)
static void C_fcall trf_24323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24323(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24323(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24278)
static void C_fcall trf_24278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24278(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24278(t0,t1);}

C_noret_decl(trf_24236)
static void C_fcall trf_24236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24236(t0,t1);}

C_noret_decl(trf_23048)
static void C_fcall trf_23048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23048(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23048(t0,t1);}

C_noret_decl(trf_23194)
static void C_fcall trf_23194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23194(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23194(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23143)
static void C_fcall trf_23143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23143(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23143(t0,t1,t2,t3);}

C_noret_decl(trf_23149)
static void C_fcall trf_23149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23149(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23149(t0,t1,t2,t3);}

C_noret_decl(trf_23159)
static void C_fcall trf_23159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23159(t0,t1);}

C_noret_decl(trf_23028)
static void C_fcall trf_23028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23028(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23028(t0,t1,t2);}

C_noret_decl(trf_23023)
static void C_fcall trf_23023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23023(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23023(t0,t1,t2,t3);}

C_noret_decl(trf_22880)
static void C_fcall trf_22880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22880(t0,t1);}

C_noret_decl(trf_22763)
static void C_fcall trf_22763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22763(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22763(t0,t1,t2);}

C_noret_decl(trf_22772)
static void C_fcall trf_22772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22772(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22772(t0,t1,t2,t3);}

C_noret_decl(trf_22605)
static void C_fcall trf_22605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22605(t0,t1);}

C_noret_decl(trf_22621)
static void C_fcall trf_22621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22621(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22621(t0,t1,t2,t3);}

C_noret_decl(trf_22429)
static void C_fcall trf_22429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22429(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22429(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22459)
static void C_fcall trf_22459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22459(t0,t1);}

C_noret_decl(trf_22442)
static void C_fcall trf_22442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22442(t0,t1);}

C_noret_decl(trf_22307)
static void C_fcall trf_22307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22307(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22307(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22337)
static void C_fcall trf_22337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22337(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22337(t0,t1);}

C_noret_decl(trf_22320)
static void C_fcall trf_22320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22320(t0,t1);}

C_noret_decl(trf_22210)
static void C_fcall trf_22210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22210(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22210(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22223)
static void C_fcall trf_22223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22223(t0,t1);}

C_noret_decl(trf_22142)
static void C_fcall trf_22142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22142(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22142(t0,t1,t2,t3);}

C_noret_decl(trf_22121)
static void C_fcall trf_22121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22121(t0,t1);}

C_noret_decl(trf_22043)
static void C_fcall trf_22043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22043(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22043(t0,t1,t2,t3);}

C_noret_decl(trf_21712)
static void C_fcall trf_21712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21712(t0,t1);}

C_noret_decl(trf_21715)
static void C_fcall trf_21715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21715(t0,t1);}

C_noret_decl(trf_21721)
static void C_fcall trf_21721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21721(t0,t1);}

C_noret_decl(trf_21624)
static void C_fcall trf_21624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21624(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21624(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21516)
static void C_fcall trf_21516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21516(t0,t1);}

C_noret_decl(trf_21521)
static void C_fcall trf_21521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21521(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21521(t0,t1,t2,t3);}

C_noret_decl(trf_21189)
static void C_fcall trf_21189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21189(t0,t1);}

C_noret_decl(trf_20990)
static void C_fcall trf_20990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20990(t0,t1);}

C_noret_decl(trf_21072)
static void C_fcall trf_21072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21072(t0,t1);}

C_noret_decl(trf_21083)
static void C_fcall trf_21083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21083(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21083(t0,t1,t2,t3);}

C_noret_decl(trf_21095)
static void C_fcall trf_21095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21095(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21095(t0,t1,t2);}

C_noret_decl(trf_21016)
static void C_fcall trf_21016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21016(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21016(t0,t1,t2);}

C_noret_decl(trf_20877)
static void C_fcall trf_20877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20877(t0,t1);}

C_noret_decl(trf_20886)
static void C_fcall trf_20886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20886(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_20886(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_20899)
static void C_fcall trf_20899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20899(t0,t1);}

C_noret_decl(trf_20741)
static void C_fcall trf_20741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20741(t0,t1);}

C_noret_decl(trf_20744)
static void C_fcall trf_20744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20744(t0,t1);}

C_noret_decl(trf_20746)
static void C_fcall trf_20746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20746(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20746(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20674)
static void C_fcall trf_20674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20674(t0,t1);}

C_noret_decl(trf_20677)
static void C_fcall trf_20677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20677(t0,t1);}

C_noret_decl(trf_20680)
static void C_fcall trf_20680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20680(t0,t1);}

C_noret_decl(trf_20538)
static void C_fcall trf_20538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20538(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20538(t0,t1,t2,t3);}

C_noret_decl(trf_20554)
static void C_fcall trf_20554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20554(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20554(t0,t1,t2);}

C_noret_decl(trf_20276)
static void C_fcall trf_20276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20276(t0,t1);}

C_noret_decl(trf_20279)
static void C_fcall trf_20279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20279(t0,t1);}

C_noret_decl(trf_19832)
static void C_fcall trf_19832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19832(t0,t1);}

C_noret_decl(trf_18757)
static void C_fcall trf_18757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18757(t0,t1);}

C_noret_decl(trf_18760)
static void C_fcall trf_18760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18760(t0,t1);}

C_noret_decl(trf_19500)
static void C_fcall trf_19500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19500(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19500(t0,t1,t2);}

C_noret_decl(trf_19523)
static void C_fcall trf_19523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19523(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19523(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19558)
static void C_fcall trf_19558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19558(t0,t1);}

C_noret_decl(trf_19462)
static void C_fcall trf_19462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19462(t0,t1);}

C_noret_decl(trf_18965)
static void C_fcall trf_18965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18965(t0,t1);}

C_noret_decl(trf_19333)
static void C_fcall trf_19333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19333(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19333(t0,t1,t2,t3);}

C_noret_decl(trf_19419)
static void C_fcall trf_19419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19419(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19419(t0,t1,t2,t3);}

C_noret_decl(trf_19376)
static void C_fcall trf_19376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19376(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19376(t0,t1,t2);}

C_noret_decl(trf_19300)
static void C_fcall trf_19300(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19300(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19300(t0,t1,t2);}

C_noret_decl(trf_19238)
static void C_fcall trf_19238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19238(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19238(t0,t1,t2);}

C_noret_decl(trf_19273)
static void C_fcall trf_19273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19273(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19273(t0,t1,t2,t3);}

C_noret_decl(trf_19033)
static void C_fcall trf_19033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19033(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19033(t0,t1,t2);}

C_noret_decl(trf_18929)
static void C_fcall trf_18929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18929(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18929(t0,t1,t2);}

C_noret_decl(trf_19211)
static void C_fcall trf_19211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19211(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19211(t0,t1,t2,t3);}

C_noret_decl(trf_19184)
static void C_fcall trf_19184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19184(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19184(t0,t1,t2,t3);}

C_noret_decl(trf_19070)
static void C_fcall trf_19070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19070(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19070(t0,t1,t2);}

C_noret_decl(trf_19111)
static void C_fcall trf_19111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19111(t0,t1);}

C_noret_decl(trf_19123)
static void C_fcall trf_19123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19123(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19123(t0,t1,t2,t3);}

C_noret_decl(trf_18852)
static void C_fcall trf_18852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18852(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18852(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18770)
static void C_fcall trf_18770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18770(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18770(t0,t1,t2,t3);}

C_noret_decl(trf_8097)
static void C_fcall trf_8097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8097(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8097(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8107)
static void C_fcall trf_8107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8107(t0,t1);}

C_noret_decl(trf_18842)
static void C_fcall trf_18842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18842(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18842(t0,t1,t2);}

C_noret_decl(trf_18691)
static void C_fcall trf_18691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18691(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18691(t0,t1,t2);}

C_noret_decl(trf_18716)
static void C_fcall trf_18716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18716(t0,t1);}

C_noret_decl(trf_18419)
static void C_fcall trf_18419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18419(t0,t1);}

C_noret_decl(trf_18422)
static void C_fcall trf_18422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18422(t0,t1);}

C_noret_decl(trf_18428)
static void C_fcall trf_18428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18428(t0,t1);}

C_noret_decl(trf_18142)
static void C_fcall trf_18142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18142(t0,t1);}

C_noret_decl(trf_18145)
static void C_fcall trf_18145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18145(t0,t1);}

C_noret_decl(trf_18072)
static void C_fcall trf_18072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18072(t0,t1);}

C_noret_decl(trf_17920)
static void C_fcall trf_17920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17920(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17920(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17845)
static void C_fcall trf_17845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17845(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17845(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17855)
static void C_fcall trf_17855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17855(t0,t1);}

C_noret_decl(trf_17862)
static void C_fcall trf_17862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17862(t0,t1);}

C_noret_decl(trf_17957)
static void C_fcall trf_17957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17957(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17957(t0,t1,t2);}

C_noret_decl(trf_17735)
static void C_fcall trf_17735(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17735(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17735(t0,t1,t2,t3);}

C_noret_decl(trf_17747)
static void C_fcall trf_17747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17747(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17747(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17808)
static void C_fcall trf_17808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17808(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17808(t0,t1,t2);}

C_noret_decl(trf_17172)
static void C_fcall trf_17172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17172(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17172(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17108)
static void C_fcall trf_17108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17108(t0,t1);}

C_noret_decl(trf_17055)
static void C_fcall trf_17055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17055(t0,t1);}

C_noret_decl(trf_17058)
static void C_fcall trf_17058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17058(t0,t1);}

C_noret_decl(trf_17252)
static void C_fcall trf_17252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17252(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17252(t0,t1);}

C_noret_decl(trf_17255)
static void C_fcall trf_17255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17255(t0,t1);}

C_noret_decl(trf_17258)
static void C_fcall trf_17258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17258(t0,t1);}

C_noret_decl(trf_17273)
static void C_fcall trf_17273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17273(t0,t1);}

C_noret_decl(trf_16834)
static void C_fcall trf_16834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16834(t0,t1);}

C_noret_decl(trf_16926)
static void C_fcall trf_16926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16926(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16926(t0,t1,t2);}

C_noret_decl(trf_16945)
static void C_fcall trf_16945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16945(t0,t1);}

C_noret_decl(trf_16899)
static void C_fcall trf_16899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16899(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16899(t0,t1,t2);}

C_noret_decl(trf_16844)
static void C_fcall trf_16844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16844(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16844(t0,t1,t2);}

C_noret_decl(trf_16854)
static void C_fcall trf_16854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16854(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16854(t0,t1,t2,t3);}

C_noret_decl(trf_16712)
static void C_fcall trf_16712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16712(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16712(t0,t1,t2);}

C_noret_decl(trf_16769)
static void C_fcall trf_16769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16769(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16769(t0,t1,t2);}

C_noret_decl(trf_16727)
static void C_fcall trf_16727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16727(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16727(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16269)
static void C_fcall trf_16269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16269(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16269(t0,t1);}

C_noret_decl(trf_16272)
static void C_fcall trf_16272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16272(t0,t1);}

C_noret_decl(trf_16275)
static void C_fcall trf_16275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16275(t0,t1);}

C_noret_decl(trf_16278)
static void C_fcall trf_16278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16278(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16278(t0,t1);}

C_noret_decl(trf_16242)
static void C_fcall trf_16242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16242(t0,t1);}

C_noret_decl(trf_15965)
static void C_fcall trf_15965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15965(t0,t1);}

C_noret_decl(trf_15968)
static void C_fcall trf_15968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15968(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15968(t0,t1);}

C_noret_decl(trf_15971)
static void C_fcall trf_15971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15971(t0,t1);}

C_noret_decl(trf_15862)
static void C_fcall trf_15862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15862(t0,t1);}

C_noret_decl(trf_15853)
static void C_fcall trf_15853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15853(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15853(t0,t1,t2);}

C_noret_decl(trf_15844)
static void C_fcall trf_15844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15844(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15844(t0,t1);}

C_noret_decl(trf_15826)
static void C_fcall trf_15826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15826(t0,t1);}

C_noret_decl(trf_15808)
static void C_fcall trf_15808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15808(t0,t1);}

C_noret_decl(trf_15790)
static void C_fcall trf_15790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15790(t0,t1);}

C_noret_decl(trf_15781)
static void C_fcall trf_15781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15781(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15781(t0,t1,t2);}

C_noret_decl(trf_15772)
static void C_fcall trf_15772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15772(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15772(t0,t1);}

C_noret_decl(trf_15603)
static void C_fcall trf_15603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15603(t0,t1);}

C_noret_decl(trf_15559)
static void C_fcall trf_15559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15559(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15559(t0,t1,t2);}

C_noret_decl(trf_15080)
static void C_fcall trf_15080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15080(t0,t1);}

C_noret_decl(trf_15083)
static void C_fcall trf_15083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15083(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15083(t0,t1);}

C_noret_decl(trf_15086)
static void C_fcall trf_15086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15086(t0,t1);}

C_noret_decl(trf_15089)
static void C_fcall trf_15089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15089(t0,t1);}

C_noret_decl(trf_15035)
static void C_fcall trf_15035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15035(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15035(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14741)
static void C_fcall trf_14741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14741(t0,t1);}

C_noret_decl(trf_14744)
static void C_fcall trf_14744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14744(t0,t1);}

C_noret_decl(trf_14747)
static void C_fcall trf_14747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14747(t0,t1);}

C_noret_decl(trf_14458)
static void C_fcall trf_14458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14458(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14458(t0,t1);}

C_noret_decl(trf_14461)
static void C_fcall trf_14461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14461(t0,t1);}

C_noret_decl(trf_14464)
static void C_fcall trf_14464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14464(t0,t1);}

C_noret_decl(trf_14417)
static void C_fcall trf_14417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14417(t0,t1);}

C_noret_decl(trf_14373)
static void C_fcall trf_14373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14373(t0,t1);}

C_noret_decl(trf_14288)
static void C_fcall trf_14288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14288(t0,t1);}

C_noret_decl(trf_13773)
static void C_fcall trf_13773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13773(t0,t1);}

C_noret_decl(trf_13776)
static void C_fcall trf_13776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13776(t0,t1);}

C_noret_decl(trf_13779)
static void C_fcall trf_13779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13779(t0,t1);}

C_noret_decl(trf_13782)
static void C_fcall trf_13782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13782(t0,t1);}

C_noret_decl(trf_13689)
static void C_fcall trf_13689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13689(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13689(t0,t1,t2);}

C_noret_decl(trf_13680)
static void C_fcall trf_13680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13680(t0,t1);}

C_noret_decl(trf_13615)
static void C_fcall trf_13615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13615(t0,t1);}

C_noret_decl(trf_13357)
static void C_fcall trf_13357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13357(t0,t1);}

C_noret_decl(trf_13360)
static void C_fcall trf_13360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13360(t0,t1);}

C_noret_decl(trf_13363)
static void C_fcall trf_13363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13363(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13363(t0,t1);}

C_noret_decl(trf_13238)
static void C_fcall trf_13238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13238(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13238(t0,t1);}

C_noret_decl(trf_13262)
static void C_fcall trf_13262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13262(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13262(t0,t1);}

C_noret_decl(trf_13192)
static void C_fcall trf_13192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13192(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13192(t0,t1,t2);}

C_noret_decl(trf_13183)
static void C_fcall trf_13183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13183(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13183(t0,t1);}

C_noret_decl(trf_12891)
static void C_fcall trf_12891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12891(t0,t1);}

C_noret_decl(trf_13127)
static void C_fcall trf_13127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13127(t0,t1);}

C_noret_decl(trf_13133)
static void C_fcall trf_13133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13133(t0,t1);}

C_noret_decl(trf_13025)
static void C_fcall trf_13025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13025(t0,t1);}

C_noret_decl(trf_13027)
static void C_fcall trf_13027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13027(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13027(t0,t1,t2,t3);}

C_noret_decl(trf_13076)
static void C_fcall trf_13076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13076(t0,t1);}

C_noret_decl(trf_13041)
static void C_fcall trf_13041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13041(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13041(t0,t1);}

C_noret_decl(trf_12925)
static void C_fcall trf_12925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12925(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12925(t0,t1);}

C_noret_decl(trf_12839)
static void C_fcall trf_12839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12839(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12839(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12858)
static void C_fcall trf_12858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12858(t0,t1);}

C_noret_decl(trf_12789)
static void C_fcall trf_12789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12789(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12789(t0,t1,t2,t3);}

C_noret_decl(trf_12550)
static void C_fcall trf_12550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12550(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_12550(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_12569)
static void C_fcall trf_12569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12569(t0,t1);}

C_noret_decl(trf_12584)
static void C_fcall trf_12584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12584(t0,t1);}

C_noret_decl(trf_12593)
static void C_fcall trf_12593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12593(t0,t1);}

C_noret_decl(trf_12540)
static void C_fcall trf_12540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12540(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_12540(t0);}

C_noret_decl(trf_12481)
static void C_fcall trf_12481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12481(t0,t1);}

C_noret_decl(trf_12472)
static void C_fcall trf_12472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12472(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12472(t0,t1,t2);}

C_noret_decl(trf_12355)
static void C_fcall trf_12355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12355(t0,t1);}

C_noret_decl(trf_12346)
static void C_fcall trf_12346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12346(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12346(t0,t1,t2);}

C_noret_decl(trf_12328)
static void C_fcall trf_12328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12328(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12328(t0,t1,t2);}

C_noret_decl(trf_12319)
static void C_fcall trf_12319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12319(t0,t1);}

C_noret_decl(trf_12301)
static void C_fcall trf_12301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12301(t0,t1);}

C_noret_decl(trf_12292)
static void C_fcall trf_12292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12292(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12292(t0,t1,t2);}

C_noret_decl(trf_12283)
static void C_fcall trf_12283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12283(t0,t1);}

C_noret_decl(trf_12265)
static void C_fcall trf_12265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12265(t0,t1);}

C_noret_decl(trf_12256)
static void C_fcall trf_12256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12256(t0,t1,t2);}

C_noret_decl(trf_12247)
static void C_fcall trf_12247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12247(t0,t1);}

C_noret_decl(trf_12232)
static void C_fcall trf_12232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12232(t0,t1);}

C_noret_decl(trf_12187)
static void C_fcall trf_12187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12187(t0,t1);}

C_noret_decl(trf_12169)
static void C_fcall trf_12169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12169(t0,t1);}

C_noret_decl(trf_12160)
static void C_fcall trf_12160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12160(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12160(t0,t1,t2);}

C_noret_decl(trf_12133)
static void C_fcall trf_12133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12133(t0,t1);}

C_noret_decl(trf_12115)
static void C_fcall trf_12115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12115(t0,t1);}

C_noret_decl(trf_12097)
static void C_fcall trf_12097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12097(t0,t1);}

C_noret_decl(trf_12088)
static void C_fcall trf_12088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12088(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12088(t0,t1,t2);}

C_noret_decl(trf_12076)
static void C_fcall trf_12076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12076(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12076(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_11367)
static void C_fcall trf_11367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11367(t0,t1);}

C_noret_decl(trf_11373)
static void C_fcall trf_11373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11373(t0,t1);}

C_noret_decl(trf_11396)
static void C_fcall trf_11396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11396(t0,t1);}

C_noret_decl(trf_11409)
static void C_fcall trf_11409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11409(t0,t1);}

C_noret_decl(trf_11383)
static void C_fcall trf_11383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11383(t0,t1);}

C_noret_decl(trf_11196)
static void C_fcall trf_11196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11196(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11196(t0,t1,t2,t3);}

C_noret_decl(trf_11205)
static void C_fcall trf_11205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11205(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11205(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11159)
static void C_fcall trf_11159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11159(t0,t1);}

C_noret_decl(trf_11022)
static void C_fcall trf_11022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11022(t0,t1);}

C_noret_decl(trf_10952)
static void C_fcall trf_10952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10952(t0,t1);}

C_noret_decl(trf_10313)
static void C_fcall trf_10313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10313(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10313(t0,t1,t2);}

C_noret_decl(trf_10273)
static void C_fcall trf_10273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10273(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10273(t0,t1,t2);}

C_noret_decl(trf_10286)
static void C_fcall trf_10286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10286(t0,t1);}

C_noret_decl(trf_10865)
static void C_fcall trf_10865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10865(t0,t1);}

C_noret_decl(trf_10655)
static void C_fcall trf_10655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10655(t0,t1);}

C_noret_decl(trf_10771)
static void C_fcall trf_10771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10771(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10771(t0,t1);}

C_noret_decl(trf_10658)
static void C_fcall trf_10658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10658(t0,t1);}

C_noret_decl(trf_10661)
static void C_fcall trf_10661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10661(t0,t1);}

C_noret_decl(trf_10566)
static void C_fcall trf_10566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10566(t0,t1);}

C_noret_decl(trf_10481)
static void C_fcall trf_10481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10481(t0,t1);}

C_noret_decl(trf_10438)
static void C_fcall trf_10438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10438(t0,t1);}

C_noret_decl(trf_10405)
static void C_fcall trf_10405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10405(t0,t1);}

C_noret_decl(trf_10400)
static void C_fcall trf_10400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10400(t0,t1);}

C_noret_decl(trf_10395)
static void C_fcall trf_10395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10395(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10395(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10142)
static void C_fcall trf_10142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10142(t0,t1);}

C_noret_decl(trf_9989)
static void C_fcall trf_9989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9989(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9989(t0,t1,t2,t3);}

C_noret_decl(trf_9835)
static void C_fcall trf_9835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9835(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9835(t0,t1,t2);}

C_noret_decl(trf_9677)
static void C_fcall trf_9677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9677(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9677(t0,t1,t2);}

C_noret_decl(trf_9710)
static void C_fcall trf_9710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9710(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9710(t0,t1);}

C_noret_decl(trf_9617)
static void C_fcall trf_9617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9617(t0,t1);}

C_noret_decl(trf_9582)
static void C_fcall trf_9582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9582(t0,t1);}

C_noret_decl(trf_9598)
static void C_fcall trf_9598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9598(t0,t1);}

C_noret_decl(trf_9553)
static void C_fcall trf_9553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9553(t0,t1);}

C_noret_decl(trf_9460)
static void C_fcall trf_9460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9460(t0,t1);}

C_noret_decl(trf_9216)
static void C_fcall trf_9216(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9216(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9216(t0,t1,t2);}

C_noret_decl(trf_9020)
static void C_fcall trf_9020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9020(t0,t1);}

C_noret_decl(trf_9183)
static void C_fcall trf_9183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9183(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9183(t0,t1);}

C_noret_decl(trf_9023)
static void C_fcall trf_9023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9023(t0,t1);}

C_noret_decl(trf_9026)
static void C_fcall trf_9026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9026(t0,t1);}

C_noret_decl(trf_9029)
static void C_fcall trf_9029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9029(t0,t1);}

C_noret_decl(trf_9071)
static void C_fcall trf_9071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9071(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9071(t0,t1);}

C_noret_decl(trf_9036)
static void C_fcall trf_9036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9036(t0,t1);}

C_noret_decl(trf_8765)
static void C_fcall trf_8765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8765(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8765(t0,t1,t2,t3);}

C_noret_decl(trf_8773)
static void C_fcall trf_8773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8773(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8773(t0,t1,t2,t3);}

C_noret_decl(trf_8902)
static void C_fcall trf_8902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8902(t0,t1,t2);}

C_noret_decl(trf_8856)
static void C_fcall trf_8856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8856(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8856(t0,t1,t2);}

C_noret_decl(trf_8759)
static void C_fcall trf_8759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8759(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8759(t0,t1,t2);}

C_noret_decl(trf_8753)
static void C_fcall trf_8753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8753(t0,t1);}

C_noret_decl(trf_8747)
static void C_fcall trf_8747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8747(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8747(t0,t1,t2);}

C_noret_decl(trf_8676)
static void C_fcall trf_8676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8676(t0,t1,t2);}

C_noret_decl(trf_8678)
static void C_fcall trf_8678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8678(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8678(t0,t1,t2);}

C_noret_decl(trf_8684)
static void C_fcall trf_8684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8684(t0,t1,t2);}

C_noret_decl(trf_8525)
static void C_fcall trf_8525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8525(t0,t1);}

C_noret_decl(trf_8540)
static void C_fcall trf_8540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8540(t0,t1,t2);}

C_noret_decl(trf_8483)
static void C_fcall trf_8483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8483(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8483(t0,t1,t2);}

C_noret_decl(trf_8423)
static void C_fcall trf_8423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8423(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8423(t0,t1,t2);}

C_noret_decl(trf_8255)
static void C_fcall trf_8255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8255(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8255(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8268)
static void C_fcall trf_8268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8268(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8268(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8285)
static void C_fcall trf_8285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8285(t0,t1);}

C_noret_decl(trf_8051)
static void C_fcall trf_8051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8051(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8051(t0,t1,t2);}

C_noret_decl(trf_8057)
static void C_fcall trf_8057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8057(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8057(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8067)
static void C_fcall trf_8067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8067(t0,t1);}

C_noret_decl(trf_7981)
static void C_fcall trf_7981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7981(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7981(t0,t1,t2,t3);}

C_noret_decl(trf_7958)
static void C_fcall trf_7958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7958(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7958(t0,t1,t2,t3);}

C_noret_decl(trf_7799)
static void C_fcall trf_7799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7799(t0,t1,t2);}

C_noret_decl(trf_7837)
static void C_fcall trf_7837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7837(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7837(t0,t1,t2);}

C_noret_decl(trf_7523)
static void C_fcall trf_7523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7523(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7523(t0,t1);}

C_noret_decl(trf_7424)
static void C_fcall trf_7424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7424(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7424(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7275)
static void C_fcall trf_7275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7275(t0,t1);}

C_noret_decl(trf_7181)
static void C_fcall trf_7181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7181(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7181(t0,t1);}

C_noret_decl(trf_7161)
static void C_fcall trf_7161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7161(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7161(t0,t1,t2,t3);}

C_noret_decl(trf_7120)
static void C_fcall trf_7120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7120(t0,t1);}

C_noret_decl(trf_7110)
static void C_fcall trf_7110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7110(t0,t1);}

C_noret_decl(trf_7092)
static void C_fcall trf_7092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7092(t0,t1);}

C_noret_decl(trf_7081)
static void C_fcall trf_7081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7081(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7081(t0,t1,t2);}

C_noret_decl(trf_7043)
static void C_fcall trf_7043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7043(t0,t1);}

C_noret_decl(trf_7036)
static void C_fcall trf_7036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7036(t0,t1);}

C_noret_decl(trf_7012)
static void C_fcall trf_7012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7012(t0,t1);}

C_noret_decl(trf_6945)
static void C_fcall trf_6945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6945(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6945(t0,t1,t2,t3);}

C_noret_decl(trf_6934)
static void C_fcall trf_6934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6934(t0,t1,t2);}

C_noret_decl(trf_6873)
static void C_fcall trf_6873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6873(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6873(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6817)
static void C_fcall trf_6817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6817(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6817(t0,t1,t2);}

C_noret_decl(trf_6736)
static void C_fcall trf_6736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6736(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6736(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_cm_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("cm_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5443)){
C_save(t1);
C_rereclaim2(5443*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,991);
lf[0]=C_h_intern(&lf[0],7,"logtest");
lf[1]=C_h_intern(&lf[1],6,"logand");
lf[2]=C_h_intern(&lf[2],20,"most-positive-fixnum");
lf[3]=C_h_intern(&lf[3],20,"most-negative-fixnum");
lf[4]=C_h_intern(&lf[4],2,"pi");
lf[5]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[6]=C_h_intern(&lf[6],9,"list-set!");
lf[7]=C_h_intern(&lf[7],21,"make-equal-hash-table");
lf[8]=C_h_intern(&lf[8],15,"make-hash-table");
lf[9]=C_h_intern(&lf[9],6,"equal\077");
lf[10]=C_h_intern(&lf[10],18,"make-eq-hash-table");
lf[11]=C_h_intern(&lf[11],3,"eq\077");
lf[12]=C_h_intern(&lf[12],9,"hash-set!");
lf[13]=C_h_intern(&lf[13],15,"hash-table-set!");
lf[14]=C_h_intern(&lf[14],8,"hash-ref");
lf[15]=C_h_intern(&lf[15],22,"hash-table-ref/default");
lf[17]=C_h_intern(&lf[17],22,"call-with-input-string");
lf[18]=C_h_intern(&lf[18],4,"read");
lf[20]=C_h_intern(&lf[20],17,"\003sysmake-c-string");
lf[46]=C_h_intern(&lf[46],17,"\003syspeek-c-string");
lf[48]=C_h_intern(&lf[48],4,"quit");
lf[49]=C_h_intern(&lf[49],11,"print-error");
lf[50]=C_h_intern(&lf[50],12,"print-output");
lf[51]=C_h_intern(&lf[51],5,"shell");
lf[52]=C_h_intern(&lf[52],5,"first");
lf[53]=C_h_intern(&lf[53],3,"car");
lf[54]=C_h_intern(&lf[54],6,"second");
lf[55]=C_h_intern(&lf[55],4,"cadr");
lf[56]=C_h_intern(&lf[56],5,"third");
lf[57]=C_h_intern(&lf[57],5,"caddr");
lf[58]=C_h_intern(&lf[58],6,"fourth");
lf[59]=C_h_intern(&lf[59],6,"cadddr");
lf[60]=C_h_intern(&lf[60],5,"fifth");
lf[61]=C_h_intern(&lf[61],5,"sixth");
lf[62]=C_h_intern(&lf[62],7,"seventh");
lf[63]=C_h_intern(&lf[63],6,"eighth");
lf[64]=C_h_intern(&lf[64],5,"ninth");
lf[65]=C_h_intern(&lf[65],5,"tenth");
lf[66]=C_h_intern(&lf[66],3,"nth");
lf[67]=C_h_intern(&lf[67],8,"list-ref");
lf[68]=C_h_intern(&lf[68],4,"rest");
lf[69]=C_h_intern(&lf[69],4,"last");
lf[70]=C_h_intern(&lf[70],7,"butlast");
lf[71]=C_h_intern(&lf[71],4,"tail");
lf[72]=C_h_intern(&lf[72],6,"concat");
lf[73]=C_h_intern(&lf[73],9,"make-list");
lf[74]=C_h_intern(&lf[74],5,"error");
lf[75]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[79]=C_h_intern(&lf[79],6,"length");
lf[80]=C_h_intern(&lf[80],10,"string-ref");
lf[81]=C_h_intern(&lf[81],13,"string-length");
lf[82]=C_h_intern(&lf[82],10,"vector-ref");
lf[83]=C_h_intern(&lf[83],13,"vector-length");
lf[84]=C_decode_literal(C_heaptop,"\376B\000\000\034not a list, string or vector");
lf[85]=C_h_intern(&lf[85],4,"find");
lf[86]=C_h_intern(&lf[86],12,"with-optkeys");
lf[87]=C_h_intern(&lf[87],3,"key");
lf[88]=C_h_intern(&lf[88],5,"start");
lf[89]=C_h_intern(&lf[89],3,"end");
lf[90]=C_h_intern(&lf[90],8,"position");
lf[102]=C_h_intern(&lf[102],8,"operator");
lf[103]=C_h_intern(&lf[103],8,"bindings");
lf[104]=C_h_intern(&lf[104],10,"collectors");
lf[105]=C_h_intern(&lf[105],9,"initially");
lf[106]=C_h_intern(&lf[106],9,"end-tests");
lf[107]=C_h_intern(&lf[107],7,"looping");
lf[108]=C_h_intern(&lf[108],8,"stepping");
lf[109]=C_h_intern(&lf[109],7,"finally");
lf[110]=C_h_intern(&lf[110],9,"returning");
lf[112]=C_h_intern(&lf[112],6,"append");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[118]=C_h_intern(&lf[118],7,"newline");
lf[119]=C_h_intern(&lf[119],7,"display");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[121]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[122]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[126]=C_h_intern(&lf[126],7,"reverse");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[130]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[131]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[132]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[133]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[134]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[136]=C_h_intern(&lf[136],4,"set!");
lf[137]=C_h_intern(&lf[137],3,"for");
lf[138]=C_h_intern(&lf[138],6,"gensym");
lf[139]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[140]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[141]=C_h_intern(&lf[141],8,"downfrom");
lf[142]=C_h_intern(&lf[142],1,"-");
lf[143]=C_h_intern(&lf[143],5,"above");
lf[144]=C_h_intern(&lf[144],2,"<=");
lf[145]=C_h_intern(&lf[145],1,"<");
lf[146]=C_h_intern(&lf[146],1,"+");
lf[147]=C_h_intern(&lf[147],5,"below");
lf[148]=C_h_intern(&lf[148],2,">=");
lf[149]=C_h_intern(&lf[149],1,">");
lf[150]=C_h_intern(&lf[150],6,"downto");
lf[151]=C_h_intern(&lf[151],4,"from");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[153]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[158]=C_h_intern(&lf[158],2,"to");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[168]=C_h_intern(&lf[168],2,"by");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[171]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[177]=C_h_intern(&lf[177],6,"across");
lf[178]=C_h_intern(&lf[178],3,"not");
lf[179]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[181]=C_h_intern(&lf[181],4,"over");
lf[182]=C_h_intern(&lf[182],4,"eod\077");
lf[183]=C_h_intern(&lf[183],5,"begin");
lf[184]=C_h_intern(&lf[184],4,"next");
lf[185]=C_h_intern(&lf[185],5,"null\077");
lf[186]=C_h_intern(&lf[186],2,"in");
lf[187]=C_h_intern(&lf[187],5,"quote");
lf[188]=C_h_intern(&lf[188],3,"cdr");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[196]=C_h_intern(&lf[196],2,"on");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[200]=C_h_intern(&lf[200],1,"=");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[202]=C_h_intern(&lf[202],4,"then");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[204]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[208]=C_h_intern(&lf[208],4,"with");
lf[209]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[213]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[214]=C_h_intern(&lf[214],3,"and");
lf[215]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[216]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[217]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[221]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[224]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[226]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[227]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[229]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[230]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[232]=C_h_intern(&lf[232],3,"sum");
lf[233]=C_h_intern(&lf[233],5,"count");
lf[234]=C_h_intern(&lf[234],2,"if");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[236]=C_h_intern(&lf[236],8,"minimize");
lf[237]=C_h_intern(&lf[237],8,"maximize");
lf[238]=C_h_intern(&lf[238],2,"or");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[241]=C_h_intern(&lf[241],4,"list");
lf[242]=C_h_intern(&lf[242],8,"set-cdr!");
lf[243]=C_h_intern(&lf[243],9,"last-pair");
lf[244]=C_h_intern(&lf[244],7,"collect");
lf[245]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[248]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[249]=C_h_intern(&lf[249],5,"nconc");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[253]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[254]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[255]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[256]=C_h_intern(&lf[256],4,"into");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[263]=C_h_intern(&lf[263],6,"return");
lf[265]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[266]=C_h_intern(&lf[266],5,"until");
lf[267]=C_h_intern(&lf[267],5,"while");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[269]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[271]=C_h_intern(&lf[271],7,"thereis");
lf[272]=C_h_intern(&lf[272],6,"always");
lf[273]=C_h_intern(&lf[273],5,"never");
lf[274]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[281]=C_h_intern(&lf[281],4,"else");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[283]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[284]=C_h_intern(&lf[284],4,"task");
lf[285]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[287]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[289]=C_h_intern(&lf[289],6,"unless");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[293]=C_h_intern(&lf[293],6,"repeat");
lf[294]=C_h_intern(&lf[294],4,"iter");
lf[295]=C_h_intern(&lf[295],2,"as");
lf[296]=C_h_intern(&lf[296],2,"do");
lf[297]=C_h_intern(&lf[297],4,"when");
lf[300]=C_h_intern(&lf[300],6,"period");
lf[302]=C_h_intern(&lf[302],14,"\003sysblock-set!");
lf[310]=C_h_intern(&lf[310],7,"pattern");
lf[325]=C_h_intern(&lf[325],4,"\000nad");
lf[326]=C_h_intern(&lf[326],8,"\000periods");
lf[327]=C_h_intern(&lf[327],12,"\000depth-first");
lf[329]=C_h_intern(&lf[329],6,"logior");
lf[330]=C_h_intern(&lf[330],6,"lognot");
lf[331]=C_h_intern(&lf[331],14,"\000breadth-first");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[333]=C_h_intern(&lf[333],7,"\000values");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[336]=C_h_intern(&lf[336],4,"eop\077");
lf[337]=C_h_intern(&lf[337],4,"\000eop");
lf[338]=C_h_intern(&lf[338],4,"\000eod");
lf[342]=C_h_intern(&lf[342],3,"max");
lf[343]=C_h_intern(&lf[343],10,"make-cycle");
lf[344]=C_h_intern(&lf[344],12,"\003sysfor-each");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[347]=C_h_intern(&lf[347],4,"\000for");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[350]=C_h_intern(&lf[350],7,"\000repeat");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[352]=C_h_intern(&lf[352],8,"keyword\077");
lf[353]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[355]=C_h_intern(&lf[355],5,"palin");
lf[357]=C_h_intern(&lf[357],15,"make-palindrome");
lf[359]=C_h_intern(&lf[359],6,"\000elide");
lf[360]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[361]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[362]=C_h_intern(&lf[362],9,"make-line");
lf[364]=C_h_intern(&lf[364],9,"make-heap");
lf[366]=C_h_intern(&lf[366],13,"make-rotation");
lf[368]=C_h_intern(&lf[368],7,"\000rotate");
lf[370]=C_h_intern(&lf[370],11,"random-item");
lf[378]=C_h_intern(&lf[378],14,"make-weighting");
lf[381]=C_h_intern(&lf[381],7,"\000weight");
lf[382]=C_h_intern(&lf[382],4,"\000min");
lf[383]=C_h_intern(&lf[383],4,"\000max");
lf[384]=C_h_intern(&lf[384],7,"\003sysmap");
lf[385]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[386]=C_h_intern(&lf[386],11,"make-markov");
lf[387]=C_h_intern(&lf[387],1,"*");
lf[389]=C_h_intern(&lf[389],5,"\000past");
lf[390]=C_h_intern(&lf[390],2,"->");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[392]=C_h_intern(&lf[392],3,"\000->");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[398]=C_h_intern(&lf[398],10,"graph-node");
lf[399]=C_h_intern(&lf[399],10,"make-graph");
lf[401]=C_h_intern(&lf[401],3,"\000to");
lf[402]=C_h_intern(&lf[402],3,"\000id");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[406]=C_h_intern(&lf[406],14,"markov-analyze");
lf[407]=C_h_intern(&lf[407],6,"format");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[409]=C_h_intern(&lf[409],19,"\003sysundefined-value");
lf[410]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[412]=C_h_intern(&lf[412],19,"\003syswrite-char/port");
lf[413]=C_h_intern(&lf[413],19,"\003sysstandard-output");
lf[414]=C_h_intern(&lf[414],9,"substring");
lf[415]=C_h_intern(&lf[415],3,"min");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[417]=C_h_intern(&lf[417],13,"string-append");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[421]=C_h_intern(&lf[421],11,"make-string");
lf[422]=C_h_intern(&lf[422],4,"sort");
lf[423]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[424]=C_h_intern(&lf[424],8,"decimals");
lf[425]=C_h_intern(&lf[425],11,"string-ci<\077");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[428]=C_h_intern(&lf[428],6,"modulo");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[430]=C_h_intern(&lf[430],6,"\000order");
lf[431]=C_h_intern(&lf[431],5,"\000mode");
lf[432]=C_h_intern(&lf[432],7,"rescale");
lf[433]=C_h_intern(&lf[433],8,"discrete");
lf[434]=C_h_intern(&lf[434],12,"ffi_discrete");
lf[435]=C_h_intern(&lf[435],4,"not\077");
lf[436]=C_h_intern(&lf[436],3,"int");
lf[437]=C_h_intern(&lf[437],5,"float");
lf[438]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[439]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[440]=C_h_intern(&lf[440],5,"log10");
lf[441]=C_h_intern(&lf[441],4,"log2");
lf[442]=C_h_intern(&lf[442],4,"plus");
lf[443]=C_h_intern(&lf[443],5,"times");
lf[444]=C_h_intern(&lf[444],5,"minus");
lf[445]=C_h_intern(&lf[445],6,"divide");
lf[446]=C_h_intern(&lf[446],1,"/");
lf[447]=C_h_intern(&lf[447],8,"quantize");
lf[448]=C_h_intern(&lf[448],5,"round");
lf[449]=C_h_intern(&lf[449],4,"expt");
lf[450]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[451]=C_h_intern(&lf[451],15,"rhythm->seconds");
lf[452]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[453]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[454]=C_h_intern(&lf[454],6,"\000tempo");
lf[455]=C_h_intern(&lf[455],5,"\000beat");
lf[456]=C_h_intern(&lf[456],12,"cents->ratio");
lf[457]=C_h_intern(&lf[457],12,"ratio->cents");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[460]=C_h_intern(&lf[460],3,"err");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[463]=C_h_intern(&lf[463],6,"interp");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[465]=C_h_intern(&lf[465],8,"tendency");
lf[466]=C_h_intern(&lf[466],3,"ran");
lf[467]=C_h_intern(&lf[467],3,"fit");
lf[468]=C_h_intern(&lf[468],9,"remainder");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[470]=C_h_intern(&lf[470],5,"scale");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[472]=C_h_intern(&lf[472],4,"segs");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[475]=C_h_intern(&lf[475],8,"ran-set!");
lf[476]=C_h_intern(&lf[476],7,"between");
lf[477]=C_h_intern(&lf[477],4,"pick");
lf[478]=C_h_intern(&lf[478],4,"vary");
lf[479]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[481]=C_h_intern(&lf[481],8,"shuffle!");
lf[482]=C_h_intern(&lf[482],7,"shuffle");
lf[483]=C_h_intern(&lf[483],6,"ranlow");
lf[484]=C_h_intern(&lf[484],7,"ranhigh");
lf[485]=C_h_intern(&lf[485],9,"ranmiddle");
lf[486]=C_h_intern(&lf[486],7,"ranbeta");
lf[487]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[488]=C_h_intern(&lf[488],2,"\000a");
lf[489]=C_h_intern(&lf[489],2,"\000b");
lf[490]=C_h_intern(&lf[490],6,"ranexp");
lf[491]=C_h_intern(&lf[491],8,"rangauss");
lf[492]=C_h_intern(&lf[492],9,"rancauchy");
lf[493]=C_h_intern(&lf[493],10,"ranpoisson");
lf[494]=C_h_intern(&lf[494],8,"rangamma");
lf[495]=C_h_intern(&lf[495],8,"ranbrown");
lf[496]=C_h_intern(&lf[496],7,"ranpink");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[504]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[505]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[506]=C_h_intern(&lf[506],5,"floor");
lf[507]=C_h_intern(&lf[507],14,"symbol->string");
lf[508]=C_h_intern(&lf[508],15,"keyword->string");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[510]=C_h_intern(&lf[510],4,"note");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[513]=C_h_intern(&lf[513],2,"hz");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[515]=C_h_intern(&lf[515],2,"pc");
lf[516]=C_h_intern(&lf[516],6,"invert");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[519]=C_h_intern(&lf[519],9,"transpose");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[521]=C_h_intern(&lf[521],10,"retrograde");
lf[522]=C_h_intern(&lf[522],11,"scale-order");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[524]=C_h_intern(&lf[524],7,"*tempo*");
lf[525]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[526]=C_h_intern(&lf[526],6,"*beat*");
lf[527]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[529]=C_h_intern(&lf[529],14,"string->symbol");
lf[530]=C_h_intern(&lf[530],6,"rhythm");
lf[531]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\012\000\000+\376\003\000\000\002\376\377\012\000\000-\376\003\000\000\002\376\377\012\000\000*\376\003\000\000\002\376\377\012\000\000/\376\377\016");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[539]=C_h_intern(&lf[539],8,"in-tempo");
lf[540]=C_h_intern(&lf[540],3,"cwd");
lf[541]=C_h_intern(&lf[541],5,"chdir");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[548]=C_h_intern(&lf[548],8,"spectrum");
lf[550]=C_h_intern(&lf[550],13,"spectrum-time");
lf[552]=C_h_intern(&lf[552],13,"spectrum-size");
lf[554]=C_h_intern(&lf[554],14,"spectrum-freqs");
lf[556]=C_h_intern(&lf[556],13,"spectrum-amps");
lf[557]=C_h_intern(&lf[557],13,"spectrum-copy");
lf[558]=C_h_intern(&lf[558],14,"spectrum-pairs");
lf[559]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[560]=C_h_intern(&lf[560],16,"spectrum-minfreq");
lf[561]=C_h_intern(&lf[561],16,"spectrum-maxfreq");
lf[562]=C_h_intern(&lf[562],15,"spectrum-minamp");
lf[563]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[564]=C_h_intern(&lf[564],15,"spectrum-maxamp");
lf[565]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[566]=C_h_intern(&lf[566],13,"spectrum-keys");
lf[567]=C_h_intern(&lf[567],5,"sort!");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\022mode not -1 0 or 1");
lf[569]=C_h_intern(&lf[569],4,"mode");
lf[570]=C_h_intern(&lf[570],8,"for-each");
lf[571]=C_h_intern(&lf[571],7,"\000thresh");
lf[572]=C_h_intern(&lf[572],6,"\000quant");
lf[573]=C_h_intern(&lf[573],7,"\000unique");
lf[574]=C_h_intern(&lf[574],11,"fm-spectrum");
lf[575]=C_h_intern(&lf[575],4,"caar");
lf[576]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[577]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[578]=C_h_intern(&lf[578],13,"spectrum-add!");
lf[579]=C_h_intern(&lf[579],11,"rm-spectrum");
lf[580]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[581]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[582]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[583]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[584]=C_h_intern(&lf[584],14,"spectrum-flip!");
lf[585]=C_h_intern(&lf[585],17,"spectrum-rescale!");
lf[586]=C_h_intern(&lf[586],3,"map");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[588]=C_h_intern(&lf[588],7,"number\077");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[592]=C_h_intern(&lf[592],19,"import-spear-frames");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[594]=C_h_intern(&lf[594],9,"read-line");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[596]=C_h_intern(&lf[596],17,"open-input-string");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[602]=C_h_intern(&lf[602],18,"current-input-port");
lf[603]=C_h_intern(&lf[603],20,"with-input-from-file");
lf[604]=C_h_intern(&lf[604],19,"export-spear-frames");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[607]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[614]=C_h_intern(&lf[614],19,"current-output-port");
lf[615]=C_h_intern(&lf[615],19,"with-output-to-file");
lf[617]=C_h_intern(&lf[617],5,"token");
lf[621]=C_h_intern(&lf[621],1,"t");
lf[626]=C_h_intern(&lf[626],4,"rule");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\012not a rule");
lf[635]=C_h_intern(&lf[635],11,"parse-error");
lf[637]=C_h_intern(&lf[637],10,"parse-unit");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[651]=C_h_intern(&lf[651],15,"string->keyword");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[658]=C_h_intern(&lf[658],2,"!=");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[664]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[665]=C_h_intern(&lf[665],1,"@");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[668]=C_h_intern(&lf[668],3,"ash");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[680]=C_h_intern(&lf[680],3,"sal");
lf[681]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[683]=C_h_intern(&lf[683],4,"eval");
lf[684]=C_h_intern(&lf[684],23,"interaction-environment");
lf[685]=C_h_intern(&lf[685],7,"\000syntax");
lf[686]=C_h_intern(&lf[686],7,"\000scheme");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[688]=C_h_intern(&lf[688],7,"call/cc");
lf[690]=C_h_intern(&lf[690],7,"\000tokens");
lf[691]=C_h_intern(&lf[691],8,"\000expand\077");
lf[692]=C_h_intern(&lf[692],5,"\000rule");
lf[693]=C_h_intern(&lf[693],9,"sal:print");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[702]=C_h_intern(&lf[702],9,"sal:chdir");
lf[703]=C_h_intern(&lf[703],8,"sal:load");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\003sal");
lf[705]=C_h_intern(&lf[705],13,"load-sal-file");
lf[706]=C_h_intern(&lf[706],4,"load");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\021\042 does not exist\012");
lf[711]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[712]=C_h_intern(&lf[712],8,"sal:open");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[714]=C_h_intern(&lf[714],5,"ports");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\003mid");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\026don\047t know how to open");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\021file not writable");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\033Scheduler busy, cannot open");
lf[725]=C_h_intern(&lf[725],7,"mp:open");
lf[728]=C_h_intern(&lf[728],4,"\000out");
lf[729]=C_h_intern(&lf[729],3,"\000in");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[732]=C_h_intern(&lf[732],7,"mp:midi");
lf[733]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[734]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[735]=C_h_intern(&lf[735],5,"\000time");
lf[736]=C_h_intern(&lf[736],4,"\000dur");
lf[737]=C_h_intern(&lf[737],4,"\000key");
lf[738]=C_h_intern(&lf[738],4,"\000amp");
lf[739]=C_h_intern(&lf[739],5,"\000chan");
lf[740]=C_h_intern(&lf[740],6,"mp:off");
lf[741]=C_h_intern(&lf[741],5,"mp:on");
lf[742]=C_h_intern(&lf[742],4,"\000vel");
lf[743]=C_h_intern(&lf[743],8,"mp:touch");
lf[744]=C_h_intern(&lf[744],4,"\000val");
lf[745]=C_h_intern(&lf[745],7,"mp:ctrl");
lf[746]=C_h_intern(&lf[746],4,"\000num");
lf[747]=C_h_intern(&lf[747],7,"mp:prog");
lf[748]=C_h_intern(&lf[748],8,"mp:press");
lf[749]=C_h_intern(&lf[749],7,"mp:bend");
lf[750]=C_h_intern(&lf[750],9,"mp:tuning");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[752]=C_h_intern(&lf[752],10,"mp:playseq");
lf[753]=C_h_intern(&lf[753],10,"mp:saveseq");
lf[754]=C_h_intern(&lf[754],10,"mp:copyseq");
lf[755]=C_h_intern(&lf[755],10,"mp:plotseq");
lf[756]=C_h_intern(&lf[756],11,"mp:clearseq");
lf[757]=C_h_intern(&lf[757],12,"mp:recordseq");
lf[758]=C_h_intern(&lf[758],21,"ffi_mp_set_record_seq");
lf[759]=C_h_intern(&lf[759],9,"mp:inhook");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\023not yet implemented");
lf[761]=C_h_intern(&lf[761],10,"mp:inchans");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\026need a channel 0 to 15");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[764]=C_h_intern(&lf[764],10,"mp:intypes");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[767]=C_h_intern(&lf[767],5,"mp:mm");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\023not yet implemented");
lf[770]=C_h_intern(&lf[770],9,"\000channels");
lf[771]=C_h_intern(&lf[771],14,"*clm-channels*");
lf[772]=C_h_intern(&lf[772],15,"init-with-sound");
lf[773]=C_h_intern(&lf[773],7,"\000output");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[775]=C_h_intern(&lf[775],12,"\000header-type");
lf[776]=C_h_intern(&lf[776],8,"mus-aifc");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[778]=C_h_intern(&lf[778],8,"mus-riff");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[780]=C_h_intern(&lf[780],8,"mus-next");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[782]=C_h_intern(&lf[782],12,"\000data-format");
lf[783]=C_h_intern(&lf[783],10,"mus-bshort");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[785]=C_h_intern(&lf[785],10,"mus-lshort");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\030too many arguments in ~S");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000\036Uneven keyword arguments in ~S");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000%~A not a valid keyword argument in ~S");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\031~A not a keyword argument");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[795]=C_h_intern(&lf[795],30,"call-with-current-continuation");
lf[796]=C_h_intern(&lf[796],4,"\000opt");
lf[797]=C_h_intern(&lf[797],7,"\000optkey");
lf[798]=C_h_intern(&lf[798],5,"\000rest");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\012not a mode");
lf[800]=C_h_intern(&lf[800],9,"\000optional");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\010shouldnt");
lf[802]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003out\376\003\000\000\002\376\001\000\000\002in\376\377\016");
lf[803]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003dur\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003amp\376\003\000\000\002\376\001\000\000\004"
"chan\376\377\016");
lf[804]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[805]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003vel\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[807]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003num\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[808]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[809]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[810]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[811]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\002mm\376\377\016");
lf[812]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004func\376\377\016");
lf[813]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003div\376\377\016");
lf[814]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003rec\376\377\016");
lf[815]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[816]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[818]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005throw\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[824]=C_h_intern(&lf[824],6,"sprout");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\021illegal arguments");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[832]=C_h_intern(&lf[832],3,"now");
lf[833]=C_h_intern(&lf[833],5,"pause");
lf[834]=C_h_intern(&lf[834],7,"paused\077");
lf[835]=C_h_intern(&lf[835],8,"continue");
lf[836]=C_h_intern(&lf[836],4,"stop");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[838]=C_h_intern(&lf[838],4,"hush");
lf[839]=C_h_intern(&lf[839],14,"ffi_sched_hush");
lf[840]=C_h_intern(&lf[840],16,"arithmetic-shift");
lf[841]=C_h_intern(&lf[841],11,"bitwise-and");
lf[842]=C_h_intern(&lf[842],11,"bitwise-not");
lf[843]=C_h_intern(&lf[843],6,"logxor");
lf[844]=C_h_intern(&lf[844],11,"bitwise-xor");
lf[845]=C_h_intern(&lf[845],11,"bitwise-ior");
lf[846]=C_h_intern(&lf[846],14,"return-to-host");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:intypes");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:open");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[868]=C_h_intern(&lf[868],6,"define");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[874]=C_h_intern(&lf[874],7,"\000return");
lf[875]=C_h_intern(&lf[875],6,"lambda");
lf[876]=C_h_intern(&lf[876],9,"\000function");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[878]=C_h_intern(&lf[878],8,"\000process");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[882]=C_h_intern(&lf[882],4,"args");
lf[883]=C_h_intern(&lf[883],22,"ffi_sched_score_mode_p");
lf[884]=C_h_intern(&lf[884],20,"ffi_sched_score_time");
lf[885]=C_h_intern(&lf[885],7,"elapsed");
lf[886]=C_h_intern(&lf[886],1,"x");
lf[887]=C_h_intern(&lf[887],4,"wait");
lf[888]=C_h_intern(&lf[888],5,"throw");
lf[889]=C_h_intern(&lf[889],18,"current-error-port");
lf[890]=C_h_intern(&lf[890],19,"print-error-message");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[892]=C_h_intern(&lf[892],22,"with-exception-handler");
lf[893]=C_h_intern(&lf[893],4,"let*");
lf[894]=C_h_intern(&lf[894],10,"\003sysappend");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\006errvar");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[899]=C_h_intern(&lf[899],7,"process");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[905]=C_h_intern(&lf[905],2,"go");
lf[906]=C_h_intern(&lf[906],4,"void");
lf[907]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\000\376\377\016");
lf[908]=C_h_intern(&lf[908],5,"\000loop");
lf[909]=C_h_intern(&lf[909],4,"\000run");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[918]=C_h_intern(&lf[918],9,"list-tail");
lf[919]=C_h_intern(&lf[919],8,"set-car!");
lf[920]=C_h_intern(&lf[920],4,"cons");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[923]=C_h_intern(&lf[923],9,"\000bindings");
lf[924]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[928]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[929]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[930]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[931]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[932]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[934]=C_h_intern(&lf[934],10,"sal:output");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[936]=C_h_intern(&lf[936],10,"sal:system");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\022not a send message");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[953]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[955]=C_h_intern(&lf[955],7,"unquote");
lf[956]=C_h_intern(&lf[956],16,"unquote-splicing");
lf[957]=C_h_intern(&lf[957],5,"\000list");
lf[958]=C_h_intern(&lf[958],8,"\000unquote");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[961]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[962]=C_h_intern(&lf[962],10,"quasiquote");
lf[963]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[964]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[965]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[967]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001.\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002..\376\003\000\000\002\376U0.75\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\003..."
"\376\003\000\000\002\376U0.875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\004....\376\003\000\000\002\376U0.9375\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\005.....\376\003\000\000\002\376U0"
".96875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\006......\376\003\000\000\002\376U0.984375\000\376\377\016\376\377\016");
lf[968]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[969]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[972]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[975]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376U0.015625\000\376\003\000\000\002\376B\000\000\001x\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.03125\000\376\003\000\000\002\376B\000\000\001t\376\003"
"\000\000\002\376\377\001\000\000\000\001\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.0625\000\376\003\000\000\002\376B\000\000\001s\376\003\000\000\002\376\377\001\000\000\000\002\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.125\000\376\003\000\000"
"\002\376B\000\000\001e\376\003\000\000\002\376\377\001\000\000\000\003\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.25\000\376\003\000\000\002\376B\000\000\001q\376\003\000\000\002\376\377\001\000\000\000\004\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.5"
"\000\376\003\000\000\002\376B\000\000\001h\376\003\000\000\002\376\377\001\000\000\000\005\376\377\016\376\003\000\000\002\376\003\000\000\002\376\377\001\000\000\000\001\376\003\000\000\002\376B\000\000\001w\376\003\000\000\002\376\377\001\000\000\000\006\376\377\016\376\377\016");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[977]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[979]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[980]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[981]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[982]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[983]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[987]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[988]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[989]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[990]=C_h_intern(&lf[990],15,"enable-warnings");
C_register_lf2(lf,991,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6676,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6674 */
static void C_ccall f_6676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6679,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6677 in k6674 */
static void C_ccall f_6679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6680 in k6677 in k6674 */
static void C_ccall f_6682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6685,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6685,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6687,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t3=C_set_block_item(lf[2],0,C_fix(1073741823));
t4=C_set_block_item(lf[3],0,C_fix(-1073741823));
t5=C_mutate((C_word*)lf[4]+1,lf[5]);
t6=C_mutate((C_word*)lf[6]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6707,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[7]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6717,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[10]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6723,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[12]+1,C_retrieve(lf[13]));
t10=C_mutate((C_word*)lf[14]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6730,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[16],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6736,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6798,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 12   enable-warnings");
t13=C_retrieve(lf[990]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,C_SCHEME_FALSE);}

/* k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word t98;
C_word t99;
C_word t100;
C_word t101;
C_word t102;
C_word t103;
C_word t104;
C_word t105;
C_word t106;
C_word t107;
C_word t108;
C_word t109;
C_word t110;
C_word t111;
C_word t112;
C_word t113;
C_word t114;
C_word t115;
C_word t116;
C_word t117;
C_word t118;
C_word t119;
C_word t120;
C_word t121;
C_word t122;
C_word t123;
C_word t124;
C_word t125;
C_word t126;
C_word t127;
C_word t128;
C_word t129;
C_word t130;
C_word t131;
C_word t132;
C_word t133;
C_word t134;
C_word t135;
C_word t136;
C_word t137;
C_word t138;
C_word t139;
C_word t140;
C_word t141;
C_word t142;
C_word t143;
C_word t144;
C_word t145;
C_word t146;
C_word t147;
C_word t148;
C_word t149;
C_word t150;
C_word t151;
C_word t152;
C_word t153;
C_word t154;
C_word t155;
C_word t156;
C_word t157;
C_word t158;
C_word t159;
C_word t160;
C_word t161;
C_word t162;
C_word t163;
C_word t164;
C_word t165;
C_word t166;
C_word t167;
C_word t168;
C_word t169;
C_word t170;
C_word t171;
C_word t172;
C_word t173;
C_word t174;
C_word t175;
C_word t176;
C_word t177;
C_word t178;
C_word t179;
C_word t180;
C_word t181;
C_word t182;
C_word t183;
C_word t184;
C_word t185;
C_word t186;
C_word t187;
C_word t188;
C_word t189;
C_word t190;
C_word t191;
C_word t192;
C_word t193;
C_word t194;
C_word t195;
C_word t196;
C_word t197;
C_word t198;
C_word t199;
C_word t200;
C_word t201;
C_word t202;
C_word t203;
C_word t204;
C_word t205;
C_word t206;
C_word t207;
C_word t208;
C_word t209;
C_word t210;
C_word t211;
C_word t212;
C_word t213;
C_word t214;
C_word t215;
C_word t216;
C_word t217;
C_word t218;
C_word t219;
C_word t220;
C_word t221;
C_word t222;
C_word t223;
C_word ab[906],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6798,2,t0,t1);}
t2=C_mutate(&lf[19],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6817,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[21],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6873,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[22],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6927,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[23],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6934,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[24],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6945,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[25],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6960,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[26],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6967,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[27],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6974,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[28],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6993,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[29],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7012,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[30],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7033,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[31],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7036,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[32],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7043,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[33],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7072,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[34],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7075,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[35],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7078,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[36],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7081,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[37],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7092,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[38],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7110,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[39],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7117,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[40],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7120,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[41],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7127,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[42],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7130,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7161,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7181,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7275,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7424,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7501,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7507,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7513,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7544,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[52]+1,*((C_word*)lf[53]+1));
t34=C_mutate((C_word*)lf[54]+1,*((C_word*)lf[55]+1));
t35=C_mutate((C_word*)lf[56]+1,*((C_word*)lf[57]+1));
t36=C_mutate((C_word*)lf[58]+1,*((C_word*)lf[59]+1));
t37=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7554,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7564,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7574,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7584,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7594,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7608,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[66]+1,*((C_word*)lf[67]+1));
t44=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7623,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7629,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7652,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7700,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7790,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7952,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8051,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8169,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8255,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8329,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8373,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8423,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8429,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8441,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8453,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8465,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8477,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8483,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8489,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[99],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8501,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8513,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[101],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8525,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[111],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8676,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[113],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8747,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[114],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8753,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[115],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8759,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[116],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8765,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8925,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9007,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9389,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[176],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9436,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9787,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9929,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10122,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10189,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10227,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10386,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10932,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10938,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11004,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t84=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11095,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11196,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11327,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t87=(C_word)C_a_i_list(&a,3,lf[208],C_retrieve2(lf[207],"parse-with"),C_SCHEME_FALSE);
t88=(C_word)C_a_i_list(&a,3,lf[105],C_retrieve2(lf[228],"parse-initially"),C_SCHEME_FALSE);
t89=(C_word)C_a_i_list(&a,3,lf[293],C_retrieve2(lf[173],"parse-repeat"),lf[294]);
t90=(C_word)C_a_i_list(&a,2,lf[151],C_retrieve2(lf[135],"parse-numerical-for"));
t91=(C_word)C_a_i_list(&a,2,lf[141],C_retrieve2(lf[135],"parse-numerical-for"));
t92=(C_word)C_a_i_list(&a,2,lf[147],C_retrieve2(lf[135],"parse-numerical-for"));
t93=(C_word)C_a_i_list(&a,2,lf[158],C_retrieve2(lf[135],"parse-numerical-for"));
t94=(C_word)C_a_i_list(&a,2,lf[143],C_retrieve2(lf[135],"parse-numerical-for"));
t95=(C_word)C_a_i_list(&a,2,lf[150],C_retrieve2(lf[135],"parse-numerical-for"));
t96=(C_word)C_a_i_list(&a,2,lf[186],C_retrieve2(lf[176],"parse-sequence-iteration"));
t97=(C_word)C_a_i_list(&a,2,lf[196],C_retrieve2(lf[176],"parse-sequence-iteration"));
t98=(C_word)C_a_i_list(&a,2,lf[177],C_retrieve2(lf[176],"parse-sequence-iteration"));
t99=(C_word)C_a_i_list(&a,2,lf[200],C_retrieve2(lf[199],"parse-general-iteration"));
t100=(C_word)C_a_i_list(&a,2,lf[181],C_retrieve2(lf[176],"parse-sequence-iteration"));
t101=(C_word)C_a_i_list(&a,14,lf[137],C_retrieve2(lf[127],"parse-for"),lf[294],t90,t91,t92,t93,t94,t95,t96,t97,t98,t99,t100);
t102=(C_word)C_a_i_list(&a,3,lf[295],C_retrieve2(lf[127],"parse-for"),lf[294]);
t103=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[222],"parse-do"),lf[284]);
t104=(C_word)C_a_i_list(&a,3,lf[244],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t105=(C_word)C_a_i_list(&a,3,lf[112],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t106=(C_word)C_a_i_list(&a,3,lf[249],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t107=(C_word)C_a_i_list(&a,3,lf[232],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t108=(C_word)C_a_i_list(&a,3,lf[233],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t109=(C_word)C_a_i_list(&a,3,lf[236],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t110=(C_word)C_a_i_list(&a,3,lf[237],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t111=(C_word)C_a_i_list(&a,4,lf[271],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t112=(C_word)C_a_i_list(&a,4,lf[272],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t113=(C_word)C_a_i_list(&a,4,lf[273],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t114=(C_word)C_a_i_list(&a,4,lf[263],C_retrieve2(lf[276],"parse-return"),lf[284],C_retrieve2(lf[262],"loop-return"));
t115=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[264],"parse-while-until"),C_SCHEME_FALSE);
t116=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[264],"parse-while-until"),C_SCHEME_FALSE);
t117=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t118=(C_word)C_a_i_list(&a,3,lf[289],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t119=(C_word)C_a_i_list(&a,3,lf[234],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t120=(C_word)C_a_i_list(&a,3,lf[109],C_retrieve2(lf[225],"parse-finally"),C_SCHEME_FALSE);
t121=(C_word)C_a_i_list(&a,23,t87,t88,t89,t101,t102,t103,t104,t105,t106,t107,t108,t109,t110,t111,t112,t113,t114,t115,t116,t117,t118,t119,t120);
t122=C_mutate(&lf[298],t121);
t123=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12076,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t124=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12088,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t125=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12097,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t126=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12115,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t127=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12133,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t128=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12160,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t129=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12169,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t130=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12187,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t131=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12232,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t132=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12247,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t133=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12256,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t134=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12265,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t135=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12283,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t136=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12292,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t137=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12301,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t138=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12319,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t139=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12328,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t140=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12337,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t141=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12346,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t142=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12355,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t143=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12472,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t144=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12481,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t145=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12540,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t146=C_mutate(&lf[328],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12550,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t147=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12730,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t148=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12749,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t149=C_mutate((C_word*)lf[184]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12768,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t150=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12891,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t151=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13183,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t152=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13192,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t153=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13238,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t154=C_mutate((C_word*)lf[343]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13353,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t155=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13608,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t156=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13680,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t157=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13689,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t158=C_mutate((C_word*)lf[357]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13769,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t159=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14239,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t160=C_mutate((C_word*)lf[362]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14454,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t161=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14701,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t162=C_mutate((C_word*)lf[364]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14737,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t163=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15000,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t164=C_mutate((C_word*)lf[366]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15076,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t165=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15550,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t166=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15772,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t167=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15781,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t168=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15790,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t169=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15808,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t170=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15826,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t171=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15844,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t172=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15853,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t173=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15862,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t174=C_mutate((C_word*)lf[378]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15945,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t175=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16712,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t176=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16812,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t177=C_mutate((C_word*)lf[386]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17245,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t178=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17732,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t179=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18072,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t180=C_mutate((C_word*)lf[399]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18135,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t181=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18653,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t182=C_mutate((C_word*)lf[406]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18747,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t183=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19794,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t184=C_mutate((C_word*)lf[433]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19828,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t185=C_mutate((C_word*)lf[436]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19939,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t186=C_mutate((C_word*)lf[437]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19954,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t187=C_mutate((C_word*)lf[440]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19975,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t188=C_mutate((C_word*)lf[441]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19981,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t189=C_mutate((C_word*)lf[442]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19987,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t190=C_mutate((C_word*)lf[443]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20056,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t191=C_mutate((C_word*)lf[444]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20125,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t192=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20168,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t193=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20211,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t194=C_mutate((C_word*)lf[424]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20232,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t195=C_mutate((C_word*)lf[451]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20272,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t196=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20508,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t197=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20523,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t198=C_mutate(&lf[458],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20538,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t199=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20624,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t200=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20670,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t201=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20737,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t202=C_mutate((C_word*)lf[470]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20870,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t203=C_mutate((C_word*)lf[472]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20977,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t204=C_mutate((C_word*)lf[475]+1,C_retrieve2(lf[30],"ffi_ranseed"));
t205=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21185,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t206=C_mutate((C_word*)lf[476]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21220,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t207=C_mutate((C_word*)lf[477]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21241,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t208=C_mutate((C_word*)lf[478]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21512,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t209=C_mutate((C_word*)lf[481]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21611,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t210=C_mutate((C_word*)lf[482]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21666,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t211=C_mutate((C_word*)lf[483]+1,C_retrieve2(lf[33],"ffi_ranlow"));
t212=C_mutate((C_word*)lf[484]+1,C_retrieve2(lf[34],"ffi_ranhigh"));
t213=C_mutate((C_word*)lf[485]+1,C_retrieve2(lf[35],"ffi_ranmiddle"));
t214=C_mutate((C_word*)lf[486]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21708,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t215=C_mutate((C_word*)lf[490]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21936,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t216=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21955,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t217=C_mutate((C_word*)lf[492]+1,C_retrieve2(lf[39],"ffi_rancauchy"));
t218=C_mutate((C_word*)lf[493]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21996,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t219=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22015,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t220=C_mutate((C_word*)lf[495]+1,C_retrieve2(lf[42],"ffi_ranbrown"));
t221=C_mutate((C_word*)lf[496]+1,C_retrieve2(lf[41],"ffi_ranpink"));
t222=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22038,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   make-equal-hash-table");
t223=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t223))(2,t223,t222);}

/* k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22038,2,t0,t1);}
t2=C_mutate(&lf[497],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22041,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43953,a[2]=t7,a[3]=t4,a[4]=((C_word)li584),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_43953(t9,t5,C_fix(0));}

/* do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_43953(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43953,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[976],C_fix(-1),lf[977],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43966,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t5=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[497],"*notes*"),lf[978],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44179,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44179,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[979],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43987,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t6=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43987,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[980]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[981]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43999,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7012(t4,((C_word*)t0)[4]);}

/* k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_44003,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],lf[989]);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7012(t2,t3);}

/* k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_44007,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],lf[988]);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7012(t2,t3);}

/* k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44163,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[8],C_fix(12));
C_trace("ChickenBridge.scm: 17   floor");
t4=*((C_word*)lf[506]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44163,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44013,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=t4,a[5]=((C_word)li583),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_44013(t6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_44013(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[41],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44013,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_44023,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[4],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_44033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t8,a[6]=t6,a[7]=t9,a[8]=t5,a[9]=t17,a[10]=t4,a[11]=t7,a[12]=t3,a[13]=t16,a[14]=t15,a[15]=t14,a[16]=t18,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_44033(t21,(C_word)C_i_string_equal_p(t20,lf[987]));}
else{
t20=t19;
f_44033(t20,C_SCHEME_FALSE);}}}

/* k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_44033(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44033,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[16];
f_44023(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_44036,a[2]=((C_word*)t0)[16],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[15],tmp=(C_word)a,a+=17,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[985]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[15])+1,t4);
t6=t2;
f_44036(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[986]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[15])+1,t5);
t7=t2;
f_44036(t7,t6);}
else{
t5=t2;
f_44036(t5,C_SCHEME_UNDEFINED);}}}}

/* k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_44036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44036,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[982],((C_word*)((C_word*)t0)[16])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,t2);
t4=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_44044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[15],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[15])[1]);}

/* k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44044,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[15])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[15])[1],((C_word*)t0)[14],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_44051,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[15],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[15])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_44054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 17   hash-set!");
t4=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[497],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[9])[1]);}
else{
t4=t2;
f_44054(2,t4,C_SCHEME_UNDEFINED);}}

/* k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_44058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[984],((C_word*)((C_word*)t0)[9])[1]);}

/* k44056 in k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44058,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[12])[1],((C_word*)t0)[11],((C_word*)t0)[10],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[8])[1]);}

/* k44063 in k44056 in k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(1));
t5=(C_word)C_a_i_plus(&a,2,t4,C_fix(1000));
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t2,C_retrieve2(lf[497],"*notes*"),t5,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_44068(2,t4,C_SCHEME_UNDEFINED);}}

/* k44066 in k44063 in k44056 in k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[983],((C_word*)((C_word*)t0)[7])[1]);}

/* k44070 in k44066 in k44063 in k44056 in k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44072,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[8],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44079,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k44077 in k44070 in k44066 in k44063 in k44056 in k44052 in k44049 in k44042 in k44034 in k44031 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44079,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1000));
C_trace("ChickenBridge.scm: 17   hash-set!");
t4=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],C_retrieve2(lf[497],"*notes*"),t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[3];
f_44023(2,t3,C_SCHEME_UNDEFINED);}}

/* k44021 in do3263 in k44161 in k44005 in k44001 in k43997 in k43985 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_44023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_44013(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k43974 in k44177 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43976,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_43953(t3,((C_word*)t0)[2],t2);}

/* k43964 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43969,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[497],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k43967 in k43964 in do3257 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22041,2,t0,t1);}
t2=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22043,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22142,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[510]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22195,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22292,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[513]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22414,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22530,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[516]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22575,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[519]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22710,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[521]+1,*((C_word*)lf[126]+1));
t11=C_mutate((C_word*)lf[522]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22876,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[524]+1,lf[525]);
t13=C_mutate((C_word*)lf[526]+1,lf[527]);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23022,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   make-equal-hash-table");
t15=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t15))(2,t15,t14);}

/* k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23022,2,t0,t1);}
t2=C_mutate(&lf[528],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23023,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23028,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23042,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43858,a[2]=t3,a[3]=t4,a[4]=((C_word)li582),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t7=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,lf[975]);}

/* a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43858(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43858,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_i_caddr(t2);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43871,a[2]=t1,a[3]=t4,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=t3,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   addryth");
f_23028(t6,t4,t3);}

/* k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43874,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43947,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23023(t3,lf[973],((C_word*)t0)[3],lf[974]);}

/* k43945 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43947,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[972]);
C_trace("ChickenBridge.scm: 17   addryth");
f_23028(((C_word*)t0)[2],t1,t2);}

/* k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43874,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_43879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word)li581),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_43879(t5,((C_word*)t0)[2],C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_43879(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43879,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t9=(C_word)C_i_list_ref(lf[967],t2);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
t12=C_set_block_item(t7,0,t11);
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
t14=C_set_block_item(t8,0,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_43901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t7,a[8]=t6,a[9]=t1,a[10]=((C_word*)t0)[6],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t16=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43931,a[2]=t15,a[3]=((C_word*)t0)[4],a[4]=t8,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23023(t16,lf[971],((C_word*)t0)[2],((C_word*)t7)[1]);}
else{
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,C_SCHEME_FALSE);}}

/* k43929 in do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43931,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t2);
C_trace("ChickenBridge.scm: 17   addryth");
f_23028(((C_word*)t0)[2],t1,t3);}

/* k43899 in do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43904,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43915,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23023(t3,lf[970],((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1]);}

/* k43913 in k43899 in do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43915,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[968]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43927,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   *");
C_times(5,0,t3,((C_word*)t0)[5],lf[969],((C_word*)((C_word*)t0)[2])[1]);}

/* k43925 in k43913 in k43899 in do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43927,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t1);
C_trace("ChickenBridge.scm: 17   addryth");
f_23028(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k43902 in k43899 in do3408 in k43872 in k43869 in a43857 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43904,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t3=((C_word*)((C_word*)t0)[6])[1];
f_43879(t3,((C_word*)t0)[5],t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word ab[108],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23042,2,t0,t1);}
t2=C_mutate((C_word*)lf[530]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23044,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[539]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23360,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[540]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23382,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[541]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23388,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[542],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24236,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[545],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24278,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[547],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24323,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[549],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24329,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[550]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24344,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24353,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[552]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24362,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24371,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[554]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24380,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[555],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24389,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[556]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24398,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[557]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24407,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[558]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24445,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[560]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24504,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[561]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24514,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24532,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24563,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[566]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24824,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26297,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26703,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26882,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27094,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27151,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27664,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27790,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[616],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27986,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[618],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28007,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[619],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28043,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[620],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28052,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[622],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28075,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[623],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28087,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t37=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28095,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-eq-hash-table");
t38=C_retrieve(lf[10]);
((C_proc2)C_retrieve_proc(t38))(2,t38,t37);}

/* k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word ab[105],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28095,2,t0,t1);}
t2=C_mutate(&lf[624],t1);
t3=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28097,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[627],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28199,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28217,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[629],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28220,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[630],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28232,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[631],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28238,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[632],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28248,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[633],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28306,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[634],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28338,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[636],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28386,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[638],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28392,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[639],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28407,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28425,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28443,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28452,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28468,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28500,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28512,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28579,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28597,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28630,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28661,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[659],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28838,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[660],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28846,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t27=lf[661]=C_SCHEME_FALSE;;
t28=C_mutate(&lf[662],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28950,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29569,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29617,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[657],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29719,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[645],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29731,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t33=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29752,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t34=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43836,a[2]=t33,tmp=(C_word)a,a+=3,tmp);
t35=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t36=(C_word)C_a_i_cons(&a,2,C_fix(3328),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(2816),t36);
t38=(C_word)C_a_i_cons(&a,2,lf[238],t37);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t34,lf[966],C_fix(25856),t38,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43834 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(25856),t1);}

/* k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29755,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43816,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[965],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43814 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26112),t1);}

/* k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29758,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43776,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[238],t10);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[964],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43774 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26368),t1);}

/* k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29761,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43666,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[387],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43672,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43682,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[963],C_fix(26624),t9,t10,t11);}

/* a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43682,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43686,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t5,lf[957],t3);}

/* k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43689,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t2,((C_word*)t0)[2]);}

/* k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43689,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[241]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43707,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t3,lf[957],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k43705 in k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43710,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k43708 in k43705 in k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43710,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43713,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43741,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t5,lf[957],((C_word*)t0)[2]);}

/* k43739 in k43708 in k43705 in k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43741,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[958]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[962],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_43713(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[187],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_43713(t5,t4);}}

/* k43711 in k43708 in k43705 in k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_43713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43713,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t2,lf[923],((C_word*)t0)[2]);}

/* k43717 in k43711 in k43708 in k43705 in k43687 in k43684 in a43681 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43719,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[241]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[112],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a43671 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43672,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k43664 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26624),t1);}

/* k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29764,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43570,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t10,C_fix(27648));}

/* k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43572,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[3],lf[961],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43572,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43576,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43579,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(5376));}

/* k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t2,lf[957],((C_word*)t0)[4]);}

/* k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_43585(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43618,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[959]:lf[960]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43626,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t5,t6);}}

/* k43624 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43616 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43588,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43608,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[957];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28531,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li577),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_28531(t13,t4,t6);}

/* do4466 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28531(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28531,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28544,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28577,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   caar");
t5=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k28575 in do4466 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28577,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_28544(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_28544(t8,t7);}}

/* k28542 in do4466 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28544(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28531(t3,((C_word*)t0)[2],t2);}

/* k43606 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k43586 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43591,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   set-emit-info!");
f_28579(t2,lf[957],lf[958],((C_word*)t0)[2]);}

/* k43589 in k43586 in k43583 in k43580 in k43577 in k43574 in a43571 in k43568 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43591,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[955],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[956],((C_word*)t0)[2])));}

/* k43560 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27648),t1);}

/* k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29767,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43534,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[238],t7);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[954],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43532 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26880),t1);}

/* k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29770,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43474,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[214],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43480,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43498,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[953],C_fix(27136),t8,t9,t10);}

/* a43497 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43498,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43506,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43510,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k43508 in a43497 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43504 in a43497 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43506,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[67],t1));}

/* a43479 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43480,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k43472 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27136),t1);}

/* k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29773,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43351,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[665],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43357,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43388,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[952],C_fix(27392),t14,t15,t16);}

/* a43387 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43388,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43392,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k43390 in a43387 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43393 in k43390 in a43387 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43396 in k43393 in k43390 in a43387 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43398,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43411,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[234],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k43409 in k43396 in k43393 in k43390 in a43387 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43411,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[234],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a43356 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43357,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43361,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   sixth");
t5=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k43359 in a43356 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43361,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43376,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k43374 in k43359 in a43356 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43376,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k43349 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27392),t1);}

/* k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29773,2,t0,t1);}
t2=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29775,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29829,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43231,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[146],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[238],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43237,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t4,lf[951],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a43236 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43237,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43253,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t4,t8,C_fix(256));}
else{
t7=t4;
f_43253(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_43253(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k43251 in a43236 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43253,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43264,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k43262 in k43251 in a43236 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43264,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k43229 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28416),t1);}

/* k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29832,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43092,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[146],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[214],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[238],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43098,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[950],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a43097 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43098,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43118,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43121,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t7,t11,C_fix(256));}
else{
t10=t7;
f_43121(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_43121(2,t9,C_SCHEME_FALSE);}}

/* k43119 in a43097 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_43118(2,t2,C_SCHEME_END_OF_LIST);}}

/* k43116 in a43097 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43118,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k43090 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_43092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28672),t1);}

/* k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29835,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42940,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[214],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[238],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42946,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[949],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a42945 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42946,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42964,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t10,t7,C_fix(768));}

/* k42962 in a42945 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42964,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(256));}}

/* k42971 in k42962 in a42945 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k42938 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28160),t1);}

/* k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29838,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42869,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42875,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42893,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[948],C_fix(27904),t6,t7,t8);}

/* a42892 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42893,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42897,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k42895 in a42892 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42898 in k42895 in a42892 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42916,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42914 in k42898 in k42895 in a42892 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42916,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a42874 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42875,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k42867 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27904),t1);}

/* k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29838,2,t0,t1);}
t2=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29840,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[671],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29861,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29977,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42793,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[238],t21);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t5,lf[947],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k42791 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28928),t1);}

/* k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29980,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42713,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42719,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[946],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a42718 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42719,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42726,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29840(t4,t7);}
else{
t6=t4;
f_42726(2,t6,C_SCHEME_FALSE);}}

/* k42724 in a42718 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42726,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 19   inf->pre");
f_29861(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k42711 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29184),t1);}

/* k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29983,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42577,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[214],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[238],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42583,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42609,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[945],C_fix(29440),t23,t24,t25);}

/* a42608 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42609,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42617,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k42615 in a42608 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a42582 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42583,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42591,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42600,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t5,t6,C_fix(512));}
else{
t5=t4;
f_42591(t5,t2);}}

/* k42598 in a42582 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_42591(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k42589 in a42582 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_42591(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k42575 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29440),t1);}

/* k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29986,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42533,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[238],t11);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[944],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k42531 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29696),t1);}

/* k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29989,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42423,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42429,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42451,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[943],C_fix(33536),t10,t11,t12);}

/* a42450 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42451,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[693]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42462,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t8,t2);}

/* k42460 in a42450 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42462,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42464,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li563),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_42464(t5,((C_word*)t0)[2],t1);}

/* do4926 in k42460 in a42450 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_42464(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42464,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42493,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k42491 in do4926 in k42460 in a42450 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42493,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_42464(t7,((C_word*)t0)[2],t6);}

/* a42428 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42429,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42445,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t5,t6,C_fix(256));}

/* k42443 in a42428 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42445,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k42421 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33536),t1);}

/* k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29992,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42312,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(6144),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(256),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t6,t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(16896),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[214],t14);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42318,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42352,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[942],C_fix(34560),t15,t16,t17);}

/* a42351 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42352(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42352,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42356,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k42354 in a42351 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42363,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42361 in k42354 in a42351 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42363,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[824],t1));}

/* a42317 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42318,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42334,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42338,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t6,t7,C_fix(256));}

/* k42336 in a42317 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42342,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t2,t3,C_fix(256));}

/* k42340 in k42336 in a42317 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42332 in a42317 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42334,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k42310 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34560),t1);}

/* k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29995,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42103,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[238],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[665],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42109,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42184,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[941],C_fix(34304),t21,t22,t23);}

/* a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42184,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42188,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42220,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k42218 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42188,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li558),tmp=(C_word)a,a+=5,tmp);
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,1,t5);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37917,a[2]=t4,a[3]=t6,a[4]=t8,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,*((C_word*)lf[74]+1));
t11=t9;
f_37917(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_37917(t12,t11);}}

/* k37915 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37917,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37926,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 20   hash-ref");
t3=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_retrieve2(lf[787],"*messages*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t0)[5]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[940],((C_word*)t0)[5]);}}}

/* k37924 in k37915 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37926,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t1);
t5=t4;
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   string->symbol");
t4=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k37937 in k37924 in k37915 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37939,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k37940 in k37924 in k37915 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37942,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(t1))){
C_trace("ChickenBridge.scm: 20   errcont");
t2=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],t1);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   string->symbol");
t3=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k37956 in k37940 in k37924 in k37915 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37958,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* a42203 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42204(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42204,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42212,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42216,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t4,((C_word*)t0)[2]);}

/* k42214 in a42203 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42210 in a42203 in k42186 in a42183 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a42108 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42109,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42116,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42152,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_42152(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_42116(t10,t9);}}

/* k42150 in a42108 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42152,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_42116(t2,C_SCHEME_UNDEFINED);}}

/* k42154 in k42150 in a42108 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42116(t3,t2);}

/* k42114 in a42108 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_42116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42116,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42127,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t4,t5);}

/* k42125 in k42114 in a42108 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k42101 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34304),t1);}

/* k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29998,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42077,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42083,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[939],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a42082 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42083,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k42075 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33792),t1);}

/* k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30001,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42049,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42057,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(35072));}

/* k42055 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42061,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28846(t2,lf[703]);}

/* k42059 in k42055 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[4],lf[938],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42047 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35072),t1);}

/* k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30004,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42021,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42029,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(35584));}

/* k42027 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42033,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28846(t2,lf[702]);}

/* k42031 in k42027 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[4],lf[937],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42019 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35584),t1);}

/* k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30007,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41993,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42001,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(35328));}

/* k41999 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42005,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28846(t2,lf[936]);}

/* k42003 in k41999 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_42005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[4],lf[935],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k41991 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35328),t1);}

/* k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30010,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41965,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41973,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(34816));}

/* k41971 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41977,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28846(t2,lf[934]);}

/* k41975 in k41971 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[4],lf[933],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k41963 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34816),t1);}

/* k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30013,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41828,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[238],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[214],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[238],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[387],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[214],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41834,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41864,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[932],C_fix(36096),t22,t23,t24);}

/* a41863 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41864,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[931]);}

/* a41833 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41834,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41858,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t6,t7,C_fix(256));}

/* k41856 in a41833 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41858,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k41826 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36096),t1);}

/* k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30016,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41770,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41778,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(31744));}

/* k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41780,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[3],lf[930],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41780,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41784,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k41782 in a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41812,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t3,lf[909],((C_word*)t0)[3]);}

/* k41810 in k41782 in a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41812,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_41787(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41800,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41804,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t3,t4);}}

/* k41802 in k41810 in k41782 in a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[2],lf[929],t1);}

/* k41798 in k41810 in k41782 in a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41785 in k41782 in a41779 in k41776 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41768 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(31744),t1);}

/* k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30019,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41709,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41717,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t7,C_fix(31488));}

/* k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41719,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[3],lf[928],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41719,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41723,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41754,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t3,lf[876],((C_word*)t0)[3]);}

/* k41752 in k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41754,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_41726(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41742,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41746,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t3,t4);}}

/* k41744 in k41752 in k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[2],lf[927],t1);}

/* k41740 in k41752 in k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41724 in k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   set-emit-info!");
f_28579(t2,lf[876],lf[874],((C_word*)t0)[3]);}

/* k41727 in k41724 in k41721 in a41718 in k41715 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41707 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(31488),t1);}

/* k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30022,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41618,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[214],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[238],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41624,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41659,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[926],C_fix(30208),t10,t11,t12);}

/* a41658 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41659(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41659,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41665,a[2]=t4,a[3]=t3,a[4]=((C_word)li550),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41673,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k41671 in a41658 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a41664 in a41658 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41665(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_41665,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a41623 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41624,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41657,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t4,C_fix(4608),lf[925],C_SCHEME_FALSE);}}

/* k41655 in a41623 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41657,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k41616 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30208),t1);}

/* k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30025,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41516,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41522,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41565,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[924],C_fix(29952),t10,t11,t12);}

/* a41564 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41565,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41569,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t5,lf[923],C_SCHEME_TRUE,t3);}

/* k41567 in a41564 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41574,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li547),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41582,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t3,((C_word*)t0)[2]);}

/* k41580 in k41567 in a41564 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a41573 in k41567 in a41564 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41574(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_41574,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a41521 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41522,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41555,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k41553 in a41521 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41555,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k41514 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29952),t1);}

/* k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30028,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41430,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[238],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[214],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41436,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[922],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a41435 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41436,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k41428 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30720),t1);}

/* k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30031,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41150,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41156,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41199,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[921],C_fix(30464),t10,t11,t12);}

/* a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41199,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41203,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41203,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[183]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li543),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_41211(t8,((C_word*)t0)[2],t1);}

/* do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_41211(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41211,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t3,t4);}}

/* k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t2,t3);}

/* k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41243,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41243,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t5,((C_word*)t0)[2],C_fix(10756));}

/* k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41303,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_41246(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41310,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41246(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41320,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[387],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41246(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k41328 in k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41330,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[241],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_41246(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41344,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k41342 in k41328 in k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41344,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[920],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41246(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k41352 in k41342 in k41328 in k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41354,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41246(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k41362 in k41352 in k41342 in k41328 in k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41364,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[415],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41246(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k41372 in k41362 in k41352 in k41342 in k41328 in k41318 in k41308 in k41301 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41374,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[342],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41246(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_41246(t2,C_SCHEME_UNDEFINED);}}

/* k41244 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_41246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41246,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41270,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_41270(t5,(C_word)C_eqp(t4,lf[67]));}
else{
t4=t3;
f_41270(t4,C_SCHEME_FALSE);}}

/* k41268 in k41244 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_41270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41270,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[918],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[919],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_41249(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41249(t4,t3);}}

/* k41247 in k41244 in k41241 in k41238 in k41235 in k41232 in do5004 in k41201 in a41198 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_41249(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41249,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_41211(t7,((C_word*)t0)[2],t6);}

/* a41155 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41156,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41189,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k41187 in a41155 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41189,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k41148 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30464),t1);}

/* k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30034,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41036,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[665],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[387],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[214],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41042,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41068,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[917],C_fix(32000),t12,t13,t14);}

/* a41067 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41068,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41072,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k41070 in a41067 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41072,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41076 in k41070 in a41067 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41078,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41098,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[183],t1));}}

/* k41096 in k41076 in k41070 in a41067 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41098,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[893],t2));}

/* a41041 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41042,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41052,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_41052(t12,t11);}
else{
t10=t8;
f_41052(t10,C_SCHEME_FALSE);}}

/* k41050 in a41041 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_41052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41052,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k41034 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_41036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32000),t1);}

/* k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30037,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40777,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[665],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[665],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[214],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[214],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[238],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40783,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40851,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[916],C_fix(32256),t26,t27,t28);}

/* a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40851,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40855,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t5,t2);}

/* k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(14336));}

/* k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40861,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(19968));}}

/* k40868 in k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40870,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k40906 in k40868 in k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40908,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[178],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40900,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40898 in k40906 in k40868 in k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40900,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[234],((C_word*)t0)[2],t1));}

/* k40875 in k40868 in k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40881,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40879 in k40875 in k40868 in k40859 in k40853 in a40850 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40881,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[234],((C_word*)t0)[2],t1));}

/* a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40783,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40796,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40802,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t9,t4,C_fix(14336));}

/* k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40802,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40808,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_40808(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40837,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t11,C_fix(4608),lf[915],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_40796(t5,t4);}}

/* k40835 in k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40808(t3,t2);}

/* k40806 in k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k40810 in k40806 in k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40812,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_40815(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40826,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t5,C_fix(4608),lf[914],C_SCHEME_FALSE);}}

/* k40824 in k40810 in k40806 in k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40815(t3,t2);}

/* k40813 in k40810 in k40806 in k40800 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40815,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40796(t4,t3);}

/* k40794 in a40782 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40796(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k40775 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32256),t1);}

/* k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30037,2,t0,t1);}
t2=C_mutate(&lf[672],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30039,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30560,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40505,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[214],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[665],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[214],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[238],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[665],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[665],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[214],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[238],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[665],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[214],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[238],t58);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t4,lf[913],C_fix(33024),t59,C_retrieve2(lf[672],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k40503 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33024),t1);}

/* k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30563,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40449,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[238],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40457,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28838(t13,C_fix(33280));}

/* k40455 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(((C_word*)t0)[3],lf[912],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k40447 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33280),t1);}

/* k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31094,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40277,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[665],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[146],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[665],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[214],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40283,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40329,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[911],C_fix(32512),t25,t26,t27);}

/* a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40329,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30569,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t7,t2);}

/* k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30569,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_END_OF_LIST;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_END_OF_LIST;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t17,a[5]=t19,a[6]=t9,a[7]=t11,a[8]=t7,a[9]=t15,a[10]=t13,a[11]=((C_word*)t0)[4],a[12]=t5,a[13]=t3,tmp=(C_word)a,a+=14,tmp);
t21=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31053,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t20,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t22=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t21,t22,C_fix(14864));}

/* k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31053,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31057,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t2,lf[908],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31060,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t3,lf[878],((C_word*)((C_word*)t0)[6])[1]);}}

/* k31085 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31087,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31060(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31079,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t3,t4);}}

/* k31077 in k31085 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[2],lf[910],t1);}

/* k31073 in k31085 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31058 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t2,lf[909],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k31062 in k31058 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_30593(t4,t3);}

/* k31055 in k31051 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30593(t3,t2);}

/* k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30593,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30600,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31042,a[2]=t4,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31046,a[2]=((C_word*)t0)[8],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t6,t7,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}
else{
t5=t4;
f_30600(t5,C_SCHEME_UNDEFINED);}}

/* k31044 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31040 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30600(t3,t2);}

/* k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30600,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30917,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],a[6]=t5,a[7]=((C_word)li536),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_30917(t7,t2,t3);}

/* do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30917(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30917,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30927,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30938,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t4,t5);}}

/* k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30938,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li535),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_30940(t5,((C_word*)t0)[2],t1);}

/* do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30940(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30940,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30954,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 19   append");
t9=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30954,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31007,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 19   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_30957(t4,C_SCHEME_UNDEFINED);}}

/* k31005 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30957(t3,t2);}

/* k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30957,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30992,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_30960(t3,C_SCHEME_UNDEFINED);}}

/* k30990 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30960(t3,t2);}

/* k30958 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30960,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30963,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30973,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30971 in k30958 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30973,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30977,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30985,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_30963(t2,C_SCHEME_UNDEFINED);}}

/* k30983 in k30971 in k30958 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30985,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k30975 in k30971 in k30958 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30963(t3,t2);}

/* k30961 in k30958 in k30955 in k30952 in do5119 in k30936 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30940(t3,((C_word*)t0)[2],t2);}

/* k30925 in do5116 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30917(t3,((C_word*)t0)[2],t2);}

/* k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li534),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_30881(t7,t2,t3);}

/* do5130 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30881(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30881,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30892,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30907,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k30905 in do5130 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30907,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k30890 in do5130 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_30881(t4,((C_word*)t0)[2],t3);}

/* k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t3))){
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_truep(((C_word*)((C_word*)t0)[13])[1])?C_retrieve2(lf[817],"*process-stop*"):lf[907]);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30789,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=t6,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
t8=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t10,a[5]=t5,a[6]=((C_word)li533),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_30821(t12,t7,t8);}
else{
t4=t2;
f_30609(t4,C_SCHEME_UNDEFINED);}}

/* do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30821(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30821,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t3,t4);}}

/* k30829 in do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30834,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k30832 in k30829 in do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30834,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30837,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30855,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t5,t6,C_fix(20224));}

/* k30853 in k30832 in k30829 in do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30855,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30837(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30837(t2,C_SCHEME_UNDEFINED);}}

/* k30835 in k30832 in k30829 in do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30837,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 19   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k30839 in k30835 in k30832 in k30829 in do5137 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_30821(t4,((C_word*)t0)[2],t3);}

/* k30787 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_30792(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_30792(t6,t5);}}

/* k30790 in k30787 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30792,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30609(t5,t4);}

/* k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30609,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[11])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_30612(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_30612(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[11],0,C_SCHEME_FALSE);
t4=t2;
f_30612(t4,t3);}}

/* k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30612,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30615,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30746,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k30744 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30746,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30750,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_30615(t3,t2);}}

/* k30752 in k30744 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k30748 in k30744 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30615(t3,t2);}

/* k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30615,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30716,a[2]=((C_word*)t0)[9],tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30732,a[2]=((C_word*)t0)[5],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   append");
t6=*((C_word*)lf[112]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[7])[1]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30650,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30654,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ##sys#append");
t6=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t5,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(C_word)C_a_i_list(&a,1,lf[905]);
t4=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30701,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30705,a[2]=((C_word*)t0)[4],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30709,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ##sys#append");
t8=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t7,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}}}

/* k30707 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30703 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30699 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30701,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[6],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[296],t3);
t5=(C_word)C_a_i_list(&a,3,lf[875],((C_word*)t0)[5],t4);
t6=(C_word)C_a_i_list(&a,2,lf[795],t5);
t7=(C_word)C_a_i_list(&a,1,lf[906]);
t8=(C_word)C_a_i_list(&a,5,lf[893],((C_word*)((C_word*)t0)[4])[1],t6,((C_word*)((C_word*)t0)[3])[1],t7);
t9=(C_word)C_a_i_list(&a,3,lf[875],C_SCHEME_END_OF_LIST,t8);
t10=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,1,t9));}

/* k30652 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30648 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30650,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[296],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[893],((C_word*)((C_word*)t0)[2])[1],t4));}

/* k30730 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30732,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[6])[1];
t3=(C_truep(t2)?t2:C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 19   make-loop-clause");
f_8525(((C_word*)t0)[5],(C_word)C_a_i_list(&a,18,lf[102],lf[899],lf[103],((C_word*)((C_word*)t0)[4])[1],lf[104],C_SCHEME_END_OF_LIST,lf[105],C_SCHEME_END_OF_LIST,lf[106],((C_word*)t0)[3],lf[107],t1,lf[108],((C_word*)((C_word*)t0)[2])[1],lf[109],t3,lf[110],C_SCHEME_END_OF_LIST));}

/* k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38634,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_vectorp(t1))){
t3=t2;
f_38634(2,t3,t1);}
else{
t3=t1;
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11749,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_nullp(((C_word*)t6)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11581,a[2]=t6,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t7)){
t9=t8;
f_11581(t9,t7);}
else{
t9=(C_word)C_i_car(((C_word*)t6)[1]);
t10=(C_word)C_i_symbolp(t9);
t11=t8;
f_11581(t11,(C_word)C_i_not(t10));}}}

/* k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11581(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11581,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11588,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(t2,(C_word)C_a_i_list(&a,4,lf[102],lf[296],lf[107],((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11589,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11614,a[2]=t6,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11616,a[2]=t2,a[3]=t9,a[4]=t6,a[5]=t4,a[6]=((C_word*)t0)[2],a[7]=((C_word)li532),tmp=(C_word)a,a+=8,tmp));
t11=((C_word*)t9)[1];
f_11616(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11616(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11616,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11626,a[2]=((C_word*)t0)[2],a[3]=t9,a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=t8,a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[5],a[11]=t6,tmp=(C_word)a,a+=12,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t12=(C_word)C_eqp(t11,lf[214]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[6])+1,t14);
t16=t10;
f_11626(t16,t13);}
else{
t13=t10;
f_11626(t13,C_SCHEME_UNDEFINED);}}}

/* k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11626(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11626,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t2,t3,C_retrieve2(lf[822],"*run-operators*"));}

/* k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11630,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=((C_word*)((C_word*)t0)[11])[1];
if(C_truep(t4)){
t5=t3;
f_11633(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t3,C_retrieve2(lf[822],"*run-operators*"),((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[903],t5,lf[904]));}}

/* k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11685,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[5],a[5]=((C_word)li530),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11694,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[4],a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11693 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11694,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11684 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11685,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[822],"*run-operators*"));}

/* k11634 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11639,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   op-type?");
f_11589(t3,((C_word*)((C_word*)t0)[5])[1],lf[284]);}

/* k11653 in k11634 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11655,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)t0)[4];
f_11639(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11662,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   op-type?");
f_11589(t2,((C_word*)((C_word*)t0)[5])[1],lf[294]);}}

/* k11660 in k11653 in k11634 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11662,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
f_11639(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[4],C_retrieve2(lf[822],"*run-operators*"),((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[900],t2,lf[901],t3,lf[902]));}}
else{
t2=((C_word*)t0)[4];
f_11639(2,t2,C_SCHEME_UNDEFINED);}}

/* k11637 in k11634 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11639,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k11643 in k11637 in k11634 in k11631 in k11628 in k11624 in do1314 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_11616(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11612 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11749(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11589(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11589,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k11586 in k11579 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11588,2,t0,t1);}
t2=((C_word*)t0)[2];
f_11749(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k11747 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11749(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8676(((C_word*)t0)[2],lf[899],t1);}

/* k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38634,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[817],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38637,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 21   gensym");
t9=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[898]);}

/* k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 21   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[897]);}

/* k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38644,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 21   loop-end-tests");
t3=C_retrieve2(lf[95],"loop-end-tests");
f_8465(3,t3,t2,((C_word*)t0)[3]);}

/* k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38644,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   loop-finally");
t5=C_retrieve2(lf[99],"loop-finally");
f_8501(3,t5,t4,((C_word*)t0)[3]);}

/* k38856 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38858,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[4];
f_38647(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38842,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38846,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-finally");
t4=C_retrieve2(lf[99],"loop-finally");
f_8501(3,t4,t3,((C_word*)t0)[2]);}}

/* k38844 in k38856 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38846,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 21   ##sys#append");
t3=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k38840 in k38856 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38842,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38647(t4,t3);}

/* k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38647,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38820,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38827,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-looping");
t5=C_retrieve2(lf[96],"loop-looping");
f_8477(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38791,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_38791(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_38791(t7,t6);}}}

/* k38789 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38791(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38791,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_38650(2,t5,t4);}

/* k38825 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
f_38591(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k38818 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_38650(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 21   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[896]);}}

/* k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[124],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38650,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,2,lf[185],lf[882]);
t5=(C_word)C_a_i_list(&a,2,lf[53],lf[882]);
t6=(C_word)C_a_i_list(&a,1,lf[883]);
t7=(C_word)C_a_i_list(&a,3,lf[214],t5,t6);
t8=(C_word)C_a_i_list(&a,1,lf[884]);
t9=(C_word)C_a_i_list(&a,4,lf[234],t7,t8,((C_word*)t0)[7]);
t10=(C_word)C_a_i_list(&a,4,lf[234],t4,((C_word*)t0)[7],t9);
t11=(C_word)C_a_i_list(&a,3,lf[875],lf[882],t10);
t12=(C_word)C_a_i_list(&a,2,lf[885],t11);
t13=(C_word)C_a_i_list(&a,1,lf[886]);
t14=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],lf[886]);
t15=(C_word)C_a_i_list(&a,3,lf[875],t13,t14);
t16=(C_word)C_a_i_list(&a,2,lf[887],t15);
t17=(C_word)C_a_i_list(&a,3,t3,t12,t16);
t18=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t17,tmp=(C_word)a,a+=7,tmp);
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t18,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 21   loop-looping");
t20=C_retrieve2(lf[96],"loop-looping");
f_8477(3,t20,t19,((C_word*)t0)[3]);}

/* k38719 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38725,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 21   loop-stepping");
t3=C_retrieve2(lf[98],"loop-stepping");
f_8489(3,t3,t2,((C_word*)t0)[2]);}

/* k38723 in k38719 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38725,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 21   append");
t3=*((C_word*)lf[112]+1);
((C_proc6)C_retrieve_proc(t3))(6,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1,t2);}

/* k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 12   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[895]);}

/* k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[96],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6752,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[888]);
t3=(C_word)C_a_i_list(&a,1,t1);
t4=(C_word)C_a_i_list(&a,1,lf[889]);
t5=(C_word)C_a_i_list(&a,4,lf[890],t1,t4,lf[891]);
t6=(C_word)C_a_i_list(&a,2,lf[888],C_fix(-2));
t7=(C_word)C_a_i_list(&a,4,lf[875],t3,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t9=(C_word)C_a_i_cons(&a,2,lf[875],t8);
t10=(C_word)C_a_i_list(&a,3,lf[892],t7,t9);
t11=(C_word)C_a_i_list(&a,3,lf[875],t2,t10);
t12=(C_word)C_a_i_list(&a,2,lf[795],t11);
t13=(C_word)C_a_i_list(&a,3,lf[893],((C_word*)t0)[6],t12);
t14=(C_word)C_a_i_list(&a,3,lf[875],((C_word*)t0)[5],t13);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t17=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38697,a[2]=((C_word*)t0)[2],a[3]=t16,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-bindings");
t18=C_retrieve2(lf[92],"loop-bindings");
f_8429(3,t18,t17,((C_word*)t0)[2]);}

/* k38695 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38697,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38693,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 21   loop-initially");
t3=C_retrieve2(lf[94],"loop-initially");
f_8453(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_38660(t2,C_SCHEME_FALSE);}}

/* k38691 in k38695 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_38660(t2,(C_word)C_i_nullp(t1));}

/* k38658 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38660,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   loop-bindings");
t3=C_retrieve2(lf[92],"loop-bindings");
f_8429(3,t3,t2,((C_word*)t0)[2]);}}

/* k38669 in k38658 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38675,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38679,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-initially");
t4=C_retrieve2(lf[94],"loop-initially");
f_8453(3,t4,t3,((C_word*)t0)[2]);}

/* k38677 in k38669 in k38658 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38679,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 21   ##sys#append");
t3=*((C_word*)lf[894]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k38673 in k38669 in k38658 in k6750 in k38715 in k38648 in k38645 in k38642 in k38638 in k38635 in k38632 in k30714 in k30613 in k30610 in k30607 in k30604 in k30601 in k30598 in k30591 in k30567 in a40328 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38675,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[893],t2));}

/* a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40283,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40299,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t11=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k40297 in a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40302,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   sixth");
t3=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k40300 in k40297 in a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40302,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40305,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_40305(t7,t6);}
else{
t5=t4;
f_40305(t5,C_SCHEME_UNDEFINED);}}

/* k40303 in k40300 in k40297 in a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40305(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40305,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_40308(t5,t4);}
else{
t3=t2;
f_40308(t3,C_SCHEME_UNDEFINED);}}

/* k40306 in k40303 in k40300 in k40297 in a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40308,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40319,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t3,((C_word*)t0)[8]);}

/* k40317 in k40306 in k40303 in k40300 in k40297 in a40282 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k40275 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32512),t1);}

/* k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31097,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40132,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[238],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40138,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[881],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a40137 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40138,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40151,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_40151(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40177,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t12,t13,C_fix(256));}}

/* k40175 in a40137 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40177,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40151(t4,t3);}

/* k40149 in a40137 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_40151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40151,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k40130 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(37632),t1);}

/* k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31100,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39675,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[214],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[214],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[238],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[214],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39681,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39720,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[880],C_fix(36352),t23,t24,t25);}

/* a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39720,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39724,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39724,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[183]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39733,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39736,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t7,t2,C_fix(24576));}

/* k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39736,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39745,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li524),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_39745(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t2,t3);}}

/* k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_40012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40012,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_39809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_39809(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39950,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 19   symbol->string");
t15=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k39948 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39950,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39959,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39984,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 19   substring");
t6=*((C_word*)lf[414]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_39959(t4,C_SCHEME_FALSE);}}

/* k39982 in k39948 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_39959(t2,(C_word)C_i_string_equal_p(t1,lf[879]));}

/* k39957 in k39948 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39959(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39959,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39966,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39970,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 19   substring");
t5=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_39809(t2,C_SCHEME_UNDEFINED);}}

/* k39968 in k39957 in k39948 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39964 in k39957 in k39948 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_39809(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39809(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39809,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39812,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t3,((C_word*)t0)[2],C_fix(24064));}

/* k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39887,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t2,lf[876],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k39926 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39928,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t2,lf[878],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_39812(t2,C_SCHEME_UNDEFINED);}}

/* k39930 in k39926 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39932,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39936,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k39934 in k39930 in k39926 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39936,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[868],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[877]);
t6=((C_word*)t0)[2];
f_39812(t6,t5);}

/* k39889 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39891,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39895,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k39893 in k39889 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39895,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39922,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28500(t4,lf[876],((C_word*)((C_word*)t0)[2])[1]);}

/* k39920 in k39893 in k39889 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39922,2,t0,t1);}
t2=(C_word)C_eqp(lf[874],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[263]);
t4=(C_word)C_a_i_list(&a,3,lf[875],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[795],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_39898(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_39898(t3,C_SCHEME_UNDEFINED);}}

/* k39896 in k39893 in k39889 in k39885 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39898(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39898,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[868],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[873]);
t5=((C_word*)t0)[2];
f_39812(t5,t4);}

/* k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39812,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39815,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39826,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39884,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   symbol->string");
t5=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k39882 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[872]);}

/* k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39826,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39828,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li525),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39828(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39828(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39828,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39843,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[870]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39847,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39876,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 19   symbol->string");
t8=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k39874 in do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k39845 in do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39847,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39850,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_39850(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39864,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[871]);}}

/* k39862 in k39845 in do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39850(t3,t2);}

/* k39848 in k39845 in do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_39828(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k39841 in do5217 in k39824 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39843,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[50],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k39813 in k39810 in k39807 in k40010 in k39798 in k39795 in k39792 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39815,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_39733(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do5191 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39745(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39745,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39755,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k39753 in do5191 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39755,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[869],t2);}

/* k39759 in k39753 in do5191 in k39734 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39761,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[868],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[693],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_39745(t9,((C_word*)t0)[2],t8);}

/* k39731 in k39722 in a39719 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a39680 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39681,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39692,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39698,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t9,t7,C_fix(24576));}

/* k39696 in a39680 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39698,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29775(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_39692(t2,C_SCHEME_UNDEFINED);}}

/* k39712 in k39696 in a39680 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39714,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39692(t5,t4);}

/* k39690 in a39680 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k39673 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36352),t1);}

/* k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31103,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39599,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[238],t19);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[867],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39597 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36608),t1);}

/* k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31106,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39555,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[146],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39561,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39575,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28097(t3,lf[866],C_fix(36864),t5,t6,t7);}

/* a39574 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39575,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39583,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39587,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k39585 in a39574 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39581 in a39574 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39583,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[183],t1));}

/* a39560 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39561(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39561,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39569,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28443(t4,t5);}

/* k39567 in a39560 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k39553 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36864),t1);}

/* k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word ab[99],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31106,2,t0,t1);}
t2=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31108,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[689],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31592,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31751,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31904,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31913,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31962,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31986,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[715],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32014,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[725]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32075,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[727],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32322,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[726],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32377,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[717],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32530,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32536,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[740]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33591,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34020,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34727,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[745]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35434,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[747]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36141,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[748]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36570,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36999,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37428,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[752]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37458,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37464,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[754]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37470,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37476,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[756]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37482,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37488,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37503,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37509,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37614,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[767]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37723,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t33=lf[769]=C_SCHEME_FALSE;;
t34=C_mutate(&lf[721],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37796,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t35=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37911,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 20   make-equal-hash-table");
t36=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t36))(2,t36,t35);}

/* k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37911,2,t0,t1);}
t2=C_mutate(&lf[787],t1);
t3=C_mutate(&lf[788],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37987,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t4=lf[802];
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38461,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39551,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t6,t4);}

/* k39549 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39551,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[865],t2);}

/* k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38461,2,t0,t1);}
t2=lf[803];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38464,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39543,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39541 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39543,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[864],t2);}

/* k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38464,2,t0,t1);}
t2=lf[804];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38467,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39535,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39533 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39535,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[863],t2);}

/* k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38467,2,t0,t1);}
t2=lf[805];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38470,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39527,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39525 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39527,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[862],t2);}

/* k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38470,2,t0,t1);}
t2=lf[806];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38473,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39519,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39517 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39519,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[861],t2);}

/* k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38473,2,t0,t1);}
t2=lf[807];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38476,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39511,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39509 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39511,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[860],t2);}

/* k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38476,2,t0,t1);}
t2=lf[808];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38479,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39503,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39501 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39503,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[859],t2);}

/* k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38479,2,t0,t1);}
t2=lf[809];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38482,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39495,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39493 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39495,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[858],t2);}

/* k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38482,2,t0,t1);}
t2=lf[810];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38485,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39487,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39485 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39487,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[857],t2);}

/* k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38485,2,t0,t1);}
t2=lf[811];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38488,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39479,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39477 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39479,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[856],t2);}

/* k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38488,2,t0,t1);}
t2=lf[812];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38491,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39471,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39469 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39471,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[855],t2);}

/* k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38491,2,t0,t1);}
t2=lf[813];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38494,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39463,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39461 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39463,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[854],t2);}

/* k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38494,2,t0,t1);}
t2=lf[814];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38497,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39455,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39453 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39455,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[853],t2);}

/* k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38497,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38500,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39447,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39445 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39447,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[852],t2);}

/* k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38500,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38503,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39439,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39437 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39439,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[851],t2);}

/* k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38503,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38506,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39431,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39429 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39431,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[850],t2);}

/* k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38506,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38509,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39423,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39421 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39423,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[849],t2);}

/* k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38509,2,t0,t1);}
t2=lf[815];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38512,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39415,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39413 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39415,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[848],t2);}

/* k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38512,2,t0,t1);}
t2=lf[816];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38515,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39407,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_37987(t4,t2);}

/* k39405 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39407,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[787],"*messages*"),lf[847],t2);}

/* k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38515,2,t0,t1);}
t2=C_mutate(&lf[817],lf[818]);
t3=C_mutate(&lf[819],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38518,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38589,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39338,a[2]=t9,a[3]=t4,a[4]=t6,a[5]=((C_word)li520),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_39338(t11,t7,C_retrieve2(lf[298],"*loop-operators*"));}

/* do6549 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39338(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39338,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[819],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[819],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39366,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[244]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[112]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[249]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[232]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[233]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[236]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[237]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[271]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[272]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[273]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[263]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[267]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[266]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_39366(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_39366(t11,t10);}}}

/* k39364 in do6549 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39338(t3,((C_word*)t0)[2],t2);}

/* k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38589,2,t0,t1);}
t2=C_mutate(&lf[822],t1);
t3=C_mutate(&lf[823],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38591,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[824]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38866,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[832]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39236,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[833]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39242,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[834]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39248,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[835]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39254,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[836]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39260,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[838]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39318,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[668]+1,*((C_word*)lf[840]+1));
t12=C_mutate((C_word*)lf[1]+1,*((C_word*)lf[841]+1));
t13=C_mutate((C_word*)lf[330]+1,*((C_word*)lf[842]+1));
t14=C_mutate((C_word*)lf[843]+1,*((C_word*)lf[844]+1));
t15=C_mutate((C_word*)lf[329]+1,*((C_word*)lf[845]+1));
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39336,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 93   return-to-host");
t17=C_retrieve(lf[846]);
((C_proc2)C_retrieve_proc(t17))(2,t17,t16);}

/* k39334 in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39318,2,t0,t1);}
C_trace("ChickenBridge.scm: 21   ffi_sched_hush");
t2=C_retrieve(lf[839]);
((C_proc2)C_retrieve_proc(t2))(2,t2,t1);}

/* stop in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39260(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_39260r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39260r(t0,t1,t2);}}

static void C_ccall f_39260r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39264,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 21   ffi_sched_stop");
f_7181(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39278,a[2]=t5,a[3]=((C_word)li517),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_39278(t7,t3,t2);}}

/* do6633 in stop in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39278(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39278,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39288,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   ffi_sched_stop");
f_7181(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[837],t5);}}}

/* k39286 in do6633 in stop in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39278(t3,((C_word*)t0)[2],t2);}

/* k39262 in stop in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* continue in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39254,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub256(C_SCHEME_UNDEFINED));}

/* paused? in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39248,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub252(C_SCHEME_UNDEFINED));}

/* pause in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39242,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub254(C_SCHEME_UNDEFINED));}

/* now in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39236,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub241(t2));}

/* sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38866(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+27)){
C_save_and_reclaim((void*)tr3r,(void*)f_38866r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38866r(t0,t1,t2,t3);}}

static void C_ccall f_38866r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(27);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(-1);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(C_word)C_i_closurep(t2);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38873,a[2]=t4,a[3]=t10,a[4]=t2,a[5]=t1,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(t11)){
t13=t12;
f_38873(2,t13,t11);}
else{
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39189,a[2]=t2,a[3]=t12,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39203,a[2]=t2,a[3]=t15,a[4]=((C_word)li511),tmp=(C_word)a,a+=5,tmp));
t17=((C_word*)t15)[1];
f_39203(t17,t13,t2);}
else{
t14=t13;
f_39189(2,t14,C_SCHEME_FALSE);}}}

/* do6582 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39203(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39203,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39213,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_39213(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 21   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[831],((C_word*)t0)[2]);}}}

/* k39211 in do6582 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39203(t3,((C_word*)t0)[2],t2);}

/* k39187 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_38873(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[830],((C_word*)t0)[2]);}}

/* k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39127,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=t4,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word)li510),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_39127(t6,t2,((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do6587 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39127(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39127,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nullp(t2);
t5=(C_truep(t4)?t4:((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t5)){
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39141,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t7))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[6])+1,t8);
t10=t6;
f_39141(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t6;
f_39141(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[2])+1,t8);
t10=t6;
f_39141(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 21   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,lf[829],((C_word*)((C_word*)t0)[5])[1]);}}}}}

/* k39139 in do6587 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39141,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_39127(t4,((C_word*)t0)[2],t2,t3);}

/* k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38876,2,t0,t1);}
t2=(C_word)C_i_numberp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?(C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[7])[1],C_fix(0)):C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t3)){
t5=t4;
f_38882(2,t5,t3);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39060,a[2]=((C_word*)t0)[7],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39074,a[2]=t7,a[3]=((C_word)li509),tmp=(C_word)a,a+=4,tmp));
t9=((C_word*)t7)[1];
f_39074(t9,t5,((C_word*)((C_word*)t0)[7])[1]);}
else{
t6=t5;
f_39060(2,t6,C_SCHEME_FALSE);}}}

/* do6599 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39074(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39074,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39084,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_numberp(t4);
t6=(C_word)C_i_not(t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39097,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t8=t7;
f_39097(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_39097(t9,(C_word)C_i_lessp(t8,C_fix(0)));}}}

/* k39095 in do6599 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39097(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 21   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[828],t2);}
else{
t2=((C_word*)t0)[2];
f_39084(2,t2,C_SCHEME_UNDEFINED);}}

/* k39082 in do6599 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39074(t3,((C_word*)t0)[2],t2);}

/* k39058 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_38882(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[827],((C_word*)((C_word*)t0)[2])[1]);}}

/* k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38882,2,t0,t1);}
t2=(C_word)C_i_integerp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38888,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_38888(2,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39008,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39022,a[2]=t6,a[3]=((C_word)li508),tmp=(C_word)a,a+=4,tmp));
t8=((C_word*)t6)[1];
f_39022(t8,t4,((C_word*)((C_word*)t0)[7])[1]);}
else{
t5=t4;
f_39008(2,t5,C_SCHEME_FALSE);}}}

/* do6610 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_39022(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39022,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39032,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t4))){
t5=t3;
f_39032(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[826],t5);}}}

/* k39030 in do6610 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39022(t3,((C_word*)t0)[2],t2);}

/* k39006 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_38888(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[825],((C_word*)((C_word*)t0)[2])[1]);}}

/* k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38891,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39005,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[715],"open-file"),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_38891(t3,C_SCHEME_UNDEFINED);}}

/* k39003 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38891(t3,t2);}

/* k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38891,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38892,a[2]=((C_word*)t0)[5],a[3]=((C_word)li505),tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38920,a[2]=((C_word*)t0)[4],a[3]=((C_word)li506),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38950,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38961,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word)li507),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_38961(t8,t4,((C_word*)t0)[2]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38997,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextstart");
t6=t2;
f_38892(t6,t5);}}

/* k38995 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39001,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextid");
t3=((C_word*)t0)[2];
f_38920(t3,t2);}

/* k38999 in k38995 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_39001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   ffi_sched_sprout");
f_7161(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do6621 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38961(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38961,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38971,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38986,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextstart");
t6=((C_word*)t0)[2];
f_38892(t6,t5);}}

/* k38984 in do6621 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38990,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextid");
t3=((C_word*)t0)[2];
f_38920(t3,t2);}

/* k38988 in k38984 in do6621 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   ffi_sched_sprout");
f_7161(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38969 in do6621 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38961(t3,((C_word*)t0)[2],t2);}

/* k38948 in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* nextid in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38920(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38920,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in k38889 in k38886 in k38880 in k38874 in k38871 in sprout in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38892,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* process-code-terminates? in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38591(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_38591,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38607,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_equalp(t2,t4));}}}

/* k38605 in process-code-terminates? in k38587 in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
f_38591(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38518(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38518,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38529,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 21   loop-error");
f_8765(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[820],t7,lf[821]));}
else{
t13=t12;
f_38529(2,t13,C_SCHEME_UNDEFINED);}}

/* k38527 in run-while-until in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[266]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_38532(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[267]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[178],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_38532(t10,t9);}
else{
t5=t2;
f_38532(t5,C_SCHEME_UNDEFINED);}}}

/* k38530 in k38527 in run-while-until in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38532,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38539,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[817],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 21   make-loop-clause");
f_8525(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[107],t4));}

/* k38537 in k38530 in k38527 in run-while-until in k38513 in k38510 in k38507 in k38504 in k38501 in k38498 in k38495 in k38492 in k38489 in k38486 in k38483 in k38480 in k38477 in k38474 in k38471 in k38468 in k38465 in k38462 in k38459 in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37987(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37987,NULL,2,t1,t2);}
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37991,a[2]=t12,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38320,a[2]=t4,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t8,a[7]=t15,a[8]=((C_word)li501),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_38320(t17,t13,t2,C_SCHEME_FALSE);}

/* do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_38320(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38320,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38330,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[7],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38340,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t5,a[8]=t4,a[9]=t2,tmp=(C_word)a,a+=10,tmp);
t7=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   keyword?");
t8=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38340,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_truep((C_word)C_i_equalp(t2,lf[796]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[737]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[797]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[798]))?C_SCHEME_TRUE:C_SCHEME_FALSE)))))){
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=((C_word*)t0)[7];
f_38330(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[799],((C_word*)((C_word*)t0)[8])[1]);}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[737]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38366,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_word)C_i_pairp(t3))){
C_trace("ChickenBridge.scm: 20   caar");
t4=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,((C_word*)t0)[9]);}
else{
t4=t2;
f_38366(2,t4,(C_word)C_i_car(((C_word*)t0)[9]));}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[797]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38405,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38409,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 20   symbol->string");
t5=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[800]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[7];
f_38330(2,t5,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[798]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[7];
f_38330(2,t4,t3);}
else{
t2=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[801],((C_word*)((C_word*)t0)[8])[1]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[7];
f_38330(2,t6,t5);}}}}}}}

/* k38407 in k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38403 in k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38405,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38330(2,t4,t3);}

/* k38364 in k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38378,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 20   symbol->string");
t4=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k38376 in k38364 in k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38372 in k38364 in k38338 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38374,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38330(2,t4,t3);}

/* k38328 in do6372 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_38320(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[7])[1]);}

/* k37993 in k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37995,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k37997 in k37993 in k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37999,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k38001 in k37997 in k37993 in k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38003,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38007,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k38005 in k38001 in k37997 in k37993 in k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38007,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38008,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word)li500),tmp=(C_word)a,a+=8,tmp));}

/* f_38008 in k38005 in k38001 in k37997 in k37993 in k37989 in make-message-parser in k37909 in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_38008(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38008,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t3,a[8]=((C_word)li499),tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 20   call-with-current-continuation");
t5=*((C_word*)lf[795]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* a38013 */
static void C_ccall f_38014(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38014,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[7])[1];
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=t2,a[8]=t1,a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 20   return");
t5=t2;
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_TRUE);}
else{
t5=t4;
f_38018(2,t5,C_SCHEME_UNDEFINED);}}

/* k38016 in a38013 */
static void C_ccall f_38018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38247,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t4,a[7]=((C_word*)t0)[9],a[8]=((C_word)li498),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_38247(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do6383 in k38016 in a38013 */
static void C_fcall f_38247(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38247,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38257,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38278,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t5=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[793],((C_word*)t0)[4]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38284,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38294,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t7=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}}

/* k38292 in do6383 in k38016 in a38013 */
static void C_ccall f_38294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_member(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=((C_word*)t0)[3];
f_38284(t4,t3);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=((C_word*)t0)[3];
f_38284(t5,(C_word)C_i_member(t4,((C_word*)((C_word*)t0)[2])[1]));}}
else{
t2=((C_word*)t0)[3];
f_38284(t2,C_SCHEME_FALSE);}}

/* k38282 in do6383 in k38016 in a38013 */
static void C_fcall f_38284(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38284,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[794],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_38257(2,t2,C_SCHEME_UNDEFINED);}}

/* k38289 in k38282 in do6383 in k38016 in a38013 */
static void C_ccall f_38291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38276 in do6383 in k38016 in a38013 */
static void C_ccall f_38278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38255 in do6383 in k38016 in a38013 */
static void C_ccall f_38257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_38247(t5,((C_word*)t0)[2],t4);}

/* k38019 in k38016 in a38013 */
static void C_ccall f_38021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38024,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38202,a[2]=t2,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t3;
f_38202(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_38202(t5,(C_word)C_i_not(t4));}}

/* k38200 in k38019 in k38016 in a38013 */
static void C_fcall f_38202(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38202,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38207,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li497),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38207(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_38024(2,t2,C_SCHEME_UNDEFINED);}}

/* do6391 in k38200 in k38019 in k38016 in a38013 */
static void C_fcall f_38207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38207,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_38217(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t5=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k38215 in do6391 in k38200 in k38019 in k38016 in a38013 */
static void C_ccall f_38217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_38207(t4,((C_word*)t0)[4]);}}

/* k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38156,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=t3;
f_38156(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_38156(t5,(C_word)C_i_not(t4));}}

/* k38154 in k38022 in k38019 in k38016 in a38013 */
static void C_fcall f_38156(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38156,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38161,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li496),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38161(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_38027(2,t2,C_SCHEME_UNDEFINED);}}

/* do6397 in k38154 in k38022 in k38019 in k38016 in a38013 */
static void C_fcall f_38161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38161,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_38171(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t5=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k38169 in do6397 in k38154 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_38161(t4,((C_word*)t0)[4]);}}

/* k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38030,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38053,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_38053(t6,t4);}
else{
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t7=t5;
f_38053(t7,(C_word)C_i_not(t6));}}

/* k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_fcall f_38053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38053,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?((C_word*)((C_word*)t0)[6])[1]:((C_word*)((C_word*)t0)[7])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li495),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_38062(t7,((C_word*)t0)[2],t3);}
else{
t2=((C_word*)t0)[2];
f_38030(2,t2,C_SCHEME_UNDEFINED);}}

/* do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_fcall f_38062(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38062,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38072,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38078,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38078,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
if(C_truep((C_word)C_i_member(t3,((C_word*)t0)[2]))){
t4=t2;
f_38081(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38112,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 20   format");
t6=C_retrieve(lf[407]);
((C_proc6)C_retrieve_proc(t6))(6,t6,t4,C_SCHEME_FALSE,lf[791],t5,((C_word*)t0)[3]);}}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38131,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 20   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[792],t3);}}

/* k38129 in k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38110 in k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38079 in k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38081,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38088,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38102,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_SCHEME_FALSE,lf[790],((C_word*)t0)[2]);}
else{
t5=t4;
f_38088(2,t5,C_SCHEME_UNDEFINED);}}

/* k38100 in k38079 in k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38086 in k38079 in k38076 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38072(2,t4,t3);}

/* k38070 in do6405 in k38051 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_38062(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38028 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38030,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38043,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[789],((C_word*)t0)[2]);}}

/* k38041 in k38028 in k38025 in k38022 in k38019 in k38016 in a38013 */
static void C_ccall f_38043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37796(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_37796r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37796r(t0,t1,t2,t3);}}

static void C_ccall f_37796r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37801,a[2]=t5,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   full-pathname");
f_24278(t6,((C_word*)t4)[1]);}

/* k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37801,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=lf[769]=C_SCHEME_FALSE;;
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37805,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   pathname-type");
f_24236(t4,((C_word*)((C_word*)t0)[4])[1]);}

/* k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37808,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37856,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8169(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],lf[782]);}

/* k37854 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37856,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37808(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37848,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37852,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[781]))){
t5=t3;
f_37852(t5,(C_word)C_a_i_list(&a,2,lf[782],C_retrieve(lf[783])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[784]))){
t5=t3;
f_37852(t5,(C_word)C_a_i_list(&a,2,lf[782],C_retrieve(lf[785])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[786]);
t6=t3;
f_37852(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[782],C_retrieve(lf[783])):C_SCHEME_END_OF_LIST));}}}}

/* k37850 in k37854 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37852(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37846 in k37854 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37808(t3,t2);}

/* k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8169(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],lf[775]);}

/* k37839 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37841,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37811(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37833,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37837,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[774]))){
t5=t3;
f_37837(t5,(C_word)C_a_i_list(&a,2,lf[775],C_retrieve(lf[776])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[777]))){
t5=t3;
f_37837(t5,(C_word)C_a_i_list(&a,2,lf[775],C_retrieve(lf[778])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[779]);
t6=t3;
f_37837(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[775],C_retrieve(lf[780])):C_SCHEME_END_OF_LIST));}}}}

/* k37835 in k37839 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37831 in k37839 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37811(t3,t2);}

/* k37809 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37811,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_apply(6,0,t2,C_retrieve(lf[772]),lf[773],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);}

/* k37812 in k37809 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37818,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37826,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8169(5,t4,t3,((C_word*)((C_word*)t0)[2])[1],lf[770],C_retrieve(lf[771]));}

/* k37824 in k37812 in k37809 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37826,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 20   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k37816 in k37812 in k37809 in k37806 in k37803 in k37799 in snd:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[769],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_retrieve2(lf[769],"*sndfileinfo*"));}

/* mp:mm in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37723(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37723,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[768]);}

/* mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37614(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_37614r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37614r(t0,t1,t2);}}

static void C_ccall f_37614r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37618,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 20   error");
t6=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[765]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37633,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_37633(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_37633(t8,C_SCHEME_FALSE);}}}

/* k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37633(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37633,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_37618(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_37640(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_37640(t4,C_SCHEME_FALSE);}}}

/* k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37640(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37640,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_37618(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37646,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li491),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37646(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6337 in k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37646(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37646,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37656,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37666,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   <=");
C_less_or_equal_p(5,0,t4,C_fix(8),t5,C_fix(14));}}

/* k37664 in do6337 in k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37666,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37674,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=(C_word)C_a_i_minus(&a,2,t4,C_fix(8));
C_trace("ChickenBridge.scm: 20   ash");
t6=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,C_fix(1),t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[766],t2);}}

/* k37672 in k37664 in do6337 in k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37668 in k37664 in do6337 in k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37656(2,t3,t2);}

/* k37654 in do6337 in k37638 in k37631 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37646(t3,((C_word*)t0)[2],t2);}

/* k37616 in mp:intypes in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub392(C_SCHEME_UNDEFINED,t4));}

/* mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37509(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_37509r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37509r(t0,t1,t2);}}

static void C_ccall f_37509r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37513,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 20   error");
t6=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[762]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37528,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_37528(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_37528(t8,C_SCHEME_FALSE);}}}

/* k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37528,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_37513(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_37535(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_37535(t4,C_SCHEME_FALSE);}}}

/* k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37535,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_37513(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37541,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li489),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37541(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6329 in k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37541(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37541,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37551,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37561,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k37559 in do6329 in k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37561,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37569,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   ash");
t5=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,C_fix(1),t4);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[763],t2);}}

/* k37567 in k37559 in do6329 in k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37563 in k37559 in do6329 in k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37551(2,t3,t2);}

/* k37549 in do6329 in k37533 in k37526 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37541(t3,((C_word*)t0)[2],t2);}

/* k37511 in mp:inchans in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub388(C_SCHEME_UNDEFINED,t4));}

/* mp:inhook in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37503(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37503,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[760]);}

/* mp:recordseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37488(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_37488r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_37488r(t0,t1,t2);}}

static void C_ccall f_37488r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
C_trace("ChickenBridge.scm: 20   ffi_mp_set_record_seq");
t5=C_retrieve(lf[758]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* mp:clearseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37482,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub407(C_SCHEME_UNDEFINED));}

/* mp:plotseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37476,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub405(C_SCHEME_UNDEFINED));}

/* mp:copyseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37470,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub403(C_SCHEME_UNDEFINED));}

/* mp:saveseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37464,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub401(C_SCHEME_UNDEFINED));}

/* mp:playseq in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37458,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub399(C_SCHEME_UNDEFINED));}

/* mp:tuning in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37428(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2rv,(void*)f_37428r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_37428r(t0,t1,t2);}}

static void C_ccall f_37428r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37438,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 20   <");
C_lessp(5,0,t5,C_fix(0),t4,C_fix(17));}
else{
t6=t5;
f_37438(2,t6,C_SCHEME_FALSE);}}

/* k37436 in mp:tuning in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[2]);
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub396(C_SCHEME_UNDEFINED,t3));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[751],((C_word*)t0)[2]);}}

/* mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36999(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_36999r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36999r(t0,t1,t2);}}

static void C_ccall f_36999r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37003,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37003(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[735]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37306,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[735]);}
else{
t23=t22;
f_37306(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[744]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37341,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[744]);}
else{
t24=t23;
f_37341(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[739]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37376,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[739]);}
else{
t25=t24;
f_37376(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37405,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_37405(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37403 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37405,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37420,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37418 in k37403 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37412(2,t2,C_SCHEME_UNDEFINED);}}

/* k37410 in k37403 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37003(t5,t4);}

/* k37374 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37380(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37378 in k37374 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37003(t7,t6);}

/* k37339 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37345(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37343 in k37339 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37003(t7,t6);}

/* k37304 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37310(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37308 in k37304 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37003(t7,t6);}

/* k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37006(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37171,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_37171(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37206,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_37206(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37241,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_37241(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37270,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_37270(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37268 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37270,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37285,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37283 in k37268 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37277(2,t2,C_SCHEME_UNDEFINED);}}

/* k37275 in k37268 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37006(t5,t4);}

/* k37239 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37245(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37243 in k37239 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37006(t7,t6);}

/* k37204 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37208 in k37204 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37006(t7,t6);}

/* k37169 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37173 in k37169 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37006(t7,t6);}

/* k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37009,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37009(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37036,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_37036(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37071,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_37071(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37106,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_37106(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37135,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_37135(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37133 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37135,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37150,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37148 in k37133 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37142(2,t2,C_SCHEME_UNDEFINED);}}

/* k37140 in k37133 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37009(t5,t4);}

/* k37104 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37110(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37108 in k37104 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37009(t7,t6);}

/* k37069 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37073 in k37069 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37009(t7,t6);}

/* k37034 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37038 in k37034 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37009(t7,t6);}

/* k37007 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_37009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37009,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37012,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37012(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k37010 in k37007 in k37004 in k37001 in mp:bend in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_37012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36570(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_36570r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36570r(t0,t1,t2);}}

static void C_ccall f_36570r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36574,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_36574(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[735]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36877,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[735]);}
else{
t23=t22;
f_36877(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[744]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36912,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[744]);}
else{
t24=t23;
f_36912(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[739]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36947,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[739]);}
else{
t25=t24;
f_36947(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36976,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_36976(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k36974 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36976,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36991,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36989 in k36974 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36983(2,t2,C_SCHEME_UNDEFINED);}}

/* k36981 in k36974 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36574(t5,t4);}

/* k36945 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36951(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36949 in k36945 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36574(t7,t6);}

/* k36910 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36916,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36916(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36914 in k36910 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36574(t7,t6);}

/* k36875 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36881(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36879 in k36875 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36574(t7,t6);}

/* k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36574,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36577(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36742,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_36742(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36777,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_36777(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36812,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_36812(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36841,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36841(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36839 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36841,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36848,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36856,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36854 in k36839 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36848(2,t2,C_SCHEME_UNDEFINED);}}

/* k36846 in k36839 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36577(t5,t4);}

/* k36810 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36814 in k36810 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36577(t7,t6);}

/* k36775 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36781,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36781(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36779 in k36775 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36577(t7,t6);}

/* k36740 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36746(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36744 in k36740 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36577(t7,t6);}

/* k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36577(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36577,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36580,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36580(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36607,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_36607(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36642,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_36642(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36677,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_36677(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36706,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36706(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36704 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36706,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36721,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36719 in k36704 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36713(2,t2,C_SCHEME_UNDEFINED);}}

/* k36711 in k36704 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36580(t5,t4);}

/* k36675 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36681(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36679 in k36675 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36580(t7,t6);}

/* k36640 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36646(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36644 in k36640 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36580(t7,t6);}

/* k36605 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36611(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36609 in k36605 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36580(t7,t6);}

/* k36578 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36580(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36580,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36583,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36583(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k36581 in k36578 in k36575 in k36572 in mp:press in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36141(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_36141r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36141r(t0,t1,t2);}}

static void C_ccall f_36141r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36145,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_36145(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[735]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36448,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[735]);}
else{
t23=t22;
f_36448(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[744]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36483,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[744]);}
else{
t24=t23;
f_36483(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[739]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36518,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[739]);}
else{
t25=t24;
f_36518(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36547,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_36547(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k36545 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36547,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36562,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36560 in k36545 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36554(2,t2,C_SCHEME_UNDEFINED);}}

/* k36552 in k36545 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36145(t5,t4);}

/* k36516 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36522(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36520 in k36516 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36145(t7,t6);}

/* k36481 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36485 in k36481 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36145(t7,t6);}

/* k36446 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36450 in k36446 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36145(t7,t6);}

/* k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36148(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36313,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_36313(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36348,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_36348(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36383,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_36383(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36412,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36412(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36410 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36412,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36419,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36427,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36425 in k36410 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36419(2,t2,C_SCHEME_UNDEFINED);}}

/* k36417 in k36410 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36148(t5,t4);}

/* k36381 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36387,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36387(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36385 in k36381 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36148(t7,t6);}

/* k36346 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36350 in k36346 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36148(t7,t6);}

/* k36311 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36317(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36315 in k36311 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36148(t7,t6);}

/* k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36151,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36151(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36178,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_36178(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[744]);}
else{
t7=t6;
f_36213(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36248,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_36248(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36277,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36277(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36275 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36277,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36292,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36290 in k36275 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36284(2,t2,C_SCHEME_UNDEFINED);}}

/* k36282 in k36275 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36151(t5,t4);}

/* k36246 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36252(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36250 in k36246 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36151(t7,t6);}

/* k36211 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36215 in k36211 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36151(t7,t6);}

/* k36176 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36180 in k36176 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36151(t7,t6);}

/* k36149 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_36151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36154,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36154(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k36152 in k36149 in k36146 in k36143 in mp:prog in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35434(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35434r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35434r(t0,t1,t2);}}

static void C_ccall f_35434r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35438,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35438(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[735]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35984,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[735]);}
else{
t27=t26;
f_35984(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[746]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36019,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[746]);}
else{
t28=t27;
f_36019(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[744]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36054,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[744]);}
else{
t29=t28;
f_36054(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[739]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36089,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[739]);}
else{
t30=t29;
f_36089(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36118,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_36118(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36116 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36118,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36133,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36131 in k36116 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36125(2,t2,C_SCHEME_UNDEFINED);}}

/* k36123 in k36116 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35438(t5,t4);}

/* k36087 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36093,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36093(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36091 in k36087 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35438(t7,t6);}

/* k36052 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36058(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36056 in k36052 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35438(t7,t6);}

/* k36017 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36023(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36021 in k36017 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_36023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35438(t7,t6);}

/* k35982 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35988(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35986 in k35982 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35438(t7,t6);}

/* k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_35438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35438,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35441(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35814,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_35814(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35849,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_35849(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35884,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_35884(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35919,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_35919(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35948,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35948(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35946 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35948,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35963,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35961 in k35946 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35955(2,t2,C_SCHEME_UNDEFINED);}}

/* k35953 in k35946 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35441(t5,t4);}

/* k35917 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35921 in k35917 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35441(t7,t6);}

/* k35882 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35886 in k35882 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35441(t7,t6);}

/* k35847 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35853(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35851 in k35847 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35441(t7,t6);}

/* k35812 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35818(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35816 in k35812 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35441(t7,t6);}

/* k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_35441(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35441,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35444(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35644,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_35644(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35679,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_35679(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35714,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_35714(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35749,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_35749(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35778,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35778(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35776 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35778,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35793,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35791 in k35776 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35785(2,t2,C_SCHEME_UNDEFINED);}}

/* k35783 in k35776 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35444(t5,t4);}

/* k35747 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35751 in k35747 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35444(t7,t6);}

/* k35712 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35718,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35718(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35716 in k35712 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35444(t7,t6);}

/* k35677 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35683,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35683(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35681 in k35677 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35444(t7,t6);}

/* k35642 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35644,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35648,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35648(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35646 in k35642 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35444(t7,t6);}

/* k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_35444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35447,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35447(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35474,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_35474(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35509,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_35509(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35544,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_35544(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35579,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_35579(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35608,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35608(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35606 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35608,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35623,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35621 in k35606 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35615(2,t2,C_SCHEME_UNDEFINED);}}

/* k35613 in k35606 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35447(t5,t4);}

/* k35577 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35583,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35583(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35581 in k35577 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35447(t7,t6);}

/* k35542 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35548,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35548(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35546 in k35542 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35447(t7,t6);}

/* k35507 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35513,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35513(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35511 in k35507 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35447(t7,t6);}

/* k35472 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35478(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35476 in k35472 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35447(t7,t6);}

/* k35445 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_35447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35447,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35450,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35450(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k35448 in k35445 in k35442 in k35439 in k35436 in mp:ctrl in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34727(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34727r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34727r(t0,t1,t2);}}

static void C_ccall f_34727r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34731,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34731(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[735]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35277,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[735]);}
else{
t27=t26;
f_35277(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35312,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[737]);}
else{
t28=t27;
f_35312(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[744]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35347,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[744]);}
else{
t29=t28;
f_35347(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[739]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35382,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[739]);}
else{
t30=t29;
f_35382(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35411,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_35411(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k35409 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35411,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35426,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35424 in k35409 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35418(2,t2,C_SCHEME_UNDEFINED);}}

/* k35416 in k35409 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34731(t5,t4);}

/* k35380 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35386(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35384 in k35380 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34731(t7,t6);}

/* k35345 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35349 in k35345 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34731(t7,t6);}

/* k35310 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35316(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35314 in k35310 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34731(t7,t6);}

/* k35275 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35281(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35279 in k35275 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34731(t7,t6);}

/* k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34731,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34734(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35107,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_35107(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35142,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_35142(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35177,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_35177(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35212,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_35212(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35241,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35241(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35239 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35241,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35256,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35254 in k35239 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35248(2,t2,C_SCHEME_UNDEFINED);}}

/* k35246 in k35239 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34734(t5,t4);}

/* k35210 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35216(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35214 in k35210 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34734(t7,t6);}

/* k35175 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35181,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35181(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35179 in k35175 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34734(t7,t6);}

/* k35140 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35146(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35144 in k35140 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34734(t7,t6);}

/* k35105 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35111(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35109 in k35105 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34734(t7,t6);}

/* k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34734,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34737(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34937,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_34937(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34972,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_34972(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35007,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_35007(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35042,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_35042(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35071,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35071(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35069 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35071,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35086,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35084 in k35069 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35078(2,t2,C_SCHEME_UNDEFINED);}}

/* k35076 in k35069 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34737(t5,t4);}

/* k35040 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35046(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35044 in k35040 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34737(t7,t6);}

/* k35005 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35011,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35011(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35009 in k35005 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_35011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34737(t7,t6);}

/* k34970 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34976,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34976(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34974 in k34970 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34737(t7,t6);}

/* k34935 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34941(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34939 in k34935 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34737(t7,t6);}

/* k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34737,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34740,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34740(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34767,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_34767(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34802,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_34802(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34837,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_34837(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34872,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_34872(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34901,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34901(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34899 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34901,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34916,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34914 in k34899 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34908(2,t2,C_SCHEME_UNDEFINED);}}

/* k34906 in k34899 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34740(t5,t4);}

/* k34870 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34876(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34874 in k34870 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34740(t7,t6);}

/* k34835 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34841(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34839 in k34835 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34740(t7,t6);}

/* k34800 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34806,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34806(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34804 in k34800 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34740(t7,t6);}

/* k34765 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34769 in k34765 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34740(t7,t6);}

/* k34738 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34740(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34740,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34743,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34743(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k34741 in k34738 in k34735 in k34732 in k34729 in mp:touch in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34020(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34020r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34020r(t0,t1,t2);}}

static void C_ccall f_34020r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34024,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34024(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[735]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34570,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[735]);}
else{
t27=t26;
f_34570(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34605,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[737]);}
else{
t28=t27;
f_34605(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[742]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34640,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[742]);}
else{
t29=t28;
f_34640(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[739]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34675,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[739]);}
else{
t30=t29;
f_34675(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34704,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_34704(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k34702 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34704,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34719,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34717 in k34702 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34711(2,t2,C_SCHEME_UNDEFINED);}}

/* k34709 in k34702 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34024(t5,t4);}

/* k34673 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34679(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34677 in k34673 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34024(t7,t6);}

/* k34638 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34642 in k34638 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34024(t7,t6);}

/* k34603 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34609(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34607 in k34603 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34024(t7,t6);}

/* k34568 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34574(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34572 in k34568 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34024(t7,t6);}

/* k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34024(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34024,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34027(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34400,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_34400(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34435,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_34435(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[742]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34470,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[742]);}
else{
t8=t7;
f_34470(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34505,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_34505(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34534,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34534(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34532 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34534,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34549,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34547 in k34532 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34541(2,t2,C_SCHEME_UNDEFINED);}}

/* k34539 in k34532 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34027(t5,t4);}

/* k34503 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34507 in k34503 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34027(t7,t6);}

/* k34468 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34472 in k34468 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34027(t7,t6);}

/* k34433 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34439(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34437 in k34433 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34027(t7,t6);}

/* k34398 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34404(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34402 in k34398 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34027(t7,t6);}

/* k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34027,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34030(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34230,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_34230(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34265,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_34265(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[742]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34300,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[742]);}
else{
t8=t7;
f_34300(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34335,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_34335(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34364,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34364(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34362 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34364,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34379,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34377 in k34362 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34371(2,t2,C_SCHEME_UNDEFINED);}}

/* k34369 in k34362 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34030(t5,t4);}

/* k34333 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34337 in k34333 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34030(t7,t6);}

/* k34298 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34304(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34302 in k34298 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34030(t7,t6);}

/* k34263 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34269(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34267 in k34263 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34030(t7,t6);}

/* k34228 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34232 in k34228 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34030(t7,t6);}

/* k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34030(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34030,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34033,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34033(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34060,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_34060(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34095,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_34095(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[742]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34130,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[742]);}
else{
t8=t7;
f_34130(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34165,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[739]);}
else{
t9=t8;
f_34165(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34194,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34194(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34192 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34194,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34209,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34207 in k34192 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34201(2,t2,C_SCHEME_UNDEFINED);}}

/* k34199 in k34192 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34033(t5,t4);}

/* k34163 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34167 in k34163 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34033(t7,t6);}

/* k34128 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34134(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34132 in k34128 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34033(t7,t6);}

/* k34093 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34099(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34097 in k34093 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34033(t7,t6);}

/* k34058 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34064(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34062 in k34058 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34033(t7,t6);}

/* k34031 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_34033(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34033,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34036,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34036(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k34034 in k34031 in k34028 in k34025 in k34022 in mp:on in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33591(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33591r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33591r(t0,t1,t2);}}

static void C_ccall f_33591r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33595,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33595(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[735]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33898,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[735]);}
else{
t23=t22;
f_33898(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33933,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[737]);}
else{
t24=t23;
f_33933(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[739]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33968,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[739]);}
else{
t25=t24;
f_33968(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33997,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_33997(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33995 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33997,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34012,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34010 in k33995 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34004(2,t2,C_SCHEME_UNDEFINED);}}

/* k34002 in k33995 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_34004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33595(t5,t4);}

/* k33966 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33972(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33970 in k33966 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33595(t7,t6);}

/* k33931 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33935 in k33931 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33595(t7,t6);}

/* k33896 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33900 in k33896 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33595(t7,t6);}

/* k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_33595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33595,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33598(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33763,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_33763(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33798,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_33798(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33833,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_33833(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33862,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_33862(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33860 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33862,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33877,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33875 in k33860 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33869(2,t2,C_SCHEME_UNDEFINED);}}

/* k33867 in k33860 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33598(t5,t4);}

/* k33831 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33835 in k33831 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33598(t7,t6);}

/* k33796 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33800 in k33796 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33598(t7,t6);}

/* k33761 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33765 in k33761 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33598(t7,t6);}

/* k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_33598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33598,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33601,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33601(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_33628(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33663,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[737]);}
else{
t7=t6;
f_33663(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33698,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_33698(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33727,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_33727(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33725 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33727,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33742,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33740 in k33725 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33734(2,t2,C_SCHEME_UNDEFINED);}}

/* k33732 in k33725 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33601(t5,t4);}

/* k33696 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33702(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33700 in k33696 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33601(t7,t6);}

/* k33661 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33665 in k33661 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33601(t7,t6);}

/* k33626 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33630 in k33626 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33601(t7,t6);}

/* k33599 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_33601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33601,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33604,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33604(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k33602 in k33599 in k33596 in k33593 in mp:off in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7424(((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32536(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+86)){
C_save_and_reclaim((void*)tr2r,(void*)f_32536r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32536r(t0,t1,t2);}}

static void C_ccall f_32536r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word *a=C_alloc(86);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=lf[733];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(60);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[734];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t2;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32540,a[2]=t22,a[3]=t20,a[4]=t18,a[5]=t16,a[6]=t26,a[7]=t14,a[8]=t2,a[9]=t24,a[10]=t12,a[11]=t10,a[12]=t8,a[13]=t6,a[14]=t4,a[15]=t1,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_32540(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[735]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33399,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t14,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t31=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[349],lf[735]);}
else{
t31=t30;
f_33399(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[736]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33434,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t16,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[349],lf[736]);}
else{
t32=t31;
f_33434(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(C_word)C_eqp(t28,lf[737]);
if(C_truep(t31)){
t32=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33469,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t18,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t33=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t33))(4,t33,t32,lf[349],lf[737]);}
else{
t33=t32;
f_33469(2,t33,C_SCHEME_UNDEFINED);}}
else{
t32=(C_word)C_eqp(t28,lf[738]);
if(C_truep(t32)){
t33=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33504,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t34=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t34))(4,t34,t33,lf[349],lf[738]);}
else{
t34=t33;
f_33504(2,t34,C_SCHEME_UNDEFINED);}}
else{
t33=(C_word)C_eqp(t28,lf[739]);
if(C_truep(t33)){
t34=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33539,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t12,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t35=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[349],lf[739]);}
else{
t35=t34;
f_33539(2,t35,C_SCHEME_UNDEFINED);}}
else{
t34=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33568,a[2]=t27,a[3]=t14,a[4]=t4,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t35=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[353],t2);}
else{
t35=t34;
f_33568(2,t35,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33566 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33568,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33583,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33581 in k33566 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33575(2,t2,C_SCHEME_UNDEFINED);}}

/* k33573 in k33566 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32540(t5,t4);}

/* k33537 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33543,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33543(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33541 in k33537 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32540(t7,t6);}

/* k33502 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33506 in k33502 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32540(t7,t6);}

/* k33467 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33471 in k33467 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32540(t7,t6);}

/* k33432 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33436 in k33432 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32540(t7,t6);}

/* k33397 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33401 in k33397 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32540(t7,t6);}

/* k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32540,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32543(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33194,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_33194(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[736]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33229,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[736]);}
else{
t7=t6;
f_33229(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33264,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[737]);}
else{
t8=t7;
f_33264(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33299,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[738]);}
else{
t9=t8;
f_33299(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33334,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[739]);}
else{
t10=t9;
f_33334(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33363,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_33363(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33361 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33363,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33378,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33376 in k33361 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33370(2,t2,C_SCHEME_UNDEFINED);}}

/* k33368 in k33361 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32543(t5,t4);}

/* k33332 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33338(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33336 in k33332 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32543(t7,t6);}

/* k33297 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33303(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33301 in k33297 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32543(t7,t6);}

/* k33262 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33268(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33266 in k33262 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32543(t7,t6);}

/* k33227 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33233,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33233(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33231 in k33227 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32543(t7,t6);}

/* k33192 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33198(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33196 in k33192 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32543(t7,t6);}

/* k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32543,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32546,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32546(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32989,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_32989(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[736]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33024,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[736]);}
else{
t7=t6;
f_33024(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33059,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[737]);}
else{
t8=t7;
f_33059(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33094,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[738]);}
else{
t9=t8;
f_33094(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33129,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[739]);}
else{
t10=t9;
f_33129(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33158,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_33158(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33156 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33158,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33173,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33171 in k33156 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33165(2,t2,C_SCHEME_UNDEFINED);}}

/* k33163 in k33156 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32546(t5,t4);}

/* k33127 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33133(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33131 in k33127 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32546(t7,t6);}

/* k33092 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33098(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33096 in k33092 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32546(t7,t6);}

/* k33057 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33063(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33061 in k33057 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32546(t7,t6);}

/* k33022 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33028(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33026 in k33022 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_33028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32546(t7,t6);}

/* k32987 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32993,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32993(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32991 in k32987 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32546(t7,t6);}

/* k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32546,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32549(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32784,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_32784(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[736]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32819,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[736]);}
else{
t7=t6;
f_32819(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32854,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[737]);}
else{
t8=t7;
f_32854(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32889,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[738]);}
else{
t9=t8;
f_32889(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32924,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[739]);}
else{
t10=t9;
f_32924(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32953,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_32953(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k32951 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32953,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32968,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32966 in k32951 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32960(2,t2,C_SCHEME_UNDEFINED);}}

/* k32958 in k32951 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32549(t5,t4);}

/* k32922 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32928(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32926 in k32922 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32549(t7,t6);}

/* k32887 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32893(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32891 in k32887 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32549(t7,t6);}

/* k32852 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32856 in k32852 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32549(t7,t6);}

/* k32817 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32821 in k32817 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32549(t7,t6);}

/* k32782 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32786 in k32782 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32549(t7,t6);}

/* k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32549(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[56],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32549,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32552,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],a[9]=((C_word*)t0)[15],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32552(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[735]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32579,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[735]);}
else{
t6=t5;
f_32579(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[736]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32614,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[736]);}
else{
t7=t6;
f_32614(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32649,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[737]);}
else{
t8=t7;
f_32649(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32684,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[738]);}
else{
t9=t8;
f_32684(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32719,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[739]);}
else{
t10=t9;
f_32719(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32748,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_32748(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k32746 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32748,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32755,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32763,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32761 in k32746 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32755(2,t2,C_SCHEME_UNDEFINED);}}

/* k32753 in k32746 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32552(t5,t4);}

/* k32717 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32723(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32721 in k32717 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32552(t7,t6);}

/* k32682 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32688(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32686 in k32682 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32552(t7,t6);}

/* k32647 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32653(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32651 in k32647 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32552(t7,t6);}

/* k32612 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32618(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32616 in k32612 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32552(t7,t6);}

/* k32577 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32583,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32583(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32581 in k32577 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32552(t7,t6);}

/* k32550 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32555,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32555(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k32553 in k32550 in k32547 in k32544 in k32541 in k32538 in mp:midi in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a;
t2=((C_word*)t0)[7];
t3=((C_word*)((C_word*)t0)[6])[1];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=(C_word)C_i_foreign_flonum_argumentp(t7);
t13=t2;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub368(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12));}

/* mp:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32530(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32530,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7392,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7392(2,t4,C_SCHEME_FALSE);}}

/* k7390 in mp:open-output-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub358(C_SCHEME_UNDEFINED,t1));}

/* mp:open-input in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32377(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32377,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32384,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_32384(t9,(C_word)stub346(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_32384(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_32384(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_32384(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_32384(t4,C_SCHEME_FALSE);}}

/* k32382 in mp:open-input in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[731],((C_word*)t0)[2]);}}

/* mp:open-output in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32322(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32322,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32329,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_32329(t9,(C_word)stub342(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_32329(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_32329(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_32329(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_32329(t4,C_SCHEME_FALSE);}}

/* k32327 in mp:open-output in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32329(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[730],((C_word*)t0)[2]);}}

/* mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32075(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_32075r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32075r(t0,t1,t2);}}

static void C_ccall f_32075r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32079,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t1,a[8]=t6,a[9]=t4,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_32079(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[728]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32235,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[728]);}
else{
t19=t18;
f_32235(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[729]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32270,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[729]);}
else{
t20=t19;
f_32270(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32299,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[353],t2);}
else{
t20=t19;
f_32299(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k32297 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32299,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32314,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32312 in k32297 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32306(2,t2,C_SCHEME_UNDEFINED);}}

/* k32304 in k32297 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32079(t5,t4);}

/* k32268 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32274(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32272 in k32268 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32079(t7,t6);}

/* k32233 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32237 in k32233 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32079(t7,t6);}

/* k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32079(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32079,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32082,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_32082(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[728]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32135,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[728]);}
else{
t6=t5;
f_32135(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32170,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[729]);}
else{
t7=t6;
f_32170(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32199,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_32199(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k32197 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32199,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32214,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32212 in k32197 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32206(2,t2,C_SCHEME_UNDEFINED);}}

/* k32204 in k32197 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32082(t5,t4);}

/* k32168 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32174,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32174(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32172 in k32168 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32082(t7,t6);}

/* k32133 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32139(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32137 in k32133 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32082(t7,t6);}

/* k32080 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_32082(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32082,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32085,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32085(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k32083 in k32080 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32085,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[4])[1])?((C_word*)((C_word*)t0)[3])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   mp:open-output");
f_32322(t3,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 20   mp:open-output");
f_32322(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 20   mp:open-input");
f_32377(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}}}

/* k32096 in k32083 in k32080 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32102,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   mp:open-input");
f_32377(t2,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]));}

/* k32100 in k32096 in k32083 in k32080 in k32077 in mp:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32102,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,2,((C_word*)t0)[2],t1));}

/* open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32014(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_32014r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32014r(t0,t1,t2,t3);}}

static void C_ccall f_32014r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32018,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   ffi_pathname_type");
f_7275(t4,t2);}

/* k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32018,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32021,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)stub262(C_SCHEME_UNDEFINED))){
C_trace("ChickenBridge.scm: 20   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[724],((C_word*)t0)[3]);}
else{
t5=t4;
f_32021(2,t5,C_SCHEME_UNDEFINED);}}

/* k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7330,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t3)){
t5=(C_word)C_i_foreign_string_argumentp(t3);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7330(2,t5,C_SCHEME_FALSE);}}

/* k7328 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)stub327(C_SCHEME_UNDEFINED,t1))){
t2=((C_word*)t0)[3];
f_32024(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[723],((C_word*)t0)[2]);}}

/* k32022 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32027,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_string_equal_p(((C_word*)t0)[3],lf[716]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32036,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[717],"mp:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t3,lf[718]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[719]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[720]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32046,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t4,C_retrieve2(lf[721],"snd:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 20   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[722],((C_word*)t0)[4]);}}}

/* k32044 in k32022 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(2));
t3=((C_word*)t0)[2];
f_32027(2,t3,t2);}

/* k32034 in k32022 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_32027(2,t3,t2);}

/* k32025 in k32022 in k32019 in k32016 in open-file in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_32027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=(C_word)stub267(C_SCHEME_UNDEFINED,t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}

/* ports in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31990,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t4=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,(C_word)stub338(t3),C_fix(0));}

/* k31988 in ports in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   read-from-string");
f_6736(((C_word*)t0)[2],t1);}

/* sal:open in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31962(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31962,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[713]);}

/* sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31913(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31913,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31917,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=t2;
if(C_truep((C_word)C_i_stringp(t4))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7316,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t7=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}
else{
t6=t5;
f_7316(2,t6,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[711],t4);}}

/* k7314 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_31917(2,t2,(C_word)stub321(C_SCHEME_UNDEFINED,t1));}

/* k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31920,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31936,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31960,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[707],((C_word*)t0)[2],lf[708]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31933,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[709],((C_word*)t0)[2],lf[710]);}}

/* k31931 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31958 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31934 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pathname-type");
f_24236(t2,((C_word*)t0)[2]);}

/* k31954 in k31934 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31956,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(lf[704],t1))){
C_trace("ChickenBridge.scm: 19   load-sal-file");
t2=C_retrieve(lf[705]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31952,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   full-pathname");
f_24278(t2,((C_word*)t0)[2]);}}

/* k31950 in k31954 in k31934 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   load");
t2=C_retrieve(lf[706]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31918 in k31915 in sal:load in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31904(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31904,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31908,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   chdir");
t4=C_retrieve(lf[541]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k31906 in sal:chdir in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31751(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_31751r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31751r(t0,t1,t2);}}

static void C_ccall f_31751r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31754,a[2]=t4,a[3]=((C_word)li461),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31873,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31878,a[2]=t4,a[3]=t8,a[4]=((C_word)li462),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_31878(t10,t6,t2);}

/* do5358 in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31878(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31878,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t3=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[701]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31891,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_31754(t5,t3,t4,C_fix(0),C_SCHEME_FALSE);}}

/* k31889 in do5358 in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31878(t3,((C_word*)t0)[2],t2);}

/* k31871 in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31754(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31754,NULL,5,t0,t1,t2,t3,t4);}
t5=t2;
if(C_truep(t5)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t6=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[694]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31782,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[697]);}
else{
t6=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,lf[698]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31854,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   number->string");
C_number_to_string(3,0,t7,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t4);}
else{
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31870,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   format");
t8=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t8))(5,t8,t7,C_SCHEME_FALSE,lf[699],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 19   print-output");
t6=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[700]);}}

/* k31868 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31852 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31780 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31785,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li460),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_31790(t6,t2,((C_word*)t0)[2]);}

/* do5350 in k31780 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31790(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31790,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31800,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 19   printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_31754(t6,t3,t4,t5,C_SCHEME_TRUE);}}

/* k31798 in do5350 in k31780 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_31803(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 19   print-output");
t4=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[696]);}}

/* k31801 in k31798 in do5350 in k31780 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31790(t3,((C_word*)t0)[2],t2);}

/* k31783 in k31780 in printer in sal:print in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[695]);}

/* tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31592(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31592,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31596,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t3)[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31614,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)t3)[1];
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7492,a[2]=t5,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t9=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t10=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}
else{
t9=t8;
f_7492(2,t9,C_SCHEME_FALSE);}}
else{
t5=t4;
f_31596(t5,C_SCHEME_UNDEFINED);}}

/* k7490 in tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub410(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* k31612 in tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   read-from-string");
f_6736(t2,t1);}

/* k31616 in k31612 in tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31596(t3,t2);}

/* k31594 in tokenize in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[620],"list->token"),((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}}

/* sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31108(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+59)){
C_save_and_reclaim((void*)tr3r,(void*)f_31108r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31108r(t0,t1,t2,t3);}}

static void C_ccall f_31108r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word *a=C_alloc(59);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(36608);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=t3;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31112,a[2]=t15,a[3]=t13,a[4]=t19,a[5]=t11,a[6]=t3,a[7]=t17,a[8]=t9,a[9]=t7,a[10]=t2,a[11]=t5,a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t17)[1]))){
t21=t20;
f_31112(t21,C_SCHEME_UNDEFINED);}
else{
t21=(C_word)C_i_car(((C_word*)t17)[1]);
t22=(C_word)C_eqp(t21,lf[690]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31470,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[690]);}
else{
t24=t23;
f_31470(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t21,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31505,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[691]);}
else{
t25=t24;
f_31505(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(C_word)C_eqp(t21,lf[692]);
if(C_truep(t24)){
t25=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31540,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t15,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t26=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[349],lf[692]);}
else{
t26=t25;
f_31540(2,t26,C_SCHEME_UNDEFINED);}}
else{
t25=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31569,a[2]=t20,a[3]=t11,a[4]=t5,a[5]=t17,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t26=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[353],t3);}
else{
t26=t25;
f_31569(2,t26,C_SCHEME_UNDEFINED);}}}}}}

/* k31567 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31569,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31584,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31582 in k31567 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31576(2,t2,C_SCHEME_UNDEFINED);}}

/* k31574 in k31567 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31112(t5,t4);}

/* k31538 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31542 in k31538 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31112(t7,t6);}

/* k31503 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31507 in k31503 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31112(t7,t6);}

/* k31468 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31472 in k31468 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31112(t7,t6);}

/* k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31112,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31115(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31335,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[690]);}
else{
t6=t5;
f_31335(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31370,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[691]);}
else{
t7=t6;
f_31370(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31405,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[692]);}
else{
t8=t7;
f_31405(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31434,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_31434(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31432 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31434,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31449,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31447 in k31432 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31441(2,t2,C_SCHEME_UNDEFINED);}}

/* k31439 in k31432 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31115(t5,t4);}

/* k31403 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31409(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31407 in k31403 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31115(t7,t6);}

/* k31368 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31372 in k31368 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31115(t7,t6);}

/* k31333 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31337 in k31333 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31115(t7,t6);}

/* k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31115,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31118,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31118(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31200,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[690]);}
else{
t6=t5;
f_31200(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31235,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[691]);}
else{
t7=t6;
f_31235(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31270,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[692]);}
else{
t8=t7;
f_31270(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31299,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_31299(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31297 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31299,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31314,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31312 in k31297 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31306(2,t2,C_SCHEME_UNDEFINED);}}

/* k31304 in k31297 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31118(t5,t4);}

/* k31268 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31274(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31272 in k31268 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31118(t7,t6);}

/* k31233 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31237 in k31233 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31118(t7,t6);}

/* k31198 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31202 in k31198 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31118(t7,t6);}

/* k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31118,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31121,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31121(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_not(((C_word*)((C_word*)t0)[5])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31172,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   tokenize");
f_31592(t5,((C_word*)t0)[4]);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31176,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   tokenize");
f_31592(t5,((C_word*)((C_word*)t0)[5])[1]);}}

/* k31174 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31124(t3,t2);}

/* k31170 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31124(t3,t2);}

/* k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31127,a[2]=((C_word*)t0)[6],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31127(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31136,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28912,a[2]=t5,a[3]=t4,a[4]=((C_word)li457),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   call/cc");
t8=*((C_word*)lf[688]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t3,t7);}}

/* a28911 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28912(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28912,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28918,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li455),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28925,a[2]=t2,a[3]=((C_word)li456),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a28924 in a28911 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28925,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28932,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_28932(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_28932(t6,C_SCHEME_FALSE);}}

/* k28930 in a28924 in a28911 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28932(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28932,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28512(t2,lf[685],lf[686],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28338(((C_word*)t0)[4],lf[687],C_retrieve2(lf[661],"*maxtokpos*"));}}

/* k28937 in k28930 in a28924 in a28911 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a28917 in a28911 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28918,2,t0,t1);}
t2=lf[661]=C_fix(0);;
C_trace("ChickenBridge.scm: 19   parser");
f_28950(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31136,2,t0,t1);}
t2=t1;
if(C_truep((C_word)C_i_structurep(t2,lf[635]))){
t3=((C_word*)t0)[4];
t4=t1;
t5=(C_word)C_i_string_length(t3);
t6=(C_word)C_i_check_structure(t4,lf[635]);
t7=(C_word)C_i_block_ref(t4,C_fix(2));
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31633,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=t7,a[7]=t12,a[8]=t10,tmp=(C_word)a,a+=9,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31720,a[2]=t3,a[3]=t15,a[4]=t10,a[5]=((C_word)li454),tmp=(C_word)a,a+=6,tmp));
t17=((C_word*)t15)[1];
f_31720(t17,t13,C_SCHEME_FALSE);}
else{
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 19   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[3],C_SCHEME_TRUE,lf[682],t1);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31158,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   interaction-environment");
t4=C_retrieve(lf[684]);
((C_proc2)C_retrieve_proc(t4))(2,t4,t3);}}}

/* k31156 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   eval");
t2=C_retrieve(lf[683]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do5322 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31720(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31720,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31730,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_31730(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_31730(t11,t10);}}}

/* k31728 in do5322 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_31720(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31633,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31641,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31690,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li453),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_31690(t9,t5,C_SCHEME_FALSE);}

/* do5329 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31690(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31690,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31700,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_31700(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_31700(t11,t10);}}}

/* k31698 in do5329 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_31700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_31690(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31644,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31651,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_check_structure(((C_word*)t0)[6],lf[635]);
t5=(C_word)C_i_block_ref(((C_word*)t0)[6],C_fix(1));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=t3,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   make-string");
t7=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(1),C_make_character(10));}

/* k31657 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31663,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   substring");
t3=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k31661 in k31657 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31667,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   make-string");
t3=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k31665 in k31661 in k31657 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31667,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31674,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 19   make-string");
t5=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k31672 in k31665 in k31661 in k31657 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31674,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 19   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[681],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31649 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31642 in k31639 in k31631 in k31134 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* k31125 in k31122 in k31119 in k31116 in k31113 in k31110 in sal in k31104 in k31101 in k31098 in k31095 in k31092 in k30561 in k30558 in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_31127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30039,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30046,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_30052,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t33,t34,C_fix(23296));}

/* k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30052,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30056,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_30102,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(10756));}}

/* k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30102,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30106,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_30199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,t3,C_fix(22784));}}

/* k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30199,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30203,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30267,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30267,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30274,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30524,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_30274(t8,t7);}}

/* k30522 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30274(t3,t2);}

/* k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30274,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30277,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30512,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k30510 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30277(t3,t2);}

/* k30461 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30463,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30467 in k30461 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30469,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_30277(t4,t3);}}

/* k30491 in k30467 in k30461 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30493,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30477,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30489,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k30487 in k30491 in k30467 in k30461 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k30475 in k30491 in k30467 in k30461 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30277(t3,t2);}

/* k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30277,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_30280(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30439,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[679]);}}

/* k30437 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30443,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30441 in k30437 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30280(t4,t3);}

/* k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30280(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30280,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_30283(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30416,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[678]);}}

/* k30414 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30420,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30418 in k30414 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30283(t4,t3);}

/* k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30283,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_30286(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30393,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[677]);}}
else{
t3=t2;
f_30286(t3,C_SCHEME_UNDEFINED);}}

/* k30391 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30397,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30395 in k30391 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30286(t4,t3);}

/* k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30286(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30286,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30289,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30318,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_30289(t7,t6);}}

/* k30316 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30318,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[148],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30289(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k30334 in k30316 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30336,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[149],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30289(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k30352 in k30334 in k30316 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30354,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[144],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[142],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30289(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30372,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k30370 in k30352 in k30334 in k30316 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30372,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[145],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[142],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30289(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_30289(t2,C_SCHEME_UNDEFINED);}}

/* k30287 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30289(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30289,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30293,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k30291 in k30287 in k30284 in k30281 in k30278 in k30275 in k30272 in k30265 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30046(t3,t2);}

/* k30201 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30203,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30207,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k30205 in k30201 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30207,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[676]);}

/* k30209 in k30205 in k30201 in k30197 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30211,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[185],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[53],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30046(t12,t11);}

/* k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30106,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30110,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30112 in k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30114,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30117,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30133,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_30117(t6,t5);}}

/* k30131 in k30112 in k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30133,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[675]);}

/* k30135 in k30131 in k30112 in k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[183],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[234],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30117(t12,t11);}

/* k30115 in k30112 in k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30121,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k30119 in k30115 in k30112 in k30108 in k30104 in k30100 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30046(t3,t2);}

/* k30054 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30056,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[674]);}

/* k30058 in k30054 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30060,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[673]);}

/* k30062 in k30058 in k30054 in k30050 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_30064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30064,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[148],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_30046(t10,t9);}

/* k30044 in sal-parse-stepping in k30035 in k30032 in k30029 in k30026 in k30023 in k30020 in k30017 in k30014 in k30011 in k30008 in k30005 in k30002 in k29999 in k29996 in k29993 in k29990 in k29987 in k29984 in k29981 in k29978 in k29975 in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_30046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29861(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29861,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29873,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li450),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_29873(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29873,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29892,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29840(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29892,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29895,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29910,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li449),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_29910(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_29895(2,t5,t4);}}

/* do4888 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29910(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29910,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29924,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29938,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   reverse");
t12=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29942,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29840(t10,t11);}}

/* k29940 in do4888 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29942,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29945,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_29945(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_29945(t10,t9);}}

/* k29943 in k29940 in do4888 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29945(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_29910(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29936 in do4888 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   inf->pre");
f_29861(((C_word*)t0)[2],t1);}

/* k29922 in do4888 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29924,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k29893 in k29890 in do4886 in inf->pre in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_29873(t2,((C_word*)t0)[2]);}

/* is-op? in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29840(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29840,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29847,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28452(t3,t2);}

/* k29845 in is-op? in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29847,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29850,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29848 in k29845 in is-op? in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29856,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   SalOpType?");
f_29617(t2,t1);}

/* k29854 in k29848 in k29845 in is-op? in k29836 in k29833 in k29830 in k29827 in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
C_trace("ChickenBridge.scm: 19   logand");
t4=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(255));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29775(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29775,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29784,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li446),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_29784(t10,t1,t2);}

/* do4852 in remove-token-type in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29784(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29784,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29797,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29807,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28468(t4,t5,((C_word*)t0)[2]);}}

/* k29805 in do4852 in remove-token-type in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29807,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29797(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_29797(t7,t6);}}

/* k29795 in do4852 in remove-token-type in k29771 in k29768 in k29765 in k29762 in k29759 in k29756 in k29753 in k29750 in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29797(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29784(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29731(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29731,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29739,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ash");
t5=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_fix(-8));}

/* k29737 in SalType=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29743,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ash");
t3=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(-8));}

/* k29741 in k29737 in SalType=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* SalRuleType? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29719(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29719,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29617(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29617,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29569(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29569,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28950(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28950,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28954,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 19   format");
t10=C_retrieve(lf[407]);
((C_proc7)C_retrieve_proc(t10))(7,t10,t9,C_SCHEME_TRUE,lf[667],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_28954(2,t10,C_SCHEME_UNDEFINED);}}

/* k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28087(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_28960(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29375,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29379,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29383,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   first-token");
f_28075(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k29381 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   token-position");
f_28043(((C_word*)t0)[2],t1);}

/* k29377 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   max");
t2=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[661],"*maxtokpos*"),t1);}

/* k29373 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[661],t1);
t3=((C_word*)t0)[2];
f_28960(t3,t2);}

/* k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28960,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-value");
t4=C_retrieve2(lf[319],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29083,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t3,((C_word*)t0)[8]);}}

/* k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29083,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28265,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t4,t3);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[666],((C_word*)t0)[2]);}}

/* k28263 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29089(t3,(C_word)C_eqp(t2,lf[214]));}
else{
t2=((C_word*)t0)[2];
f_29089(t2,C_SCHEME_FALSE);}}

/* k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29089,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 19   pattern-nsubs");
f_28238(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29177,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28281,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t5,t4);}}

/* k28279 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29177(t3,(C_word)C_eqp(t2,lf[238]));}
else{
t2=((C_word*)t0)[2];
f_29177(t2,C_SCHEME_FALSE);}}

/* k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29177(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29177,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 19   pattern-nsubs");
f_28238(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   pattern-zero-or-more?");
f_28306(t2,((C_word*)t0)[2]);}}

/* k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_29250(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28297,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t4,t3);}}

/* k28295 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29250(t3,(C_word)C_eqp(t2,lf[146]));}
else{
t2=((C_word*)t0)[2];
f_29250(t2,C_SCHEME_FALSE);}}

/* k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29250(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29250,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29256,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li438),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_29279(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29328,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28329,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t4,t3);}}

/* k28327 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29328(t3,(C_word)C_eqp(t2,lf[665]));}
else{
t2=((C_word*)t0)[2];
f_29328(t2,C_SCHEME_FALSE);}}

/* k29326 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29328(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29328,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29337,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li439),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29354,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li440),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[664],t3);}}

/* a29353 in k29326 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29354,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29347 in k29326 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29348,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   parser");
f_28950(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29335 in k29326 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29279,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29289,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_29289(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28087(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29289,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29292,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li436),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29315,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li437),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a29314 in k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29315,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29308 in k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29309,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   parser");
f_28950(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29290 in k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29295,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29302,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_29295(t3,C_SCHEME_UNDEFINED);}}

/* k29300 in k29290 in k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29302,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_29295(t6,t5);}

/* k29293 in k29290 in k29287 in do4589 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_29279(t2,((C_word*)t0)[2]);}

/* k29254 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29259,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29265,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   pattern-zero-or-more?");
f_28306(t3,((C_word*)t0)[2]);}

/* k29263 in k29254 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_29259(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_29259(t5,t4);}}

/* k29257 in k29254 in k29248 in k29245 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29186,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29201,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li435),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_29201(t6,t2,C_fix(0));}

/* do4569 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29201(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29201,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29211,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29220,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li433),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li434),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a29233 in do4569 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29234(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29234,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29219 in do4569 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29228,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-sub");
f_28248(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29226 in a29219 in do4569 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29228,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_28950(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29209 in do4569 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29211,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29201(t3,((C_word*)t0)[2],t2);}

/* k29184 in k29181 in k29175 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29098,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29101,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li432),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_29120(t8,t4,C_fix(0));}

/* do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29120(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29120,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29133,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29153,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li430),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29167,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li431),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a29166 in do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29167,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29152 in do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29161,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-sub");
f_28248(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29159 in a29152 in do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29161,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_28950(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29131 in do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29136,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_29136(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_29136(t5,t4);}}

/* k29134 in k29131 in do4547 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29136,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29120(t3,((C_word*)t0)[2],t2);}

/* k29099 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29104,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_29104(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29118,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   reverse");
t5=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k29116 in k29099 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29104(t3,t2);}

/* k29102 in k29099 in k29096 in k29087 in k29081 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_29104(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   SalTokenType?");
f_29569(t2,t1);}

/* k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28975,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28981,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28087(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29033,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   SalRuleType?");
f_29719(t2,((C_word*)t0)[5]);}}

/* k29031 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29033,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   get-rule");
f_28199(t2,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[663],((C_word*)t0)[2]);}}

/* k29034 in k29031 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29036,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[626]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[626]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li428),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29057,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li429),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a29056 in k29034 in k29031 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29057(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29057,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29068,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 19   func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_29068(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k29066 in a29056 in k29034 in k29031 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29046 in k29034 in k29031 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29047,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_28950(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28981,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   first-token");
f_28075(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28997,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29027,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-type");
f_28007(t3,t1);}

/* k29025 in k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k28995 in k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28997,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29012,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-type");
f_28007(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k29010 in k28995 in k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29012,2,t0,t1);}
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=(C_word)C_i_block_ref(t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29020,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-position");
f_28043(t5,((C_word*)t0)[3]);}

/* k29018 in k29010 in k28995 in k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29002 in k28995 in k28989 in k28979 in k28973 in k28967 in k28958 in k28955 in k28952 in parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_29004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28846(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28846,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28848,a[2]=t2,a[3]=((C_word)li426),tmp=(C_word)a,a+=4,tmp));}

/* f_28848 in simple-unit-emitter in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28848,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28852,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28896,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t6,t2);}

/* k28894 */
static void C_ccall f_28896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k28850 */
static void C_ccall f_28852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28852,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28855,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_28855(t9,t8);}
else{
t6=t5;
f_28855(t6,C_SCHEME_UNDEFINED);}}

/* k28853 in k28850 */
static void C_fcall f_28855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28855,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28860,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li425),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_28860(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do4504 in k28853 in k28850 */
static void C_fcall f_28860(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28860,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28881,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k28879 in do4504 in k28853 in k28850 */
static void C_ccall f_28881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28860(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28838(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28838,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28840,a[2]=t2,a[3]=((C_word)li423),tmp=(C_word)a,a+=4,tmp));}

/* f_28840 in simple-unit-parser in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28840,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28386(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28661(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_28661r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28661r(t0,t1,t2);}}

static void C_ccall f_28661r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28669,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[200]+1),t2);}

/* k28667 in != in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28630(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28630,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28647,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28597(t5,t6,t3,t4);}}

/* k28645 in emit-list in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28651,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit-list");
f_28630(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28649 in k28645 in emit-list in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28651,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28597(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28597,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28604,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28452(t5,t2);}

/* k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28604,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28675,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28613,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28491,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit?");
f_28392(t4,t3);}}

/* k28489 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28491,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28498,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_28613(2,t2,C_SCHEME_FALSE);}}

/* k28496 in k28489 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalRuleType?");
f_29719(((C_word*)t0)[2],t1);}

/* k28611 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28613,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28813,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28836,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 19   emit-list");
f_28630(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[656],((C_word*)t0)[4]);}}}

/* k28834 in k28611 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   get-rule");
f_28199(((C_word*)t0)[2],t1);}

/* k28811 in k28611 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28813,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[626]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 19   meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t4,((C_word*)t0)[4]);}}

/* k28827 in k28811 in k28611 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28597(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28425(t2,((C_word*)t0)[2]);}

/* k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28678,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 19   string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t8=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalOpType?");
f_29617(t8,((C_word*)t0)[4]);}}}

/* k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28702,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28753,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28759,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28759,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k28763 in k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28765,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k28772 in k28763 in k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28774,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k28781 in k28772 in k28763 in k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28783,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k28790 in k28781 in k28772 in k28763 in k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28792,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[652],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k28799 in k28790 in k28781 in k28772 in k28763 in k28757 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[653],((C_word*)t0)[2]);}}

/* k28751 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28708,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[428]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k28712 in k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28714,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[449]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k28718 in k28712 in k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28720,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[9]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k28724 in k28718 in k28712 in k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28726,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[214]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k28730 in k28724 in k28718 in k28712 in k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28732,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[238]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28738,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k28736 in k28730 in k28724 in k28718 in k28712 in k28706 in k28700 in k28676 in k28673 in k28602 in emit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[178]);}
else{
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28579(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28579,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28586,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_28586(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 19   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[649],t2);}}

/* k28584 in set-emit-info! in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28512(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28512,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28500(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28500,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28468(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28468,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28475,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28452(t4,t2);}

/* k28473 in token-unit-type=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28475,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k28480 in k28473 in token-unit-type=? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29731(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28452,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28459,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit?");
f_28392(t3,t2);}

/* k28457 in token-unit? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28459,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28466,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28407(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k28464 in k28457 in token-unit? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalTokenType?");
f_29569(((C_word*)t0)[2],t1);}

/* parse-unit-position in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28443(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28443,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28425(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28425,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28407(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28407,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28392(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28392,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[637]));}

/* make-parse-unit in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28386(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28386,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[637],t2,t3,t4));}

/* make-parse-error in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28338(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28338,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[635],t2,t3));}

/* pattern-zero-or-more? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28306(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28306,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28313,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28220(t3,t2);}

/* k28311 in pattern-zero-or-more? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[387]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28248(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28248,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28256,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-subs");
f_28232(t4,t2);}

/* k28254 in pattern-sub in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28238(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28238,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28246,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   pattern-subs");
f_28232(t3,t2);}

/* k28244 in pattern-nsubs in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28232(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28232,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28220(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28220,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28217(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28217,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28199(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28199,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28203,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[624],"*rules*"),t2);}

/* k28201 in get-rule in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[628],((C_word*)t0)[2]);}}

/* make-rule in k28093 in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28097(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28097,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[626],t2,t3,t4,t5,t6));}

/* null-tokens? in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28087(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28087,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28075(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28075,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_28052(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28052,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[621]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[616],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[616],"make-token"),t2);}}

/* token-position in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28043(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28043,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-type in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_28007(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28007,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27986,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[617],t2,t3,t4));}

/* export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27790,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27794,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_27794(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_27794(t8,t7);}}

/* k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27794(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27794,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27943,a[2]=t7,a[3]=t3,a[4]=((C_word)li393),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_27943(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do4271 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27943(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27943,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27954,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27969,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k27967 in do4271 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 18   max");
t3=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k27952 in do4271 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_27943(t4,((C_word*)t0)[2],t3);}

/* k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27805,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li392),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   with-output-to-file");
t3=C_retrieve(lf[615]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   current-output-port");
t3=*((C_word*)lf[614]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27812,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[613]);}

/* k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[612]);}

/* k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[611],((C_word*)((C_word*)t0)[2])[1]);}

/* k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[610],((C_word*)t0)[2]);}

/* k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[609]);}

/* k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27824,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27829,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li391),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27829(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27829(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27829,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27839,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27923,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   spectrum-time");
t7=C_retrieve(lf[550]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k27921 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27923,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[607]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27930,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t5=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27928 in k27921 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   format");
t2=C_retrieve(lf[407]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[608],((C_word*)t0)[2],t1);}

/* k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27860,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t5=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27858 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27864,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k27862 in k27858 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27868,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t4=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k27866 in k27862 in k27858 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27868,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27870,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li390),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27870(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do4283 in k27866 in k27862 in k27858 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27870,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27880,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 18   format");
t9=C_retrieve(lf[407]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[606],t6,t7,t8);}}

/* k27878 in do4283 in k27866 in k27862 in k27858 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27880,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_27870(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k27840 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[605]);}

/* k27843 in k27840 in k27837 in do4277 in k27822 in k27819 in k27816 in k27813 in k27810 in k27807 in a27804 in k27798 in k27792 in export-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27845,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27829(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27664(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27664,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27670,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   with-input-from-file");
t4=C_retrieve(lf[603]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27674,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   current-input-port");
t3=*((C_word*)lf[602]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27675,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27692,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27675(t5,t1);}

/* k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27692,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[600]))){
t4=t3;
f_27695(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[601],((C_word*)t0)[4]);}}

/* k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27675(t2,((C_word*)t0)[4]);}

/* k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27699,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[598]))){
t4=t3;
f_27702(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[599],((C_word*)t0)[4]);}}

/* k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27705,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27754,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li387),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27754(t6,t2);}

/* do4248 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27754,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[597]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27765,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27675(t2,((C_word*)t0)[2]);}}

/* k27763 in do4248 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27754(t3,((C_word*)t0)[2]);}

/* k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27705,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27715,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t6=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27715,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li386),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_27717(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27717(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27717,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27731,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27561,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   open-input-string");
t8=C_retrieve(lf[596]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27562,a[2]=((C_word*)t0)[3],a[3]=((C_word)li384),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27585,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t10=t2;
f_27562(t10,t9,t1);}

/* k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27585,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t4=((C_word*)t0)[3];
f_27562(t4,t3,((C_word*)t0)[2]);}

/* k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27589,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27592,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li385),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27615(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do4227 in k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27615(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27615,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t8=((C_word*)t0)[3];
f_27562(t8,t7,((C_word*)t0)[2]);}}

/* k27623 in do4227 in k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t3=((C_word*)t0)[3];
f_27562(t3,t2,((C_word*)t0)[2]);}

/* k27660 in k27623 in do4227 in k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27662,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27654,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t7=((C_word*)t0)[3];
f_27562(t7,t6,((C_word*)t0)[2]);}

/* k27652 in k27660 in k27623 in do4227 in k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27654,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_27615(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27590 in k27587 in k27583 in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_27731(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24323(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27562(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27562,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27566,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   read");
t4=*((C_word*)lf[18]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27564 in rdat in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27569,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[595],((C_word*)t0)[2]);}
else{
t3=t2;
f_27569(2,t3,C_SCHEME_UNDEFINED);}}

/* k27567 in k27564 in rdat in k27559 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k27729 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27731,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_27734(t8,t7);}
else{
t4=t3;
f_27734(t4,C_SCHEME_UNDEFINED);}}

/* k27732 in k27729 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27734,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t3=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27739 in k27732 in k27729 in do4258 in k27713 in k27703 in k27700 in k27697 in k27693 in k27690 in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27717(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27675(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27675,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27679,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t4=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27677 in rhdr in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27682,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[593],((C_word*)t0)[2]);}
else{
t3=t2;
f_27682(2,t3,C_SCHEME_UNDEFINED);}}

/* k27680 in k27677 in rhdr in k27672 in a27669 in import-spear-frames in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_27151r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_27151r(t0,t1,t2,t3,t4);}}

static void C_ccall f_27151r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27155,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 18   error");
t12=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[590]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27524,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27530,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_27530(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_27530(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_27155(2,t13,C_SCHEME_UNDEFINED);}}}

/* k27528 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_27524(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[591],t2);}}

/* k27522 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27155(2,t3,t2);}

/* k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27158,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27508,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k27506 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27508,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27158(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 18   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[589],((C_word*)((C_word*)t0)[3])[1]);}}

/* k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27490,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27494,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k27492 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27161(t3,t2);}

/* k27488 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27161(t3,t2);}

/* k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27479,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27483,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k27481 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_27164(t3,t2);}

/* k27477 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_27164(t3,t2);}

/* k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27164,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_27167(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_27167(t4,t3);}}

/* k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27170,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27181,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li373),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27181(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27211,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li374),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27211(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27467,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=*((C_word*)lf[588]+1);
t6=((C_word*)((C_word*)t0)[5])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8136,a[2]=t5,a[3]=t8,a[4]=((C_word)li381),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8136(t10,t4,t6,C_SCHEME_TRUE);}}

/* do581 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8136(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8136,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8149,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8159,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8157 in do581 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8149(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8149(t3,t2);}}

/* k8147 in do581 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8136(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27467,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_27231(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27451,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minamp");
t12=C_retrieve(lf[562]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27459,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t12=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k27457 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27459,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27461 in k27457 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27325(t3,t2);}

/* k27449 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27451,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxamp");
t4=C_retrieve(lf[564]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27453 in k27449 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27325(t3,t2);}

/* k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27325(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27325,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27328,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27432,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minamp");
t4=C_retrieve(lf[562]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27440,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t4=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k27438 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27440,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27442 in k27438 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27328(t3,t2);}

/* k27430 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27432,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxamp");
t4=C_retrieve(lf[564]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27434 in k27430 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27328(t3,t2);}

/* k27326 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27328(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27328,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27332,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k27330 in k27326 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27332,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li380),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_27337(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do4190 in k27330 in k27326 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27337(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27337,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27347,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_27347(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_27347(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k27345 in do4190 in k27330 in k27326 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27347(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27347,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27350,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[587],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_27350(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_27350(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_27350(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k27348 in k27345 in do4190 in k27330 in k27326 in k27323 in k27465 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27337(t3,((C_word*)t0)[2],t2);}

/* k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27234,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27256,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li378),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27256(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27294,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li379),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27294(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4204 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27294(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27294,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27315,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   interp");
t5=C_retrieve(lf[463]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27313 in do4204 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_27294(t4,((C_word*)t0)[2],t3);}

/* do4199 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27256(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27256,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27285,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   interp");
t6=C_retrieve(lf[463]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27283 in do4199 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27285,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27256(t5,((C_word*)t0)[2],t4);}

/* k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27247,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27251,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27249 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[144]+1),t1);}

/* k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27247,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_27170(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26617,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26689,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26697,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k26695 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26701,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26699 in k26695 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   map");
t2=*((C_word*)lf[586]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a26688 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26689,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26617,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26675,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   sort!");
t6=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a26674 in k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26675,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k26619 in k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26621,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26629,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li375),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_26629(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do4075 in k26619 in k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26629(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_26629,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26639,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24371(t4,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_set_car(t2,t5);
t11=(C_word)C_i_cdr(t2);
t14=t1;
t15=t11;
t16=t3;
t1=t14;
t2=t15;
t3=t16;
goto loop;}}

/* k26637 in do4075 in k26619 in k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24389(t2,((C_word*)t0)[3],t3);}

/* k26640 in k26637 in do4075 in k26619 in k26615 in k27245 in k27232 in k27229 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do4177 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27211(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27211,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do4172 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27181(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27181,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k27168 in k27165 in k27162 in k27159 in k27156 in k27153 in spectrum-rescale! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27094(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27094,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27102,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27100 in spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27106,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t3=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27104 in k27100 in spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27110,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t3=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k27108 in k27104 in k27100 in spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27110,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27116,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li371),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27116(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do4153 in k27108 in k27104 in k27100 in spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27116(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27116,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27126,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24371(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k27124 in do4153 in k27108 in k27104 in k27100 in spectrum-flip! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26882,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26884,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26901,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26918,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26950,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getfreqs");
f_26884(t7,t2);}

/* k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getfreqs");
f_26884(t2,((C_word*)t0)[4]);}

/* k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getamps");
f_26901(t2,((C_word*)t0)[2]);}

/* k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26959,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   getamps");
f_26901(t2,((C_word*)t0)[2]);}

/* k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24323(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26965,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26979,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li367),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_26979(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27028,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li368),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27028(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27060,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li369),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27060(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_26918(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do4146 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27060(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27060,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27070,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_26918(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k27068 in do4146 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27060(t3,((C_word*)t0)[2],t2);}

/* do4141 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_27028(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27028,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27038,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_26918(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k27036 in do4141 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27028(t3,((C_word*)t0)[2],t2);}

/* do4131 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26979(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26979,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26989,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li366),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_26998(t7,t3,((C_word*)t0)[2]);}}

/* do4134 in do4131 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26998(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26998,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27008,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_26918(t3,((C_word*)t0)[2],t4,t5);}}

/* k27006 in do4134 in do4131 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_27008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26998(t3,((C_word*)t0)[2],t2);}

/* k26987 in do4131 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26979(t3,((C_word*)t0)[2],t2);}

/* k26963 in k26960 in k26957 in k26954 in k26951 in k26948 in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26918(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26918,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26928,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 18   spectrum-add!");
t7=C_retrieve(lf[578]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[583]);}}

/* k26926 in sums-and-diffs in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26928,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 18   spectrum-add!");
t4=C_retrieve(lf[578]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[582]);}

/* getamps in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26901(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26901,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26908,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum?");
f_24329(t3,t2);}

/* k26906 in getamps in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t2=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[580]:lf[581]));}}

/* getfreqs in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26884(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26884,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26891,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum?");
f_24329(t3,t2);}

/* k26889 in getfreqs in rm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t2=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26703,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26711,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26715,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26715,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26717,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li361),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_26717(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26717(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26717,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26727,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_26727(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_26727(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26727,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26730,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26742,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24371(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26773,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t8=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_26730(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24371(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26858,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t11=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_26717(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k26856 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26858,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24353(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26805 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26810,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24389(t2,((C_word*)t0)[4],t3);}

/* k26808 in k26805 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26819 in k26808 in k26805 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26821,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24353(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26771 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26773,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24353(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26740 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24389(t2,((C_word*)t0)[3],t3);}

/* k26743 in k26740 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24353(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k26728 in k26725 in do4091 in k26713 in k26709 in spectrum-add! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26297,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26611,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   round");
t7=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26611,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26310,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26540,a[2]=t9,a[3]=t8,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 18   -");
C_minus(3,0,t10,t3);}

/* k26538 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26540,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26542,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li359),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_26542(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4013 in k26538 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26542(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26542,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=t2;
t11=((C_word*)t0)[4];
t12=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t13=(C_word)C_i_foreign_fixnum_argumentp(t10);
t14=(C_word)C_i_foreign_flonum_argumentp(t11);
t15=(C_word)stub226(t12,t13,t14);
t16=C_set_block_item(t6,0,t15);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26564,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_nequalp(((C_word*)t6)[1],lf[576]);
t19=(C_truep(t18)?t18:(C_word)C_i_nequalp(((C_word*)t5)[1],lf[577]));
if(C_truep(t19)){
t20=t17;
f_26564(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_a_i_list(&a,2,((C_word*)t5)[1],((C_word*)t6)[1]);
t21=(C_word)C_a_i_list(&a,1,t20);
t22=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t21);
t23=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t24=C_mutate(((C_word *)((C_word*)t0)[2])+1,t23);
t25=t17;
f_26564(t25,t24);}}}

/* k26562 in do4013 in k26538 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26564,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26542(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26383,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li358),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26383(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26383(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26383,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26536,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   caar");
t7=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26536,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26520,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 18   -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k26518 in k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26520,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_26414(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26439,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26472,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li357),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_26472(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do4031 in k26518 in k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26472,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26486,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_26486(t14,t13);}
else{
t13=t12;
f_26486(t13,C_SCHEME_UNDEFINED);}}}

/* k26484 in do4031 in k26518 in k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26486,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26472(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26437 in k26518 in k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26439,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_26414(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_26414(t5,t4);}}

/* k26412 in k26518 in k26534 in do4025 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26414(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_26383(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26311 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26313,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26321,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li356),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_26321(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do4053 in k26311 in k26308 in k26609 in fm-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_26321(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_26321,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24323(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t5);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_cadr(t5);
t9=(C_word)C_a_i_abs(&a,1,t8);
t10=(C_word)C_i_set_car(t7,t9);
t11=(C_word)C_i_cdr(t5);
t12=(C_word)C_i_set_cdr(t4,t11);
t13=(C_word)C_i_cdr(t4);
t14=t4=t13;
t15=(C_word)C_i_set_car(t2,t6);
t16=(C_word)C_i_cdr(t2);
t17=(C_word)C_a_i_plus(&a,2,t3,C_fix(1));
t20=t1;
t21=t16;
t22=t17;
t23=t4;
t1=t20;
t2=t21;
t3=t22;
t4=t23;
goto loop;}}

/* spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24824(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_24824r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_24824r(t0,t1,t2,t3);}}

static void C_ccall f_24824r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24828,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_24828(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[430]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26070,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[349],lf[430]);}
else{
t36=t35;
f_26070(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[571]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26105,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[349],lf[571]);}
else{
t37=t36;
f_26105(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[572]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26140,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[349],lf[572]);}
else{
t38=t37;
f_26140(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[573]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26175,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[349],lf[573]);}
else{
t39=t38;
f_26175(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[382]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26210,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[349],lf[382]);}
else{
t40=t39;
f_26210(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[383]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26245,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[349],lf[383]);}
else{
t41=t40;
f_26245(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26274,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[353],t3);}
else{
t41=t40;
f_26274(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26272 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26274,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26289,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26287 in k26272 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26281(2,t2,C_SCHEME_UNDEFINED);}}

/* k26279 in k26272 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24828(t5,t4);}

/* k26243 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26249(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26247 in k26243 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k26208 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26212 in k26208 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k26173 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26177 in k26173 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k26138 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26142 in k26138 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k26103 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26109(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26107 in k26103 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k26068 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26074(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26072 in k26068 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24828(t7,t6);}

/* k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24828,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24831(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25830,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25830(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25865,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25865(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25900,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25900(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25935,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25935(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25970,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25970(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26005,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_26005(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26034,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_26034(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26032 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26034,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26049,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26047 in k26032 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26041(2,t2,C_SCHEME_UNDEFINED);}}

/* k26039 in k26032 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24831(t5,t4);}

/* k26003 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26007 in k26003 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_26009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k25968 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25972 in k25968 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k25933 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25939(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25937 in k25933 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k25898 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25904,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25904(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25902 in k25898 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k25863 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25869(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25867 in k25863 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k25828 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25834,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25834(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25832 in k25828 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24831(t7,t6);}

/* k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24831,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24834(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25590,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25590(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25625,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25625(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25660,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25660(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25695,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25695(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25730,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25730(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25765,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25765(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25794,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25794(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25792 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25794,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25809,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25807 in k25792 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25801(2,t2,C_SCHEME_UNDEFINED);}}

/* k25799 in k25792 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24834(t5,t4);}

/* k25763 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25769(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25767 in k25763 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k25728 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25734(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25732 in k25728 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k25693 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25699(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25697 in k25693 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k25658 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25664(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25662 in k25658 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k25623 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25627 in k25623 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k25588 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25592 in k25588 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24834(t7,t6);}

/* k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24834,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24837(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25350,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25350(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25385,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25385(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25420,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25420(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25455,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25455(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25490,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25490(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25525,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25525(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25554,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25554(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25552 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25554,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25569,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25567 in k25552 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25561(2,t2,C_SCHEME_UNDEFINED);}}

/* k25559 in k25552 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24837(t5,t4);}

/* k25523 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25527 in k25523 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k25488 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25492 in k25488 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k25453 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25457 in k25453 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k25418 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25422 in k25418 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k25383 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25389,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25389(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25387 in k25383 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k25348 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25354(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25352 in k25348 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24837(t7,t6);}

/* k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24837,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24840(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25110,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25110(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25145,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25145(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25180,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25180(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25215,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25215(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25250,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25250(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25285,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25285(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25314,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25314(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25312 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25314,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25329,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25327 in k25312 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25321(2,t2,C_SCHEME_UNDEFINED);}}

/* k25319 in k25312 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24840(t5,t4);}

/* k25283 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25289(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25287 in k25283 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k25248 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25254,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25254(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25252 in k25248 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k25213 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25219(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25217 in k25213 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k25178 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25184(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25182 in k25178 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k25143 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25149,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25149(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25147 in k25143 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k25108 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25112 in k25108 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}

/* k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24840(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24840,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24843,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24843(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24870,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_24870(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24905,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_24905(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24940,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_24940(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24975,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_24975(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25010,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25010(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25045,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25045(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25074,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25074(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25072 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25089,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25087 in k25072 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25081(2,t2,C_SCHEME_UNDEFINED);}}

/* k25079 in k25072 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24843(t5,t4);}

/* k25043 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25049(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25047 in k25043 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k25008 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25012 in k25008 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_25014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k24973 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_24979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24977 in k24973 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k24938 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_24944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24942 in k24938 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k24903 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_24909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24907 in k24903 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k24868 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_24874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24872 in k24868 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24843(t7,t6);}

/* k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24843(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24843,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24846,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24846(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24846,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24592,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_24592(t14,t13);}
else{
t13=t11;
f_24592(t13,C_SCHEME_UNDEFINED);}}

/* k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24592,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=t6,a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t8=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24601,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24603,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word)li348),tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24677,a[2]=((C_word*)t0)[8],a[3]=((C_word)li349),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24691,a[2]=t2,a[3]=t3,a[4]=((C_word)li350),tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24701,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[7],a[5]=((C_word)li351),tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24725,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_not(((C_word*)t0)[4]);
t8=(C_truep(t7)?t7:(C_word)C_i_not(t1));
if(C_truep(t8)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t9=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t5,((C_word*)t0)[2]);}
else{
C_trace("for-each");
t9=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t4,((C_word*)t0)[2]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24790,a[2]=t5,a[3]=((C_word*)t0)[4],a[4]=((C_word)li353),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   for-each");
t10=*((C_word*)lf[570]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}
else{
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24805,a[2]=t4,a[3]=((C_word*)t0)[4],a[4]=((C_word)li354),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   for-each");
t10=*((C_word*)lf[570]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}}}

/* a24804 in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24805,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 18   addkey");
t4=((C_word*)t0)[2];
f_24691(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a24789 in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24790,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 18   adduniquekey");
t4=((C_word*)t0)[2];
f_24701(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k24723 in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24725,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
switch(((C_word*)t0)[4]){
case C_fix(0):
C_trace("ChickenBridge.scm: 18   shuffle!");
t3=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t2);
case C_fix(-1):
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 18   sort!");
t3=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[149]+1));}
else{
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7904,a[2]=t2,a[3]=t6,a[4]=((C_word)li352),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7904(t8,((C_word*)t0)[3],C_fix(0),t4,t2);}
default:
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 18   sort!");
t3=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[145]+1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(1));
if(C_truep(t3)){
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[3],lf[568],C_retrieve(lf[569]));}}}}

/* do536 in k24723 in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7904(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7904,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* adduniquekey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24701,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24705,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   getkey");
t4=((C_word*)t0)[2];
f_24603(t4,t3,t2);}

/* k24703 in adduniquekey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   add");
t3=((C_word*)t0)[2];
f_24677(t3,((C_word*)t0)[3],t1);}}

/* addkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24691(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24691,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24699,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   getkey");
t4=((C_word*)t0)[2];
f_24603(t4,t3,t2);}

/* k24697 in addkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   add");
t2=((C_word*)t0)[3];
f_24677(t2,((C_word*)t0)[2],t1);}

/* add in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24677(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24677,NULL,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}

/* getkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24603(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24603,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24607,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24672,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 18   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k24670 in getkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   quantize");
t2=C_retrieve(lf[447]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k24605 in getkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24607,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[5])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[5]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24618,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word)li346),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_24618(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24644,a[2]=t7,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=((C_word)li347),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_24644(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do3771 in k24605 in getkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24644(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24644,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* do3766 in k24605 in getkey in k24599 in k24596 in k24590 in k24844 in k24841 in k24838 in k24835 in k24832 in k24829 in k24826 in spectrum-keys in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24618(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24618,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* spectrum-maxamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24563(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24563,3,t0,t1,t2);}
t3=lf[565];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24567,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t6=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k24565 in spectrum-maxamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24567,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24578,a[2]=((C_word*)t0)[2],a[3]=((C_word)li344),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a24577 in k24565 in spectrum-maxamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24578(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24578,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k24574 in k24565 in spectrum-maxamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24532(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24532,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24536,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t6=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k24534 in spectrum-minamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24536,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24547,a[2]=((C_word*)t0)[2],a[3]=((C_word)li342),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[563]);}}

/* a24546 in k24534 in spectrum-minamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24547(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24547,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k24543 in k24534 in spectrum-minamp in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24514(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24514,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24522,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24520 in spectrum-maxfreq in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24530,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24528 in k24520 in spectrum-maxfreq in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24530,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24504(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24504,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24512,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24510 in spectrum-minfreq in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24445,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24452,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t7=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k24450 in spectrum-pairs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24453 in k24450 in spectrum-pairs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24458,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24456 in k24453 in k24450 in spectrum-pairs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24458,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24463,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li338),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_24463(t5,((C_word*)t0)[2],C_fix(0));}

/* do3728 in k24456 in k24453 in k24450 in spectrum-pairs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24463(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24463,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[559]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24407,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24415,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-time");
t4=C_retrieve(lf[550]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24419,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24417 in k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24423,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24439,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24437 in k24417 in k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k24421 in k24417 in k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24427,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24431,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24429 in k24421 in k24417 in k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k24425 in k24421 in k24417 in k24413 in spectrum-copy in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24323(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24398(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24398,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24389(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24389,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24380(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24380,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24371(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24371,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24362(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24362,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24353(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24353,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24344(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24344,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24329(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24329,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[548]));}

/* make-spectrum in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24323(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24323,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[548],t2,t3,t4,t5));}

/* full-pathname in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24278(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24278,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7302,a[2]=t3,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t7=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_7302(2,t7,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[546],t2);}}

/* k7300 in full-pathname in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub314(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* pathname-type in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_24236(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24236,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24246,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   ffi_pathname_type");
f_7275(t3,t2);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[544],t2);}}

/* k24244 in pathname-type in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_24246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_string_equal_p(t1,lf[543]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_FALSE:t1));}

/* chdir in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23388(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23388,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7230,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7230(2,t4,C_SCHEME_FALSE);}}

/* k7228 in chdir in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub287(C_SCHEME_UNDEFINED,t1));}

/* cwd in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23382,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub283(t2),C_fix(0));}

/* in-tempo in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23360,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_divide(&a,2,C_fix(60),t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_times(&a,2,t2,t4));}

/* rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23044(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_23044r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23044r(t0,t1,t2,t3);}}

static void C_ccall f_23044r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(10);
t4=C_retrieve(lf[524]);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve(lf[526]);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23048,a[2]=t1,a[3]=t5,a[4]=t7,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(t3))){
t9=(C_word)C_i_car(t3);
t10=C_set_block_item(t5,0,t9);
t11=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(C_word)C_i_cadr(t3);
t13=C_set_block_item(t7,0,t12);
t14=t8;
f_23048(t14,t13);}
else{
t12=t8;
f_23048(t12,C_SCHEME_UNDEFINED);}}
else{
t9=t8;
f_23048(t9,C_SCHEME_UNDEFINED);}}

/* k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23048(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23048,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[5]))){
t2=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=(C_word)C_i_symbolp(((C_word*)t0)[5]);
t3=(C_truep(t2)?t2:(C_word)C_i_stringp(((C_word*)t0)[5]));
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23077,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t5=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23105,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,((C_word*)t0)[2],t4,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],lf[538],((C_word*)t0)[5]);}}}}

/* a23104 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23105,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   rhythm");
t3=C_retrieve(lf[530]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23077,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23142,a[2]=t2,a[3]=t3,a[4]=t4,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t3))){
C_trace("ChickenBridge.scm: 17   symbol->string");
t7=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t3);}
else{
t7=t6;
f_23142(2,t7,t3);}}}

/* k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23143,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_i_string_length(t1);
t4=C_fix(0);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t5,a[8]=t1,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 17   next-token-start");
f_23143(t6,t1,((C_word*)t5)[1],t3);}

/* k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23179,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[7])[1],((C_word*)t3)[1]))){
t5=t4;
f_23182(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[537],((C_word*)t0)[8]);}}

/* k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23342,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   substring");
t4=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k23340 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[528],"*rhythms*"),t1);}

/* k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t1)){
t3=t2;
f_23192(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[536],((C_word*)t0)[3]);}}

/* k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23192,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word)li320),tmp=(C_word)a,a+=12,tmp));
t5=((C_word*)t3)[1];
f_23194(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23194(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23194,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]))){
t11=(C_word)C_i_string_ref(((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1]);
t12=C_set_block_item(t10,0,t11);
t13=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[10])[1],C_fix(1));
t14=C_mutate(((C_word *)((C_word*)t0)[7])+1,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23240,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=t10,a[5]=t9,a[6]=t8,a[7]=t7,a[8]=t1,a[9]=((C_word*)t0)[6],a[10]=t6,a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 17   next-token-start");
f_23143(t15,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[9]);}
else{
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t12=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t12))(5,t12,t11,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[8],((C_word*)t7)[1]);}}

/* k23202 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23207,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],((C_word*)t0)[2]))){
t3=t2;
f_23207(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);}}

/* k23205 in k23202 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23207,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,C_fix(1),((C_word*)t0)[5]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 17   *");
C_times(5,0,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2,t3);}

/* k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23240,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23328,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   substring");
t5=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[535],((C_word*)t0)[3]);}}

/* k23326 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23243(2,t3,t2);}

/* k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
switch(((C_word*)((C_word*)t0)[3])[1]){
case C_make_character(43):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23260,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[528],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(45):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23280,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[528],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(42):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23300,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(47):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23314,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
default:
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[534],((C_word*)t0)[2]);}}

/* k23312 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23314,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23246(2,t5,t4);}

/* k23298 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23300,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_times(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23246(2,t5,t4);}

/* k23278 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_23283(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[533],((C_word*)t0)[2]);}}

/* k23281 in k23278 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23283,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23246(2,t5,t4);}

/* k23258 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_23263(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[532],((C_word*)t0)[2]);}}

/* k23261 in k23258 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23263,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23246(2,t5,t4);}

/* k23244 in k23241 in k23238 in do3450 in k23190 in k23187 in k23180 in k23177 in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23246,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_23194(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t2);}

/* next-token-start in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23143(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23143,NULL,4,t1,t2,t3,t4);}
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23149,a[2]=t2,a[3]=t6,a[4]=t4,a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23149(t8,t1,lf[531],t3);}

/* do3440 in next-token-start in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23149(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23149,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23159,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_23159(t6,t4);}
else{
t6=(C_word)C_i_string_ref(((C_word*)t0)[2],t3);
t7=t5;
f_23159(t7,(C_word)C_i_member(t6,t2));}}

/* k23157 in do3440 in next-token-start in k23140 in k23075 in k23046 in rhythm in k23040 in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23159,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23149(t3,((C_word*)t0)[5],((C_word*)t0)[2],t2);}}

/* addryth in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23028(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23028,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23032,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t5=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[528],"*rhythms*"),t2,t3);}

/* k23030 in addryth in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   string->symbol");
t3=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23037 in k23030 in addryth in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_23039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],C_retrieve2(lf[528],"*rhythms*"),t1,((C_word*)t0)[2]);}

/* rsym in k23020 in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_23023(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23023,NULL,4,t1,t2,t3,t4);}
C_trace("ChickenBridge.scm: 17   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t2,t3,t4);}

/* scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22876(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_22876r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_22876r(t0,t1,t2,t3);}}

static void C_ccall f_22876r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22880,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_22880(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_22880(t8,t7);}}

/* k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22880,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22891,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   sort");
t3=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22949,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   sort");
t3=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 17   shuffle");
t2=C_retrieve(lf[482]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[523],((C_word*)((C_word*)t0)[4])[1]);}}

/* a22948 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22949,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22972,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22985,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22992,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k22990 in a22948 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22996,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t3=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k22994 in k22990 in a22948 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k22983 in a22948 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k22970 in a22948 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a22890 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22891,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22914,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22927,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22934,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k22932 in a22890 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22938,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t3=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k22936 in k22932 in a22890 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k22925 in a22890 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k22912 in a22890 in k22878 in scale-order in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22710,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 17   modulo");
t7=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22756,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22763,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22811,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_22811(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 17   key");
t6=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[520],t2);}}}

/* k22809 in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22811,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22828,a[2]=t1,a[3]=((C_word)li311),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 17   transpkeys");
f_22763(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22856,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22860,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k22858 in k22809 in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   transpkeys");
f_22763(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k22854 in k22809 in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   note");
t2=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a22827 in k22809 in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22828(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22828,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22763(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22763,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22772,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li309),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_22772(t8,t1,t2,t4);}

/* do3379 in transpkeys in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22772(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22772,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k22754 in transpose in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22756,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 17   note");
t3=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22575(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22575,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[517],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22605,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22675,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 17   invkeys");
f_22605(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22697,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22701,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[518],t2);}}}

/* k22699 in invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   invkeys");
f_22605(((C_word*)t0)[2],t1);}

/* k22695 in invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   note");
t2=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a22674 in invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22675(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22675,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22605(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22605,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22621,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li305),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_22621(t9,t1,t5,t4);}

/* do3364 in invkeys in invert in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22621(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22621,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22530(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22530,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 17   modulo");
t3=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[515]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22562,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22573,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k22571 in pc in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   modulo");
t2=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k22560 in pc in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[515]),t1);}

/* hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22414,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22429,a[2]=t5,a[3]=t3,a[4]=((C_word)li302),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22429(t7,t1,t2,lf[514],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7012(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22528,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k22526 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do3344 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22429(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22429,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22442,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22459,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_22459(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_22459(t14,(C_word)C_i_listp(t13));}}}

/* k22457 in do3344 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22459,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22463,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   hz");
t4=C_retrieve(lf[513]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22478,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k22476 in k22457 in do3344 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22478,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_22442(t9,t8);}

/* k22461 in k22457 in do3344 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22463,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22442(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22440 in do3344 in hz in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22429(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22292(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22292,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22307,a[2]=t5,a[3]=t3,a[4]=((C_word)li300),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22307(t7,t1,t2,lf[512],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub148(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22412,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k22410 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do3328 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22307(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22307,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22320,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22337,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_22337(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_22337(t14,(C_word)C_i_numberp(t13));}}}

/* k22335 in do3328 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22337(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22337,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22341,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22356,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k22354 in k22335 in do3328 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22356,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_22320(t9,t8);}

/* k22339 in k22335 in do3328 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22341,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22320(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22318 in do3328 in key in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22320(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22307(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22195(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22195,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22210,a[2]=t5,a[3]=t3,a[4]=((C_word)li298),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22210(t7,t1,t2,lf[511],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22290,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k22288 in note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do3314 in note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22210(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22210,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22223,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22241,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   note");
t13=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22256,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22142(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k22254 in do3314 in note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22256,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_22223(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k22239 in do3314 in note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22241,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22223(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22221 in do3314 in note in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22210(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22142(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22142,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22090,a[2]=t6,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t9=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,C_retrieve2(lf[497],"*notes*"),t6);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22140,a[2]=t7,a[3]=t5,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   floor");
t9=*((C_word*)lf[506]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22165,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   symbol->string");
t6=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22043(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22180,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k22178 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22180,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22187,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   keyword->string");
t3=C_retrieve(lf[508]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[509],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22185 in k22178 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22043(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22163 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22043(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22138 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22140,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22108,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22121,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[504]))){
t6=t5;
f_22121(t6,t2);}
else{
t6=(C_word)C_i_lessp(t3,lf[505]);
t7=t5;
f_22121(t7,(C_truep(t6)?(C_word)C_a_i_plus(&a,2,t2,C_fix(1000)):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k22119 in k22138 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[497],"*notes*"),t1);}

/* k22106 in k22138 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[503],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22088 in note-aux in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[502],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* string->note-entry in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_22043(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22043,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22047,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t6=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,C_retrieve2(lf[497],"*notes*"),t2);}

/* k22045 in string->note-entry in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22047,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22072,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[500],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k22070 in k22045 in string->note-entry in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[497],"*notes*"),t1);}

/* k22057 in k22045 in string->note-entry in k22039 in k22036 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[499],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* rangamma in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_22015(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22015r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22015r(t0,t1,t2);}}

static void C_ccall f_22015r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_rangamma");
f_7110(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_rangamma");
f_7110(t1,t3);}}

/* ranpoisson in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21996(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_21996r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_21996r(t0,t1,t2);}}

static void C_ccall f_21996r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_ranpoisson");
f_7120(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_ranpoisson");
f_7120(t1,t3);}}

/* rangauss in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21955(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_21955r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21955r(t0,t1,t2);}}

static void C_ccall f_21955r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7081(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7081(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7081(t1,t4,t5);}}}

/* ranexp in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21936(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_21936r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_21936r(t0,t1,t2);}}

static void C_ccall f_21936r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_ranexp");
f_7092(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_ranexp");
f_7092(t1,t3);}}

/* ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21708(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_21708r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21708r(t0,t1,t2);}}

static void C_ccall f_21708r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[487];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21712,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_21712(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[488]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21849,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[488]);}
else{
t19=t18;
f_21849(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[489]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21884,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[489]);}
else{
t20=t19;
f_21884(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21913,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[353],t2);}
else{
t20=t19;
f_21913(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k21911 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21913,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21928,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21926 in k21911 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21920(2,t2,C_SCHEME_UNDEFINED);}}

/* k21918 in k21911 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21712(t5,t4);}

/* k21882 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21886 in k21882 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21712(t7,t6);}

/* k21847 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21853(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21851 in k21847 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21712(t7,t6);}

/* k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21712,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21715,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21715(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[488]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21749,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[488]);}
else{
t6=t5;
f_21749(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[489]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21784,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[489]);}
else{
t7=t6;
f_21784(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21813,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_21813(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21811 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21813,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21828,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21826 in k21811 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21820(2,t2,C_SCHEME_UNDEFINED);}}

/* k21818 in k21811 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21715(t5,t4);}

/* k21782 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21786 in k21782 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21715(t7,t6);}

/* k21747 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21751 in k21747 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21715(t7,t6);}

/* k21713 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21715,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21718,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21718(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k21716 in k21713 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_21721(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_21721(t5,t4);}}

/* k21719 in k21716 in k21713 in k21710 in ranbeta in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21721(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21721,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub201(t5,t6,t7));}

/* shuffle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21666(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_21666r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21666r(t0,t1,t2);}}

static void C_ccall f_21666r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21680,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21695,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k21693 in shuffle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   shuffle!");
t2=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k21678 in shuffle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   shuffle!");
t2=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21611(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21611,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21622,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7036(t4,t3);}

/* k21620 in shuffle! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21622,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21624,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li288),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_21624(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do3197 in k21620 in shuffle! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21624(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21624,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21652,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7036(t14,((C_word*)t0)[4]);}}

/* k21650 in do3197 in k21620 in shuffle! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_21624(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_21512r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21512r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21512r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21516,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_21516(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_21516(t9,t8);}}

/* k21514 in vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21516,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_21519(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[480],((C_word*)((C_word*)t0)[3])[1]);}}

/* k21517 in k21514 in vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21521,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li286),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   vary1");
f_21521(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21583 in k21517 in k21514 in vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21584(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21584,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   vary1");
f_21521(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k21517 in k21514 in vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21521(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21521,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21537,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7043(t9,t8);}}

/* k21535 in vary1 in k21517 in k21514 in vary in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21537,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[479]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* pick in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21241(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_21241r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21241r(t0,t1,t2);}}

static void C_ccall f_21241r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21259,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7036(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21274,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7036(t4,t5);}}

/* k21272 in pick in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k21257 in pick in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21220,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub167(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub173(t9,t10,t11));}}

/* ran in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21185(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_21185r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21185r(t0,t1,t2);}}

static void C_ccall f_21185r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21189,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_21189(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_21189(t7,t6);}}

/* k21187 in ran in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7036(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7043(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7043(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_20977r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_20977r(t0,t1,t2,t3,t4);}}

static void C_ccall f_20977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20990,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_20990(t13,t12);}
else{
t9=t8;
f_20990(t9,C_SCHEME_UNDEFINED);}}}

/* k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20990,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[27],"ffi_explseg"):C_retrieve2(lf[28],"ffi_geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21011,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 17   error");
t12=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[473],t7);}
else{
t12=t11;
f_21011(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[466]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_21072(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_21072(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[474],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k21073 in k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21075,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21083,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li280),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_21083(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do3116 in k21073 in k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21083(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21083,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21124,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li279),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21095(t8,t1,((C_word*)t0)[3]);}}

/* do3120 in do3116 in k21073 in k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21095(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21095,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21116,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6873(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k21114 in do3120 in do3116 in k21073 in k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21095(t4,((C_word*)t0)[2],t3);}

/* k21122 in do3116 in k21073 in k21070 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21124,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_21083(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k21009 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21011,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li278),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_21016(t5,((C_word*)t0)[2],C_fix(0));}

/* do3104 in k21009 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_21016(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21016,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21048,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k21046 in do3104 in k21009 in k20988 in segs in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_21048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21048,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_21016(t7,((C_word*)t0)[2],t6);}

/* scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_20870r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_20870r(t0,t1,t2,t3,t4);}}

static void C_ccall f_20870r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20877,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_20877(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20957,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 17   error");
t15=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[471],((C_word*)t8)[1]);}
else{
t15=t14;
f_20957(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_20877(t11,C_SCHEME_UNDEFINED);}}

/* k20955 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20877(t4,t3);}

/* k20875 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20877,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li276),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_20886(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do3081 in k20875 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20886(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20886,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20899,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20933,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   fit");
t10=C_retrieve(lf[467]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_20899(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k20931 in do3081 in k20875 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20899(t3,t2);}

/* k20897 in do3081 in k20875 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20899,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20925,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t7=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k20923 in k20897 in do3081 in k20875 in scale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20925,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_20886(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20737(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_20737r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_20737r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_20737r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20741,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_20741(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_20741(t12,t11);}}

/* k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20741,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_20744(t6,t5);}
else{
t3=t2;
f_20744(t3,C_SCHEME_UNDEFINED);}}

/* k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20744,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20746,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li274),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 17   fit1");
f_20746(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a20847 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20848(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20848,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   fit1");
f_20746(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20746(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20746,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20753,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 17   <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k20751 in fit1 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20753,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20776,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 17   remainder");
t9=*((C_word*)lf[468]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20795,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 17   remainder");
t8=*((C_word*)lf[468]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[469],((C_word*)t0)[2]);}}}

/* k20793 in k20751 in fit1 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20802,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[142]+1):*((C_word*)lf[146]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 17   -");
C_minus(3,0,t2,t1);}}

/* k20800 in k20793 in k20751 in fit1 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20802,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k20774 in k20751 in fit1 in k20742 in k20739 in fit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20776,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_20670r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_20670r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_20670r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[466]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20674,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_20674(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_20674(t16,t15);}}

/* k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20720,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   interp1");
f_20538(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_20677(t3,C_SCHEME_UNDEFINED);}}

/* k20718 in k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20677(t3,t2);}

/* k20675 in k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20677,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20713,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   interp1");
f_20538(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_20680(t3,C_SCHEME_UNDEFINED);}}

/* k20711 in k20675 in k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20680(t3,t2);}

/* k20678 in k20675 in k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20680,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20693,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20691 in k20678 in k20675 in k20672 in tendency in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20693,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20624(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_20624r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20624r(t0,t1,t2,t3);}}

static void C_ccall f_20624r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20628,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[464]);}
else{
t5=t4;
f_20628(2,t5,C_SCHEME_UNDEFINED);}}

/* k20626 in interp in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 17   interp1");
f_20538(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 17   interp1");
f_20538(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20538(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20538,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20542,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 17   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[462],t3);}
else{
t6=t5;
f_20542(2,t6,(C_word)C_i_car(t3));}}

/* k20540 in interp1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20542,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 17   err");
t6=C_retrieve(lf[460]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[461],((C_word*)t0)[4]);}
else{
t6=t4;
f_20545(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k20543 in k20540 in interp1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20545,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20554,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li269),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_20554(t13,((C_word*)t0)[2],t9);}

/* do3032 in k20543 in k20540 in interp1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20554(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20554,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6873(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20576,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 17   error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[459],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_20576(2,t13,t12);}}}

/* k20574 in do3032 in k20543 in k20540 in interp1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20554(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20523(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20523,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[26],"ffi_scaler_to_cents"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_scaler_to_cents");
t3=C_retrieve2(lf[26],"ffi_scaler_to_cents");
f_6967(3,t3,t1,t2);}}

/* cents->ratio in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20508(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20508,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[25],"ffi_cents_to_scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_cents_to_scaler");
t3=C_retrieve2(lf[25],"ffi_cents_to_scaler");
f_6960(3,t3,t1,t2);}}

/* rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20272(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_20272r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20272r(t0,t1,t2,t3);}}

static void C_ccall f_20272r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[452];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[453];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20276,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20276(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[454]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20421,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[454]);}
else{
t20=t19;
f_20421(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[455]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20456,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[349],lf[455]);}
else{
t21=t20;
f_20456(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20485,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[353],t3);}
else{
t21=t20;
f_20485(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k20483 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20485,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20500,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20498 in k20483 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20492(2,t2,C_SCHEME_UNDEFINED);}}

/* k20490 in k20483 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20276(t5,t4);}

/* k20454 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20460(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20458 in k20454 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20276(t7,t6);}

/* k20419 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20423 in k20419 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20276(t7,t6);}

/* k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20279,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20279(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20321,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[454]);}
else{
t6=t5;
f_20321(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[455]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20356,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[455]);}
else{
t7=t6;
f_20356(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20385,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_20385(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20383 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20385,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20392,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20400,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20398 in k20383 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20392(2,t2,C_SCHEME_UNDEFINED);}}

/* k20390 in k20383 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20279(t5,t4);}

/* k20354 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20360(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20358 in k20354 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20279(t7,t6);}

/* k20319 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20325,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20325(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20323 in k20319 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20279(t7,t6);}

/* k20277 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_20279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20279,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20282,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20282(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k20280 in k20277 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20282,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li265),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_rhythm_to_seconds");
f_6945(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a20292 in k20280 in k20277 in k20274 in rhythm->seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20293(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20293,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_rhythm_to_seconds");
f_6945(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20232(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20232,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20236,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   expt");
t5=*((C_word*)lf[449]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[450],t3);}

/* k20234 in decimals in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20236,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20247,a[2]=t1,a[3]=((C_word)li263),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20266,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 17   round");
t4=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k20264 in k20234 in decimals in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20266,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a20246 in k20234 in decimals in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20247,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20255,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 17   round");
t5=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k20253 in a20246 in k20234 in decimals in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20255,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20211,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20223,a[2]=t3,a[3]=((C_word)li261),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_quantize");
f_6934(t1,t2,t3);}}

/* a20222 in quantize in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20223(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20223,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_quantize");
f_6934(t1,t2,((C_word*)t0)[2]);}

/* divide in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20168(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20168r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20168r(t0,t1,t2,t3);}}

static void C_ccall f_20168r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[446]+1),t2);}
else{
C_trace("ChickenBridge.scm: 17   /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20198,a[2]=t3,a[3]=((C_word)li259),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[446]+1),t2,t3);}}}

/* a20197 in divide in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20198(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20198,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20125(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20125r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20125r(t0,t1,t2,t3);}}

static void C_ccall f_20125r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[142]+1),t2);}
else{
C_trace("ChickenBridge.scm: 17   -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20155,a[2]=t3,a[3]=((C_word)li257),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[142]+1),t2,t3);}}}

/* a20154 in minus in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20155(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20155,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20056(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20056r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20056r(t0,t1,t2);}}

static void C_ccall f_20056r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[387]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[387]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20100,a[2]=t2,a[3]=((C_word)li255),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[387]+1),t2);}}}}

/* a20099 in times in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20100(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20100,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19987(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_19987r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_19987r(t0,t1,t2);}}

static void C_ccall f_19987r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[146]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[146]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20031,a[2]=t2,a[3]=((C_word)li253),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[146]+1),t2);}}}}

/* a20030 in plus in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_20031(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20031,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* log2 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19981(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19981,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub237(t3,t4));}

/* log10 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19975(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19975,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub232(t3,t4));}

/* float in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19954(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19954,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19966,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[439]));}}

/* a19965 in float in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19966(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19966,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[438]));}

/* int in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19939(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19939,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[22],"ffi_float_to_fixnum"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_float_to_fixnum");
t3=C_retrieve2(lf[22],"ffi_float_to_fixnum");
f_6927(3,t3,t1,t2);}}

/* discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_19828r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_19828r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_19828r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19832,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_19832(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19903,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 17   not?");
t20=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_19832(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_19832(t19,t18);}}}

/* k19901 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19832(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_19832(t2,C_SCHEME_UNDEFINED);}}

/* k19830 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19832,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19846,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li245),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19861,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t3=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19872,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li246),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t2=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a19871 in k19830 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19872,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t3=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19859 in k19830 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a19845 in k19830 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19846(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19846,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19854,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t4=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t4))(8,t4,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19852 in a19845 in k19830 in discrete in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_19794r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_19794r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_19794r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19806,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li243),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6873(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6873(t1,t2,t3,t4,t5,t6,t8);}}}

/* a19805 in rescale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19806(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19806,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[432]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_18747r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18747r(t0,t1,t2,t3);}}

static void C_ccall f_18747r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_18757,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_18757(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[430]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19707,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[349],lf[430]);}
else{
t31=t30;
f_19707(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[431]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19742,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[349],lf[431]);}
else{
t32=t31;
f_19742(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19771,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[353],t3);}
else{
t32=t31;
f_19771(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k19769 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19771,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19786,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19784 in k19769 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19778(2,t2,C_SCHEME_UNDEFINED);}}

/* k19776 in k19769 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18757(t5,t4);}

/* k19740 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19746(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19744 in k19740 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18757(t7,t6);}

/* k19705 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19711(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19709 in k19705 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18757(t7,t6);}

/* k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18757,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18760,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18760(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19607,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_19607(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[431]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19642,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[431]);}
else{
t7=t6;
f_19642(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19671,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_19671(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19669 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19671,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19686,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19684 in k19669 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19678(2,t2,C_SCHEME_UNDEFINED);}}

/* k19676 in k19669 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18760(t5,t4);}

/* k19640 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19646(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19644 in k19640 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18760(t7,t6);}

/* k19605 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19611(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19609 in k19605 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18760(t7,t6);}

/* k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18763,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18763(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18763,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_18768(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[429],((C_word*)((C_word*)t0)[9])[1]);}}

/* k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18770,a[2]=((C_word*)t0)[9],a[3]=((C_word)li221),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18852,a[2]=t4,a[3]=((C_word)li224),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18962,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19500,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li241),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_19500(t10,t6,C_fix(0));}

/* do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19500(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19500,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19510,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19523,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li240),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_19523(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2776 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19523(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19523,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19533,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19551,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t9=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19576,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 16   modulo");
t9=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k19574 in do2776 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19576,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19558,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_19558(t7,t6);}
else{
t5=t4;
f_19558(t5,C_SCHEME_UNDEFINED);}}

/* k19556 in k19574 in do2776 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19558,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_19523(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19549 in do2776 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   add-outcome");
t2=((C_word*)t0)[4];
f_18770(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k19531 in do2776 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19533,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k19508 in do2773 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19510,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19500(t3,((C_word*)t0)[2],t2);}

/* k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19456,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t5=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[145]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19462,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_19462(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_19462(t5,C_SCHEME_FALSE);}}}

/* k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19462,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19468,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t4=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19482 in k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18965(t3,t2);}

/* a19467 in k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19468(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19468,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19476,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   format");
t5=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[427],t2);}

/* k19474 in a19467 in k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19480,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[426],((C_word*)t0)[2]);}

/* k19478 in k19474 in a19467 in k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   string-ci<?");
t2=*((C_word*)lf[425]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19464 in k19460 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18965(t3,t2);}

/* k19454 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18965(t3,t2);}

/* k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18965,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19333,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li238),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19333(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19333(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19333,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19344,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19357,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 16   max");
t10=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19357,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19419,a[2]=t5,a[3]=((C_word)li237),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19419(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2797 in k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19419(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19419,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k19358 in k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19360,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[423]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19376,a[2]=t3,a[3]=t8,a[4]=((C_word)li236),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19376(t10,t6,((C_word*)t0)[2]);}

/* do2803 in k19358 in k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19376(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19376,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19401,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 16   decimals");
t9=C_retrieve(lf[424]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k19399 in do2803 in k19358 in k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19376(t4,((C_word*)t0)[2],t3);}

/* k19365 in k19358 in k19355 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_19333(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19342 in do2789 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19319,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li235),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t4=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a19318 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19319,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 16   before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_18852(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18972,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18975,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[411];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19016,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   make-string");
t7=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_18975(2,t5,C_SCHEME_UNDEFINED);}}

/* k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19300,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li234),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19300(t6,t2,C_fix(0));}

/* do2816 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19300(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19300,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19310,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[413]+1));}}

/* k19308 in do2816 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19310,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19300(t3,((C_word*)t0)[2],t2);}

/* k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19238,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li233),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19238(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19238(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19238,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19248,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t4=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[420],t3);}

/* k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19251,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19257,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19271,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19269 in k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19271,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19273,a[2]=t3,a[3]=((C_word)li232),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19273(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2826 in k19269 in k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19273(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19273,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19283,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19281 in do2826 in k19269 in k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19283,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19273(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19255 in k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k19258 in k19255 in k19249 in k19246 in do2821 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19238(t3,((C_word*)t0)[2],t2);}

/* k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19028,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li231),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19033(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19033(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19033,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 16   newline");
t5=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19049(2,t4,lf[416]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18920,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 16   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[419],t5);}}

/* k18918 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18920,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18929,a[2]=t6,a[3]=t3,a[4]=((C_word)li230),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_18929(t8,((C_word*)t0)[2],t4);}

/* do2768 in k18918 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18929(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18929,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18940,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18951,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[418],t5);}}

/* k18949 in do2768 in k18918 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18938 in do2768 in k18918 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18929(t4,((C_word*)t0)[2],t3);}

/* k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19049,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19055,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19209,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19207 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19209,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19211,a[2]=t3,a[3]=((C_word)li229),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19211(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2842 in k19207 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19211(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19211,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19221,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19219 in do2842 in k19207 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19221,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19211(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19058,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19182,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   min");
t4=*((C_word*)lf[415]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k19180 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19182,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19184,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li228),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19184(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2848 in k19180 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19184(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19184,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19194,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[413]+1));}}

/* k19192 in do2848 in k19180 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19194,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19184(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19061,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li227),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19070(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19070(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19070,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19083,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19102,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 16   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19096,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   display");
t8=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19094 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   display");
t2=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19102,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_string_length(((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19108,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t8=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[2])[1],C_fix(5)))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19150,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   position");
t4=C_retrieve(lf[90]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_make_character(46),((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=t2;
f_19111(t3,C_SCHEME_UNDEFINED);}}

/* k19148 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19162,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_plus(&a,2,t1,C_fix(4));
C_trace("ChickenBridge.scm: 16   min");
t5=*((C_word*)lf[415]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19160 in k19148 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   substring");
t2=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t1);}

/* k19152 in k19148 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_i_string_length(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19111(t5,t4);}

/* k19109 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19111,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19121,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 16   max");
t5=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19119 in k19109 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19121,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19123,a[2]=t3,a[3]=((C_word)li226),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19123(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2864 in k19119 in k19109 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_19123(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19123,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19133,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19131 in do2864 in k19119 in k19109 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19133,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19123(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19112 in k19109 in k19106 in k19100 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   display");
t2=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19081 in do2855 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19070(t3,((C_word*)t0)[2],t2);}

/* k19059 in k19056 in k19053 in k19047 in k19044 in do2836 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19033(t3,((C_word*)t0)[2],t2);}

/* k19026 in k19023 in k19020 in k19017 in k19014 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_19028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   newline");
t2=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k18973 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18975,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18998,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a18997 in k18973 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18998(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18998,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 16   append");
t5=*((C_word*)lf[112]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[410],t4);}

/* k18985 in k18973 in k18970 in k18966 in k18963 in k18960 in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 16   make-markov");
t2=C_retrieve(lf[386]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18852(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18852,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18862,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18900,a[2]=t2,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   list-index");
f_8051(t5,t6,t4);}}

/* a18899 in before? in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18900(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18900,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18860 in before? in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18865,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18890,a[2]=((C_word*)t0)[4],a[3]=((C_word)li222),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   list-index");
f_8051(t2,t3,((C_word*)t0)[2]);}

/* a18889 in k18860 in before? in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18890(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18890,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18863 in k18860 in before? in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_18852(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18770(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18770,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18774,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18842,a[2]=t2,a[3]=((C_word)li219),tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8097,a[2]=t5,a[3]=t8,a[4]=((C_word)li220),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8097(t10,t4,t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do570 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8097(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8097,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8107,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8117,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   p");
t11=((C_word*)t0)[2];
f_18842(t11,t9,t10);}}

/* k8115 in do570 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8107(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8107(t2,C_SCHEME_UNDEFINED);}}

/* k8105 in do570 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8097(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* a18841 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18842(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18842,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k18772 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18774,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18824,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 16   tail");
t7=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18792,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[408],((C_word*)t0)[3]);}}

/* k18790 in k18772 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18792,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k18822 in k18772 in add-outcome in k18766 in k18761 in k18758 in k18755 in markov-analyze in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18824,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18653(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18653,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18657,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t3,t2);}

/* k18655 in next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18657,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18686,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[398]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18072(((C_word*)t0)[2],t6);}}

/* k18684 in k18655 in next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18686,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18691,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li217),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18691(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2691 in k18684 in k18655 in next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18691(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18691,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18701,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_18701(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[405],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18716,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[398]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],t8))){
t9=(C_word)C_i_car(t2);
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t5;
f_18716(t11,t10);}
else{
t9=t5;
f_18716(t9,C_SCHEME_UNDEFINED);}}}

/* k18714 in do2691 in k18684 in k18655 in next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18691(t3,((C_word*)t0)[2],t2);}

/* k18699 in do2691 in k18684 in k18655 in next-in-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18072(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18135(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18135r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18135r(t0,t1,t2,t3);}}

static void C_ccall f_18135r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18139,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18397,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18406,a[2]=t9,a[3]=((C_word)li215),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[404],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18406(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18406,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18410,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_18410(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[403],t2);}}

/* k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18415,a[2]=((C_word*)t0)[4],a[3]=((C_word)li214),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18415(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_18415r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18415r(t0,t1,t2,t3);}}

static void C_ccall f_18415r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18419,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_18419(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[401]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18557,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[401]);}
else{
t20=t19;
f_18557(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[402]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18592,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[349],lf[402]);}
else{
t21=t20;
f_18592(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18621,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[353],t3);}
else{
t21=t20;
f_18621(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k18619 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18621,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18636,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18634 in k18619 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18628(2,t2,C_SCHEME_UNDEFINED);}}

/* k18626 in k18619 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18419(t5,t4);}

/* k18590 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18596(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18594 in k18590 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18419(t7,t6);}

/* k18555 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18561(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18559 in k18555 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18419(t7,t6);}

/* k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18419,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18422,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18422(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18457,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[401]);}
else{
t6=t5;
f_18457(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[402]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18492,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[402]);}
else{
t7=t6;
f_18492(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18521,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_18521(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18519 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18521,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18536,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18534 in k18519 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18528(2,t2,C_SCHEME_UNDEFINED);}}

/* k18526 in k18519 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18422(t5,t4);}

/* k18490 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18496(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18494 in k18490 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18422(t7,t6);}

/* k18455 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18461(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18459 in k18455 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18422(t7,t6);}

/* k18420 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18422,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18425(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18423 in k18420 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_18428(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_18428(t4,t3);}}

/* k18426 in k18423 in k18420 in k18417 in a18414 in k18408 in parse-graph-item in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18428,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[398],t5,t6,t7));}

/* k18395 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18139(2,t3,t2);}

/* k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18139,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18142,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18142(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18302,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_18302(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18337,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_18337(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18366,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_18366(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18364 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18366,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18381,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18379 in k18364 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18373(2,t2,C_SCHEME_UNDEFINED);}}

/* k18371 in k18364 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18142(t5,t4);}

/* k18335 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18341(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18339 in k18335 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18142(t7,t6);}

/* k18300 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18304 in k18300 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18142(t7,t6);}

/* k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18142(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18142,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18145,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18145(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18202,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_18202(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18237,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_18237(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18266,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_18266(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18264 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18266,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18281,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18279 in k18264 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18273(2,t2,C_SCHEME_UNDEFINED);}}

/* k18271 in k18264 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18145(t5,t4);}

/* k18235 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18239 in k18235 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18145(t7,t6);}

/* k18200 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18206(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18204 in k18200 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18145(t7,t6);}

/* k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18148,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18148(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18151,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k18149 in k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18151,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18157,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18163,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[400],"next-in-graph"),t5);}

/* a18162 in k18149 in k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18163,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18169,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18181,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t5,t3);}

/* k18179 in a18162 in k18149 in k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18168 in a18162 in k18149 in k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18169(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18169,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18072(t1,t2);}

/* k18155 in k18149 in k18146 in k18143 in k18140 in k18137 in make-graph in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_18157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_18072(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18072,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[398]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17732(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17732,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17735,a[2]=t4,a[3]=((C_word)li206),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17914,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t6,t2);}

/* k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17918,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12481(t2,((C_word*)t0)[4]);}

/* k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17918,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17920,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li209),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17920(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17920(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17920,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_17930(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_17930(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17845,a[2]=t13,a[3]=((C_word)li208),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_17845(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2517 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17845(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17845,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17855,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_17855(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_17855(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k17853 in do2517 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17855,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[387]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17862,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_17862(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_17862(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_17862(t9,(C_word)C_eqp(t8,lf[387]));}}}}

/* k17860 in k17853 in do2517 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_17845(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17930,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[396],((C_word*)t0)[6]);}
else{
t3=t2;
f_17933(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17920(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k17931 in k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17937,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 16   select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_17735(t7,t2,t4,t6);}

/* k17935 in k17931 in k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17937,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17940,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_17940(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_17940(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17957,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li207),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17957(t8,t3,((C_word*)t0)[3]);}}}

/* do2541 in k17935 in k17931 in k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17957(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17957,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17973,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k17971 in do2541 in k17935 in k17931 in k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k17938 in k17935 in k17931 in k17928 in do2532 in k17916 in k17912 in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17735(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17735,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17803,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranfloat");
f_7043(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17747,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li205),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_17747(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2501 in select-output in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17747(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17747,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 16   select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_17735(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17783,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_17783(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t9,t11);}}}

/* k17781 in do2501 in select-output in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17783,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_17747(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k17801 in select-output in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17803,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17808,a[2]=t3,a[3]=t1,a[4]=((C_word)li204),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17808(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2511 in k17801 in select-output in next-in-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17808(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17808,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17245(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_17245r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17245r(t0,t1,t2,t3);}}

static void C_ccall f_17245r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17249,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17726,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17172,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li202),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_17172(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[395],((C_word*)t4)[1]);}}

/* do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17172(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17172,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17017,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17017(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t13=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[394],((C_word*)t11)[1]);}}}

/* k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17017,2,t0,t1);}
t2=(C_word)C_i_member(lf[390],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17023,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17023(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[392],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17023(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 16   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[393],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17023,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17035,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17108,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li201),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17108(t17,t13);}

/* do2380 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17108(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17108,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t14=t1;
t1=t14;
goto loop;}}

/* k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li200),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17050 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17051(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17051,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17055,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17055(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17055(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17055(t13,t12);}}

/* k17053 in a17050 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17055(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17055,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17058(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17058(t5,t4);}}

/* k17056 in k17053 in a17050 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17058,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17036 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17047 in k17036 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17049,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_17189(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[391],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_17189(2,t10,t9);}}

/* k17187 in k17047 in k17036 in k17033 in k17021 in k17015 in do2402 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17189,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_17172(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k17724 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17249(2,t3,t2);}

/* k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17249,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17252,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17252(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17596,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_17596(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17631,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_17631(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[389]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17666,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[389]);}
else{
t24=t23;
f_17666(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17695,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_17695(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17693 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17695,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17710,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17708 in k17693 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17702(2,t2,C_SCHEME_UNDEFINED);}}

/* k17700 in k17693 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17252(t5,t4);}

/* k17664 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17670(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17668 in k17664 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17252(t7,t6);}

/* k17629 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17635,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17635(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17633 in k17629 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17252(t7,t6);}

/* k17594 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17600(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17598 in k17594 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17252(t7,t6);}

/* k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17252(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17252,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17255(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17461,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_17461(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17496,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_17496(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17531,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[389]);}
else{
t8=t7;
f_17531(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17560,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_17560(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17558 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17560,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17575,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17573 in k17558 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17567(2,t2,C_SCHEME_UNDEFINED);}}

/* k17565 in k17558 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17255(t5,t4);}

/* k17529 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17535(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17533 in k17529 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17255(t7,t6);}

/* k17494 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17500(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17498 in k17494 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17255(t7,t6);}

/* k17459 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17465(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17463 in k17459 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17255(t7,t6);}

/* k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17255,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17258,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17258(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17326,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_17326(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17361,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_17361(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17396,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[389]);}
else{
t8=t7;
f_17396(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17425,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_17425(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17423 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17425,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17432,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17440,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17438 in k17423 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17432(2,t2,C_SCHEME_UNDEFINED);}}

/* k17430 in k17423 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17258(t5,t4);}

/* k17394 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17398 in k17394 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17258(t7,t6);}

/* k17359 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17365(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17363 in k17359 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17258(t7,t6);}

/* k17324 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17330,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17330(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17328 in k17324 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17258(t7,t6);}

/* k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17258,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17261,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17261(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17264,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17270,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17297,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-markov"),t4);}

/* a17296 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17297,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17305,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k17303 in a17296 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17268 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17273(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17283,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 16   make-list");
t7=C_retrieve(lf[73]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[387]);}}

/* k17281 in k17268 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17273(t3,t2);}

/* k17271 in k17268 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_17273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17274 in k17271 in k17268 in k17262 in k17259 in k17256 in k17253 in k17250 in k17247 in make-markov in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16812(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16812,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16816,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t3,t2);}

/* k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}

/* k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16822,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12247(t2,((C_word*)t0)[2]);}

/* k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16822,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t1,C_fix(4));}

/* k16989 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16991,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16828(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12097(t2,((C_word*)t0)[2]);}}

/* k17002 in k16989 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12115(t2,((C_word*)t0)[2]);}

/* k17006 in k17002 in k16989 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_17008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 16   recalc-weightings");
f_16712(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_16828(2,t2,C_SCHEME_UNDEFINED);}}

/* k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_16834(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16965,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16984,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15862(t4,((C_word*)t0)[4]);}}

/* k16982 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16984,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 16   random-item-count-set!");
f_15853(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16963 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15862(t2,((C_word*)t0)[2]);}

/* k16970 in k16963 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16976,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-min");
f_15826(t2,((C_word*)t0)[2]);}

/* k16974 in k16970 in k16963 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16834(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16834,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15772(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12481(t2,((C_word*)t0)[2]);}}

/* k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16840,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16844,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16882,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16924,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   pick");
f_16844(t7,t2,t1);}

/* k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16924,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li197),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_16926(t5,((C_word*)t0)[2],t1);}

/* do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16926(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16926,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16945,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16948,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15844(t4,t2);}

/* k16946 in do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16948,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15862(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16945(t2,C_SCHEME_FALSE);}}

/* k16953 in k16946 in do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16959,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15844(t2,((C_word*)t0)[2]);}

/* k16957 in k16953 in k16946 in do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16945(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k16943 in do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16945(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16945,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16941,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pick");
f_16844(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16939 in k16943 in do2354 in k16922 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16926(t2,((C_word*)t0)[2],t1);}

/* k16880 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16885,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]))){
t3=t2;
f_16885(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16899,a[2]=t4,a[3]=((C_word)li196),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_16899(t6,t2,((C_word*)t0)[2]);}}

/* do2358 in k16880 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16899(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16899,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16909,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-count-set!");
f_15853(t3,t4,C_fix(0));}}

/* k16907 in do2358 in k16880 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16899(t3,((C_word*)t0)[2],t2);}

/* k16883 in k16880 in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15772(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16844(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16844,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16852,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranfloat");
f_7043(t4,t3);}

/* k16850 in pick in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16852,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16854,a[2]=t3,a[3]=((C_word)li194),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_16854(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2349 in k16850 in pick in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16854(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16854,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16875,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-index");
f_15790(t4,t5);}

/* k16873 in do2349 in k16850 in pick in k16838 in k16832 in k16826 in k16820 in k16817 in k16814 in next-in-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_16854(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16712(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16712,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16810,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t2);}

/* k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16810,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[385];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16719,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16769,a[2]=t7,a[3]=t4,a[4]=((C_word)li192),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_16769(t9,t5,t2);}

/* do2321 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16769(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16769,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16798,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16802,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-weight");
f_15808(t4,t5);}}

/* k16800 in do2321 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(((C_word*)t0)[2],t1);}

/* k16796 in do2321 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16798,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   random-item-index-set!");
f_15781(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k16781 in k16796 in do2321 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16769(t3,((C_word*)t0)[2],t2);}

/* k16717 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16719,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16727,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li191),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16727(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2327 in k16717 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16727(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16727,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16760,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t6,a[6]=t5,a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-index");
f_15790(t7,t8);}}

/* k16758 in do2327 in k16717 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16760,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   random-item-index-set!");
f_15781(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k16742 in k16758 in do2327 in k16717 in k16808 in recalc-weightings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16727(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15945(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_15945r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15945r(t0,t1,t2,t3);}}

static void C_ccall f_15945r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15949,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16262,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16262,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16269,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_16269(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_16269(t9,t8);}}

/* k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16269(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16269,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16272,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16272(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[381]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16575,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[381]);}
else{
t22=t21;
f_16575(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[382]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16610,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[382]);}
else{
t23=t22;
f_16610(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[383]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16645,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[383]);}
else{
t24=t23;
f_16645(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16674,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_16674(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16672 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16674,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16689,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16687 in k16672 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16681(2,t2,C_SCHEME_UNDEFINED);}}

/* k16679 in k16672 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16272(t5,t4);}

/* k16643 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16649(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16647 in k16643 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16272(t7,t6);}

/* k16608 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16614(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16612 in k16608 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16272(t7,t6);}

/* k16573 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16577 in k16573 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16272(t7,t6);}

/* k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16272,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16275(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16440,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[381]);}
else{
t6=t5;
f_16440(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16475,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[382]);}
else{
t7=t6;
f_16475(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16510,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[383]);}
else{
t8=t7;
f_16510(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16539,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16539(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16537 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16539,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16546,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16554,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16552 in k16537 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16546(2,t2,C_SCHEME_UNDEFINED);}}

/* k16544 in k16537 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16275(t5,t4);}

/* k16508 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16514(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16512 in k16508 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16275(t7,t6);}

/* k16473 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16477 in k16473 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16275(t7,t6);}

/* k16438 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16442 in k16438 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16275(t7,t6);}

/* k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16275,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16278,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16278(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16305,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[381]);}
else{
t6=t5;
f_16305(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16340,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[382]);}
else{
t7=t6;
f_16340(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16375,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[383]);}
else{
t8=t7;
f_16375(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16404,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16404(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16402 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16404,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16411,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16419,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16417 in k16402 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16411(2,t2,C_SCHEME_UNDEFINED);}}

/* k16409 in k16402 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16278(t5,t4);}

/* k16373 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16379(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16377 in k16373 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16278(t7,t6);}

/* k16338 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16344(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16342 in k16338 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16278(t7,t6);}

/* k16303 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16309(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16307 in k16303 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16278(t7,t6);}

/* k16276 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16278(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16278,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16281,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16281(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)((C_word*)t0)[2])[1]);}}

/* k16279 in k16276 in k16273 in k16270 in k16267 in %make-random-item in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16281,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[370],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15952,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15958,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16226,a[2]=t8,a[3]=t6,a[4]=((C_word)li188),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16226,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16230,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-min");
f_15826(t3,t2);}

/* k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15844(t2,((C_word*)t0)[2]);}

/* k16231 in k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-weight");
f_15808(t2,((C_word*)t0)[2]);}

/* k16234 in k16231 in k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15772(t2,((C_word*)t0)[2]);}

/* k16237 in k16234 in k16231 in k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16252,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t1);}

/* k16250 in k16237 in k16234 in k16231 in k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16252,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16242(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_16242(t2,C_SCHEME_UNDEFINED);}}

/* k16240 in k16237 in k16234 in k16231 in k16228 in a16225 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_16242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15958,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15965,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16221,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t7=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(4));}
else{
t6=t5;
f_15965(t6,C_SCHEME_UNDEFINED);}}

/* k16219 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15965(t3,t2);}

/* k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15965,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_15968,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15968(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16132,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_16132(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16167,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_16167(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16196,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[9]);}
else{
t19=t18;
f_16196(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16194 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16196,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16211,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16209 in k16194 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16203(2,t2,C_SCHEME_UNDEFINED);}}

/* k16201 in k16194 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15968(t5,t4);}

/* k16165 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16171(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16169 in k16165 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15968(t7,t6);}

/* k16130 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16134 in k16130 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15968(t7,t6);}

/* k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15968(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15968,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15971,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15971(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16032,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_16032(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16067,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_16067(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16096,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_16096(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16094 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16096,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16111,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16109 in k16094 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16103(2,t2,C_SCHEME_UNDEFINED);}}

/* k16101 in k16094 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15971(t5,t4);}

/* k16065 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16071(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16069 in k16065 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15971(t7,t6);}

/* k16030 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16036(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16034 in k16030 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15971(t7,t6);}

/* k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15971(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15971,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15974,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15974(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15977,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15989,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[380],"next-in-weighting"),t4);}

/* a15988 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15989,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15995,a[2]=t2,a[3]=((C_word)li186),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16011,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t5,t3);}

/* k16009 in a15988 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15994 in a15988 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15995(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15995,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16003,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15772(t3,t2);}

/* k16001 in a15994 in a15988 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_16003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15975 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   recalc-weightings");
f_16712(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_15980(2,t3,C_SCHEME_UNDEFINED);}}

/* k15978 in k15975 in k15972 in k15969 in k15966 in k15963 in k15956 in k15950 in k15947 in make-weighting in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15862(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15862,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15853(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15853,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[370]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15844(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15844,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15826(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15826,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15808(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15808,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15790(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15790,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15781(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15781,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[370]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15772(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15772,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15550(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15550,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15553,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15600,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t2);}

/* k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15603,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15626,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15745,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12481(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_15603(t4,C_SCHEME_UNDEFINED);}}

/* k15743 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(((C_word*)t0)[2],t1);}

/* k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15633,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15680,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12283(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15707,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12283(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15726,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12283(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15741,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12283(t3,((C_word*)t0)[2]);}}

/* k15739 in k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15741,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[5];
f_15553(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15724 in k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15726,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[5];
f_15553(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15705 in k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15707,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[6];
f_15553(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k15678 in k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15680,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 16   rotate-items");
t4=((C_word*)t0)[7];
f_15553(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k15631 in k15624 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_15603(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k15601 in k15598 in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_15553,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15559,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li175),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_15559(t10,t1,t3);}

/* do2090 in rotate-items in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15559(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15559,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15575,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 16   list-set!");
t7=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k15573 in do2090 in rotate-items in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15578,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   list-set!");
t4=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k15576 in k15573 in do2090 in rotate-items in next-in-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15578,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15559(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15076(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15076r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15076r(t0,t1,t2,t3);}}

static void C_ccall f_15076r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15080,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15540,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15080(t8,t7);}}

/* k15538 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15080(t3,t2);}

/* k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15080(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15080,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15083,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15083(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15413,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_15413(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15448,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_15448(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[368]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15483,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[368]);}
else{
t24=t23;
f_15483(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15512,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_15512(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15510 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15512,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15527,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15525 in k15510 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15519(2,t2,C_SCHEME_UNDEFINED);}}

/* k15517 in k15510 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15083(t5,t4);}

/* k15481 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15485 in k15481 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15083(t7,t6);}

/* k15446 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15450 in k15446 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15083(t7,t6);}

/* k15411 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15415 in k15411 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15083(t7,t6);}

/* k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15083(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15083,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15086(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15278,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_15278(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15313,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_15313(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[368]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15348,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[368]);}
else{
t8=t7;
f_15348(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15377,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_15377(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15375 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15377,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15392,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15390 in k15375 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15384(2,t2,C_SCHEME_UNDEFINED);}}

/* k15382 in k15375 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15086(t5,t4);}

/* k15346 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15350 in k15346 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15086(t7,t6);}

/* k15311 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15317(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15315 in k15311 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15086(t7,t6);}

/* k15276 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15282(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15280 in k15276 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15086(t7,t6);}

/* k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15086(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15086,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15089,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15089(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15143,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_15143(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15178,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_15178(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[368]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[368]);}
else{
t8=t7;
f_15213(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15242,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_15242(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15240 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15242,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15257,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15255 in k15240 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15249(2,t2,C_SCHEME_UNDEFINED);}}

/* k15247 in k15240 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15089(t5,t4);}

/* k15211 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15215 in k15211 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15089(t7,t6);}

/* k15176 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15180 in k15176 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15089(t7,t6);}

/* k15141 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15145 in k15141 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15089(t7,t6);}

/* k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15089,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15092,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15092(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k15093 in k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15095,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15101,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15110,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[367],"next-in-rotation"),t5);}

/* a15109 in k15093 in k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15110,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15122,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k15120 in a15109 in k15093 in k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15099 in k15093 in k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15102 in k15099 in k15093 in k15090 in k15087 in k15084 in k15081 in k15078 in make-rotation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15000(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15000,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15004,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t3,t2);}

/* k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15007,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15023,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12283(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15007(2,t4,C_SCHEME_UNDEFINED);}}

/* k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15023,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15033,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranint");
f_7036(t3,t1);}

/* k15031 in k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15033,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15035,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li171),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15035(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1990 in k15031 in k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_15035(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15035,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15052,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 16   list-set!");
t10=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15050 in do1990 in k15031 in k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   list-set!");
t3=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15053 in k15050 in do1990 in k15031 in k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15055,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15066,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranint");
f_7036(t3,((C_word*)t0)[2]);}

/* k15064 in k15053 in k15050 in do1990 in k15031 in k15021 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15035(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15005 in k15002 in next-in-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_15007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14737(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_14737r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14737r(t0,t1,t2,t3);}}

static void C_ccall f_14737r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14741,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14990,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14741(t8,t7);}}

/* k14988 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14741(t3,t2);}

/* k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14741,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14744,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14744(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14898,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_14898(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14933,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_14933(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14962,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_14962(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14960 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14962,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14977,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14975 in k14960 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14969(2,t2,C_SCHEME_UNDEFINED);}}

/* k14967 in k14960 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14744(t5,t4);}

/* k14931 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14935 in k14931 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14744(t7,t6);}

/* k14896 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14900 in k14896 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14744(t7,t6);}

/* k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14744,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14747,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14747(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14798,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_14798(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14833,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14833(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14862,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_14862(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14860 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14862,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14877,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14875 in k14860 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14869(2,t2,C_SCHEME_UNDEFINED);}}

/* k14867 in k14860 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14747(t5,t4);}

/* k14831 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14835 in k14831 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14747(t7,t6);}

/* k14796 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14800 in k14796 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14747(t7,t6);}

/* k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14747(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14747,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14750,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14750(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k14748 in k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k14751 in k14748 in k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14753,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14759,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14765,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[365],"next-in-heap"),t5);}

/* a14764 in k14751 in k14748 in k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14765,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14777,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k14775 in a14764 in k14751 in k14748 in k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14757 in k14751 in k14748 in k14745 in k14742 in k14739 in make-heap in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14701,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14705,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t3,t2);}

/* k14703 in next-in-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14705,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14714,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14721,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14727,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 16   pattern-data-set!");
f_12256(t4,((C_word*)t0)[2],t5);}}

/* k14725 in k14703 in next-in-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14719 in k14703 in next-in-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[2],t1,C_fix(1));}

/* k14712 in k14703 in next-in-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14454(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14454r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14454r(t0,t1,t2,t3);}}

static void C_ccall f_14454r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14458,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14458(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14458(t8,t7);}}

/* k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14458(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14458,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14461,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14461(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14607,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_14607(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14642,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_14642(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14671,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_14671(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14669 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14671,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14686,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14684 in k14669 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14678(2,t2,C_SCHEME_UNDEFINED);}}

/* k14676 in k14669 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14461(t5,t4);}

/* k14640 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14646(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14644 in k14640 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14461(t7,t6);}

/* k14605 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14611(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14609 in k14605 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14461(t7,t6);}

/* k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14461,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14464,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14464(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14507,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_14507(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14542,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14542(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14571,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_14571(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14569 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14571,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14586,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14584 in k14569 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14578(2,t2,C_SCHEME_UNDEFINED);}}

/* k14576 in k14569 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14464(t5,t4);}

/* k14540 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14546(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14544 in k14540 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14464(t7,t6);}

/* k14505 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14511(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14509 in k14505 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14464(t7,t6);}

/* k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14464,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14467,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14467(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k14465 in k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k14468 in k14465 in k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14470,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14476,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14478,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[363],"next-in-line"),t4);}

/* a14477 in k14468 in k14465 in k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14478,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14486,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k14484 in a14477 in k14468 in k14465 in k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14474 in k14468 in k14465 in k14462 in k14459 in k14456 in make-line in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14239(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14239,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14243,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12481(t3,t2);}

/* k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14243,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14249,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14273,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[355]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14452,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   palin-len");
f_13680(t8,t1);}}

/* k14450 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14452,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   palin-inc-set!");
f_13689(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_14249(2,t2,C_SCHEME_UNDEFINED);}}

/* k14403 in k14450 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14405,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_14417(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_14417(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_14417(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_14417(t7,C_SCHEME_FALSE);}}}

/* k14415 in k14403 in k14450 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14417,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14249(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14249(2,t4,t3);}}

/* k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   palin-len");
f_13680(t2,((C_word*)t0)[2]);}

/* k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14276,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t7=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   palin-inc-set!");
f_13689(t2,((C_word*)t0)[2],C_fix(1));}

/* k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14373,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_14373(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_14373(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_14373(t5,C_SCHEME_FALSE);}}}

/* k14371 in k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14288(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_14288(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14288(t3,t2);}}

/* k14286 in k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_14288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14367,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12247(t3,((C_word*)t0)[2]);}

/* k14365 in k14286 in k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logtest");
t2=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(2));}

/* k14292 in k14286 in k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14294,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14249(2,t2,C_SCHEME_UNDEFINED);}}

/* k14295 in k14292 in k14286 in k14283 in k14280 in k14274 in k14271 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14297,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[360]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[361]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],t1,t2);}}}}

/* k14247 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[355]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t9=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k14250 in k14247 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t2,((C_word*)t0)[2]);}

/* k14257 in k14250 in k14247 in k14241 in next-in-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13769r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13769r(t0,t1,t2,t3);}}

static void C_ccall f_13769r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13773,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13773(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13773(t8,t7);}}

/* k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13773,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13776,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13776(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14110,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_14110(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14145,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_14145(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[359]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14180,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[359]);}
else{
t24=t23;
f_14180(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14209,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_14209(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14207 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14209,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14224,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14222 in k14207 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14216(2,t2,C_SCHEME_UNDEFINED);}}

/* k14214 in k14207 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13776(t5,t4);}

/* k14178 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14184(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14182 in k14178 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13776(t7,t6);}

/* k14143 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14149,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14149(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14147 in k14143 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13776(t7,t6);}

/* k14108 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14112 in k14108 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13776(t7,t6);}

/* k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13776,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13779(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13975,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_13975(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14010,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14010(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14045,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[359]);}
else{
t8=t7;
f_14045(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14074,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_14074(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14072 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14089,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14087 in k14072 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14081(2,t2,C_SCHEME_UNDEFINED);}}

/* k14079 in k14072 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13779(t5,t4);}

/* k14043 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14049(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14047 in k14043 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13779(t7,t6);}

/* k14008 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14012 in k14008 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_14014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13779(t7,t6);}

/* k13973 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13977 in k13973 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13779(t7,t6);}

/* k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13779,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13782,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13782(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13840,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_13840(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13875,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_13875(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13910,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[359]);}
else{
t8=t7;
f_13910(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13939,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_13939(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13937 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13939,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13954,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13952 in k13937 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13946(2,t2,C_SCHEME_UNDEFINED);}}

/* k13944 in k13937 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13782(t5,t4);}

/* k13908 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13914(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13912 in k13908 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13782(t7,t6);}

/* k13873 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13879(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13877 in k13873 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13782(t7,t6);}

/* k13838 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13844,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13844(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13842 in k13838 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13782(t7,t6);}

/* k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13782,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13785(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k13786 in k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13788,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13794,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13811,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[358],"next-in-palindrome"),t5);}

/* a13810 in k13786 in k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13811,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13819,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k13817 in a13810 in k13786 in k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13792 in k13786 in k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13797,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[355],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12472(t2,((C_word*)t0)[4],t5);}

/* k13795 in k13792 in k13786 in k13783 in k13780 in k13777 in k13774 in k13771 in make-palindrome in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13689(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13689,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13680(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13680,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13608(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13608,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13612,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t3,t2);}

/* k13610 in next-in-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13615,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_13615(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_13615(t4,C_SCHEME_UNDEFINED);}}

/* k13613 in k13610 in next-in-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13353(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13353r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13353r(t0,t1,t2,t3);}}

static void C_ccall f_13353r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13357,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13357(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13357(t8,t7);}}

/* k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13357,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13360,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13360(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13514,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_13514(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13549,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_13549(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13578,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_13578(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13576 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13578,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13593,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13591 in k13576 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13585(2,t2,C_SCHEME_UNDEFINED);}}

/* k13583 in k13576 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13360(t5,t4);}

/* k13547 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13553(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13551 in k13547 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13360(t7,t6);}

/* k13512 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13518(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13516 in k13512 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13360(t7,t6);}

/* k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13360,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13363,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13363(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13414,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_13414(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13449,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_13449(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13478,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_13478(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13476 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13478,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13493,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13491 in k13476 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13485(2,t2,C_SCHEME_UNDEFINED);}}

/* k13483 in k13476 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13363(t5,t4);}

/* k13447 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13451 in k13447 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13363(t7,t6);}

/* k13412 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13416 in k13412 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13363(t7,t6);}

/* k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13363(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13363,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13366,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13366(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k13364 in k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12540(t2);}

/* k13367 in k13364 in k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13369,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13375,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13381,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12550(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[345],"next-in-cycle"),t5);}

/* a13380 in k13367 in k13364 in k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13381,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13393,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12265(t4,t3);}

/* k13391 in a13380 in k13367 in k13364 in k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13373 in k13367 in k13364 in k13361 in k13358 in k13355 in make-cycle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13238(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13238,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13351,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t2);}

/* k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13351,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13248,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13251,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13336,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-stream");
f_12133(t7,t1);}

/* k13334 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13336,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13347,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   period-stream");
f_12133(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_13251(2,t2,C_SCHEME_UNDEFINED);}}

/* k13345 in k13334 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(((C_word*)t0)[2],t1);}

/* k13341 in k13334 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t4=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12115(t2,((C_word*)t0)[3]);}

/* k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13333,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13259,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[300]);
t7=t4;
f_13259(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 16   period-length");
f_12115(t4,((C_word*)t0)[3]);}}

/* k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13259,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13262,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13268,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13323,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12247(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_13268(2,t5,C_SCHEME_FALSE);}}

/* k13321 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logtest");
t2=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(8));}

/* k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13268,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13287,a[2]=t3,a[3]=((C_word)li156),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   map-pattern-data");
f_13192(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13262(t2,C_SCHEME_UNDEFINED);}}

/* a13286 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13287(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13287,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13316,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   reset-period");
f_13238(t3,t2);}

/* k13314 in a13286 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13316,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13295 in k13314 in a13286 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13312,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12169(t3,t1);}

/* k13310 in k13295 in k13314 in a13286 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13312,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-omit-set!");
f_12160(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13298 in k13295 in k13314 in a13286 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13300,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13269 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13271,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 16   max");
t4=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_13262(t2,C_SCHEME_UNDEFINED);}}

/* k13279 in k13269 in k13266 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13262(t3,t2);}

/* k13260 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13262(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13262,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13263 in k13260 in k13257 in k13331 in k13249 in k13246 in k13349 in reset-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13192(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13192,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[310]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13183(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13183,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[310]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12891(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12891,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12898,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t2);}

/* k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12898,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 16   obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}}

/* k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12901,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12904,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13172,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12097(t5,t1);}

/* k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13172,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13164,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-reps");
f_12187(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_12904(2,t2,C_SCHEME_UNDEFINED);}}

/* k13162 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13164,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12328(t5,((C_word*)t0)[4],lf[338]);}
else{
t5=((C_word*)t0)[2];
f_13127(t5,C_SCHEME_UNDEFINED);}}

/* k13154 in k13162 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12346(t2,((C_word*)t0)[2],lf[337]);}

/* k13157 in k13154 in k13162 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[338]);
t3=((C_word*)t0)[2];
f_13127(t3,t2);}

/* k13125 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13127,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13133(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13150,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   reset-period");
f_13238(t4,((C_word*)t0)[2]);}}

/* k13148 in k13125 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13133(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13131 in k13125 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13133,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[325]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12328(t3,((C_word*)t0)[2],lf[325]);}
else{
t2=((C_word*)t0)[3];
f_12904(2,t2,C_SCHEME_UNDEFINED);}}

/* k13135 in k13131 in k13125 in k13170 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12346(((C_word*)t0)[3],((C_word*)t0)[2],lf[337]);}

/* k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12904,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12247(t2,((C_word*)t0)[3]);}}

/* k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12910,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12916,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13002,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t11=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,t1,C_fix(1));}

/* k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13002,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13005,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13018,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13183(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13025,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13114,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t4=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],C_fix(8));}}

/* k13112 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13114,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13121,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12115(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13025(t2,C_SCHEME_FALSE);}}

/* k13119 in k13112 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13025(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13025,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li152),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13027(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13027(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13027,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13076,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li151),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13076(t9,t5);}}

/* do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13076,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12301(t2,((C_word*)t0)[3]);}

/* k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13111,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(t1,lf[325]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13086,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13093,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13100,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13183(t4,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13183(t3,((C_word*)t0)[3]);}}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13236,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t2,t1);}

/* k13234 in k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13236,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12319(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13093(2,t2,((C_word*)t0)[2]);}}

/* k13209 in k13234 in k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13232,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12169(t2,t1);}

/* k13230 in k13209 in k13234 in k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13232,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13220,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13228,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12169(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13093(2,t2,((C_word*)t0)[2]);}}

/* k13226 in k13230 in k13209 in k13234 in k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13228,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-omit-set!");
f_12160(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13218 in k13230 in k13209 in k13234 in k13098 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13093(2,t2,lf[325]);}

/* k13091 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12292(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13084 in k13109 in do1642 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13076(t2,((C_word*)t0)[2]);}

/* k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13074,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12301(t3,((C_word*)t0)[3]);}

/* k13072 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(((C_word*)t0)[2],t1);}

/* k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13038,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13057,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13070,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12301(t5,((C_word*)t0)[3]);}

/* k13068 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(((C_word*)t0)[2],t1);}

/* k13055 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13057,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13065,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12301(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[337]);
t3=((C_word*)t0)[3];
f_13041(t3,t2);}}

/* k13063 in k13055 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-state");
f_12355(((C_word*)t0)[2],t1);}

/* k13059 in k13055 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13041(t3,t2);}

/* k13039 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_13041(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13041,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13044,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[3])[1],lf[325]))){
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12292(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13044(2,t4,t3);}}

/* k13042 in k13039 in k13036 in k13032 in do1638 in k13023 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13027(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13016 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12292(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13003 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13014,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12301(t3,((C_word*)t0)[2]);}

/* k13012 in k13003 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(((C_word*)t0)[2],t1);}

/* k13007 in k13003 in k13000 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_13009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[337]);
t4=((C_word*)t0)[2];
f_12916(2,t4,t3);}

/* k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],lf[337]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12961,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12973,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12097(t4,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12996,a[2]=((C_word*)t0)[6],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],C_fix(64));}}

/* k12994 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12292(((C_word*)t0)[3],((C_word*)t0)[2],lf[325]);}
else{
t2=((C_word*)t0)[3];
f_12976(2,t2,C_SCHEME_UNDEFINED);}}

/* k12974 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(16));}

/* k12980 in k12974 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12982,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12097(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12919(2,t2,C_SCHEME_UNDEFINED);}}

/* k12991 in k12980 in k12974 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12993,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12971 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12973,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12088(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12959 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12292(t2,((C_word*)t0)[2],lf[325]);}

/* k12962 in k12959 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_12919(2,t3,t2);}

/* k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12955,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12097(t3,((C_word*)t0)[2]);}

/* k12953 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12955,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[337]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-reps");
f_12187(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_12922(2,t3,t2);}}

/* k12948 in k12953 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12950,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k12920 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12935,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_12925(t3,C_SCHEME_UNDEFINED);}}

/* k12933 in k12920 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12925(t3,t2);}

/* k12923 in k12920 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12925(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12925,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12346(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12926 in k12923 in k12920 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12328(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k12929 in k12926 in k12923 in k12920 in k12917 in k12914 in k12908 in k12902 in k12899 in k12896 in next-1 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12768(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_12768r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_12768r(t0,t1,t2,t3);}}

static void C_ccall f_12768r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12789,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li148),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_12789(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12827,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t1,t2);}}

/* k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12827,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k12835 in k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12837,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12839,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li149),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12839(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1614 in k12835 in k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12839(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12839,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_eqvp(((C_word*)t5)[1],lf[338]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12858,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12868,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   eop?");
t13=C_retrieve(lf[336]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k12866 in do1614 in k12835 in k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12868,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_12858(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12873,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t2,((C_word*)t0)[2]);}}

/* k12871 in k12866 in do1614 in k12835 in k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12858(t3,t2);}

/* k12856 in do1614 in k12835 in k12825 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_12839(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1607 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12789(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12789,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12821,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_12891(t4,((C_word*)t0)[2]);}}

/* k12819 in do1607 in next in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12821,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_12789(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12749,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12756,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t2);}

/* k12754 in eod? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12756,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12763,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value");
t3=C_retrieve2(lf[319],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[338]));}}

/* k12761 in k12754 in eod? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   eod?");
t2=C_retrieve(lf[182]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12730(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12730,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12737,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t2);}

/* k12735 in eop? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12737,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12744,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state");
f_12355(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[337]));}}

/* k12742 in k12735 in eop? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   eop?");
t2=C_retrieve(lf[336]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12550(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12550,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12554,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data-set!");
f_12256(t12,t2,t3);}

/* k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12563,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12566,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12720,a[2]=t3,a[3]=((C_word)li144),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   map-pattern-data");
f_13192(t4,t5,((C_word*)t0)[7]);}

/* a12719 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12720(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12720,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12727,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12232(t3,t2);}

/* k12725 in a12719 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12718,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t4=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t3=t2;
f_12569(t3,C_SCHEME_UNDEFINED);}}

/* k12716 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12569(t3,t2);}

/* k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12569(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12569,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12701,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t8=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}
else{
t7=(C_word)C_eqp(t4,lf[333]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12711,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t9=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}
else{
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[334],t4);}}}

/* k12709 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12575(2,t3,t2);}

/* k12699 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12575(2,t3,t2);}

/* k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12575,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[327]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12681,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t8=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(32));}
else{
t7=(C_word)C_eqp(t4,lf[331]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12691,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t9=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(64));}
else{
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[332],t4);}}}

/* k12689 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12581(2,t3,t2);}

/* k12679 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12581(2,t3,t2);}

/* k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12644,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t4=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12644,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12652,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   lognot");
t4=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k12656 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12658,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12666,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12670,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   lognot");
t5=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t3=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}}

/* k12672 in k12656 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12584(t3,t2);}

/* k12668 in k12656 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logand");
t2=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12664 in k12656 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(16));}

/* k12660 in k12656 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12584(t3,t2);}

/* k12650 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logand");
t2=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12646 in k12642 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12584(t3,t2);}

/* k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12584,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:*((C_word*)lf[2]+1));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t8=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12587,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12593,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_12593(t6,C_SCHEME_UNDEFINED);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12628,a[2]=t4,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t7=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(2));}}

/* k12626 in k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12593(t3,t2);}

/* k12591 in k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12596,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12606,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 16   make-period");
f_12076(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 16   make-period");
f_12076(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k12604 in k12591 in k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t4=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k12594 in k12591 in k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12599,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k12597 in k12594 in k12591 in k12585 in k12582 in k12579 in k12573 in k12567 in k12564 in k12561 in k12558 in k12555 in k12552 in initialize-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12540(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12540,NULL,1,t1);}
t2=lf[325];
t3=lf[325];
t4=lf[325];
t5=*((C_word*)lf[2]+1);
t6=lf[326];
t7=lf[327];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[310],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12481(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12481,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12472(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12472,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12355(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12355,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12346(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12346,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_12337 in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_12337(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12337,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12328(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12328,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12319(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12319,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12301(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12301,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12292(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12292,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12283(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12283,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12265(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12265,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12256(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12256,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12247(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12247,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12232(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12232,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[310]));}

/* period-reps in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12187(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12187,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12169,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12160(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12160,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12133(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12133,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12115(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12115,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12097(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12097,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12088(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12088,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_12076(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12076,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[300],t2,t3,t4,t5,t6,t7));}

/* parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11327(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11327,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[287],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11349,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[291],t8,lf[292]));}
else{
t19=t17;
f_11349(2,t19,C_SCHEME_UNDEFINED);}}

/* k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11349,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[290]));}
else{
t9=t8;
f_11364(2,t9,C_SCHEME_UNDEFINED);}}

/* k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[289]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_11367(t6,t5);}
else{
t4=t2;
f_11367(t4,C_SCHEME_UNDEFINED);}}

/* k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11367,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11537,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li118),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11543,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li119),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11542 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11543,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11536 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11537,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   parse-then-else-dependents");
f_11196(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_11373(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11519,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8676(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k11517 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11373(t3,t2);}

/* k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11373,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   loop-operator-set!");
f_8423(t2,((C_word*)((C_word*)t0)[7])[1],lf[234]);}

/* k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11512,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping");
t4=C_retrieve2(lf[96],"loop-looping");
f_8477(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k11510 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11512,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
C_trace("ChickenBridge.scm: 15   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11500,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[234],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11383,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_11396(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_11396(t7,(C_word)C_eqp(t6,lf[281]));}}

/* k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11396,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[288]));}
else{
t5=t4;
f_11403(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_11383(t2,C_SCHEME_UNDEFINED);}}

/* k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11406,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11459,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li116),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11473,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li117),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11472 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11473,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11458 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11467,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k11465 in a11458 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   parse-then-else-dependents");
f_11196(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_11409(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11445,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8676(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11443 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11409(t3,t2);}

/* k11407 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11409,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping");
t4=C_retrieve2(lf[96],"loop-looping");
f_8477(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k11436 in k11407 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11438,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8483(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k11413 in k11436 in k11407 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8483(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k11416 in k11413 in k11436 in k11407 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11422,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8676(t2,lf[234],t3);}

/* k11420 in k11416 in k11413 in k11436 in k11407 in k11404 in k11401 in k11394 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11383(t3,t2);}

/* k11381 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11383(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11383,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8483(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k11384 in k11381 in k11498 in k11374 in k11371 in k11368 in k11365 in k11362 in k11347 in parse-conditional in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11196(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11196,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11200,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11205,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li114),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_11205(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11205,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t12,t10,t11);}}

/* k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_11159(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[284]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[285]);
t8=t2;
f_11159(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_11159(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_11159(t3,C_SCHEME_FALSE);}}

/* k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11159,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11222,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_11222(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[282],t6,lf[283]));}}

/* k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11295,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li112),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11308,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11307 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11308,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11294 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11303,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11301 in a11294 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k11223 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k11227 in k11223 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11229,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11234,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_11234(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[214]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[280]));}
else{
t10=t5;
f_11234(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[281]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_11234(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11272,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t10,t11,((C_word*)t0)[3]);}}}}

/* k11270 in k11227 in k11223 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_11234(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_11234(2,t2,C_SCHEME_UNDEFINED);}}

/* k11232 in k11227 in k11223 in k11220 in k11157 in k11151 in do1247 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_11205(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11198 in parse-then-else-dependents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11095,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11102,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[277],t13,lf[278]));}
else{
t13=t11;
f_11102(2,t13,C_SCHEME_UNDEFINED);}}

/* k11100 in parse-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11102,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11133,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11131 in k11100 in parse-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11133,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11121,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11129,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k11127 in k11131 in k11100 in parse-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11129,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[102],lf[263],lf[107],t2));}

/* k11119 in k11131 in k11100 in parse-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11004,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11011,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[274],t15,lf[275]));}
else{
t15=t13;
f_11011(2,t15,C_SCHEME_UNDEFINED);}}

/* k11009 in parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11011,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11077 in k11009 in parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11079,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11022,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[271]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_11022(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[272]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_11022(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[273]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_11022(t9,t8);}
else{
t8=t4;
f_11022(t8,C_SCHEME_UNDEFINED);}}}}

/* k11020 in k11077 in k11009 in parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_11022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11022,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11033,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11049,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k11047 in k11020 in k11077 in k11009 in parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11049,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[102],lf[271],lf[107],t3,lf[110],t4));}

/* k11031 in k11020 in k11077 in k11009 in parse-thereis in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_11033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10938,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10949,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[268],t7,lf[269]));}
else{
t13=t12;
f_10949(2,t13,C_SCHEME_UNDEFINED);}}

/* k10947 in parse-while-until in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[266]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_10952(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[267]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[178],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_10952(t10,t9);}
else{
t5=t2;
f_10952(t5,C_SCHEME_UNDEFINED);}}}

/* k10950 in k10947 in parse-while-until in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10959,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[3])[1],lf[265]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[107],t4));}

/* k10957 in k10950 in k10947 in parse-while-until in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10932(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10932,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[263],t2));}

/* parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10386,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10395,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10400,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10405,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_10417,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[260],t7,lf[261]));}
else{
t30=t29;
f_10417(2,t30,C_SCHEME_UNDEFINED);}}

/* k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10417,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_10428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_10428(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[256]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10881,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[259]));}
else{
t11=t9;
f_10881(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_10428(2,t9,C_SCHEME_UNDEFINED);}}}

/* k10879 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8753(t2,t3);}

/* k10885 in k10879 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10887,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_10428(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[257],t2,lf[258]));}}

/* k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_10432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10313,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li106),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10313(t9,t2,C_SCHEME_FALSE);}

/* do1069 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10313(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10313,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10327,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10338,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   loop-collectors");
t9=C_retrieve2(lf[93],"loop-collectors");
f_8441(3,t9,t7,t8);}}

/* k10336 in do1069 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10338,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10273,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li105),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_10273(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1061 in k10336 in do1069 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10273(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10273,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10286,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_10286(t12,t11);}
else{
t10=t6;
f_10286(t10,C_SCHEME_UNDEFINED);}}}

/* k10284 in do1061 in k10336 in do1069 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10286(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_10273(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10325 in do1069 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_10313(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10432,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_10435,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10865,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10869,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-type");
f_10400(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_10435(2,t6,t5);}}

/* k10867 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[253];
t3=lf[254];
t4=lf[255];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_10865(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_10865(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_10865(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_10865(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k10863 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10865,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_10435(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10861,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   collector-type");
f_10400(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10859 in k10863 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10861,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[250],t1,lf[251],((C_word*)t0)[2],lf[252]));}

/* k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10438,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[232]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[233]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10481,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10519,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_10519(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 15   gensym");
t10=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[235]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10548,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10405(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[236]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[237]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t8=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[240]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[112]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_10655(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[244]);
t10=t8;
f_10655(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[249])));}}}}

/* k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10655,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10658,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10771,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10829,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t9,((C_word*)((C_word*)t0)[13])[1],lf[248]);}
else{
t9=t8;
f_10771(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10764,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10405(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_10438(t2,C_SCHEME_UNDEFINED);}}

/* k10762 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10658(t6,t5);}

/* k10827 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10829,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10771(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10771(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10771,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[247]);}

/* k10773 in k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10775,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[246]);}

/* k10777 in k10773 in k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10779,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)((C_word*)t0)[11])[1],lf[245]);}

/* k10819 in k10777 in k10773 in k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10821,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k10815 in k10819 in k10777 in k10773 in k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10817,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10795,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10395(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k10793 in k10815 in k10819 in k10777 in k10773 in k10769 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10795,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10658(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10658(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10656 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10658,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10661,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[112]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[241]);
t5=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[243],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10661(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[244]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[241],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10661(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[243],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_10661(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10659 in k10656 in k10653 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10661,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10438(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_10438(t2,C_SCHEME_UNDEFINED);}}

/* k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10560,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[236]);
t3=(C_truep(t2)?lf[145]:lf[149]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10566,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10610,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_10610(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 15   gensym");
t9=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[239]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10643,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10405(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k10641 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10566(t3,t2);}

/* k10608 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10610,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k10634 in k10608 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10636,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10618,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10395(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10616 in k10634 in k10608 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10618,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10566(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[238],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10566(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10564 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10566,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k10604 in k10564 in k10558 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10606,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[238],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[234],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[183],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_10438(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k10546 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10481(t3,t2);}

/* k10517 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10519,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k10539 in k10517 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10541,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10527,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10395(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10525 in k10539 in k10517 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10527,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10481(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_10481(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10479 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10481(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10481,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[232]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10438(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_10438(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10438,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10445,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10447 in k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10451 in k10447 in k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10457,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10455 in k10451 in k10447 in k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10461,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10459 in k10455 in k10451 in k10447 in k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10461,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[102],((C_word*)t0)[5],lf[103],((C_word*)t0)[4],lf[105],((C_word*)t0)[3],lf[107],((C_word*)t0)[2],lf[110],t1,lf[104],t2,lf[106],C_SCHEME_END_OF_LIST));}

/* k10443 in k10436 in k10433 in k10430 in k10426 in k10415 in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10405(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10405,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10400(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10400,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10395(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10395,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10227,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10238,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[229],t6,lf[230]));}
else{
t12=t11;
f_10238(2,t12,C_SCHEME_UNDEFINED);}}

/* k10236 in parse-initially in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10238,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10253,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(t6,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[105],t7));}

/* k10251 in k10236 in parse-initially in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10189(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10189,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10200,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[226],t6,lf[227]));}
else{
t12=t11;
f_10200(2,t12,C_SCHEME_UNDEFINED);}}

/* k10198 in parse-finally in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10200,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10215,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(t6,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[109],t7));}

/* k10213 in k10198 in parse-finally in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10122,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10133,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10142,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li98),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_10142(t16,t12);}

/* do1018 in parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_10142(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10142,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10152,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_10152(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t3,t4,((C_word*)t0)[5]);}}

/* k10150 in do1018 in parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10152,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[223],((C_word*)t0)[4],lf[224]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10165,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_10142(t7,((C_word*)t0)[7]);}}

/* k10163 in k10150 in do1018 in parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k10131 in parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10140,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[3],lf[107],((C_word*)((C_word*)t0)[2])[1]));}

/* k10138 in k10131 in parse-do in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9929,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9936,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9989,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li96),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_9989(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9989(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9989,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_9999(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t7,t8,((C_word*)t0)[5]);}}

/* k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9999,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10010,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10113,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8753(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10113,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10019,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[212],((C_word*)((C_word*)t0)[10])[1],lf[213]));}
else{
t4=t3;
f_10019(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[214]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10041,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[215]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10070,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10078,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[216]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[200]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[217]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_10010(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[218],((C_word*)((C_word*)t0)[10])[1],lf[219]));}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[220],((C_word*)((C_word*)t0)[10])[1],lf[221]));}}}}}

/* k10076 in k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10078,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10041(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10068 in k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10070,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10041(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10039 in k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_10010(2,t6,t5);}

/* k10017 in k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10022,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[210],((C_word*)((C_word*)t0)[8])[1],lf[211]));}
else{
t3=t2;
f_10022(2,t3,C_SCHEME_UNDEFINED);}}

/* k10020 in k10017 in k10111 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_10010(2,t6,t5);}

/* k10008 in k9997 in do974 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_10010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9989(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9939,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[209]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9979,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9987,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_9939(2,t3,C_SCHEME_UNDEFINED);}}}

/* k9985 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9987,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9939(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9977 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9979,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9939(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9937 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9946,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9950,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9948 in k9937 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9954,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9952 in k9948 in k9937 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9954,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[102],lf[208],lf[103],((C_word*)t0)[2],lf[105],t1));}

/* k9944 in k9937 in k9934 in parse-with in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9787(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9787,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9797,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9835,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li94),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_9835(t22,t18,C_SCHEME_FALSE);}

/* do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9835(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9835,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9845,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9845(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t5,t6,((C_word*)t0)[5]);}}

/* k9843 in do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9845,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[206]));}
else{
t7=t6;
f_9856(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9854 in k9843 in do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9856,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9859,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[200]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9868,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[201]));}
else{
t6=t5;
f_9868(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9893,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[203]));}
else{
t7=t6;
f_9893(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[204],((C_word*)((C_word*)t0)[12])[1],lf[205]));}}}

/* k9891 in k9854 in k9843 in do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9893,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_9859(2,t10,t9);}

/* k9866 in k9854 in k9843 in do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9868,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_9859(2,t8,t7);}

/* k9857 in k9854 in k9843 in do936 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9835(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9795 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9804,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9833,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k9831 in k9795 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9833,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[102],lf[137],lf[103],t2,lf[105],t3,lf[107],t4,lf[108],t5));}

/* k9802 in k9795 in parse-general-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9436,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9443,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t8=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[198]);}

/* k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9443,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9449,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9677,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li92),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_9677(t25,t21,C_SCHEME_FALSE);}

/* do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9677(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9677,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9687(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t5,t6,((C_word*)t0)[4]);}}

/* k9685 in do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9687,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[197]));}
else{
t7=t6;
f_9698(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9696 in k9685 in do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9698,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9701,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[186]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9710,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9710(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[196]);
if(C_truep(t6)){
t7=t5;
f_9710(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[177]);
t8=t5;
f_9710(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[181])));}}}

/* k9708 in k9696 in k9685 in do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9710(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9710,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9713,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[189],((C_word*)((C_word*)t0)[9])[1],lf[190],((C_word*)((C_word*)t0)[10])[1],lf[191]));}
else{
t3=t2;
f_9713(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[168]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[192]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[177]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[193]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_9701(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[194],((C_word*)((C_word*)t0)[9])[1],lf[195]));}}}

/* k9711 in k9708 in k9696 in k9685 in do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9701(2,t7,t6);}

/* k9699 in k9696 in k9685 in do869 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9677(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9675,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9671,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9460,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[177]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9477,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t7=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[180]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[181]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9553,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_9553(t9,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[184],((C_word*)t0)[4]);
t9=t7;
f_9553(t9,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9617,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_9617(t10,(C_word)C_eqp(t9,lf[187]));}
else{
t9=t8;
f_9617(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_9582(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k9615 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9617,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9582(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9582(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9580 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9582(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9582,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9598,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[186]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[53],((C_word*)t0)[6]);
t5=t2;
f_9598(t5,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_9598(t4,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k9596 in k9580 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9598,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[185],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9460(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9551 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9553,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[182],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[183],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9460(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k9475 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[179]);}

/* k9478 in k9475 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t2,((C_word*)t0)[7],C_fix(0));}

/* k9542 in k9478 in k9475 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9544,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k9538 in k9542 in k9478 in k9475 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9540,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[83],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[146],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[82],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[145],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[178],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_9460(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k9458 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9467,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9469 in k9458 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9471,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[102],lf[137],lf[103],t1,lf[106],((C_word*)((C_word*)t0)[5])[1],lf[105],((C_word*)((C_word*)t0)[4])[1],lf[107],((C_word*)((C_word*)t0)[3])[1],lf[108],((C_word*)((C_word*)t0)[2])[1]));}

/* k9465 in k9458 in k9669 in k9673 in k9447 in k9441 in parse-sequence-iteration in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9389,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[174]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9404,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li89),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9422,a[2]=t2,a[3]=((C_word)li90),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a9421 in parse-repeat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9422,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,t1,t2,t4);}

/* a9403 in parse-repeat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[175]);}

/* k9414 in a9403 in parse-repeat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9416,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[137],t1,lf[147],t2);
C_trace("ChickenBridge.scm: 15   parse-numerical-for");
t4=C_retrieve2(lf[135],"parse-numerical-for");
f_9007(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9007,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9017,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9216,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li87),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_9216(t31,t27,C_SCHEME_FALSE);}

/* do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9216(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9216,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9226(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t5,t6,((C_word*)t0)[6]);}}

/* k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9226,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[172]));}
else{
t7=t6;
f_9237(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9237,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9240,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[151]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[141]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9252,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[152],((C_word*)((C_word*)t0)[12])[1],lf[153],((C_word*)((C_word*)t0)[9])[1],lf[154]));}
else{
t7=t6;
f_9252(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[147]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9273,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[155],((C_word*)((C_word*)t0)[12])[1],lf[156],((C_word*)((C_word*)t0)[3])[1],lf[157]));}
else{
t8=t7;
f_9273(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[158]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9294,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[159],((C_word*)((C_word*)t0)[12])[1],lf[160],((C_word*)((C_word*)t0)[3])[1],lf[161]));}
else{
t9=t8;
f_9294(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[143]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9315,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[162],((C_word*)((C_word*)t0)[12])[1],lf[163],((C_word*)((C_word*)t0)[3])[1],lf[164]));}
else{
t10=t9;
f_9315(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[150]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9336,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[165],((C_word*)((C_word*)t0)[12])[1],lf[166],((C_word*)((C_word*)t0)[3])[1],lf[167]));}
else{
t11=t10;
f_9336(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[168]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9357,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[169]));}
else{
t12=t11;
f_9357(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[12])[1],lf[171]));}}}}}}}

/* k9355 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_9240(2,t6,t5);}

/* k9334 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9240(2,t7,t6);}

/* k9313 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9240(2,t7,t6);}

/* k9292 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9240(2,t7,t6);}

/* k9271 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9240(2,t7,t6);}

/* k9250 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9240(2,t7,t6);}

/* k9238 in k9235 in k9224 in do770 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9216(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_9020(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[151]);
t5=t2;
f_9020(t5,t4);}}

/* k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9023,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[141]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9183,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_9183(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[150]);
t6=t4;
f_9183(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[143])));}}

/* k9181 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9183(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[142]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[143]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[144]);
t5=((C_word*)t0)[2];
f_9023(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[145]);
t5=((C_word*)t0)[2];
f_9023(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[146]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[147]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[148]);
t5=((C_word*)t0)[2];
f_9023(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[149]);
t5=((C_word*)t0)[2];
f_9023(t5,t4);}}}

/* k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9023,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9154,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9174,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k9172 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9174,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9026(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9152 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9154,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9026(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9026,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_9029(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9119,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t5=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[140]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_9029(t5,t4);}}

/* k9117 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t2,t1,C_SCHEME_FALSE);}

/* k9134 in k9117 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9136,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_9029(t8,t7);}

/* k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9029,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9068,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t7=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[139]);}
else{
t6=t5;
f_9036(t6,C_SCHEME_UNDEFINED);}}

/* k9066 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9086,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9102,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8759(t3,t1,C_SCHEME_FALSE);}}

/* k9100 in k9066 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9102,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9071(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9084 in k9066 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9086,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9071(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9069 in k9066 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9071(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9071,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9036(t4,t3);}

/* k9034 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_9036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9036,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9043,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9047,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9045 in k9034 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9051,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9049 in k9045 in k9034 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9051,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[102],lf[137],lf[103],((C_word*)t0)[2],lf[105],t1,lf[108],t2,lf[106],t4));}

/* k9041 in k9034 in k9027 in k9024 in k9021 in k9018 in k9015 in parse-numerical-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_9043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8925,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8929,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t5,t6,t4);}

/* k8927 in parse-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8929,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[128]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8947,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8753(t4,t3);}}

/* k8945 in k8927 in parse-for in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8947,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[129]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[130],t6,lf[131],lf[132]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8765(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[133],t2,lf[134]));}}

/* loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8765(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8765,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8821,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8773,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li84),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_8773(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do721 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8773(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8773,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8783,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_8783(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_8783(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8747(t6,t8,((C_word*)t0)[2]);}}}

/* k8781 in do721 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8783,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 15   reverse");
t2=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_8773(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8824,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8824,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[125]);}

/* k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8830,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8902,a[2]=t4,a[3]=((C_word)li83),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_8902(t6,t2,((C_word*)t0)[2]);}

/* do731 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8902(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8902,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8912,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 15   display");
t5=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k8910 in do731 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8902(t3,((C_word*)t0)[2],t2);}

/* k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[124]);}

/* k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8839,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[120]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8856,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li82),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_8856(t6,t2,((C_word*)t0)[2]);}}

/* do736 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8856(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8856,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8866,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 15   display");
t5=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[123]);}
else{
t5=t3;
f_8866(2,t5,C_SCHEME_UNDEFINED);}}}

/* k8864 in do736 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 15   display");
t4=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k8867 in k8864 in do736 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[121]:lf[122]);
C_trace("ChickenBridge.scm: 15   display");
t6=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k8870 in k8867 in k8864 in do736 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8856(t3,((C_word*)t0)[2],t2);}

/* k8837 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8842,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8840 in k8837 in k8834 in k8831 in k8828 in k8825 in k8822 in k8819 in loop-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   error");
t2=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[117]);}

/* make-binding in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8759(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8759,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8753(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8753,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8747(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8747,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8676(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8676,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8678,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8717,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t5,t3,C_retrieve2(lf[92],"loop-bindings"));}

/* k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[93],"loop-collectors"));}

/* k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[94],"loop-initially"));}

/* k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[95],"loop-end-tests"));}

/* k8727 in k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[96],"loop-looping"));}

/* k8731 in k8727 in k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[98],"loop-stepping"));}

/* k8735 in k8731 in k8727 in k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[99],"loop-finally"));}

/* k8739 in k8735 in k8731 in k8727 in k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8745,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8678(t2,((C_word*)t0)[2],C_retrieve2(lf[100],"loop-returning"));}

/* k8743 in k8739 in k8735 in k8731 in k8727 in k8723 in k8719 in k8715 in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8745,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8525(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[102],((C_word*)t0)[9],lf[103],((C_word*)t0)[8],lf[104],((C_word*)t0)[7],lf[105],((C_word*)t0)[6],lf[106],((C_word*)t0)[5],lf[107],((C_word*)t0)[4],lf[108],((C_word*)t0)[3],lf[109],((C_word*)t0)[2],lf[110],t1));}

/* gather-clause in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8678(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8678,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8684,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li76),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8684(t8,t1,C_SCHEME_END_OF_LIST);}

/* do704 in gather-clause in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8684(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8684,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8695,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8706,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k8704 in do704 in gather-clause in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k8693 in do704 in gather-clause in gather-clauses in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_8684(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8525(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8525,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8540,a[2]=t5,a[3]=t3,a[4]=((C_word)li74),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8540(t7,t1,t2);}}

/* do692 in make-loop-clause in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8540,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8553,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[102]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 15   loop-operator-set!");
f_8423(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[103]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_8553(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_8553(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[105]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_8553(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[106]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_8553(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[107]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8483(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[108]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_8553(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[109]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_8553(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[110]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_8553(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_8553(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k8551 in do692 in make-loop-clause in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8540(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8513(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8513,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8501(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8501,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8489(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8489,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8483(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8483,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8477(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8477,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8465(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8465,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8453(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8453,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8441(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8441,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8429(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8429,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8423(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8423,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8373r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8373r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8373r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8381,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8407,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8405 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8411,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 14   start");
t3=C_retrieve(lf[88]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8409 in k8405 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8415,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 14   end");
t3=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8413 in k8409 in k8405 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8379 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8385,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[87]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8390,a[2]=((C_word*)t0)[3],a[3]=((C_word)li61),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8399,a[2]=((C_word*)t0)[3],a[3]=((C_word)li62),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 14   %mapseq");
f_8255(t2,t3,((C_word*)t0)[2],C_SCHEME_FALSE,C_retrieve(lf[88]),C_retrieve(lf[89]));}

/* f_8399 in k8379 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8399(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8399,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8390 in k8379 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8390,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8398,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8396 */
static void C_ccall f_8398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8383 in k8379 in position in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   with-optkeys");
t2=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8329r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8329r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8329r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8337,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8363,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8361 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8367,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 14   start");
t3=C_retrieve(lf[88]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8365 in k8361 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8371,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 14   end");
t3=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8369 in k8365 in k8361 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8335 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8341,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[87]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8346,a[2]=((C_word*)t0)[3],a[3]=((C_word)li58),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8355,a[2]=((C_word*)t0)[3],a[3]=((C_word)li59),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 14   %mapseq");
f_8255(t2,t3,((C_word*)t0)[2],C_SCHEME_TRUE,C_retrieve(lf[88]),C_retrieve(lf[89]));}

/* f_8355 in k8335 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8355(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8355,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8346 in k8335 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8346,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8354,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8352 */
static void C_ccall f_8354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8339 in k8335 in find in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   with-optkeys");
t2=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8255(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8255,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8259,a[2]=t8,a[3]=t5,a[4]=t1,a[5]=t3,a[6]=t10,a[7]=t2,a[8]=t4,a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_listp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[67]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[79]+1));
t14=t11;
f_8259(2,t14,t13);}
else{
if(C_truep((C_word)C_i_stringp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[80]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[81]+1));
t14=t11;
f_8259(2,t14,t13);}
else{
if(C_truep((C_word)C_i_vectorp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[82]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[83]+1));
t14=t11;
f_8259(2,t14,t13);}
else{
C_trace("ChickenBridge.scm: 14   error");
t12=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[84],t3);}}}}

/* k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8259,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_8266(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 14   seqlen");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[5]);}}

/* k8264 in k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8266,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8268,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t3,a[7]=((C_word)li56),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_8268(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do605 in k8264 in k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8268(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8268,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_i_greater_or_equalp(t2,t3);
t11=(C_truep(t10)?t10:((C_word*)t8)[1]);
if(C_truep(t11)){
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t9)[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8282,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t9,a[5]=t8,a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 14   getter");
t13=((C_word*)((C_word*)t0)[3])[1];
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,((C_word*)t0)[2],t2);}}

/* k8280 in do605 in k8264 in k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8282,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8285,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8295,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 14   func");
t5=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[10])[1]);}

/* k8293 in k8280 in do605 in k8264 in k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_truep(((C_word*)t0)[7])?((C_word*)((C_word*)t0)[6])[1]:((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t5=((C_word*)t0)[2];
f_8285(t5,t4);}
else{
t2=((C_word*)t0)[2];
f_8285(t2,C_SCHEME_UNDEFINED);}}

/* k8283 in k8280 in do605 in k8264 in k8257 in %mapseq in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8285,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_8268(t3,((C_word*)t0)[6],t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8169r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8169r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8169r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_eqvp(t5,t3))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_cadr(t2));}
else{
t6=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[77],"list-prop"),t6,t3,t4);}}}

/* list-index in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8051(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8051,NULL,3,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8057,a[2]=t2,a[3]=t5,a[4]=((C_word)li53),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8057(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do559 in list-index in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8057(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8057,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8067,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8081,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8079 in do559 in list-index in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_8067(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_8067(t2,C_SCHEME_UNDEFINED);}}

/* k8065 in do559 in list-index in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_8067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8067,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_8057(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7952(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7952r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7952r(t0,t1,t2,t3);}}

static void C_ccall f_7952r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7956,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 14   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[75],t2);}
else{
t5=t4;
f_7956(2,t5,C_SCHEME_UNDEFINED);}}

/* k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7956,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7958,a[2]=t3,a[3]=((C_word)li50),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7981,a[2]=t5,a[3]=((C_word)li51),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 14   l1");
t8=((C_word*)t3)[1];
f_7958(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 14   l2");
t9=((C_word*)t5)[1];
f_7981(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 14   l1");
t10=((C_word*)t3)[1];
f_7958(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7981(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7981,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7998,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7996 in l2 in k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8002,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 14   l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7981(t4,t2,t3,((C_word*)t0)[2]);}

/* k8000 in k7996 in l2 in k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_8002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8002,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7958(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7958,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7975,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 14   l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7973 in l1 in k7954 in make-list in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7975,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* concat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7790(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_7790r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7790r(t0,t1,t2);}}

static void C_ccall f_7790r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7799,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li48),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7799(t9,t1,t2);}

/* do520 in concat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7799(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7799,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7815,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_7815(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7837,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li47),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_7837(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_7815(2,t12,t11);}}}}

/* do525 in do520 in concat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7837(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7837,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k7813 in do520 in concat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7799(t3,((C_word*)t0)[2],t2);}

/* tail in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7700(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7700,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   tail");
t5=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7652,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7686,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   butlast");
t8=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7684 in butlast in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7686,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7629(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7629,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   last");
t5=C_retrieve(lf[69]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7623,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7608(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7608,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7594(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7594,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7584(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7584,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7574(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7574,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7564,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7554(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7554,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7544(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7544,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6850,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6850(2,t4,C_SCHEME_FALSE);}}

/* k6848 in shell in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub47(C_SCHEME_UNDEFINED,t1));}

/* print-output in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_7513r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_7513r(t0,t1,t2,t3);}}

static void C_ccall f_7513r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
t4=(C_word)C_vemptyp(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7523,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t6=t5;
f_7523(t6,t4);}
else{
t6=(C_word)C_i_vector_ref(t3,C_fix(0));
t7=t5;
f_7523(t7,(C_word)C_i_not(t6));}}

/* k7521 in print-output in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7523(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 14   ffi_print_output");
f_6817(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 14   ffi_print_output");
f_6817(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_TRUE);}}

/* print-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7507(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7507,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6808,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6808(2,t4,C_SCHEME_FALSE);}}

/* k6806 in print-error in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub27(C_SCHEME_UNDEFINED,t1));}

/* quit in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7501,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub24(C_SCHEME_UNDEFINED));}

/* ffi_mp_send_data in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7424(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7424,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub380(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* ffi_pathname_type in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7275(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7275,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7284,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7284(2,t5,C_SCHEME_FALSE);}}

/* k7282 in ffi_pathname_type in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub307(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* ffi_sched_stop in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7181(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7181,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub259(C_SCHEME_UNDEFINED,t3));}

/* ffi_sched_sprout in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7161(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7161,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub247(C_SCHEME_UNDEFINED,t2,t5,t6));}

/* ffi_ranbrown in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7130,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub221(t2));}

/* ffi_ranpink in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7127,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub218(t2));}

/* ffi_ranpoisson in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7120(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7120,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub215(C_SCHEME_UNDEFINED,t3));}

/* ffi_rancauchy in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7117,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub211(t2));}

/* ffi_rangamma in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7110(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7110,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub207(t3,t4));}

/* ffi_ranexp in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7092(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7092,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub195(t3,t4));}

/* ffi_rangauss in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7081(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7081,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub189(t4,t5,t6));}

/* ffi_ranmiddle in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7078,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub184(t2));}

/* ffi_ranhigh in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7075,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub181(t2));}

/* ffi_ranlow in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7072,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub178(t2));}

/* ffi_ranfloat in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7043(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7043,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub161(t3,t4));}

/* ffi_ranint in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7036(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7036,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub157(C_SCHEME_UNDEFINED,t3));}

/* ffi_ranseed in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_7033(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7033,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub153(C_SCHEME_UNDEFINED,t2));}

/* ffi_keynum_to_hertz in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_7012(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7012,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub139(t3,t4));}

/* ffi_geoseg in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_6993,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub131(t6,t7,t8,t9,t10));}

/* ffi_explseg in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_6974,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub120(t6,t7,t8,t9,t10));}

/* ffi_scaler_to_cents in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6967,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub113(C_SCHEME_UNDEFINED,t3));}

/* ffi_cents_to_scaler in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6960,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub108(t3,t4));}

/* ffi_rhythm_to_seconds in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_6945(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6945,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub101(t5,t6,t7,t8));}

/* ffi_quantize in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_6934(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6934,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub93(t4,t5,t6));}

/* ffi_float_to_fixnum in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6927(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6927,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub88(C_SCHEME_UNDEFINED,t3));}

/* ffi_rescale in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_6873(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6873,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub64(t8,t9,t10,t11,t12,t13,t14));}

/* ffi_print_output in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_6817(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6817,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6822,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_6822(2,t5,C_SCHEME_FALSE);}}

/* k6820 in ffi_print_output in k6796 in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub34(C_SCHEME_UNDEFINED,t1,((C_word*)t0)[2]));}

/* read-from-string in k6683 in k6680 in k6677 in k6674 */
static void C_fcall f_6736(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6736,NULL,2,t1,t2);}
C_trace("ChickenBridge.scm: 12   call-with-input-string");
t3=C_retrieve(lf[17]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,*((C_word*)lf[18]+1));}

/* hash-ref in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6730,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 12   hash-table-ref/default");
t4=C_retrieve(lf[15]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* make-eq-hash-table in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6723,2,t0,t1);}
C_trace("ChickenBridge.scm: 12   make-hash-table");
t2=C_retrieve(lf[8]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[11]+1));}

/* make-equal-hash-table in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6717,2,t0,t1);}
C_trace("ChickenBridge.scm: 12   make-hash-table");
t2=C_retrieve(lf[8]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[9]+1));}

/* list-set! in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6707,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* logtest in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6687,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6699,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 12   logand");
t5=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,t3);}

/* k6697 in logtest in k6683 in k6680 in k6677 in k6674 */
static void C_ccall f_6699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_zerop(t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_not(t2));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2844] = {
{"toplevelChickenBridge.scm",(void*)C_cm_toplevel},
{"f_6676ChickenBridge.scm",(void*)f_6676},
{"f_6679ChickenBridge.scm",(void*)f_6679},
{"f_6682ChickenBridge.scm",(void*)f_6682},
{"f_6685ChickenBridge.scm",(void*)f_6685},
{"f_6798ChickenBridge.scm",(void*)f_6798},
{"f_22038ChickenBridge.scm",(void*)f_22038},
{"f_43953ChickenBridge.scm",(void*)f_43953},
{"f_44179ChickenBridge.scm",(void*)f_44179},
{"f_43987ChickenBridge.scm",(void*)f_43987},
{"f_43999ChickenBridge.scm",(void*)f_43999},
{"f_44003ChickenBridge.scm",(void*)f_44003},
{"f_44007ChickenBridge.scm",(void*)f_44007},
{"f_44163ChickenBridge.scm",(void*)f_44163},
{"f_44013ChickenBridge.scm",(void*)f_44013},
{"f_44033ChickenBridge.scm",(void*)f_44033},
{"f_44036ChickenBridge.scm",(void*)f_44036},
{"f_44044ChickenBridge.scm",(void*)f_44044},
{"f_44051ChickenBridge.scm",(void*)f_44051},
{"f_44054ChickenBridge.scm",(void*)f_44054},
{"f_44058ChickenBridge.scm",(void*)f_44058},
{"f_44065ChickenBridge.scm",(void*)f_44065},
{"f_44068ChickenBridge.scm",(void*)f_44068},
{"f_44072ChickenBridge.scm",(void*)f_44072},
{"f_44079ChickenBridge.scm",(void*)f_44079},
{"f_44023ChickenBridge.scm",(void*)f_44023},
{"f_43976ChickenBridge.scm",(void*)f_43976},
{"f_43966ChickenBridge.scm",(void*)f_43966},
{"f_43969ChickenBridge.scm",(void*)f_43969},
{"f_22041ChickenBridge.scm",(void*)f_22041},
{"f_23022ChickenBridge.scm",(void*)f_23022},
{"f_43858ChickenBridge.scm",(void*)f_43858},
{"f_43871ChickenBridge.scm",(void*)f_43871},
{"f_43947ChickenBridge.scm",(void*)f_43947},
{"f_43874ChickenBridge.scm",(void*)f_43874},
{"f_43879ChickenBridge.scm",(void*)f_43879},
{"f_43931ChickenBridge.scm",(void*)f_43931},
{"f_43901ChickenBridge.scm",(void*)f_43901},
{"f_43915ChickenBridge.scm",(void*)f_43915},
{"f_43927ChickenBridge.scm",(void*)f_43927},
{"f_43904ChickenBridge.scm",(void*)f_43904},
{"f_23042ChickenBridge.scm",(void*)f_23042},
{"f_28095ChickenBridge.scm",(void*)f_28095},
{"f_43836ChickenBridge.scm",(void*)f_43836},
{"f_29752ChickenBridge.scm",(void*)f_29752},
{"f_43816ChickenBridge.scm",(void*)f_43816},
{"f_29755ChickenBridge.scm",(void*)f_29755},
{"f_43776ChickenBridge.scm",(void*)f_43776},
{"f_29758ChickenBridge.scm",(void*)f_29758},
{"f_43682ChickenBridge.scm",(void*)f_43682},
{"f_43686ChickenBridge.scm",(void*)f_43686},
{"f_43689ChickenBridge.scm",(void*)f_43689},
{"f_43707ChickenBridge.scm",(void*)f_43707},
{"f_43710ChickenBridge.scm",(void*)f_43710},
{"f_43741ChickenBridge.scm",(void*)f_43741},
{"f_43713ChickenBridge.scm",(void*)f_43713},
{"f_43719ChickenBridge.scm",(void*)f_43719},
{"f_43672ChickenBridge.scm",(void*)f_43672},
{"f_43666ChickenBridge.scm",(void*)f_43666},
{"f_29761ChickenBridge.scm",(void*)f_29761},
{"f_43570ChickenBridge.scm",(void*)f_43570},
{"f_43572ChickenBridge.scm",(void*)f_43572},
{"f_43576ChickenBridge.scm",(void*)f_43576},
{"f_43579ChickenBridge.scm",(void*)f_43579},
{"f_43582ChickenBridge.scm",(void*)f_43582},
{"f_43626ChickenBridge.scm",(void*)f_43626},
{"f_43618ChickenBridge.scm",(void*)f_43618},
{"f_43585ChickenBridge.scm",(void*)f_43585},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28577ChickenBridge.scm",(void*)f_28577},
{"f_28544ChickenBridge.scm",(void*)f_28544},
{"f_43608ChickenBridge.scm",(void*)f_43608},
{"f_43588ChickenBridge.scm",(void*)f_43588},
{"f_43591ChickenBridge.scm",(void*)f_43591},
{"f_43562ChickenBridge.scm",(void*)f_43562},
{"f_29764ChickenBridge.scm",(void*)f_29764},
{"f_43534ChickenBridge.scm",(void*)f_43534},
{"f_29767ChickenBridge.scm",(void*)f_29767},
{"f_43498ChickenBridge.scm",(void*)f_43498},
{"f_43510ChickenBridge.scm",(void*)f_43510},
{"f_43506ChickenBridge.scm",(void*)f_43506},
{"f_43480ChickenBridge.scm",(void*)f_43480},
{"f_43474ChickenBridge.scm",(void*)f_43474},
{"f_29770ChickenBridge.scm",(void*)f_29770},
{"f_43388ChickenBridge.scm",(void*)f_43388},
{"f_43392ChickenBridge.scm",(void*)f_43392},
{"f_43395ChickenBridge.scm",(void*)f_43395},
{"f_43398ChickenBridge.scm",(void*)f_43398},
{"f_43411ChickenBridge.scm",(void*)f_43411},
{"f_43357ChickenBridge.scm",(void*)f_43357},
{"f_43361ChickenBridge.scm",(void*)f_43361},
{"f_43376ChickenBridge.scm",(void*)f_43376},
{"f_43351ChickenBridge.scm",(void*)f_43351},
{"f_29773ChickenBridge.scm",(void*)f_29773},
{"f_43237ChickenBridge.scm",(void*)f_43237},
{"f_43253ChickenBridge.scm",(void*)f_43253},
{"f_43264ChickenBridge.scm",(void*)f_43264},
{"f_43231ChickenBridge.scm",(void*)f_43231},
{"f_29829ChickenBridge.scm",(void*)f_29829},
{"f_43098ChickenBridge.scm",(void*)f_43098},
{"f_43121ChickenBridge.scm",(void*)f_43121},
{"f_43118ChickenBridge.scm",(void*)f_43118},
{"f_43092ChickenBridge.scm",(void*)f_43092},
{"f_29832ChickenBridge.scm",(void*)f_29832},
{"f_42946ChickenBridge.scm",(void*)f_42946},
{"f_42964ChickenBridge.scm",(void*)f_42964},
{"f_42973ChickenBridge.scm",(void*)f_42973},
{"f_42940ChickenBridge.scm",(void*)f_42940},
{"f_29835ChickenBridge.scm",(void*)f_29835},
{"f_42893ChickenBridge.scm",(void*)f_42893},
{"f_42897ChickenBridge.scm",(void*)f_42897},
{"f_42900ChickenBridge.scm",(void*)f_42900},
{"f_42916ChickenBridge.scm",(void*)f_42916},
{"f_42875ChickenBridge.scm",(void*)f_42875},
{"f_42869ChickenBridge.scm",(void*)f_42869},
{"f_29838ChickenBridge.scm",(void*)f_29838},
{"f_42793ChickenBridge.scm",(void*)f_42793},
{"f_29977ChickenBridge.scm",(void*)f_29977},
{"f_42719ChickenBridge.scm",(void*)f_42719},
{"f_42726ChickenBridge.scm",(void*)f_42726},
{"f_42713ChickenBridge.scm",(void*)f_42713},
{"f_29980ChickenBridge.scm",(void*)f_29980},
{"f_42609ChickenBridge.scm",(void*)f_42609},
{"f_42617ChickenBridge.scm",(void*)f_42617},
{"f_42583ChickenBridge.scm",(void*)f_42583},
{"f_42600ChickenBridge.scm",(void*)f_42600},
{"f_42591ChickenBridge.scm",(void*)f_42591},
{"f_42577ChickenBridge.scm",(void*)f_42577},
{"f_29983ChickenBridge.scm",(void*)f_29983},
{"f_42533ChickenBridge.scm",(void*)f_42533},
{"f_29986ChickenBridge.scm",(void*)f_29986},
{"f_42451ChickenBridge.scm",(void*)f_42451},
{"f_42462ChickenBridge.scm",(void*)f_42462},
{"f_42464ChickenBridge.scm",(void*)f_42464},
{"f_42493ChickenBridge.scm",(void*)f_42493},
{"f_42429ChickenBridge.scm",(void*)f_42429},
{"f_42445ChickenBridge.scm",(void*)f_42445},
{"f_42423ChickenBridge.scm",(void*)f_42423},
{"f_29989ChickenBridge.scm",(void*)f_29989},
{"f_42352ChickenBridge.scm",(void*)f_42352},
{"f_42356ChickenBridge.scm",(void*)f_42356},
{"f_42363ChickenBridge.scm",(void*)f_42363},
{"f_42318ChickenBridge.scm",(void*)f_42318},
{"f_42338ChickenBridge.scm",(void*)f_42338},
{"f_42342ChickenBridge.scm",(void*)f_42342},
{"f_42334ChickenBridge.scm",(void*)f_42334},
{"f_42312ChickenBridge.scm",(void*)f_42312},
{"f_29992ChickenBridge.scm",(void*)f_29992},
{"f_42184ChickenBridge.scm",(void*)f_42184},
{"f_42220ChickenBridge.scm",(void*)f_42220},
{"f_42188ChickenBridge.scm",(void*)f_42188},
{"f_37917ChickenBridge.scm",(void*)f_37917},
{"f_37926ChickenBridge.scm",(void*)f_37926},
{"f_37939ChickenBridge.scm",(void*)f_37939},
{"f_37942ChickenBridge.scm",(void*)f_37942},
{"f_37958ChickenBridge.scm",(void*)f_37958},
{"f_42204ChickenBridge.scm",(void*)f_42204},
{"f_42216ChickenBridge.scm",(void*)f_42216},
{"f_42212ChickenBridge.scm",(void*)f_42212},
{"f_42109ChickenBridge.scm",(void*)f_42109},
{"f_42152ChickenBridge.scm",(void*)f_42152},
{"f_42156ChickenBridge.scm",(void*)f_42156},
{"f_42116ChickenBridge.scm",(void*)f_42116},
{"f_42127ChickenBridge.scm",(void*)f_42127},
{"f_42103ChickenBridge.scm",(void*)f_42103},
{"f_29995ChickenBridge.scm",(void*)f_29995},
{"f_42083ChickenBridge.scm",(void*)f_42083},
{"f_42077ChickenBridge.scm",(void*)f_42077},
{"f_29998ChickenBridge.scm",(void*)f_29998},
{"f_42057ChickenBridge.scm",(void*)f_42057},
{"f_42061ChickenBridge.scm",(void*)f_42061},
{"f_42049ChickenBridge.scm",(void*)f_42049},
{"f_30001ChickenBridge.scm",(void*)f_30001},
{"f_42029ChickenBridge.scm",(void*)f_42029},
{"f_42033ChickenBridge.scm",(void*)f_42033},
{"f_42021ChickenBridge.scm",(void*)f_42021},
{"f_30004ChickenBridge.scm",(void*)f_30004},
{"f_42001ChickenBridge.scm",(void*)f_42001},
{"f_42005ChickenBridge.scm",(void*)f_42005},
{"f_41993ChickenBridge.scm",(void*)f_41993},
{"f_30007ChickenBridge.scm",(void*)f_30007},
{"f_41973ChickenBridge.scm",(void*)f_41973},
{"f_41977ChickenBridge.scm",(void*)f_41977},
{"f_41965ChickenBridge.scm",(void*)f_41965},
{"f_30010ChickenBridge.scm",(void*)f_30010},
{"f_41864ChickenBridge.scm",(void*)f_41864},
{"f_41834ChickenBridge.scm",(void*)f_41834},
{"f_41858ChickenBridge.scm",(void*)f_41858},
{"f_41828ChickenBridge.scm",(void*)f_41828},
{"f_30013ChickenBridge.scm",(void*)f_30013},
{"f_41778ChickenBridge.scm",(void*)f_41778},
{"f_41780ChickenBridge.scm",(void*)f_41780},
{"f_41784ChickenBridge.scm",(void*)f_41784},
{"f_41812ChickenBridge.scm",(void*)f_41812},
{"f_41804ChickenBridge.scm",(void*)f_41804},
{"f_41800ChickenBridge.scm",(void*)f_41800},
{"f_41787ChickenBridge.scm",(void*)f_41787},
{"f_41770ChickenBridge.scm",(void*)f_41770},
{"f_30016ChickenBridge.scm",(void*)f_30016},
{"f_41717ChickenBridge.scm",(void*)f_41717},
{"f_41719ChickenBridge.scm",(void*)f_41719},
{"f_41723ChickenBridge.scm",(void*)f_41723},
{"f_41754ChickenBridge.scm",(void*)f_41754},
{"f_41746ChickenBridge.scm",(void*)f_41746},
{"f_41742ChickenBridge.scm",(void*)f_41742},
{"f_41726ChickenBridge.scm",(void*)f_41726},
{"f_41729ChickenBridge.scm",(void*)f_41729},
{"f_41709ChickenBridge.scm",(void*)f_41709},
{"f_30019ChickenBridge.scm",(void*)f_30019},
{"f_41659ChickenBridge.scm",(void*)f_41659},
{"f_41673ChickenBridge.scm",(void*)f_41673},
{"f_41665ChickenBridge.scm",(void*)f_41665},
{"f_41624ChickenBridge.scm",(void*)f_41624},
{"f_41657ChickenBridge.scm",(void*)f_41657},
{"f_41618ChickenBridge.scm",(void*)f_41618},
{"f_30022ChickenBridge.scm",(void*)f_30022},
{"f_41565ChickenBridge.scm",(void*)f_41565},
{"f_41569ChickenBridge.scm",(void*)f_41569},
{"f_41582ChickenBridge.scm",(void*)f_41582},
{"f_41574ChickenBridge.scm",(void*)f_41574},
{"f_41522ChickenBridge.scm",(void*)f_41522},
{"f_41555ChickenBridge.scm",(void*)f_41555},
{"f_41516ChickenBridge.scm",(void*)f_41516},
{"f_30025ChickenBridge.scm",(void*)f_30025},
{"f_41436ChickenBridge.scm",(void*)f_41436},
{"f_41430ChickenBridge.scm",(void*)f_41430},
{"f_30028ChickenBridge.scm",(void*)f_30028},
{"f_41199ChickenBridge.scm",(void*)f_41199},
{"f_41203ChickenBridge.scm",(void*)f_41203},
{"f_41211ChickenBridge.scm",(void*)f_41211},
{"f_41234ChickenBridge.scm",(void*)f_41234},
{"f_41237ChickenBridge.scm",(void*)f_41237},
{"f_41240ChickenBridge.scm",(void*)f_41240},
{"f_41243ChickenBridge.scm",(void*)f_41243},
{"f_41303ChickenBridge.scm",(void*)f_41303},
{"f_41310ChickenBridge.scm",(void*)f_41310},
{"f_41320ChickenBridge.scm",(void*)f_41320},
{"f_41330ChickenBridge.scm",(void*)f_41330},
{"f_41344ChickenBridge.scm",(void*)f_41344},
{"f_41354ChickenBridge.scm",(void*)f_41354},
{"f_41364ChickenBridge.scm",(void*)f_41364},
{"f_41374ChickenBridge.scm",(void*)f_41374},
{"f_41246ChickenBridge.scm",(void*)f_41246},
{"f_41270ChickenBridge.scm",(void*)f_41270},
{"f_41249ChickenBridge.scm",(void*)f_41249},
{"f_41156ChickenBridge.scm",(void*)f_41156},
{"f_41189ChickenBridge.scm",(void*)f_41189},
{"f_41150ChickenBridge.scm",(void*)f_41150},
{"f_30031ChickenBridge.scm",(void*)f_30031},
{"f_41068ChickenBridge.scm",(void*)f_41068},
{"f_41072ChickenBridge.scm",(void*)f_41072},
{"f_41078ChickenBridge.scm",(void*)f_41078},
{"f_41098ChickenBridge.scm",(void*)f_41098},
{"f_41042ChickenBridge.scm",(void*)f_41042},
{"f_41052ChickenBridge.scm",(void*)f_41052},
{"f_41036ChickenBridge.scm",(void*)f_41036},
{"f_30034ChickenBridge.scm",(void*)f_30034},
{"f_40851ChickenBridge.scm",(void*)f_40851},
{"f_40855ChickenBridge.scm",(void*)f_40855},
{"f_40861ChickenBridge.scm",(void*)f_40861},
{"f_40870ChickenBridge.scm",(void*)f_40870},
{"f_40908ChickenBridge.scm",(void*)f_40908},
{"f_40900ChickenBridge.scm",(void*)f_40900},
{"f_40877ChickenBridge.scm",(void*)f_40877},
{"f_40881ChickenBridge.scm",(void*)f_40881},
{"f_40783ChickenBridge.scm",(void*)f_40783},
{"f_40802ChickenBridge.scm",(void*)f_40802},
{"f_40837ChickenBridge.scm",(void*)f_40837},
{"f_40808ChickenBridge.scm",(void*)f_40808},
{"f_40812ChickenBridge.scm",(void*)f_40812},
{"f_40826ChickenBridge.scm",(void*)f_40826},
{"f_40815ChickenBridge.scm",(void*)f_40815},
{"f_40796ChickenBridge.scm",(void*)f_40796},
{"f_40777ChickenBridge.scm",(void*)f_40777},
{"f_30037ChickenBridge.scm",(void*)f_30037},
{"f_40505ChickenBridge.scm",(void*)f_40505},
{"f_30560ChickenBridge.scm",(void*)f_30560},
{"f_40457ChickenBridge.scm",(void*)f_40457},
{"f_40449ChickenBridge.scm",(void*)f_40449},
{"f_30563ChickenBridge.scm",(void*)f_30563},
{"f_40329ChickenBridge.scm",(void*)f_40329},
{"f_30569ChickenBridge.scm",(void*)f_30569},
{"f_31053ChickenBridge.scm",(void*)f_31053},
{"f_31087ChickenBridge.scm",(void*)f_31087},
{"f_31079ChickenBridge.scm",(void*)f_31079},
{"f_31075ChickenBridge.scm",(void*)f_31075},
{"f_31060ChickenBridge.scm",(void*)f_31060},
{"f_31064ChickenBridge.scm",(void*)f_31064},
{"f_31057ChickenBridge.scm",(void*)f_31057},
{"f_30593ChickenBridge.scm",(void*)f_30593},
{"f_31046ChickenBridge.scm",(void*)f_31046},
{"f_31042ChickenBridge.scm",(void*)f_31042},
{"f_30600ChickenBridge.scm",(void*)f_30600},
{"f_30917ChickenBridge.scm",(void*)f_30917},
{"f_30938ChickenBridge.scm",(void*)f_30938},
{"f_30940ChickenBridge.scm",(void*)f_30940},
{"f_30954ChickenBridge.scm",(void*)f_30954},
{"f_31007ChickenBridge.scm",(void*)f_31007},
{"f_30957ChickenBridge.scm",(void*)f_30957},
{"f_30992ChickenBridge.scm",(void*)f_30992},
{"f_30960ChickenBridge.scm",(void*)f_30960},
{"f_30973ChickenBridge.scm",(void*)f_30973},
{"f_30985ChickenBridge.scm",(void*)f_30985},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30963ChickenBridge.scm",(void*)f_30963},
{"f_30927ChickenBridge.scm",(void*)f_30927},
{"f_30603ChickenBridge.scm",(void*)f_30603},
{"f_30881ChickenBridge.scm",(void*)f_30881},
{"f_30907ChickenBridge.scm",(void*)f_30907},
{"f_30892ChickenBridge.scm",(void*)f_30892},
{"f_30606ChickenBridge.scm",(void*)f_30606},
{"f_30821ChickenBridge.scm",(void*)f_30821},
{"f_30831ChickenBridge.scm",(void*)f_30831},
{"f_30834ChickenBridge.scm",(void*)f_30834},
{"f_30855ChickenBridge.scm",(void*)f_30855},
{"f_30837ChickenBridge.scm",(void*)f_30837},
{"f_30841ChickenBridge.scm",(void*)f_30841},
{"f_30789ChickenBridge.scm",(void*)f_30789},
{"f_30792ChickenBridge.scm",(void*)f_30792},
{"f_30609ChickenBridge.scm",(void*)f_30609},
{"f_30612ChickenBridge.scm",(void*)f_30612},
{"f_30746ChickenBridge.scm",(void*)f_30746},
{"f_30754ChickenBridge.scm",(void*)f_30754},
{"f_30750ChickenBridge.scm",(void*)f_30750},
{"f_30615ChickenBridge.scm",(void*)f_30615},
{"f_30709ChickenBridge.scm",(void*)f_30709},
{"f_30705ChickenBridge.scm",(void*)f_30705},
{"f_30701ChickenBridge.scm",(void*)f_30701},
{"f_30654ChickenBridge.scm",(void*)f_30654},
{"f_30650ChickenBridge.scm",(void*)f_30650},
{"f_30732ChickenBridge.scm",(void*)f_30732},
{"f_30716ChickenBridge.scm",(void*)f_30716},
{"f_11581ChickenBridge.scm",(void*)f_11581},
{"f_11616ChickenBridge.scm",(void*)f_11616},
{"f_11626ChickenBridge.scm",(void*)f_11626},
{"f_11630ChickenBridge.scm",(void*)f_11630},
{"f_11633ChickenBridge.scm",(void*)f_11633},
{"f_11694ChickenBridge.scm",(void*)f_11694},
{"f_11685ChickenBridge.scm",(void*)f_11685},
{"f_11636ChickenBridge.scm",(void*)f_11636},
{"f_11655ChickenBridge.scm",(void*)f_11655},
{"f_11662ChickenBridge.scm",(void*)f_11662},
{"f_11639ChickenBridge.scm",(void*)f_11639},
{"f_11645ChickenBridge.scm",(void*)f_11645},
{"f_11614ChickenBridge.scm",(void*)f_11614},
{"f_11589ChickenBridge.scm",(void*)f_11589},
{"f_11588ChickenBridge.scm",(void*)f_11588},
{"f_11749ChickenBridge.scm",(void*)f_11749},
{"f_38634ChickenBridge.scm",(void*)f_38634},
{"f_38637ChickenBridge.scm",(void*)f_38637},
{"f_38640ChickenBridge.scm",(void*)f_38640},
{"f_38644ChickenBridge.scm",(void*)f_38644},
{"f_38858ChickenBridge.scm",(void*)f_38858},
{"f_38846ChickenBridge.scm",(void*)f_38846},
{"f_38842ChickenBridge.scm",(void*)f_38842},
{"f_38647ChickenBridge.scm",(void*)f_38647},
{"f_38791ChickenBridge.scm",(void*)f_38791},
{"f_38827ChickenBridge.scm",(void*)f_38827},
{"f_38820ChickenBridge.scm",(void*)f_38820},
{"f_38650ChickenBridge.scm",(void*)f_38650},
{"f_38721ChickenBridge.scm",(void*)f_38721},
{"f_38725ChickenBridge.scm",(void*)f_38725},
{"f_38717ChickenBridge.scm",(void*)f_38717},
{"f_6752ChickenBridge.scm",(void*)f_6752},
{"f_38697ChickenBridge.scm",(void*)f_38697},
{"f_38693ChickenBridge.scm",(void*)f_38693},
{"f_38660ChickenBridge.scm",(void*)f_38660},
{"f_38671ChickenBridge.scm",(void*)f_38671},
{"f_38679ChickenBridge.scm",(void*)f_38679},
{"f_38675ChickenBridge.scm",(void*)f_38675},
{"f_40283ChickenBridge.scm",(void*)f_40283},
{"f_40299ChickenBridge.scm",(void*)f_40299},
{"f_40302ChickenBridge.scm",(void*)f_40302},
{"f_40305ChickenBridge.scm",(void*)f_40305},
{"f_40308ChickenBridge.scm",(void*)f_40308},
{"f_40319ChickenBridge.scm",(void*)f_40319},
{"f_40277ChickenBridge.scm",(void*)f_40277},
{"f_31094ChickenBridge.scm",(void*)f_31094},
{"f_40138ChickenBridge.scm",(void*)f_40138},
{"f_40177ChickenBridge.scm",(void*)f_40177},
{"f_40151ChickenBridge.scm",(void*)f_40151},
{"f_40132ChickenBridge.scm",(void*)f_40132},
{"f_31097ChickenBridge.scm",(void*)f_31097},
{"f_39720ChickenBridge.scm",(void*)f_39720},
{"f_39724ChickenBridge.scm",(void*)f_39724},
{"f_39736ChickenBridge.scm",(void*)f_39736},
{"f_39794ChickenBridge.scm",(void*)f_39794},
{"f_39797ChickenBridge.scm",(void*)f_39797},
{"f_39800ChickenBridge.scm",(void*)f_39800},
{"f_40012ChickenBridge.scm",(void*)f_40012},
{"f_39950ChickenBridge.scm",(void*)f_39950},
{"f_39984ChickenBridge.scm",(void*)f_39984},
{"f_39959ChickenBridge.scm",(void*)f_39959},
{"f_39970ChickenBridge.scm",(void*)f_39970},
{"f_39966ChickenBridge.scm",(void*)f_39966},
{"f_39809ChickenBridge.scm",(void*)f_39809},
{"f_39887ChickenBridge.scm",(void*)f_39887},
{"f_39928ChickenBridge.scm",(void*)f_39928},
{"f_39932ChickenBridge.scm",(void*)f_39932},
{"f_39936ChickenBridge.scm",(void*)f_39936},
{"f_39891ChickenBridge.scm",(void*)f_39891},
{"f_39895ChickenBridge.scm",(void*)f_39895},
{"f_39922ChickenBridge.scm",(void*)f_39922},
{"f_39898ChickenBridge.scm",(void*)f_39898},
{"f_39812ChickenBridge.scm",(void*)f_39812},
{"f_39884ChickenBridge.scm",(void*)f_39884},
{"f_39826ChickenBridge.scm",(void*)f_39826},
{"f_39828ChickenBridge.scm",(void*)f_39828},
{"f_39876ChickenBridge.scm",(void*)f_39876},
{"f_39847ChickenBridge.scm",(void*)f_39847},
{"f_39864ChickenBridge.scm",(void*)f_39864},
{"f_39850ChickenBridge.scm",(void*)f_39850},
{"f_39843ChickenBridge.scm",(void*)f_39843},
{"f_39815ChickenBridge.scm",(void*)f_39815},
{"f_39745ChickenBridge.scm",(void*)f_39745},
{"f_39755ChickenBridge.scm",(void*)f_39755},
{"f_39761ChickenBridge.scm",(void*)f_39761},
{"f_39733ChickenBridge.scm",(void*)f_39733},
{"f_39681ChickenBridge.scm",(void*)f_39681},
{"f_39698ChickenBridge.scm",(void*)f_39698},
{"f_39714ChickenBridge.scm",(void*)f_39714},
{"f_39692ChickenBridge.scm",(void*)f_39692},
{"f_39675ChickenBridge.scm",(void*)f_39675},
{"f_31100ChickenBridge.scm",(void*)f_31100},
{"f_39599ChickenBridge.scm",(void*)f_39599},
{"f_31103ChickenBridge.scm",(void*)f_31103},
{"f_39575ChickenBridge.scm",(void*)f_39575},
{"f_39587ChickenBridge.scm",(void*)f_39587},
{"f_39583ChickenBridge.scm",(void*)f_39583},
{"f_39561ChickenBridge.scm",(void*)f_39561},
{"f_39569ChickenBridge.scm",(void*)f_39569},
{"f_39555ChickenBridge.scm",(void*)f_39555},
{"f_31106ChickenBridge.scm",(void*)f_31106},
{"f_37911ChickenBridge.scm",(void*)f_37911},
{"f_39551ChickenBridge.scm",(void*)f_39551},
{"f_38461ChickenBridge.scm",(void*)f_38461},
{"f_39543ChickenBridge.scm",(void*)f_39543},
{"f_38464ChickenBridge.scm",(void*)f_38464},
{"f_39535ChickenBridge.scm",(void*)f_39535},
{"f_38467ChickenBridge.scm",(void*)f_38467},
{"f_39527ChickenBridge.scm",(void*)f_39527},
{"f_38470ChickenBridge.scm",(void*)f_38470},
{"f_39519ChickenBridge.scm",(void*)f_39519},
{"f_38473ChickenBridge.scm",(void*)f_38473},
{"f_39511ChickenBridge.scm",(void*)f_39511},
{"f_38476ChickenBridge.scm",(void*)f_38476},
{"f_39503ChickenBridge.scm",(void*)f_39503},
{"f_38479ChickenBridge.scm",(void*)f_38479},
{"f_39495ChickenBridge.scm",(void*)f_39495},
{"f_38482ChickenBridge.scm",(void*)f_38482},
{"f_39487ChickenBridge.scm",(void*)f_39487},
{"f_38485ChickenBridge.scm",(void*)f_38485},
{"f_39479ChickenBridge.scm",(void*)f_39479},
{"f_38488ChickenBridge.scm",(void*)f_38488},
{"f_39471ChickenBridge.scm",(void*)f_39471},
{"f_38491ChickenBridge.scm",(void*)f_38491},
{"f_39463ChickenBridge.scm",(void*)f_39463},
{"f_38494ChickenBridge.scm",(void*)f_38494},
{"f_39455ChickenBridge.scm",(void*)f_39455},
{"f_38497ChickenBridge.scm",(void*)f_38497},
{"f_39447ChickenBridge.scm",(void*)f_39447},
{"f_38500ChickenBridge.scm",(void*)f_38500},
{"f_39439ChickenBridge.scm",(void*)f_39439},
{"f_38503ChickenBridge.scm",(void*)f_38503},
{"f_39431ChickenBridge.scm",(void*)f_39431},
{"f_38506ChickenBridge.scm",(void*)f_38506},
{"f_39423ChickenBridge.scm",(void*)f_39423},
{"f_38509ChickenBridge.scm",(void*)f_38509},
{"f_39415ChickenBridge.scm",(void*)f_39415},
{"f_38512ChickenBridge.scm",(void*)f_38512},
{"f_39407ChickenBridge.scm",(void*)f_39407},
{"f_38515ChickenBridge.scm",(void*)f_38515},
{"f_39338ChickenBridge.scm",(void*)f_39338},
{"f_39366ChickenBridge.scm",(void*)f_39366},
{"f_38589ChickenBridge.scm",(void*)f_38589},
{"f_39336ChickenBridge.scm",(void*)f_39336},
{"f_39318ChickenBridge.scm",(void*)f_39318},
{"f_39260ChickenBridge.scm",(void*)f_39260},
{"f_39278ChickenBridge.scm",(void*)f_39278},
{"f_39288ChickenBridge.scm",(void*)f_39288},
{"f_39264ChickenBridge.scm",(void*)f_39264},
{"f_39254ChickenBridge.scm",(void*)f_39254},
{"f_39248ChickenBridge.scm",(void*)f_39248},
{"f_39242ChickenBridge.scm",(void*)f_39242},
{"f_39236ChickenBridge.scm",(void*)f_39236},
{"f_38866ChickenBridge.scm",(void*)f_38866},
{"f_39203ChickenBridge.scm",(void*)f_39203},
{"f_39213ChickenBridge.scm",(void*)f_39213},
{"f_39189ChickenBridge.scm",(void*)f_39189},
{"f_38873ChickenBridge.scm",(void*)f_38873},
{"f_39127ChickenBridge.scm",(void*)f_39127},
{"f_39141ChickenBridge.scm",(void*)f_39141},
{"f_38876ChickenBridge.scm",(void*)f_38876},
{"f_39074ChickenBridge.scm",(void*)f_39074},
{"f_39097ChickenBridge.scm",(void*)f_39097},
{"f_39084ChickenBridge.scm",(void*)f_39084},
{"f_39060ChickenBridge.scm",(void*)f_39060},
{"f_38882ChickenBridge.scm",(void*)f_38882},
{"f_39022ChickenBridge.scm",(void*)f_39022},
{"f_39032ChickenBridge.scm",(void*)f_39032},
{"f_39008ChickenBridge.scm",(void*)f_39008},
{"f_38888ChickenBridge.scm",(void*)f_38888},
{"f_39005ChickenBridge.scm",(void*)f_39005},
{"f_38891ChickenBridge.scm",(void*)f_38891},
{"f_38997ChickenBridge.scm",(void*)f_38997},
{"f_39001ChickenBridge.scm",(void*)f_39001},
{"f_38961ChickenBridge.scm",(void*)f_38961},
{"f_38986ChickenBridge.scm",(void*)f_38986},
{"f_38990ChickenBridge.scm",(void*)f_38990},
{"f_38971ChickenBridge.scm",(void*)f_38971},
{"f_38950ChickenBridge.scm",(void*)f_38950},
{"f_38920ChickenBridge.scm",(void*)f_38920},
{"f_38892ChickenBridge.scm",(void*)f_38892},
{"f_38591ChickenBridge.scm",(void*)f_38591},
{"f_38607ChickenBridge.scm",(void*)f_38607},
{"f_38518ChickenBridge.scm",(void*)f_38518},
{"f_38529ChickenBridge.scm",(void*)f_38529},
{"f_38532ChickenBridge.scm",(void*)f_38532},
{"f_38539ChickenBridge.scm",(void*)f_38539},
{"f_37987ChickenBridge.scm",(void*)f_37987},
{"f_38320ChickenBridge.scm",(void*)f_38320},
{"f_38340ChickenBridge.scm",(void*)f_38340},
{"f_38409ChickenBridge.scm",(void*)f_38409},
{"f_38405ChickenBridge.scm",(void*)f_38405},
{"f_38366ChickenBridge.scm",(void*)f_38366},
{"f_38378ChickenBridge.scm",(void*)f_38378},
{"f_38374ChickenBridge.scm",(void*)f_38374},
{"f_38330ChickenBridge.scm",(void*)f_38330},
{"f_37991ChickenBridge.scm",(void*)f_37991},
{"f_37995ChickenBridge.scm",(void*)f_37995},
{"f_37999ChickenBridge.scm",(void*)f_37999},
{"f_38003ChickenBridge.scm",(void*)f_38003},
{"f_38007ChickenBridge.scm",(void*)f_38007},
{"f_38008ChickenBridge.scm",(void*)f_38008},
{"f_38014ChickenBridge.scm",(void*)f_38014},
{"f_38018ChickenBridge.scm",(void*)f_38018},
{"f_38247ChickenBridge.scm",(void*)f_38247},
{"f_38294ChickenBridge.scm",(void*)f_38294},
{"f_38284ChickenBridge.scm",(void*)f_38284},
{"f_38291ChickenBridge.scm",(void*)f_38291},
{"f_38278ChickenBridge.scm",(void*)f_38278},
{"f_38257ChickenBridge.scm",(void*)f_38257},
{"f_38021ChickenBridge.scm",(void*)f_38021},
{"f_38202ChickenBridge.scm",(void*)f_38202},
{"f_38207ChickenBridge.scm",(void*)f_38207},
{"f_38217ChickenBridge.scm",(void*)f_38217},
{"f_38024ChickenBridge.scm",(void*)f_38024},
{"f_38156ChickenBridge.scm",(void*)f_38156},
{"f_38161ChickenBridge.scm",(void*)f_38161},
{"f_38171ChickenBridge.scm",(void*)f_38171},
{"f_38027ChickenBridge.scm",(void*)f_38027},
{"f_38053ChickenBridge.scm",(void*)f_38053},
{"f_38062ChickenBridge.scm",(void*)f_38062},
{"f_38078ChickenBridge.scm",(void*)f_38078},
{"f_38131ChickenBridge.scm",(void*)f_38131},
{"f_38112ChickenBridge.scm",(void*)f_38112},
{"f_38081ChickenBridge.scm",(void*)f_38081},
{"f_38102ChickenBridge.scm",(void*)f_38102},
{"f_38088ChickenBridge.scm",(void*)f_38088},
{"f_38072ChickenBridge.scm",(void*)f_38072},
{"f_38030ChickenBridge.scm",(void*)f_38030},
{"f_38043ChickenBridge.scm",(void*)f_38043},
{"f_37796ChickenBridge.scm",(void*)f_37796},
{"f_37801ChickenBridge.scm",(void*)f_37801},
{"f_37805ChickenBridge.scm",(void*)f_37805},
{"f_37856ChickenBridge.scm",(void*)f_37856},
{"f_37852ChickenBridge.scm",(void*)f_37852},
{"f_37848ChickenBridge.scm",(void*)f_37848},
{"f_37808ChickenBridge.scm",(void*)f_37808},
{"f_37841ChickenBridge.scm",(void*)f_37841},
{"f_37837ChickenBridge.scm",(void*)f_37837},
{"f_37833ChickenBridge.scm",(void*)f_37833},
{"f_37811ChickenBridge.scm",(void*)f_37811},
{"f_37814ChickenBridge.scm",(void*)f_37814},
{"f_37826ChickenBridge.scm",(void*)f_37826},
{"f_37818ChickenBridge.scm",(void*)f_37818},
{"f_37723ChickenBridge.scm",(void*)f_37723},
{"f_37614ChickenBridge.scm",(void*)f_37614},
{"f_37633ChickenBridge.scm",(void*)f_37633},
{"f_37640ChickenBridge.scm",(void*)f_37640},
{"f_37646ChickenBridge.scm",(void*)f_37646},
{"f_37666ChickenBridge.scm",(void*)f_37666},
{"f_37674ChickenBridge.scm",(void*)f_37674},
{"f_37670ChickenBridge.scm",(void*)f_37670},
{"f_37656ChickenBridge.scm",(void*)f_37656},
{"f_37618ChickenBridge.scm",(void*)f_37618},
{"f_37509ChickenBridge.scm",(void*)f_37509},
{"f_37528ChickenBridge.scm",(void*)f_37528},
{"f_37535ChickenBridge.scm",(void*)f_37535},
{"f_37541ChickenBridge.scm",(void*)f_37541},
{"f_37561ChickenBridge.scm",(void*)f_37561},
{"f_37569ChickenBridge.scm",(void*)f_37569},
{"f_37565ChickenBridge.scm",(void*)f_37565},
{"f_37551ChickenBridge.scm",(void*)f_37551},
{"f_37513ChickenBridge.scm",(void*)f_37513},
{"f_37503ChickenBridge.scm",(void*)f_37503},
{"f_37488ChickenBridge.scm",(void*)f_37488},
{"f_37482ChickenBridge.scm",(void*)f_37482},
{"f_37476ChickenBridge.scm",(void*)f_37476},
{"f_37470ChickenBridge.scm",(void*)f_37470},
{"f_37464ChickenBridge.scm",(void*)f_37464},
{"f_37458ChickenBridge.scm",(void*)f_37458},
{"f_37428ChickenBridge.scm",(void*)f_37428},
{"f_37438ChickenBridge.scm",(void*)f_37438},
{"f_36999ChickenBridge.scm",(void*)f_36999},
{"f_37405ChickenBridge.scm",(void*)f_37405},
{"f_37420ChickenBridge.scm",(void*)f_37420},
{"f_37412ChickenBridge.scm",(void*)f_37412},
{"f_37376ChickenBridge.scm",(void*)f_37376},
{"f_37380ChickenBridge.scm",(void*)f_37380},
{"f_37341ChickenBridge.scm",(void*)f_37341},
{"f_37345ChickenBridge.scm",(void*)f_37345},
{"f_37306ChickenBridge.scm",(void*)f_37306},
{"f_37310ChickenBridge.scm",(void*)f_37310},
{"f_37003ChickenBridge.scm",(void*)f_37003},
{"f_37270ChickenBridge.scm",(void*)f_37270},
{"f_37285ChickenBridge.scm",(void*)f_37285},
{"f_37277ChickenBridge.scm",(void*)f_37277},
{"f_37241ChickenBridge.scm",(void*)f_37241},
{"f_37245ChickenBridge.scm",(void*)f_37245},
{"f_37206ChickenBridge.scm",(void*)f_37206},
{"f_37210ChickenBridge.scm",(void*)f_37210},
{"f_37171ChickenBridge.scm",(void*)f_37171},
{"f_37175ChickenBridge.scm",(void*)f_37175},
{"f_37006ChickenBridge.scm",(void*)f_37006},
{"f_37135ChickenBridge.scm",(void*)f_37135},
{"f_37150ChickenBridge.scm",(void*)f_37150},
{"f_37142ChickenBridge.scm",(void*)f_37142},
{"f_37106ChickenBridge.scm",(void*)f_37106},
{"f_37110ChickenBridge.scm",(void*)f_37110},
{"f_37071ChickenBridge.scm",(void*)f_37071},
{"f_37075ChickenBridge.scm",(void*)f_37075},
{"f_37036ChickenBridge.scm",(void*)f_37036},
{"f_37040ChickenBridge.scm",(void*)f_37040},
{"f_37009ChickenBridge.scm",(void*)f_37009},
{"f_37012ChickenBridge.scm",(void*)f_37012},
{"f_36570ChickenBridge.scm",(void*)f_36570},
{"f_36976ChickenBridge.scm",(void*)f_36976},
{"f_36991ChickenBridge.scm",(void*)f_36991},
{"f_36983ChickenBridge.scm",(void*)f_36983},
{"f_36947ChickenBridge.scm",(void*)f_36947},
{"f_36951ChickenBridge.scm",(void*)f_36951},
{"f_36912ChickenBridge.scm",(void*)f_36912},
{"f_36916ChickenBridge.scm",(void*)f_36916},
{"f_36877ChickenBridge.scm",(void*)f_36877},
{"f_36881ChickenBridge.scm",(void*)f_36881},
{"f_36574ChickenBridge.scm",(void*)f_36574},
{"f_36841ChickenBridge.scm",(void*)f_36841},
{"f_36856ChickenBridge.scm",(void*)f_36856},
{"f_36848ChickenBridge.scm",(void*)f_36848},
{"f_36812ChickenBridge.scm",(void*)f_36812},
{"f_36816ChickenBridge.scm",(void*)f_36816},
{"f_36777ChickenBridge.scm",(void*)f_36777},
{"f_36781ChickenBridge.scm",(void*)f_36781},
{"f_36742ChickenBridge.scm",(void*)f_36742},
{"f_36746ChickenBridge.scm",(void*)f_36746},
{"f_36577ChickenBridge.scm",(void*)f_36577},
{"f_36706ChickenBridge.scm",(void*)f_36706},
{"f_36721ChickenBridge.scm",(void*)f_36721},
{"f_36713ChickenBridge.scm",(void*)f_36713},
{"f_36677ChickenBridge.scm",(void*)f_36677},
{"f_36681ChickenBridge.scm",(void*)f_36681},
{"f_36642ChickenBridge.scm",(void*)f_36642},
{"f_36646ChickenBridge.scm",(void*)f_36646},
{"f_36607ChickenBridge.scm",(void*)f_36607},
{"f_36611ChickenBridge.scm",(void*)f_36611},
{"f_36580ChickenBridge.scm",(void*)f_36580},
{"f_36583ChickenBridge.scm",(void*)f_36583},
{"f_36141ChickenBridge.scm",(void*)f_36141},
{"f_36547ChickenBridge.scm",(void*)f_36547},
{"f_36562ChickenBridge.scm",(void*)f_36562},
{"f_36554ChickenBridge.scm",(void*)f_36554},
{"f_36518ChickenBridge.scm",(void*)f_36518},
{"f_36522ChickenBridge.scm",(void*)f_36522},
{"f_36483ChickenBridge.scm",(void*)f_36483},
{"f_36487ChickenBridge.scm",(void*)f_36487},
{"f_36448ChickenBridge.scm",(void*)f_36448},
{"f_36452ChickenBridge.scm",(void*)f_36452},
{"f_36145ChickenBridge.scm",(void*)f_36145},
{"f_36412ChickenBridge.scm",(void*)f_36412},
{"f_36427ChickenBridge.scm",(void*)f_36427},
{"f_36419ChickenBridge.scm",(void*)f_36419},
{"f_36383ChickenBridge.scm",(void*)f_36383},
{"f_36387ChickenBridge.scm",(void*)f_36387},
{"f_36348ChickenBridge.scm",(void*)f_36348},
{"f_36352ChickenBridge.scm",(void*)f_36352},
{"f_36313ChickenBridge.scm",(void*)f_36313},
{"f_36317ChickenBridge.scm",(void*)f_36317},
{"f_36148ChickenBridge.scm",(void*)f_36148},
{"f_36277ChickenBridge.scm",(void*)f_36277},
{"f_36292ChickenBridge.scm",(void*)f_36292},
{"f_36284ChickenBridge.scm",(void*)f_36284},
{"f_36248ChickenBridge.scm",(void*)f_36248},
{"f_36252ChickenBridge.scm",(void*)f_36252},
{"f_36213ChickenBridge.scm",(void*)f_36213},
{"f_36217ChickenBridge.scm",(void*)f_36217},
{"f_36178ChickenBridge.scm",(void*)f_36178},
{"f_36182ChickenBridge.scm",(void*)f_36182},
{"f_36151ChickenBridge.scm",(void*)f_36151},
{"f_36154ChickenBridge.scm",(void*)f_36154},
{"f_35434ChickenBridge.scm",(void*)f_35434},
{"f_36118ChickenBridge.scm",(void*)f_36118},
{"f_36133ChickenBridge.scm",(void*)f_36133},
{"f_36125ChickenBridge.scm",(void*)f_36125},
{"f_36089ChickenBridge.scm",(void*)f_36089},
{"f_36093ChickenBridge.scm",(void*)f_36093},
{"f_36054ChickenBridge.scm",(void*)f_36054},
{"f_36058ChickenBridge.scm",(void*)f_36058},
{"f_36019ChickenBridge.scm",(void*)f_36019},
{"f_36023ChickenBridge.scm",(void*)f_36023},
{"f_35984ChickenBridge.scm",(void*)f_35984},
{"f_35988ChickenBridge.scm",(void*)f_35988},
{"f_35438ChickenBridge.scm",(void*)f_35438},
{"f_35948ChickenBridge.scm",(void*)f_35948},
{"f_35963ChickenBridge.scm",(void*)f_35963},
{"f_35955ChickenBridge.scm",(void*)f_35955},
{"f_35919ChickenBridge.scm",(void*)f_35919},
{"f_35923ChickenBridge.scm",(void*)f_35923},
{"f_35884ChickenBridge.scm",(void*)f_35884},
{"f_35888ChickenBridge.scm",(void*)f_35888},
{"f_35849ChickenBridge.scm",(void*)f_35849},
{"f_35853ChickenBridge.scm",(void*)f_35853},
{"f_35814ChickenBridge.scm",(void*)f_35814},
{"f_35818ChickenBridge.scm",(void*)f_35818},
{"f_35441ChickenBridge.scm",(void*)f_35441},
{"f_35778ChickenBridge.scm",(void*)f_35778},
{"f_35793ChickenBridge.scm",(void*)f_35793},
{"f_35785ChickenBridge.scm",(void*)f_35785},
{"f_35749ChickenBridge.scm",(void*)f_35749},
{"f_35753ChickenBridge.scm",(void*)f_35753},
{"f_35714ChickenBridge.scm",(void*)f_35714},
{"f_35718ChickenBridge.scm",(void*)f_35718},
{"f_35679ChickenBridge.scm",(void*)f_35679},
{"f_35683ChickenBridge.scm",(void*)f_35683},
{"f_35644ChickenBridge.scm",(void*)f_35644},
{"f_35648ChickenBridge.scm",(void*)f_35648},
{"f_35444ChickenBridge.scm",(void*)f_35444},
{"f_35608ChickenBridge.scm",(void*)f_35608},
{"f_35623ChickenBridge.scm",(void*)f_35623},
{"f_35615ChickenBridge.scm",(void*)f_35615},
{"f_35579ChickenBridge.scm",(void*)f_35579},
{"f_35583ChickenBridge.scm",(void*)f_35583},
{"f_35544ChickenBridge.scm",(void*)f_35544},
{"f_35548ChickenBridge.scm",(void*)f_35548},
{"f_35509ChickenBridge.scm",(void*)f_35509},
{"f_35513ChickenBridge.scm",(void*)f_35513},
{"f_35474ChickenBridge.scm",(void*)f_35474},
{"f_35478ChickenBridge.scm",(void*)f_35478},
{"f_35447ChickenBridge.scm",(void*)f_35447},
{"f_35450ChickenBridge.scm",(void*)f_35450},
{"f_34727ChickenBridge.scm",(void*)f_34727},
{"f_35411ChickenBridge.scm",(void*)f_35411},
{"f_35426ChickenBridge.scm",(void*)f_35426},
{"f_35418ChickenBridge.scm",(void*)f_35418},
{"f_35382ChickenBridge.scm",(void*)f_35382},
{"f_35386ChickenBridge.scm",(void*)f_35386},
{"f_35347ChickenBridge.scm",(void*)f_35347},
{"f_35351ChickenBridge.scm",(void*)f_35351},
{"f_35312ChickenBridge.scm",(void*)f_35312},
{"f_35316ChickenBridge.scm",(void*)f_35316},
{"f_35277ChickenBridge.scm",(void*)f_35277},
{"f_35281ChickenBridge.scm",(void*)f_35281},
{"f_34731ChickenBridge.scm",(void*)f_34731},
{"f_35241ChickenBridge.scm",(void*)f_35241},
{"f_35256ChickenBridge.scm",(void*)f_35256},
{"f_35248ChickenBridge.scm",(void*)f_35248},
{"f_35212ChickenBridge.scm",(void*)f_35212},
{"f_35216ChickenBridge.scm",(void*)f_35216},
{"f_35177ChickenBridge.scm",(void*)f_35177},
{"f_35181ChickenBridge.scm",(void*)f_35181},
{"f_35142ChickenBridge.scm",(void*)f_35142},
{"f_35146ChickenBridge.scm",(void*)f_35146},
{"f_35107ChickenBridge.scm",(void*)f_35107},
{"f_35111ChickenBridge.scm",(void*)f_35111},
{"f_34734ChickenBridge.scm",(void*)f_34734},
{"f_35071ChickenBridge.scm",(void*)f_35071},
{"f_35086ChickenBridge.scm",(void*)f_35086},
{"f_35078ChickenBridge.scm",(void*)f_35078},
{"f_35042ChickenBridge.scm",(void*)f_35042},
{"f_35046ChickenBridge.scm",(void*)f_35046},
{"f_35007ChickenBridge.scm",(void*)f_35007},
{"f_35011ChickenBridge.scm",(void*)f_35011},
{"f_34972ChickenBridge.scm",(void*)f_34972},
{"f_34976ChickenBridge.scm",(void*)f_34976},
{"f_34937ChickenBridge.scm",(void*)f_34937},
{"f_34941ChickenBridge.scm",(void*)f_34941},
{"f_34737ChickenBridge.scm",(void*)f_34737},
{"f_34901ChickenBridge.scm",(void*)f_34901},
{"f_34916ChickenBridge.scm",(void*)f_34916},
{"f_34908ChickenBridge.scm",(void*)f_34908},
{"f_34872ChickenBridge.scm",(void*)f_34872},
{"f_34876ChickenBridge.scm",(void*)f_34876},
{"f_34837ChickenBridge.scm",(void*)f_34837},
{"f_34841ChickenBridge.scm",(void*)f_34841},
{"f_34802ChickenBridge.scm",(void*)f_34802},
{"f_34806ChickenBridge.scm",(void*)f_34806},
{"f_34767ChickenBridge.scm",(void*)f_34767},
{"f_34771ChickenBridge.scm",(void*)f_34771},
{"f_34740ChickenBridge.scm",(void*)f_34740},
{"f_34743ChickenBridge.scm",(void*)f_34743},
{"f_34020ChickenBridge.scm",(void*)f_34020},
{"f_34704ChickenBridge.scm",(void*)f_34704},
{"f_34719ChickenBridge.scm",(void*)f_34719},
{"f_34711ChickenBridge.scm",(void*)f_34711},
{"f_34675ChickenBridge.scm",(void*)f_34675},
{"f_34679ChickenBridge.scm",(void*)f_34679},
{"f_34640ChickenBridge.scm",(void*)f_34640},
{"f_34644ChickenBridge.scm",(void*)f_34644},
{"f_34605ChickenBridge.scm",(void*)f_34605},
{"f_34609ChickenBridge.scm",(void*)f_34609},
{"f_34570ChickenBridge.scm",(void*)f_34570},
{"f_34574ChickenBridge.scm",(void*)f_34574},
{"f_34024ChickenBridge.scm",(void*)f_34024},
{"f_34534ChickenBridge.scm",(void*)f_34534},
{"f_34549ChickenBridge.scm",(void*)f_34549},
{"f_34541ChickenBridge.scm",(void*)f_34541},
{"f_34505ChickenBridge.scm",(void*)f_34505},
{"f_34509ChickenBridge.scm",(void*)f_34509},
{"f_34470ChickenBridge.scm",(void*)f_34470},
{"f_34474ChickenBridge.scm",(void*)f_34474},
{"f_34435ChickenBridge.scm",(void*)f_34435},
{"f_34439ChickenBridge.scm",(void*)f_34439},
{"f_34400ChickenBridge.scm",(void*)f_34400},
{"f_34404ChickenBridge.scm",(void*)f_34404},
{"f_34027ChickenBridge.scm",(void*)f_34027},
{"f_34364ChickenBridge.scm",(void*)f_34364},
{"f_34379ChickenBridge.scm",(void*)f_34379},
{"f_34371ChickenBridge.scm",(void*)f_34371},
{"f_34335ChickenBridge.scm",(void*)f_34335},
{"f_34339ChickenBridge.scm",(void*)f_34339},
{"f_34300ChickenBridge.scm",(void*)f_34300},
{"f_34304ChickenBridge.scm",(void*)f_34304},
{"f_34265ChickenBridge.scm",(void*)f_34265},
{"f_34269ChickenBridge.scm",(void*)f_34269},
{"f_34230ChickenBridge.scm",(void*)f_34230},
{"f_34234ChickenBridge.scm",(void*)f_34234},
{"f_34030ChickenBridge.scm",(void*)f_34030},
{"f_34194ChickenBridge.scm",(void*)f_34194},
{"f_34209ChickenBridge.scm",(void*)f_34209},
{"f_34201ChickenBridge.scm",(void*)f_34201},
{"f_34165ChickenBridge.scm",(void*)f_34165},
{"f_34169ChickenBridge.scm",(void*)f_34169},
{"f_34130ChickenBridge.scm",(void*)f_34130},
{"f_34134ChickenBridge.scm",(void*)f_34134},
{"f_34095ChickenBridge.scm",(void*)f_34095},
{"f_34099ChickenBridge.scm",(void*)f_34099},
{"f_34060ChickenBridge.scm",(void*)f_34060},
{"f_34064ChickenBridge.scm",(void*)f_34064},
{"f_34033ChickenBridge.scm",(void*)f_34033},
{"f_34036ChickenBridge.scm",(void*)f_34036},
{"f_33591ChickenBridge.scm",(void*)f_33591},
{"f_33997ChickenBridge.scm",(void*)f_33997},
{"f_34012ChickenBridge.scm",(void*)f_34012},
{"f_34004ChickenBridge.scm",(void*)f_34004},
{"f_33968ChickenBridge.scm",(void*)f_33968},
{"f_33972ChickenBridge.scm",(void*)f_33972},
{"f_33933ChickenBridge.scm",(void*)f_33933},
{"f_33937ChickenBridge.scm",(void*)f_33937},
{"f_33898ChickenBridge.scm",(void*)f_33898},
{"f_33902ChickenBridge.scm",(void*)f_33902},
{"f_33595ChickenBridge.scm",(void*)f_33595},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33877ChickenBridge.scm",(void*)f_33877},
{"f_33869ChickenBridge.scm",(void*)f_33869},
{"f_33833ChickenBridge.scm",(void*)f_33833},
{"f_33837ChickenBridge.scm",(void*)f_33837},
{"f_33798ChickenBridge.scm",(void*)f_33798},
{"f_33802ChickenBridge.scm",(void*)f_33802},
{"f_33763ChickenBridge.scm",(void*)f_33763},
{"f_33767ChickenBridge.scm",(void*)f_33767},
{"f_33598ChickenBridge.scm",(void*)f_33598},
{"f_33727ChickenBridge.scm",(void*)f_33727},
{"f_33742ChickenBridge.scm",(void*)f_33742},
{"f_33734ChickenBridge.scm",(void*)f_33734},
{"f_33698ChickenBridge.scm",(void*)f_33698},
{"f_33702ChickenBridge.scm",(void*)f_33702},
{"f_33663ChickenBridge.scm",(void*)f_33663},
{"f_33667ChickenBridge.scm",(void*)f_33667},
{"f_33628ChickenBridge.scm",(void*)f_33628},
{"f_33632ChickenBridge.scm",(void*)f_33632},
{"f_33601ChickenBridge.scm",(void*)f_33601},
{"f_33604ChickenBridge.scm",(void*)f_33604},
{"f_32536ChickenBridge.scm",(void*)f_32536},
{"f_33568ChickenBridge.scm",(void*)f_33568},
{"f_33583ChickenBridge.scm",(void*)f_33583},
{"f_33575ChickenBridge.scm",(void*)f_33575},
{"f_33539ChickenBridge.scm",(void*)f_33539},
{"f_33543ChickenBridge.scm",(void*)f_33543},
{"f_33504ChickenBridge.scm",(void*)f_33504},
{"f_33508ChickenBridge.scm",(void*)f_33508},
{"f_33469ChickenBridge.scm",(void*)f_33469},
{"f_33473ChickenBridge.scm",(void*)f_33473},
{"f_33434ChickenBridge.scm",(void*)f_33434},
{"f_33438ChickenBridge.scm",(void*)f_33438},
{"f_33399ChickenBridge.scm",(void*)f_33399},
{"f_33403ChickenBridge.scm",(void*)f_33403},
{"f_32540ChickenBridge.scm",(void*)f_32540},
{"f_33363ChickenBridge.scm",(void*)f_33363},
{"f_33378ChickenBridge.scm",(void*)f_33378},
{"f_33370ChickenBridge.scm",(void*)f_33370},
{"f_33334ChickenBridge.scm",(void*)f_33334},
{"f_33338ChickenBridge.scm",(void*)f_33338},
{"f_33299ChickenBridge.scm",(void*)f_33299},
{"f_33303ChickenBridge.scm",(void*)f_33303},
{"f_33264ChickenBridge.scm",(void*)f_33264},
{"f_33268ChickenBridge.scm",(void*)f_33268},
{"f_33229ChickenBridge.scm",(void*)f_33229},
{"f_33233ChickenBridge.scm",(void*)f_33233},
{"f_33194ChickenBridge.scm",(void*)f_33194},
{"f_33198ChickenBridge.scm",(void*)f_33198},
{"f_32543ChickenBridge.scm",(void*)f_32543},
{"f_33158ChickenBridge.scm",(void*)f_33158},
{"f_33173ChickenBridge.scm",(void*)f_33173},
{"f_33165ChickenBridge.scm",(void*)f_33165},
{"f_33129ChickenBridge.scm",(void*)f_33129},
{"f_33133ChickenBridge.scm",(void*)f_33133},
{"f_33094ChickenBridge.scm",(void*)f_33094},
{"f_33098ChickenBridge.scm",(void*)f_33098},
{"f_33059ChickenBridge.scm",(void*)f_33059},
{"f_33063ChickenBridge.scm",(void*)f_33063},
{"f_33024ChickenBridge.scm",(void*)f_33024},
{"f_33028ChickenBridge.scm",(void*)f_33028},
{"f_32989ChickenBridge.scm",(void*)f_32989},
{"f_32993ChickenBridge.scm",(void*)f_32993},
{"f_32546ChickenBridge.scm",(void*)f_32546},
{"f_32953ChickenBridge.scm",(void*)f_32953},
{"f_32968ChickenBridge.scm",(void*)f_32968},
{"f_32960ChickenBridge.scm",(void*)f_32960},
{"f_32924ChickenBridge.scm",(void*)f_32924},
{"f_32928ChickenBridge.scm",(void*)f_32928},
{"f_32889ChickenBridge.scm",(void*)f_32889},
{"f_32893ChickenBridge.scm",(void*)f_32893},
{"f_32854ChickenBridge.scm",(void*)f_32854},
{"f_32858ChickenBridge.scm",(void*)f_32858},
{"f_32819ChickenBridge.scm",(void*)f_32819},
{"f_32823ChickenBridge.scm",(void*)f_32823},
{"f_32784ChickenBridge.scm",(void*)f_32784},
{"f_32788ChickenBridge.scm",(void*)f_32788},
{"f_32549ChickenBridge.scm",(void*)f_32549},
{"f_32748ChickenBridge.scm",(void*)f_32748},
{"f_32763ChickenBridge.scm",(void*)f_32763},
{"f_32755ChickenBridge.scm",(void*)f_32755},
{"f_32719ChickenBridge.scm",(void*)f_32719},
{"f_32723ChickenBridge.scm",(void*)f_32723},
{"f_32684ChickenBridge.scm",(void*)f_32684},
{"f_32688ChickenBridge.scm",(void*)f_32688},
{"f_32649ChickenBridge.scm",(void*)f_32649},
{"f_32653ChickenBridge.scm",(void*)f_32653},
{"f_32614ChickenBridge.scm",(void*)f_32614},
{"f_32618ChickenBridge.scm",(void*)f_32618},
{"f_32579ChickenBridge.scm",(void*)f_32579},
{"f_32583ChickenBridge.scm",(void*)f_32583},
{"f_32552ChickenBridge.scm",(void*)f_32552},
{"f_32555ChickenBridge.scm",(void*)f_32555},
{"f_32530ChickenBridge.scm",(void*)f_32530},
{"f_7392ChickenBridge.scm",(void*)f_7392},
{"f_32377ChickenBridge.scm",(void*)f_32377},
{"f_32384ChickenBridge.scm",(void*)f_32384},
{"f_32322ChickenBridge.scm",(void*)f_32322},
{"f_32329ChickenBridge.scm",(void*)f_32329},
{"f_32075ChickenBridge.scm",(void*)f_32075},
{"f_32299ChickenBridge.scm",(void*)f_32299},
{"f_32314ChickenBridge.scm",(void*)f_32314},
{"f_32306ChickenBridge.scm",(void*)f_32306},
{"f_32270ChickenBridge.scm",(void*)f_32270},
{"f_32274ChickenBridge.scm",(void*)f_32274},
{"f_32235ChickenBridge.scm",(void*)f_32235},
{"f_32239ChickenBridge.scm",(void*)f_32239},
{"f_32079ChickenBridge.scm",(void*)f_32079},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_32214ChickenBridge.scm",(void*)f_32214},
{"f_32206ChickenBridge.scm",(void*)f_32206},
{"f_32170ChickenBridge.scm",(void*)f_32170},
{"f_32174ChickenBridge.scm",(void*)f_32174},
{"f_32135ChickenBridge.scm",(void*)f_32135},
{"f_32139ChickenBridge.scm",(void*)f_32139},
{"f_32082ChickenBridge.scm",(void*)f_32082},
{"f_32085ChickenBridge.scm",(void*)f_32085},
{"f_32098ChickenBridge.scm",(void*)f_32098},
{"f_32102ChickenBridge.scm",(void*)f_32102},
{"f_32014ChickenBridge.scm",(void*)f_32014},
{"f_32018ChickenBridge.scm",(void*)f_32018},
{"f_32021ChickenBridge.scm",(void*)f_32021},
{"f_7330ChickenBridge.scm",(void*)f_7330},
{"f_32024ChickenBridge.scm",(void*)f_32024},
{"f_32046ChickenBridge.scm",(void*)f_32046},
{"f_32036ChickenBridge.scm",(void*)f_32036},
{"f_32027ChickenBridge.scm",(void*)f_32027},
{"f_31986ChickenBridge.scm",(void*)f_31986},
{"f_31990ChickenBridge.scm",(void*)f_31990},
{"f_31962ChickenBridge.scm",(void*)f_31962},
{"f_31913ChickenBridge.scm",(void*)f_31913},
{"f_7316ChickenBridge.scm",(void*)f_7316},
{"f_31917ChickenBridge.scm",(void*)f_31917},
{"f_31933ChickenBridge.scm",(void*)f_31933},
{"f_31960ChickenBridge.scm",(void*)f_31960},
{"f_31936ChickenBridge.scm",(void*)f_31936},
{"f_31956ChickenBridge.scm",(void*)f_31956},
{"f_31952ChickenBridge.scm",(void*)f_31952},
{"f_31920ChickenBridge.scm",(void*)f_31920},
{"f_31904ChickenBridge.scm",(void*)f_31904},
{"f_31908ChickenBridge.scm",(void*)f_31908},
{"f_31751ChickenBridge.scm",(void*)f_31751},
{"f_31878ChickenBridge.scm",(void*)f_31878},
{"f_31891ChickenBridge.scm",(void*)f_31891},
{"f_31873ChickenBridge.scm",(void*)f_31873},
{"f_31754ChickenBridge.scm",(void*)f_31754},
{"f_31870ChickenBridge.scm",(void*)f_31870},
{"f_31854ChickenBridge.scm",(void*)f_31854},
{"f_31782ChickenBridge.scm",(void*)f_31782},
{"f_31790ChickenBridge.scm",(void*)f_31790},
{"f_31800ChickenBridge.scm",(void*)f_31800},
{"f_31803ChickenBridge.scm",(void*)f_31803},
{"f_31785ChickenBridge.scm",(void*)f_31785},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_7492ChickenBridge.scm",(void*)f_7492},
{"f_31614ChickenBridge.scm",(void*)f_31614},
{"f_31618ChickenBridge.scm",(void*)f_31618},
{"f_31596ChickenBridge.scm",(void*)f_31596},
{"f_31108ChickenBridge.scm",(void*)f_31108},
{"f_31569ChickenBridge.scm",(void*)f_31569},
{"f_31584ChickenBridge.scm",(void*)f_31584},
{"f_31576ChickenBridge.scm",(void*)f_31576},
{"f_31540ChickenBridge.scm",(void*)f_31540},
{"f_31544ChickenBridge.scm",(void*)f_31544},
{"f_31505ChickenBridge.scm",(void*)f_31505},
{"f_31509ChickenBridge.scm",(void*)f_31509},
{"f_31470ChickenBridge.scm",(void*)f_31470},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31112ChickenBridge.scm",(void*)f_31112},
{"f_31434ChickenBridge.scm",(void*)f_31434},
{"f_31449ChickenBridge.scm",(void*)f_31449},
{"f_31441ChickenBridge.scm",(void*)f_31441},
{"f_31405ChickenBridge.scm",(void*)f_31405},
{"f_31409ChickenBridge.scm",(void*)f_31409},
{"f_31370ChickenBridge.scm",(void*)f_31370},
{"f_31374ChickenBridge.scm",(void*)f_31374},
{"f_31335ChickenBridge.scm",(void*)f_31335},
{"f_31339ChickenBridge.scm",(void*)f_31339},
{"f_31115ChickenBridge.scm",(void*)f_31115},
{"f_31299ChickenBridge.scm",(void*)f_31299},
{"f_31314ChickenBridge.scm",(void*)f_31314},
{"f_31306ChickenBridge.scm",(void*)f_31306},
{"f_31270ChickenBridge.scm",(void*)f_31270},
{"f_31274ChickenBridge.scm",(void*)f_31274},
{"f_31235ChickenBridge.scm",(void*)f_31235},
{"f_31239ChickenBridge.scm",(void*)f_31239},
{"f_31200ChickenBridge.scm",(void*)f_31200},
{"f_31204ChickenBridge.scm",(void*)f_31204},
{"f_31118ChickenBridge.scm",(void*)f_31118},
{"f_31121ChickenBridge.scm",(void*)f_31121},
{"f_31176ChickenBridge.scm",(void*)f_31176},
{"f_31172ChickenBridge.scm",(void*)f_31172},
{"f_31124ChickenBridge.scm",(void*)f_31124},
{"f_28912ChickenBridge.scm",(void*)f_28912},
{"f_28925ChickenBridge.scm",(void*)f_28925},
{"f_28932ChickenBridge.scm",(void*)f_28932},
{"f_28939ChickenBridge.scm",(void*)f_28939},
{"f_28918ChickenBridge.scm",(void*)f_28918},
{"f_31136ChickenBridge.scm",(void*)f_31136},
{"f_31158ChickenBridge.scm",(void*)f_31158},
{"f_31720ChickenBridge.scm",(void*)f_31720},
{"f_31730ChickenBridge.scm",(void*)f_31730},
{"f_31633ChickenBridge.scm",(void*)f_31633},
{"f_31690ChickenBridge.scm",(void*)f_31690},
{"f_31700ChickenBridge.scm",(void*)f_31700},
{"f_31641ChickenBridge.scm",(void*)f_31641},
{"f_31659ChickenBridge.scm",(void*)f_31659},
{"f_31663ChickenBridge.scm",(void*)f_31663},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31674ChickenBridge.scm",(void*)f_31674},
{"f_31651ChickenBridge.scm",(void*)f_31651},
{"f_31644ChickenBridge.scm",(void*)f_31644},
{"f_31127ChickenBridge.scm",(void*)f_31127},
{"f_30039ChickenBridge.scm",(void*)f_30039},
{"f_30052ChickenBridge.scm",(void*)f_30052},
{"f_30102ChickenBridge.scm",(void*)f_30102},
{"f_30199ChickenBridge.scm",(void*)f_30199},
{"f_30267ChickenBridge.scm",(void*)f_30267},
{"f_30524ChickenBridge.scm",(void*)f_30524},
{"f_30274ChickenBridge.scm",(void*)f_30274},
{"f_30512ChickenBridge.scm",(void*)f_30512},
{"f_30463ChickenBridge.scm",(void*)f_30463},
{"f_30469ChickenBridge.scm",(void*)f_30469},
{"f_30493ChickenBridge.scm",(void*)f_30493},
{"f_30489ChickenBridge.scm",(void*)f_30489},
{"f_30477ChickenBridge.scm",(void*)f_30477},
{"f_30277ChickenBridge.scm",(void*)f_30277},
{"f_30439ChickenBridge.scm",(void*)f_30439},
{"f_30443ChickenBridge.scm",(void*)f_30443},
{"f_30280ChickenBridge.scm",(void*)f_30280},
{"f_30416ChickenBridge.scm",(void*)f_30416},
{"f_30420ChickenBridge.scm",(void*)f_30420},
{"f_30283ChickenBridge.scm",(void*)f_30283},
{"f_30393ChickenBridge.scm",(void*)f_30393},
{"f_30397ChickenBridge.scm",(void*)f_30397},
{"f_30286ChickenBridge.scm",(void*)f_30286},
{"f_30318ChickenBridge.scm",(void*)f_30318},
{"f_30336ChickenBridge.scm",(void*)f_30336},
{"f_30354ChickenBridge.scm",(void*)f_30354},
{"f_30372ChickenBridge.scm",(void*)f_30372},
{"f_30289ChickenBridge.scm",(void*)f_30289},
{"f_30293ChickenBridge.scm",(void*)f_30293},
{"f_30203ChickenBridge.scm",(void*)f_30203},
{"f_30207ChickenBridge.scm",(void*)f_30207},
{"f_30211ChickenBridge.scm",(void*)f_30211},
{"f_30106ChickenBridge.scm",(void*)f_30106},
{"f_30110ChickenBridge.scm",(void*)f_30110},
{"f_30114ChickenBridge.scm",(void*)f_30114},
{"f_30133ChickenBridge.scm",(void*)f_30133},
{"f_30137ChickenBridge.scm",(void*)f_30137},
{"f_30117ChickenBridge.scm",(void*)f_30117},
{"f_30121ChickenBridge.scm",(void*)f_30121},
{"f_30056ChickenBridge.scm",(void*)f_30056},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30064ChickenBridge.scm",(void*)f_30064},
{"f_30046ChickenBridge.scm",(void*)f_30046},
{"f_29861ChickenBridge.scm",(void*)f_29861},
{"f_29873ChickenBridge.scm",(void*)f_29873},
{"f_29892ChickenBridge.scm",(void*)f_29892},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29942ChickenBridge.scm",(void*)f_29942},
{"f_29945ChickenBridge.scm",(void*)f_29945},
{"f_29938ChickenBridge.scm",(void*)f_29938},
{"f_29924ChickenBridge.scm",(void*)f_29924},
{"f_29895ChickenBridge.scm",(void*)f_29895},
{"f_29840ChickenBridge.scm",(void*)f_29840},
{"f_29847ChickenBridge.scm",(void*)f_29847},
{"f_29850ChickenBridge.scm",(void*)f_29850},
{"f_29856ChickenBridge.scm",(void*)f_29856},
{"f_29775ChickenBridge.scm",(void*)f_29775},
{"f_29784ChickenBridge.scm",(void*)f_29784},
{"f_29807ChickenBridge.scm",(void*)f_29807},
{"f_29797ChickenBridge.scm",(void*)f_29797},
{"f_29731ChickenBridge.scm",(void*)f_29731},
{"f_29739ChickenBridge.scm",(void*)f_29739},
{"f_29743ChickenBridge.scm",(void*)f_29743},
{"f_29719ChickenBridge.scm",(void*)f_29719},
{"f_29617ChickenBridge.scm",(void*)f_29617},
{"f_29569ChickenBridge.scm",(void*)f_29569},
{"f_28950ChickenBridge.scm",(void*)f_28950},
{"f_28954ChickenBridge.scm",(void*)f_28954},
{"f_28957ChickenBridge.scm",(void*)f_28957},
{"f_29383ChickenBridge.scm",(void*)f_29383},
{"f_29379ChickenBridge.scm",(void*)f_29379},
{"f_29375ChickenBridge.scm",(void*)f_29375},
{"f_28960ChickenBridge.scm",(void*)f_28960},
{"f_29083ChickenBridge.scm",(void*)f_29083},
{"f_28265ChickenBridge.scm",(void*)f_28265},
{"f_29089ChickenBridge.scm",(void*)f_29089},
{"f_28281ChickenBridge.scm",(void*)f_28281},
{"f_29177ChickenBridge.scm",(void*)f_29177},
{"f_29247ChickenBridge.scm",(void*)f_29247},
{"f_28297ChickenBridge.scm",(void*)f_28297},
{"f_29250ChickenBridge.scm",(void*)f_29250},
{"f_28329ChickenBridge.scm",(void*)f_28329},
{"f_29328ChickenBridge.scm",(void*)f_29328},
{"f_29354ChickenBridge.scm",(void*)f_29354},
{"f_29348ChickenBridge.scm",(void*)f_29348},
{"f_29337ChickenBridge.scm",(void*)f_29337},
{"f_29279ChickenBridge.scm",(void*)f_29279},
{"f_29289ChickenBridge.scm",(void*)f_29289},
{"f_29315ChickenBridge.scm",(void*)f_29315},
{"f_29309ChickenBridge.scm",(void*)f_29309},
{"f_29292ChickenBridge.scm",(void*)f_29292},
{"f_29302ChickenBridge.scm",(void*)f_29302},
{"f_29295ChickenBridge.scm",(void*)f_29295},
{"f_29256ChickenBridge.scm",(void*)f_29256},
{"f_29265ChickenBridge.scm",(void*)f_29265},
{"f_29259ChickenBridge.scm",(void*)f_29259},
{"f_29183ChickenBridge.scm",(void*)f_29183},
{"f_29201ChickenBridge.scm",(void*)f_29201},
{"f_29234ChickenBridge.scm",(void*)f_29234},
{"f_29220ChickenBridge.scm",(void*)f_29220},
{"f_29228ChickenBridge.scm",(void*)f_29228},
{"f_29211ChickenBridge.scm",(void*)f_29211},
{"f_29186ChickenBridge.scm",(void*)f_29186},
{"f_29098ChickenBridge.scm",(void*)f_29098},
{"f_29120ChickenBridge.scm",(void*)f_29120},
{"f_29167ChickenBridge.scm",(void*)f_29167},
{"f_29153ChickenBridge.scm",(void*)f_29153},
{"f_29161ChickenBridge.scm",(void*)f_29161},
{"f_29133ChickenBridge.scm",(void*)f_29133},
{"f_29136ChickenBridge.scm",(void*)f_29136},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29118ChickenBridge.scm",(void*)f_29118},
{"f_29104ChickenBridge.scm",(void*)f_29104},
{"f_28969ChickenBridge.scm",(void*)f_28969},
{"f_28975ChickenBridge.scm",(void*)f_28975},
{"f_29033ChickenBridge.scm",(void*)f_29033},
{"f_29036ChickenBridge.scm",(void*)f_29036},
{"f_29057ChickenBridge.scm",(void*)f_29057},
{"f_29068ChickenBridge.scm",(void*)f_29068},
{"f_29047ChickenBridge.scm",(void*)f_29047},
{"f_28981ChickenBridge.scm",(void*)f_28981},
{"f_28991ChickenBridge.scm",(void*)f_28991},
{"f_29027ChickenBridge.scm",(void*)f_29027},
{"f_28997ChickenBridge.scm",(void*)f_28997},
{"f_29012ChickenBridge.scm",(void*)f_29012},
{"f_29020ChickenBridge.scm",(void*)f_29020},
{"f_29004ChickenBridge.scm",(void*)f_29004},
{"f_28846ChickenBridge.scm",(void*)f_28846},
{"f_28848ChickenBridge.scm",(void*)f_28848},
{"f_28896ChickenBridge.scm",(void*)f_28896},
{"f_28852ChickenBridge.scm",(void*)f_28852},
{"f_28855ChickenBridge.scm",(void*)f_28855},
{"f_28860ChickenBridge.scm",(void*)f_28860},
{"f_28881ChickenBridge.scm",(void*)f_28881},
{"f_28838ChickenBridge.scm",(void*)f_28838},
{"f_28840ChickenBridge.scm",(void*)f_28840},
{"f_28661ChickenBridge.scm",(void*)f_28661},
{"f_28669ChickenBridge.scm",(void*)f_28669},
{"f_28630ChickenBridge.scm",(void*)f_28630},
{"f_28647ChickenBridge.scm",(void*)f_28647},
{"f_28651ChickenBridge.scm",(void*)f_28651},
{"f_28597ChickenBridge.scm",(void*)f_28597},
{"f_28604ChickenBridge.scm",(void*)f_28604},
{"f_28491ChickenBridge.scm",(void*)f_28491},
{"f_28498ChickenBridge.scm",(void*)f_28498},
{"f_28613ChickenBridge.scm",(void*)f_28613},
{"f_28836ChickenBridge.scm",(void*)f_28836},
{"f_28813ChickenBridge.scm",(void*)f_28813},
{"f_28829ChickenBridge.scm",(void*)f_28829},
{"f_28675ChickenBridge.scm",(void*)f_28675},
{"f_28678ChickenBridge.scm",(void*)f_28678},
{"f_28702ChickenBridge.scm",(void*)f_28702},
{"f_28759ChickenBridge.scm",(void*)f_28759},
{"f_28765ChickenBridge.scm",(void*)f_28765},
{"f_28774ChickenBridge.scm",(void*)f_28774},
{"f_28783ChickenBridge.scm",(void*)f_28783},
{"f_28792ChickenBridge.scm",(void*)f_28792},
{"f_28801ChickenBridge.scm",(void*)f_28801},
{"f_28753ChickenBridge.scm",(void*)f_28753},
{"f_28708ChickenBridge.scm",(void*)f_28708},
{"f_28714ChickenBridge.scm",(void*)f_28714},
{"f_28720ChickenBridge.scm",(void*)f_28720},
{"f_28726ChickenBridge.scm",(void*)f_28726},
{"f_28732ChickenBridge.scm",(void*)f_28732},
{"f_28738ChickenBridge.scm",(void*)f_28738},
{"f_28579ChickenBridge.scm",(void*)f_28579},
{"f_28586ChickenBridge.scm",(void*)f_28586},
{"f_28512ChickenBridge.scm",(void*)f_28512},
{"f_28500ChickenBridge.scm",(void*)f_28500},
{"f_28468ChickenBridge.scm",(void*)f_28468},
{"f_28475ChickenBridge.scm",(void*)f_28475},
{"f_28482ChickenBridge.scm",(void*)f_28482},
{"f_28452ChickenBridge.scm",(void*)f_28452},
{"f_28459ChickenBridge.scm",(void*)f_28459},
{"f_28466ChickenBridge.scm",(void*)f_28466},
{"f_28443ChickenBridge.scm",(void*)f_28443},
{"f_28425ChickenBridge.scm",(void*)f_28425},
{"f_28407ChickenBridge.scm",(void*)f_28407},
{"f_28392ChickenBridge.scm",(void*)f_28392},
{"f_28386ChickenBridge.scm",(void*)f_28386},
{"f_28338ChickenBridge.scm",(void*)f_28338},
{"f_28306ChickenBridge.scm",(void*)f_28306},
{"f_28313ChickenBridge.scm",(void*)f_28313},
{"f_28248ChickenBridge.scm",(void*)f_28248},
{"f_28256ChickenBridge.scm",(void*)f_28256},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28246ChickenBridge.scm",(void*)f_28246},
{"f_28232ChickenBridge.scm",(void*)f_28232},
{"f_28220ChickenBridge.scm",(void*)f_28220},
{"f_28217ChickenBridge.scm",(void*)f_28217},
{"f_28199ChickenBridge.scm",(void*)f_28199},
{"f_28203ChickenBridge.scm",(void*)f_28203},
{"f_28097ChickenBridge.scm",(void*)f_28097},
{"f_28087ChickenBridge.scm",(void*)f_28087},
{"f_28075ChickenBridge.scm",(void*)f_28075},
{"f_28052ChickenBridge.scm",(void*)f_28052},
{"f_28043ChickenBridge.scm",(void*)f_28043},
{"f_28007ChickenBridge.scm",(void*)f_28007},
{"f_27986ChickenBridge.scm",(void*)f_27986},
{"f_27790ChickenBridge.scm",(void*)f_27790},
{"f_27794ChickenBridge.scm",(void*)f_27794},
{"f_27943ChickenBridge.scm",(void*)f_27943},
{"f_27969ChickenBridge.scm",(void*)f_27969},
{"f_27954ChickenBridge.scm",(void*)f_27954},
{"f_27800ChickenBridge.scm",(void*)f_27800},
{"f_27805ChickenBridge.scm",(void*)f_27805},
{"f_27809ChickenBridge.scm",(void*)f_27809},
{"f_27812ChickenBridge.scm",(void*)f_27812},
{"f_27815ChickenBridge.scm",(void*)f_27815},
{"f_27818ChickenBridge.scm",(void*)f_27818},
{"f_27821ChickenBridge.scm",(void*)f_27821},
{"f_27824ChickenBridge.scm",(void*)f_27824},
{"f_27829ChickenBridge.scm",(void*)f_27829},
{"f_27923ChickenBridge.scm",(void*)f_27923},
{"f_27930ChickenBridge.scm",(void*)f_27930},
{"f_27839ChickenBridge.scm",(void*)f_27839},
{"f_27860ChickenBridge.scm",(void*)f_27860},
{"f_27864ChickenBridge.scm",(void*)f_27864},
{"f_27868ChickenBridge.scm",(void*)f_27868},
{"f_27870ChickenBridge.scm",(void*)f_27870},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27842ChickenBridge.scm",(void*)f_27842},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27664ChickenBridge.scm",(void*)f_27664},
{"f_27670ChickenBridge.scm",(void*)f_27670},
{"f_27674ChickenBridge.scm",(void*)f_27674},
{"f_27692ChickenBridge.scm",(void*)f_27692},
{"f_27695ChickenBridge.scm",(void*)f_27695},
{"f_27699ChickenBridge.scm",(void*)f_27699},
{"f_27702ChickenBridge.scm",(void*)f_27702},
{"f_27754ChickenBridge.scm",(void*)f_27754},
{"f_27765ChickenBridge.scm",(void*)f_27765},
{"f_27705ChickenBridge.scm",(void*)f_27705},
{"f_27715ChickenBridge.scm",(void*)f_27715},
{"f_27717ChickenBridge.scm",(void*)f_27717},
{"f_27561ChickenBridge.scm",(void*)f_27561},
{"f_27585ChickenBridge.scm",(void*)f_27585},
{"f_27589ChickenBridge.scm",(void*)f_27589},
{"f_27615ChickenBridge.scm",(void*)f_27615},
{"f_27625ChickenBridge.scm",(void*)f_27625},
{"f_27662ChickenBridge.scm",(void*)f_27662},
{"f_27654ChickenBridge.scm",(void*)f_27654},
{"f_27592ChickenBridge.scm",(void*)f_27592},
{"f_27562ChickenBridge.scm",(void*)f_27562},
{"f_27566ChickenBridge.scm",(void*)f_27566},
{"f_27569ChickenBridge.scm",(void*)f_27569},
{"f_27731ChickenBridge.scm",(void*)f_27731},
{"f_27734ChickenBridge.scm",(void*)f_27734},
{"f_27741ChickenBridge.scm",(void*)f_27741},
{"f_27675ChickenBridge.scm",(void*)f_27675},
{"f_27679ChickenBridge.scm",(void*)f_27679},
{"f_27682ChickenBridge.scm",(void*)f_27682},
{"f_27151ChickenBridge.scm",(void*)f_27151},
{"f_27530ChickenBridge.scm",(void*)f_27530},
{"f_27524ChickenBridge.scm",(void*)f_27524},
{"f_27155ChickenBridge.scm",(void*)f_27155},
{"f_27508ChickenBridge.scm",(void*)f_27508},
{"f_27158ChickenBridge.scm",(void*)f_27158},
{"f_27494ChickenBridge.scm",(void*)f_27494},
{"f_27490ChickenBridge.scm",(void*)f_27490},
{"f_27161ChickenBridge.scm",(void*)f_27161},
{"f_27483ChickenBridge.scm",(void*)f_27483},
{"f_27479ChickenBridge.scm",(void*)f_27479},
{"f_27164ChickenBridge.scm",(void*)f_27164},
{"f_27167ChickenBridge.scm",(void*)f_27167},
{"f_8136ChickenBridge.scm",(void*)f_8136},
{"f_8159ChickenBridge.scm",(void*)f_8159},
{"f_8149ChickenBridge.scm",(void*)f_8149},
{"f_27467ChickenBridge.scm",(void*)f_27467},
{"f_27459ChickenBridge.scm",(void*)f_27459},
{"f_27463ChickenBridge.scm",(void*)f_27463},
{"f_27451ChickenBridge.scm",(void*)f_27451},
{"f_27455ChickenBridge.scm",(void*)f_27455},
{"f_27325ChickenBridge.scm",(void*)f_27325},
{"f_27440ChickenBridge.scm",(void*)f_27440},
{"f_27444ChickenBridge.scm",(void*)f_27444},
{"f_27432ChickenBridge.scm",(void*)f_27432},
{"f_27436ChickenBridge.scm",(void*)f_27436},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27337ChickenBridge.scm",(void*)f_27337},
{"f_27347ChickenBridge.scm",(void*)f_27347},
{"f_27350ChickenBridge.scm",(void*)f_27350},
{"f_27231ChickenBridge.scm",(void*)f_27231},
{"f_27294ChickenBridge.scm",(void*)f_27294},
{"f_27315ChickenBridge.scm",(void*)f_27315},
{"f_27256ChickenBridge.scm",(void*)f_27256},
{"f_27285ChickenBridge.scm",(void*)f_27285},
{"f_27234ChickenBridge.scm",(void*)f_27234},
{"f_27251ChickenBridge.scm",(void*)f_27251},
{"f_27247ChickenBridge.scm",(void*)f_27247},
{"f_26697ChickenBridge.scm",(void*)f_26697},
{"f_26701ChickenBridge.scm",(void*)f_26701},
{"f_26689ChickenBridge.scm",(void*)f_26689},
{"f_26617ChickenBridge.scm",(void*)f_26617},
{"f_26675ChickenBridge.scm",(void*)f_26675},
{"f_26621ChickenBridge.scm",(void*)f_26621},
{"f_26629ChickenBridge.scm",(void*)f_26629},
{"f_26639ChickenBridge.scm",(void*)f_26639},
{"f_26642ChickenBridge.scm",(void*)f_26642},
{"f_27211ChickenBridge.scm",(void*)f_27211},
{"f_27181ChickenBridge.scm",(void*)f_27181},
{"f_27170ChickenBridge.scm",(void*)f_27170},
{"f_27094ChickenBridge.scm",(void*)f_27094},
{"f_27102ChickenBridge.scm",(void*)f_27102},
{"f_27106ChickenBridge.scm",(void*)f_27106},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27116ChickenBridge.scm",(void*)f_27116},
{"f_27126ChickenBridge.scm",(void*)f_27126},
{"f_26882ChickenBridge.scm",(void*)f_26882},
{"f_26950ChickenBridge.scm",(void*)f_26950},
{"f_26953ChickenBridge.scm",(void*)f_26953},
{"f_26956ChickenBridge.scm",(void*)f_26956},
{"f_26959ChickenBridge.scm",(void*)f_26959},
{"f_26962ChickenBridge.scm",(void*)f_26962},
{"f_27060ChickenBridge.scm",(void*)f_27060},
{"f_27070ChickenBridge.scm",(void*)f_27070},
{"f_27028ChickenBridge.scm",(void*)f_27028},
{"f_27038ChickenBridge.scm",(void*)f_27038},
{"f_26979ChickenBridge.scm",(void*)f_26979},
{"f_26998ChickenBridge.scm",(void*)f_26998},
{"f_27008ChickenBridge.scm",(void*)f_27008},
{"f_26989ChickenBridge.scm",(void*)f_26989},
{"f_26965ChickenBridge.scm",(void*)f_26965},
{"f_26918ChickenBridge.scm",(void*)f_26918},
{"f_26928ChickenBridge.scm",(void*)f_26928},
{"f_26901ChickenBridge.scm",(void*)f_26901},
{"f_26908ChickenBridge.scm",(void*)f_26908},
{"f_26884ChickenBridge.scm",(void*)f_26884},
{"f_26891ChickenBridge.scm",(void*)f_26891},
{"f_26703ChickenBridge.scm",(void*)f_26703},
{"f_26711ChickenBridge.scm",(void*)f_26711},
{"f_26715ChickenBridge.scm",(void*)f_26715},
{"f_26717ChickenBridge.scm",(void*)f_26717},
{"f_26727ChickenBridge.scm",(void*)f_26727},
{"f_26858ChickenBridge.scm",(void*)f_26858},
{"f_26807ChickenBridge.scm",(void*)f_26807},
{"f_26810ChickenBridge.scm",(void*)f_26810},
{"f_26821ChickenBridge.scm",(void*)f_26821},
{"f_26773ChickenBridge.scm",(void*)f_26773},
{"f_26742ChickenBridge.scm",(void*)f_26742},
{"f_26745ChickenBridge.scm",(void*)f_26745},
{"f_26730ChickenBridge.scm",(void*)f_26730},
{"f_26297ChickenBridge.scm",(void*)f_26297},
{"f_26611ChickenBridge.scm",(void*)f_26611},
{"f_26540ChickenBridge.scm",(void*)f_26540},
{"f_26542ChickenBridge.scm",(void*)f_26542},
{"f_26564ChickenBridge.scm",(void*)f_26564},
{"f_26310ChickenBridge.scm",(void*)f_26310},
{"f_26383ChickenBridge.scm",(void*)f_26383},
{"f_26536ChickenBridge.scm",(void*)f_26536},
{"f_26520ChickenBridge.scm",(void*)f_26520},
{"f_26472ChickenBridge.scm",(void*)f_26472},
{"f_26486ChickenBridge.scm",(void*)f_26486},
{"f_26439ChickenBridge.scm",(void*)f_26439},
{"f_26414ChickenBridge.scm",(void*)f_26414},
{"f_26313ChickenBridge.scm",(void*)f_26313},
{"f_26321ChickenBridge.scm",(void*)f_26321},
{"f_24824ChickenBridge.scm",(void*)f_24824},
{"f_26274ChickenBridge.scm",(void*)f_26274},
{"f_26289ChickenBridge.scm",(void*)f_26289},
{"f_26281ChickenBridge.scm",(void*)f_26281},
{"f_26245ChickenBridge.scm",(void*)f_26245},
{"f_26249ChickenBridge.scm",(void*)f_26249},
{"f_26210ChickenBridge.scm",(void*)f_26210},
{"f_26214ChickenBridge.scm",(void*)f_26214},
{"f_26175ChickenBridge.scm",(void*)f_26175},
{"f_26179ChickenBridge.scm",(void*)f_26179},
{"f_26140ChickenBridge.scm",(void*)f_26140},
{"f_26144ChickenBridge.scm",(void*)f_26144},
{"f_26105ChickenBridge.scm",(void*)f_26105},
{"f_26109ChickenBridge.scm",(void*)f_26109},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_26074ChickenBridge.scm",(void*)f_26074},
{"f_24828ChickenBridge.scm",(void*)f_24828},
{"f_26034ChickenBridge.scm",(void*)f_26034},
{"f_26049ChickenBridge.scm",(void*)f_26049},
{"f_26041ChickenBridge.scm",(void*)f_26041},
{"f_26005ChickenBridge.scm",(void*)f_26005},
{"f_26009ChickenBridge.scm",(void*)f_26009},
{"f_25970ChickenBridge.scm",(void*)f_25970},
{"f_25974ChickenBridge.scm",(void*)f_25974},
{"f_25935ChickenBridge.scm",(void*)f_25935},
{"f_25939ChickenBridge.scm",(void*)f_25939},
{"f_25900ChickenBridge.scm",(void*)f_25900},
{"f_25904ChickenBridge.scm",(void*)f_25904},
{"f_25865ChickenBridge.scm",(void*)f_25865},
{"f_25869ChickenBridge.scm",(void*)f_25869},
{"f_25830ChickenBridge.scm",(void*)f_25830},
{"f_25834ChickenBridge.scm",(void*)f_25834},
{"f_24831ChickenBridge.scm",(void*)f_24831},
{"f_25794ChickenBridge.scm",(void*)f_25794},
{"f_25809ChickenBridge.scm",(void*)f_25809},
{"f_25801ChickenBridge.scm",(void*)f_25801},
{"f_25765ChickenBridge.scm",(void*)f_25765},
{"f_25769ChickenBridge.scm",(void*)f_25769},
{"f_25730ChickenBridge.scm",(void*)f_25730},
{"f_25734ChickenBridge.scm",(void*)f_25734},
{"f_25695ChickenBridge.scm",(void*)f_25695},
{"f_25699ChickenBridge.scm",(void*)f_25699},
{"f_25660ChickenBridge.scm",(void*)f_25660},
{"f_25664ChickenBridge.scm",(void*)f_25664},
{"f_25625ChickenBridge.scm",(void*)f_25625},
{"f_25629ChickenBridge.scm",(void*)f_25629},
{"f_25590ChickenBridge.scm",(void*)f_25590},
{"f_25594ChickenBridge.scm",(void*)f_25594},
{"f_24834ChickenBridge.scm",(void*)f_24834},
{"f_25554ChickenBridge.scm",(void*)f_25554},
{"f_25569ChickenBridge.scm",(void*)f_25569},
{"f_25561ChickenBridge.scm",(void*)f_25561},
{"f_25525ChickenBridge.scm",(void*)f_25525},
{"f_25529ChickenBridge.scm",(void*)f_25529},
{"f_25490ChickenBridge.scm",(void*)f_25490},
{"f_25494ChickenBridge.scm",(void*)f_25494},
{"f_25455ChickenBridge.scm",(void*)f_25455},
{"f_25459ChickenBridge.scm",(void*)f_25459},
{"f_25420ChickenBridge.scm",(void*)f_25420},
{"f_25424ChickenBridge.scm",(void*)f_25424},
{"f_25385ChickenBridge.scm",(void*)f_25385},
{"f_25389ChickenBridge.scm",(void*)f_25389},
{"f_25350ChickenBridge.scm",(void*)f_25350},
{"f_25354ChickenBridge.scm",(void*)f_25354},
{"f_24837ChickenBridge.scm",(void*)f_24837},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_25329ChickenBridge.scm",(void*)f_25329},
{"f_25321ChickenBridge.scm",(void*)f_25321},
{"f_25285ChickenBridge.scm",(void*)f_25285},
{"f_25289ChickenBridge.scm",(void*)f_25289},
{"f_25250ChickenBridge.scm",(void*)f_25250},
{"f_25254ChickenBridge.scm",(void*)f_25254},
{"f_25215ChickenBridge.scm",(void*)f_25215},
{"f_25219ChickenBridge.scm",(void*)f_25219},
{"f_25180ChickenBridge.scm",(void*)f_25180},
{"f_25184ChickenBridge.scm",(void*)f_25184},
{"f_25145ChickenBridge.scm",(void*)f_25145},
{"f_25149ChickenBridge.scm",(void*)f_25149},
{"f_25110ChickenBridge.scm",(void*)f_25110},
{"f_25114ChickenBridge.scm",(void*)f_25114},
{"f_24840ChickenBridge.scm",(void*)f_24840},
{"f_25074ChickenBridge.scm",(void*)f_25074},
{"f_25089ChickenBridge.scm",(void*)f_25089},
{"f_25081ChickenBridge.scm",(void*)f_25081},
{"f_25045ChickenBridge.scm",(void*)f_25045},
{"f_25049ChickenBridge.scm",(void*)f_25049},
{"f_25010ChickenBridge.scm",(void*)f_25010},
{"f_25014ChickenBridge.scm",(void*)f_25014},
{"f_24975ChickenBridge.scm",(void*)f_24975},
{"f_24979ChickenBridge.scm",(void*)f_24979},
{"f_24940ChickenBridge.scm",(void*)f_24940},
{"f_24944ChickenBridge.scm",(void*)f_24944},
{"f_24905ChickenBridge.scm",(void*)f_24905},
{"f_24909ChickenBridge.scm",(void*)f_24909},
{"f_24870ChickenBridge.scm",(void*)f_24870},
{"f_24874ChickenBridge.scm",(void*)f_24874},
{"f_24843ChickenBridge.scm",(void*)f_24843},
{"f_24846ChickenBridge.scm",(void*)f_24846},
{"f_24592ChickenBridge.scm",(void*)f_24592},
{"f_24598ChickenBridge.scm",(void*)f_24598},
{"f_24601ChickenBridge.scm",(void*)f_24601},
{"f_24805ChickenBridge.scm",(void*)f_24805},
{"f_24790ChickenBridge.scm",(void*)f_24790},
{"f_24725ChickenBridge.scm",(void*)f_24725},
{"f_7904ChickenBridge.scm",(void*)f_7904},
{"f_24701ChickenBridge.scm",(void*)f_24701},
{"f_24705ChickenBridge.scm",(void*)f_24705},
{"f_24691ChickenBridge.scm",(void*)f_24691},
{"f_24699ChickenBridge.scm",(void*)f_24699},
{"f_24677ChickenBridge.scm",(void*)f_24677},
{"f_24603ChickenBridge.scm",(void*)f_24603},
{"f_24672ChickenBridge.scm",(void*)f_24672},
{"f_24607ChickenBridge.scm",(void*)f_24607},
{"f_24644ChickenBridge.scm",(void*)f_24644},
{"f_24618ChickenBridge.scm",(void*)f_24618},
{"f_24563ChickenBridge.scm",(void*)f_24563},
{"f_24567ChickenBridge.scm",(void*)f_24567},
{"f_24578ChickenBridge.scm",(void*)f_24578},
{"f_24576ChickenBridge.scm",(void*)f_24576},
{"f_24532ChickenBridge.scm",(void*)f_24532},
{"f_24536ChickenBridge.scm",(void*)f_24536},
{"f_24547ChickenBridge.scm",(void*)f_24547},
{"f_24545ChickenBridge.scm",(void*)f_24545},
{"f_24514ChickenBridge.scm",(void*)f_24514},
{"f_24522ChickenBridge.scm",(void*)f_24522},
{"f_24530ChickenBridge.scm",(void*)f_24530},
{"f_24504ChickenBridge.scm",(void*)f_24504},
{"f_24512ChickenBridge.scm",(void*)f_24512},
{"f_24445ChickenBridge.scm",(void*)f_24445},
{"f_24452ChickenBridge.scm",(void*)f_24452},
{"f_24455ChickenBridge.scm",(void*)f_24455},
{"f_24458ChickenBridge.scm",(void*)f_24458},
{"f_24463ChickenBridge.scm",(void*)f_24463},
{"f_24407ChickenBridge.scm",(void*)f_24407},
{"f_24415ChickenBridge.scm",(void*)f_24415},
{"f_24419ChickenBridge.scm",(void*)f_24419},
{"f_24439ChickenBridge.scm",(void*)f_24439},
{"f_24423ChickenBridge.scm",(void*)f_24423},
{"f_24431ChickenBridge.scm",(void*)f_24431},
{"f_24427ChickenBridge.scm",(void*)f_24427},
{"f_24398ChickenBridge.scm",(void*)f_24398},
{"f_24389ChickenBridge.scm",(void*)f_24389},
{"f_24380ChickenBridge.scm",(void*)f_24380},
{"f_24371ChickenBridge.scm",(void*)f_24371},
{"f_24362ChickenBridge.scm",(void*)f_24362},
{"f_24353ChickenBridge.scm",(void*)f_24353},
{"f_24344ChickenBridge.scm",(void*)f_24344},
{"f_24329ChickenBridge.scm",(void*)f_24329},
{"f_24323ChickenBridge.scm",(void*)f_24323},
{"f_24278ChickenBridge.scm",(void*)f_24278},
{"f_7302ChickenBridge.scm",(void*)f_7302},
{"f_24236ChickenBridge.scm",(void*)f_24236},
{"f_24246ChickenBridge.scm",(void*)f_24246},
{"f_23388ChickenBridge.scm",(void*)f_23388},
{"f_7230ChickenBridge.scm",(void*)f_7230},
{"f_23382ChickenBridge.scm",(void*)f_23382},
{"f_23360ChickenBridge.scm",(void*)f_23360},
{"f_23044ChickenBridge.scm",(void*)f_23044},
{"f_23048ChickenBridge.scm",(void*)f_23048},
{"f_23105ChickenBridge.scm",(void*)f_23105},
{"f_23077ChickenBridge.scm",(void*)f_23077},
{"f_23142ChickenBridge.scm",(void*)f_23142},
{"f_23179ChickenBridge.scm",(void*)f_23179},
{"f_23182ChickenBridge.scm",(void*)f_23182},
{"f_23342ChickenBridge.scm",(void*)f_23342},
{"f_23189ChickenBridge.scm",(void*)f_23189},
{"f_23192ChickenBridge.scm",(void*)f_23192},
{"f_23194ChickenBridge.scm",(void*)f_23194},
{"f_23204ChickenBridge.scm",(void*)f_23204},
{"f_23207ChickenBridge.scm",(void*)f_23207},
{"f_23240ChickenBridge.scm",(void*)f_23240},
{"f_23328ChickenBridge.scm",(void*)f_23328},
{"f_23243ChickenBridge.scm",(void*)f_23243},
{"f_23314ChickenBridge.scm",(void*)f_23314},
{"f_23300ChickenBridge.scm",(void*)f_23300},
{"f_23280ChickenBridge.scm",(void*)f_23280},
{"f_23283ChickenBridge.scm",(void*)f_23283},
{"f_23260ChickenBridge.scm",(void*)f_23260},
{"f_23263ChickenBridge.scm",(void*)f_23263},
{"f_23246ChickenBridge.scm",(void*)f_23246},
{"f_23143ChickenBridge.scm",(void*)f_23143},
{"f_23149ChickenBridge.scm",(void*)f_23149},
{"f_23159ChickenBridge.scm",(void*)f_23159},
{"f_23028ChickenBridge.scm",(void*)f_23028},
{"f_23032ChickenBridge.scm",(void*)f_23032},
{"f_23039ChickenBridge.scm",(void*)f_23039},
{"f_23023ChickenBridge.scm",(void*)f_23023},
{"f_22876ChickenBridge.scm",(void*)f_22876},
{"f_22880ChickenBridge.scm",(void*)f_22880},
{"f_22949ChickenBridge.scm",(void*)f_22949},
{"f_22992ChickenBridge.scm",(void*)f_22992},
{"f_22996ChickenBridge.scm",(void*)f_22996},
{"f_22985ChickenBridge.scm",(void*)f_22985},
{"f_22972ChickenBridge.scm",(void*)f_22972},
{"f_22891ChickenBridge.scm",(void*)f_22891},
{"f_22934ChickenBridge.scm",(void*)f_22934},
{"f_22938ChickenBridge.scm",(void*)f_22938},
{"f_22927ChickenBridge.scm",(void*)f_22927},
{"f_22914ChickenBridge.scm",(void*)f_22914},
{"f_22710ChickenBridge.scm",(void*)f_22710},
{"f_22811ChickenBridge.scm",(void*)f_22811},
{"f_22860ChickenBridge.scm",(void*)f_22860},
{"f_22856ChickenBridge.scm",(void*)f_22856},
{"f_22828ChickenBridge.scm",(void*)f_22828},
{"f_22763ChickenBridge.scm",(void*)f_22763},
{"f_22772ChickenBridge.scm",(void*)f_22772},
{"f_22756ChickenBridge.scm",(void*)f_22756},
{"f_22575ChickenBridge.scm",(void*)f_22575},
{"f_22701ChickenBridge.scm",(void*)f_22701},
{"f_22697ChickenBridge.scm",(void*)f_22697},
{"f_22675ChickenBridge.scm",(void*)f_22675},
{"f_22605ChickenBridge.scm",(void*)f_22605},
{"f_22621ChickenBridge.scm",(void*)f_22621},
{"f_22530ChickenBridge.scm",(void*)f_22530},
{"f_22573ChickenBridge.scm",(void*)f_22573},
{"f_22562ChickenBridge.scm",(void*)f_22562},
{"f_22414ChickenBridge.scm",(void*)f_22414},
{"f_22528ChickenBridge.scm",(void*)f_22528},
{"f_22429ChickenBridge.scm",(void*)f_22429},
{"f_22459ChickenBridge.scm",(void*)f_22459},
{"f_22478ChickenBridge.scm",(void*)f_22478},
{"f_22463ChickenBridge.scm",(void*)f_22463},
{"f_22442ChickenBridge.scm",(void*)f_22442},
{"f_22292ChickenBridge.scm",(void*)f_22292},
{"f_22412ChickenBridge.scm",(void*)f_22412},
{"f_22307ChickenBridge.scm",(void*)f_22307},
{"f_22337ChickenBridge.scm",(void*)f_22337},
{"f_22356ChickenBridge.scm",(void*)f_22356},
{"f_22341ChickenBridge.scm",(void*)f_22341},
{"f_22320ChickenBridge.scm",(void*)f_22320},
{"f_22195ChickenBridge.scm",(void*)f_22195},
{"f_22290ChickenBridge.scm",(void*)f_22290},
{"f_22210ChickenBridge.scm",(void*)f_22210},
{"f_22256ChickenBridge.scm",(void*)f_22256},
{"f_22241ChickenBridge.scm",(void*)f_22241},
{"f_22223ChickenBridge.scm",(void*)f_22223},
{"f_22142ChickenBridge.scm",(void*)f_22142},
{"f_22180ChickenBridge.scm",(void*)f_22180},
{"f_22187ChickenBridge.scm",(void*)f_22187},
{"f_22165ChickenBridge.scm",(void*)f_22165},
{"f_22140ChickenBridge.scm",(void*)f_22140},
{"f_22121ChickenBridge.scm",(void*)f_22121},
{"f_22108ChickenBridge.scm",(void*)f_22108},
{"f_22090ChickenBridge.scm",(void*)f_22090},
{"f_22043ChickenBridge.scm",(void*)f_22043},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22072ChickenBridge.scm",(void*)f_22072},
{"f_22059ChickenBridge.scm",(void*)f_22059},
{"f_22015ChickenBridge.scm",(void*)f_22015},
{"f_21996ChickenBridge.scm",(void*)f_21996},
{"f_21955ChickenBridge.scm",(void*)f_21955},
{"f_21936ChickenBridge.scm",(void*)f_21936},
{"f_21708ChickenBridge.scm",(void*)f_21708},
{"f_21913ChickenBridge.scm",(void*)f_21913},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21920ChickenBridge.scm",(void*)f_21920},
{"f_21884ChickenBridge.scm",(void*)f_21884},
{"f_21888ChickenBridge.scm",(void*)f_21888},
{"f_21849ChickenBridge.scm",(void*)f_21849},
{"f_21853ChickenBridge.scm",(void*)f_21853},
{"f_21712ChickenBridge.scm",(void*)f_21712},
{"f_21813ChickenBridge.scm",(void*)f_21813},
{"f_21828ChickenBridge.scm",(void*)f_21828},
{"f_21820ChickenBridge.scm",(void*)f_21820},
{"f_21784ChickenBridge.scm",(void*)f_21784},
{"f_21788ChickenBridge.scm",(void*)f_21788},
{"f_21749ChickenBridge.scm",(void*)f_21749},
{"f_21753ChickenBridge.scm",(void*)f_21753},
{"f_21715ChickenBridge.scm",(void*)f_21715},
{"f_21718ChickenBridge.scm",(void*)f_21718},
{"f_21721ChickenBridge.scm",(void*)f_21721},
{"f_21666ChickenBridge.scm",(void*)f_21666},
{"f_21695ChickenBridge.scm",(void*)f_21695},
{"f_21680ChickenBridge.scm",(void*)f_21680},
{"f_21611ChickenBridge.scm",(void*)f_21611},
{"f_21622ChickenBridge.scm",(void*)f_21622},
{"f_21624ChickenBridge.scm",(void*)f_21624},
{"f_21652ChickenBridge.scm",(void*)f_21652},
{"f_21512ChickenBridge.scm",(void*)f_21512},
{"f_21516ChickenBridge.scm",(void*)f_21516},
{"f_21519ChickenBridge.scm",(void*)f_21519},
{"f_21584ChickenBridge.scm",(void*)f_21584},
{"f_21521ChickenBridge.scm",(void*)f_21521},
{"f_21537ChickenBridge.scm",(void*)f_21537},
{"f_21241ChickenBridge.scm",(void*)f_21241},
{"f_21274ChickenBridge.scm",(void*)f_21274},
{"f_21259ChickenBridge.scm",(void*)f_21259},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21185ChickenBridge.scm",(void*)f_21185},
{"f_21189ChickenBridge.scm",(void*)f_21189},
{"f_20977ChickenBridge.scm",(void*)f_20977},
{"f_20990ChickenBridge.scm",(void*)f_20990},
{"f_21072ChickenBridge.scm",(void*)f_21072},
{"f_21075ChickenBridge.scm",(void*)f_21075},
{"f_21083ChickenBridge.scm",(void*)f_21083},
{"f_21095ChickenBridge.scm",(void*)f_21095},
{"f_21116ChickenBridge.scm",(void*)f_21116},
{"f_21124ChickenBridge.scm",(void*)f_21124},
{"f_21011ChickenBridge.scm",(void*)f_21011},
{"f_21016ChickenBridge.scm",(void*)f_21016},
{"f_21048ChickenBridge.scm",(void*)f_21048},
{"f_20870ChickenBridge.scm",(void*)f_20870},
{"f_20957ChickenBridge.scm",(void*)f_20957},
{"f_20877ChickenBridge.scm",(void*)f_20877},
{"f_20886ChickenBridge.scm",(void*)f_20886},
{"f_20933ChickenBridge.scm",(void*)f_20933},
{"f_20899ChickenBridge.scm",(void*)f_20899},
{"f_20925ChickenBridge.scm",(void*)f_20925},
{"f_20737ChickenBridge.scm",(void*)f_20737},
{"f_20741ChickenBridge.scm",(void*)f_20741},
{"f_20744ChickenBridge.scm",(void*)f_20744},
{"f_20848ChickenBridge.scm",(void*)f_20848},
{"f_20746ChickenBridge.scm",(void*)f_20746},
{"f_20753ChickenBridge.scm",(void*)f_20753},
{"f_20795ChickenBridge.scm",(void*)f_20795},
{"f_20802ChickenBridge.scm",(void*)f_20802},
{"f_20776ChickenBridge.scm",(void*)f_20776},
{"f_20670ChickenBridge.scm",(void*)f_20670},
{"f_20674ChickenBridge.scm",(void*)f_20674},
{"f_20720ChickenBridge.scm",(void*)f_20720},
{"f_20677ChickenBridge.scm",(void*)f_20677},
{"f_20713ChickenBridge.scm",(void*)f_20713},
{"f_20680ChickenBridge.scm",(void*)f_20680},
{"f_20693ChickenBridge.scm",(void*)f_20693},
{"f_20624ChickenBridge.scm",(void*)f_20624},
{"f_20628ChickenBridge.scm",(void*)f_20628},
{"f_20538ChickenBridge.scm",(void*)f_20538},
{"f_20542ChickenBridge.scm",(void*)f_20542},
{"f_20545ChickenBridge.scm",(void*)f_20545},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20576ChickenBridge.scm",(void*)f_20576},
{"f_20523ChickenBridge.scm",(void*)f_20523},
{"f_20508ChickenBridge.scm",(void*)f_20508},
{"f_20272ChickenBridge.scm",(void*)f_20272},
{"f_20485ChickenBridge.scm",(void*)f_20485},
{"f_20500ChickenBridge.scm",(void*)f_20500},
{"f_20492ChickenBridge.scm",(void*)f_20492},
{"f_20456ChickenBridge.scm",(void*)f_20456},
{"f_20460ChickenBridge.scm",(void*)f_20460},
{"f_20421ChickenBridge.scm",(void*)f_20421},
{"f_20425ChickenBridge.scm",(void*)f_20425},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20385ChickenBridge.scm",(void*)f_20385},
{"f_20400ChickenBridge.scm",(void*)f_20400},
{"f_20392ChickenBridge.scm",(void*)f_20392},
{"f_20356ChickenBridge.scm",(void*)f_20356},
{"f_20360ChickenBridge.scm",(void*)f_20360},
{"f_20321ChickenBridge.scm",(void*)f_20321},
{"f_20325ChickenBridge.scm",(void*)f_20325},
{"f_20279ChickenBridge.scm",(void*)f_20279},
{"f_20282ChickenBridge.scm",(void*)f_20282},
{"f_20293ChickenBridge.scm",(void*)f_20293},
{"f_20232ChickenBridge.scm",(void*)f_20232},
{"f_20236ChickenBridge.scm",(void*)f_20236},
{"f_20266ChickenBridge.scm",(void*)f_20266},
{"f_20247ChickenBridge.scm",(void*)f_20247},
{"f_20255ChickenBridge.scm",(void*)f_20255},
{"f_20211ChickenBridge.scm",(void*)f_20211},
{"f_20223ChickenBridge.scm",(void*)f_20223},
{"f_20168ChickenBridge.scm",(void*)f_20168},
{"f_20198ChickenBridge.scm",(void*)f_20198},
{"f_20125ChickenBridge.scm",(void*)f_20125},
{"f_20155ChickenBridge.scm",(void*)f_20155},
{"f_20056ChickenBridge.scm",(void*)f_20056},
{"f_20100ChickenBridge.scm",(void*)f_20100},
{"f_19987ChickenBridge.scm",(void*)f_19987},
{"f_20031ChickenBridge.scm",(void*)f_20031},
{"f_19981ChickenBridge.scm",(void*)f_19981},
{"f_19975ChickenBridge.scm",(void*)f_19975},
{"f_19954ChickenBridge.scm",(void*)f_19954},
{"f_19966ChickenBridge.scm",(void*)f_19966},
{"f_19939ChickenBridge.scm",(void*)f_19939},
{"f_19828ChickenBridge.scm",(void*)f_19828},
{"f_19903ChickenBridge.scm",(void*)f_19903},
{"f_19832ChickenBridge.scm",(void*)f_19832},
{"f_19872ChickenBridge.scm",(void*)f_19872},
{"f_19861ChickenBridge.scm",(void*)f_19861},
{"f_19846ChickenBridge.scm",(void*)f_19846},
{"f_19854ChickenBridge.scm",(void*)f_19854},
{"f_19794ChickenBridge.scm",(void*)f_19794},
{"f_19806ChickenBridge.scm",(void*)f_19806},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_19771ChickenBridge.scm",(void*)f_19771},
{"f_19786ChickenBridge.scm",(void*)f_19786},
{"f_19778ChickenBridge.scm",(void*)f_19778},
{"f_19742ChickenBridge.scm",(void*)f_19742},
{"f_19746ChickenBridge.scm",(void*)f_19746},
{"f_19707ChickenBridge.scm",(void*)f_19707},
{"f_19711ChickenBridge.scm",(void*)f_19711},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_19671ChickenBridge.scm",(void*)f_19671},
{"f_19686ChickenBridge.scm",(void*)f_19686},
{"f_19678ChickenBridge.scm",(void*)f_19678},
{"f_19642ChickenBridge.scm",(void*)f_19642},
{"f_19646ChickenBridge.scm",(void*)f_19646},
{"f_19607ChickenBridge.scm",(void*)f_19607},
{"f_19611ChickenBridge.scm",(void*)f_19611},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_18763ChickenBridge.scm",(void*)f_18763},
{"f_18768ChickenBridge.scm",(void*)f_18768},
{"f_19500ChickenBridge.scm",(void*)f_19500},
{"f_19523ChickenBridge.scm",(void*)f_19523},
{"f_19576ChickenBridge.scm",(void*)f_19576},
{"f_19558ChickenBridge.scm",(void*)f_19558},
{"f_19551ChickenBridge.scm",(void*)f_19551},
{"f_19533ChickenBridge.scm",(void*)f_19533},
{"f_19510ChickenBridge.scm",(void*)f_19510},
{"f_18962ChickenBridge.scm",(void*)f_18962},
{"f_19462ChickenBridge.scm",(void*)f_19462},
{"f_19484ChickenBridge.scm",(void*)f_19484},
{"f_19468ChickenBridge.scm",(void*)f_19468},
{"f_19476ChickenBridge.scm",(void*)f_19476},
{"f_19480ChickenBridge.scm",(void*)f_19480},
{"f_19466ChickenBridge.scm",(void*)f_19466},
{"f_19456ChickenBridge.scm",(void*)f_19456},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_19333ChickenBridge.scm",(void*)f_19333},
{"f_19357ChickenBridge.scm",(void*)f_19357},
{"f_19419ChickenBridge.scm",(void*)f_19419},
{"f_19360ChickenBridge.scm",(void*)f_19360},
{"f_19376ChickenBridge.scm",(void*)f_19376},
{"f_19401ChickenBridge.scm",(void*)f_19401},
{"f_19367ChickenBridge.scm",(void*)f_19367},
{"f_19344ChickenBridge.scm",(void*)f_19344},
{"f_18968ChickenBridge.scm",(void*)f_18968},
{"f_19319ChickenBridge.scm",(void*)f_19319},
{"f_18972ChickenBridge.scm",(void*)f_18972},
{"f_19016ChickenBridge.scm",(void*)f_19016},
{"f_19019ChickenBridge.scm",(void*)f_19019},
{"f_19300ChickenBridge.scm",(void*)f_19300},
{"f_19310ChickenBridge.scm",(void*)f_19310},
{"f_19022ChickenBridge.scm",(void*)f_19022},
{"f_19238ChickenBridge.scm",(void*)f_19238},
{"f_19248ChickenBridge.scm",(void*)f_19248},
{"f_19251ChickenBridge.scm",(void*)f_19251},
{"f_19271ChickenBridge.scm",(void*)f_19271},
{"f_19273ChickenBridge.scm",(void*)f_19273},
{"f_19283ChickenBridge.scm",(void*)f_19283},
{"f_19257ChickenBridge.scm",(void*)f_19257},
{"f_19260ChickenBridge.scm",(void*)f_19260},
{"f_19025ChickenBridge.scm",(void*)f_19025},
{"f_19033ChickenBridge.scm",(void*)f_19033},
{"f_19046ChickenBridge.scm",(void*)f_19046},
{"f_18920ChickenBridge.scm",(void*)f_18920},
{"f_18929ChickenBridge.scm",(void*)f_18929},
{"f_18951ChickenBridge.scm",(void*)f_18951},
{"f_18940ChickenBridge.scm",(void*)f_18940},
{"f_19049ChickenBridge.scm",(void*)f_19049},
{"f_19209ChickenBridge.scm",(void*)f_19209},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19221ChickenBridge.scm",(void*)f_19221},
{"f_19055ChickenBridge.scm",(void*)f_19055},
{"f_19182ChickenBridge.scm",(void*)f_19182},
{"f_19184ChickenBridge.scm",(void*)f_19184},
{"f_19194ChickenBridge.scm",(void*)f_19194},
{"f_19058ChickenBridge.scm",(void*)f_19058},
{"f_19070ChickenBridge.scm",(void*)f_19070},
{"f_19096ChickenBridge.scm",(void*)f_19096},
{"f_19102ChickenBridge.scm",(void*)f_19102},
{"f_19108ChickenBridge.scm",(void*)f_19108},
{"f_19150ChickenBridge.scm",(void*)f_19150},
{"f_19162ChickenBridge.scm",(void*)f_19162},
{"f_19154ChickenBridge.scm",(void*)f_19154},
{"f_19111ChickenBridge.scm",(void*)f_19111},
{"f_19121ChickenBridge.scm",(void*)f_19121},
{"f_19123ChickenBridge.scm",(void*)f_19123},
{"f_19133ChickenBridge.scm",(void*)f_19133},
{"f_19114ChickenBridge.scm",(void*)f_19114},
{"f_19083ChickenBridge.scm",(void*)f_19083},
{"f_19061ChickenBridge.scm",(void*)f_19061},
{"f_19028ChickenBridge.scm",(void*)f_19028},
{"f_18975ChickenBridge.scm",(void*)f_18975},
{"f_18998ChickenBridge.scm",(void*)f_18998},
{"f_18987ChickenBridge.scm",(void*)f_18987},
{"f_18852ChickenBridge.scm",(void*)f_18852},
{"f_18900ChickenBridge.scm",(void*)f_18900},
{"f_18862ChickenBridge.scm",(void*)f_18862},
{"f_18890ChickenBridge.scm",(void*)f_18890},
{"f_18865ChickenBridge.scm",(void*)f_18865},
{"f_18770ChickenBridge.scm",(void*)f_18770},
{"f_8097ChickenBridge.scm",(void*)f_8097},
{"f_8117ChickenBridge.scm",(void*)f_8117},
{"f_8107ChickenBridge.scm",(void*)f_8107},
{"f_18842ChickenBridge.scm",(void*)f_18842},
{"f_18774ChickenBridge.scm",(void*)f_18774},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18824ChickenBridge.scm",(void*)f_18824},
{"f_18653ChickenBridge.scm",(void*)f_18653},
{"f_18657ChickenBridge.scm",(void*)f_18657},
{"f_18686ChickenBridge.scm",(void*)f_18686},
{"f_18691ChickenBridge.scm",(void*)f_18691},
{"f_18716ChickenBridge.scm",(void*)f_18716},
{"f_18701ChickenBridge.scm",(void*)f_18701},
{"f_18135ChickenBridge.scm",(void*)f_18135},
{"f_18406ChickenBridge.scm",(void*)f_18406},
{"f_18410ChickenBridge.scm",(void*)f_18410},
{"f_18415ChickenBridge.scm",(void*)f_18415},
{"f_18621ChickenBridge.scm",(void*)f_18621},
{"f_18636ChickenBridge.scm",(void*)f_18636},
{"f_18628ChickenBridge.scm",(void*)f_18628},
{"f_18592ChickenBridge.scm",(void*)f_18592},
{"f_18596ChickenBridge.scm",(void*)f_18596},
{"f_18557ChickenBridge.scm",(void*)f_18557},
{"f_18561ChickenBridge.scm",(void*)f_18561},
{"f_18419ChickenBridge.scm",(void*)f_18419},
{"f_18521ChickenBridge.scm",(void*)f_18521},
{"f_18536ChickenBridge.scm",(void*)f_18536},
{"f_18528ChickenBridge.scm",(void*)f_18528},
{"f_18492ChickenBridge.scm",(void*)f_18492},
{"f_18496ChickenBridge.scm",(void*)f_18496},
{"f_18457ChickenBridge.scm",(void*)f_18457},
{"f_18461ChickenBridge.scm",(void*)f_18461},
{"f_18422ChickenBridge.scm",(void*)f_18422},
{"f_18425ChickenBridge.scm",(void*)f_18425},
{"f_18428ChickenBridge.scm",(void*)f_18428},
{"f_18397ChickenBridge.scm",(void*)f_18397},
{"f_18139ChickenBridge.scm",(void*)f_18139},
{"f_18366ChickenBridge.scm",(void*)f_18366},
{"f_18381ChickenBridge.scm",(void*)f_18381},
{"f_18373ChickenBridge.scm",(void*)f_18373},
{"f_18337ChickenBridge.scm",(void*)f_18337},
{"f_18341ChickenBridge.scm",(void*)f_18341},
{"f_18302ChickenBridge.scm",(void*)f_18302},
{"f_18306ChickenBridge.scm",(void*)f_18306},
{"f_18142ChickenBridge.scm",(void*)f_18142},
{"f_18266ChickenBridge.scm",(void*)f_18266},
{"f_18281ChickenBridge.scm",(void*)f_18281},
{"f_18273ChickenBridge.scm",(void*)f_18273},
{"f_18237ChickenBridge.scm",(void*)f_18237},
{"f_18241ChickenBridge.scm",(void*)f_18241},
{"f_18202ChickenBridge.scm",(void*)f_18202},
{"f_18206ChickenBridge.scm",(void*)f_18206},
{"f_18145ChickenBridge.scm",(void*)f_18145},
{"f_18148ChickenBridge.scm",(void*)f_18148},
{"f_18151ChickenBridge.scm",(void*)f_18151},
{"f_18163ChickenBridge.scm",(void*)f_18163},
{"f_18181ChickenBridge.scm",(void*)f_18181},
{"f_18169ChickenBridge.scm",(void*)f_18169},
{"f_18157ChickenBridge.scm",(void*)f_18157},
{"f_18072ChickenBridge.scm",(void*)f_18072},
{"f_17732ChickenBridge.scm",(void*)f_17732},
{"f_17914ChickenBridge.scm",(void*)f_17914},
{"f_17918ChickenBridge.scm",(void*)f_17918},
{"f_17920ChickenBridge.scm",(void*)f_17920},
{"f_17845ChickenBridge.scm",(void*)f_17845},
{"f_17855ChickenBridge.scm",(void*)f_17855},
{"f_17862ChickenBridge.scm",(void*)f_17862},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17933ChickenBridge.scm",(void*)f_17933},
{"f_17937ChickenBridge.scm",(void*)f_17937},
{"f_17957ChickenBridge.scm",(void*)f_17957},
{"f_17973ChickenBridge.scm",(void*)f_17973},
{"f_17940ChickenBridge.scm",(void*)f_17940},
{"f_17735ChickenBridge.scm",(void*)f_17735},
{"f_17747ChickenBridge.scm",(void*)f_17747},
{"f_17783ChickenBridge.scm",(void*)f_17783},
{"f_17803ChickenBridge.scm",(void*)f_17803},
{"f_17808ChickenBridge.scm",(void*)f_17808},
{"f_17245ChickenBridge.scm",(void*)f_17245},
{"f_17172ChickenBridge.scm",(void*)f_17172},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_17023ChickenBridge.scm",(void*)f_17023},
{"f_17108ChickenBridge.scm",(void*)f_17108},
{"f_17035ChickenBridge.scm",(void*)f_17035},
{"f_17051ChickenBridge.scm",(void*)f_17051},
{"f_17055ChickenBridge.scm",(void*)f_17055},
{"f_17058ChickenBridge.scm",(void*)f_17058},
{"f_17038ChickenBridge.scm",(void*)f_17038},
{"f_17049ChickenBridge.scm",(void*)f_17049},
{"f_17189ChickenBridge.scm",(void*)f_17189},
{"f_17726ChickenBridge.scm",(void*)f_17726},
{"f_17249ChickenBridge.scm",(void*)f_17249},
{"f_17695ChickenBridge.scm",(void*)f_17695},
{"f_17710ChickenBridge.scm",(void*)f_17710},
{"f_17702ChickenBridge.scm",(void*)f_17702},
{"f_17666ChickenBridge.scm",(void*)f_17666},
{"f_17670ChickenBridge.scm",(void*)f_17670},
{"f_17631ChickenBridge.scm",(void*)f_17631},
{"f_17635ChickenBridge.scm",(void*)f_17635},
{"f_17596ChickenBridge.scm",(void*)f_17596},
{"f_17600ChickenBridge.scm",(void*)f_17600},
{"f_17252ChickenBridge.scm",(void*)f_17252},
{"f_17560ChickenBridge.scm",(void*)f_17560},
{"f_17575ChickenBridge.scm",(void*)f_17575},
{"f_17567ChickenBridge.scm",(void*)f_17567},
{"f_17531ChickenBridge.scm",(void*)f_17531},
{"f_17535ChickenBridge.scm",(void*)f_17535},
{"f_17496ChickenBridge.scm",(void*)f_17496},
{"f_17500ChickenBridge.scm",(void*)f_17500},
{"f_17461ChickenBridge.scm",(void*)f_17461},
{"f_17465ChickenBridge.scm",(void*)f_17465},
{"f_17255ChickenBridge.scm",(void*)f_17255},
{"f_17425ChickenBridge.scm",(void*)f_17425},
{"f_17440ChickenBridge.scm",(void*)f_17440},
{"f_17432ChickenBridge.scm",(void*)f_17432},
{"f_17396ChickenBridge.scm",(void*)f_17396},
{"f_17400ChickenBridge.scm",(void*)f_17400},
{"f_17361ChickenBridge.scm",(void*)f_17361},
{"f_17365ChickenBridge.scm",(void*)f_17365},
{"f_17326ChickenBridge.scm",(void*)f_17326},
{"f_17330ChickenBridge.scm",(void*)f_17330},
{"f_17258ChickenBridge.scm",(void*)f_17258},
{"f_17261ChickenBridge.scm",(void*)f_17261},
{"f_17264ChickenBridge.scm",(void*)f_17264},
{"f_17297ChickenBridge.scm",(void*)f_17297},
{"f_17305ChickenBridge.scm",(void*)f_17305},
{"f_17270ChickenBridge.scm",(void*)f_17270},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17273ChickenBridge.scm",(void*)f_17273},
{"f_17276ChickenBridge.scm",(void*)f_17276},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16816ChickenBridge.scm",(void*)f_16816},
{"f_16819ChickenBridge.scm",(void*)f_16819},
{"f_16822ChickenBridge.scm",(void*)f_16822},
{"f_16991ChickenBridge.scm",(void*)f_16991},
{"f_17004ChickenBridge.scm",(void*)f_17004},
{"f_17008ChickenBridge.scm",(void*)f_17008},
{"f_16828ChickenBridge.scm",(void*)f_16828},
{"f_16984ChickenBridge.scm",(void*)f_16984},
{"f_16965ChickenBridge.scm",(void*)f_16965},
{"f_16972ChickenBridge.scm",(void*)f_16972},
{"f_16976ChickenBridge.scm",(void*)f_16976},
{"f_16834ChickenBridge.scm",(void*)f_16834},
{"f_16840ChickenBridge.scm",(void*)f_16840},
{"f_16924ChickenBridge.scm",(void*)f_16924},
{"f_16926ChickenBridge.scm",(void*)f_16926},
{"f_16948ChickenBridge.scm",(void*)f_16948},
{"f_16955ChickenBridge.scm",(void*)f_16955},
{"f_16959ChickenBridge.scm",(void*)f_16959},
{"f_16945ChickenBridge.scm",(void*)f_16945},
{"f_16941ChickenBridge.scm",(void*)f_16941},
{"f_16882ChickenBridge.scm",(void*)f_16882},
{"f_16899ChickenBridge.scm",(void*)f_16899},
{"f_16909ChickenBridge.scm",(void*)f_16909},
{"f_16885ChickenBridge.scm",(void*)f_16885},
{"f_16844ChickenBridge.scm",(void*)f_16844},
{"f_16852ChickenBridge.scm",(void*)f_16852},
{"f_16854ChickenBridge.scm",(void*)f_16854},
{"f_16875ChickenBridge.scm",(void*)f_16875},
{"f_16712ChickenBridge.scm",(void*)f_16712},
{"f_16810ChickenBridge.scm",(void*)f_16810},
{"f_16769ChickenBridge.scm",(void*)f_16769},
{"f_16802ChickenBridge.scm",(void*)f_16802},
{"f_16798ChickenBridge.scm",(void*)f_16798},
{"f_16783ChickenBridge.scm",(void*)f_16783},
{"f_16719ChickenBridge.scm",(void*)f_16719},
{"f_16727ChickenBridge.scm",(void*)f_16727},
{"f_16760ChickenBridge.scm",(void*)f_16760},
{"f_16744ChickenBridge.scm",(void*)f_16744},
{"f_15945ChickenBridge.scm",(void*)f_15945},
{"f_16262ChickenBridge.scm",(void*)f_16262},
{"f_16269ChickenBridge.scm",(void*)f_16269},
{"f_16674ChickenBridge.scm",(void*)f_16674},
{"f_16689ChickenBridge.scm",(void*)f_16689},
{"f_16681ChickenBridge.scm",(void*)f_16681},
{"f_16645ChickenBridge.scm",(void*)f_16645},
{"f_16649ChickenBridge.scm",(void*)f_16649},
{"f_16610ChickenBridge.scm",(void*)f_16610},
{"f_16614ChickenBridge.scm",(void*)f_16614},
{"f_16575ChickenBridge.scm",(void*)f_16575},
{"f_16579ChickenBridge.scm",(void*)f_16579},
{"f_16272ChickenBridge.scm",(void*)f_16272},
{"f_16539ChickenBridge.scm",(void*)f_16539},
{"f_16554ChickenBridge.scm",(void*)f_16554},
{"f_16546ChickenBridge.scm",(void*)f_16546},
{"f_16510ChickenBridge.scm",(void*)f_16510},
{"f_16514ChickenBridge.scm",(void*)f_16514},
{"f_16475ChickenBridge.scm",(void*)f_16475},
{"f_16479ChickenBridge.scm",(void*)f_16479},
{"f_16440ChickenBridge.scm",(void*)f_16440},
{"f_16444ChickenBridge.scm",(void*)f_16444},
{"f_16275ChickenBridge.scm",(void*)f_16275},
{"f_16404ChickenBridge.scm",(void*)f_16404},
{"f_16419ChickenBridge.scm",(void*)f_16419},
{"f_16411ChickenBridge.scm",(void*)f_16411},
{"f_16375ChickenBridge.scm",(void*)f_16375},
{"f_16379ChickenBridge.scm",(void*)f_16379},
{"f_16340ChickenBridge.scm",(void*)f_16340},
{"f_16344ChickenBridge.scm",(void*)f_16344},
{"f_16305ChickenBridge.scm",(void*)f_16305},
{"f_16309ChickenBridge.scm",(void*)f_16309},
{"f_16278ChickenBridge.scm",(void*)f_16278},
{"f_16281ChickenBridge.scm",(void*)f_16281},
{"f_15949ChickenBridge.scm",(void*)f_15949},
{"f_15952ChickenBridge.scm",(void*)f_15952},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_16230ChickenBridge.scm",(void*)f_16230},
{"f_16233ChickenBridge.scm",(void*)f_16233},
{"f_16236ChickenBridge.scm",(void*)f_16236},
{"f_16239ChickenBridge.scm",(void*)f_16239},
{"f_16252ChickenBridge.scm",(void*)f_16252},
{"f_16242ChickenBridge.scm",(void*)f_16242},
{"f_15958ChickenBridge.scm",(void*)f_15958},
{"f_16221ChickenBridge.scm",(void*)f_16221},
{"f_15965ChickenBridge.scm",(void*)f_15965},
{"f_16196ChickenBridge.scm",(void*)f_16196},
{"f_16211ChickenBridge.scm",(void*)f_16211},
{"f_16203ChickenBridge.scm",(void*)f_16203},
{"f_16167ChickenBridge.scm",(void*)f_16167},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16132ChickenBridge.scm",(void*)f_16132},
{"f_16136ChickenBridge.scm",(void*)f_16136},
{"f_15968ChickenBridge.scm",(void*)f_15968},
{"f_16096ChickenBridge.scm",(void*)f_16096},
{"f_16111ChickenBridge.scm",(void*)f_16111},
{"f_16103ChickenBridge.scm",(void*)f_16103},
{"f_16067ChickenBridge.scm",(void*)f_16067},
{"f_16071ChickenBridge.scm",(void*)f_16071},
{"f_16032ChickenBridge.scm",(void*)f_16032},
{"f_16036ChickenBridge.scm",(void*)f_16036},
{"f_15971ChickenBridge.scm",(void*)f_15971},
{"f_15974ChickenBridge.scm",(void*)f_15974},
{"f_15989ChickenBridge.scm",(void*)f_15989},
{"f_16011ChickenBridge.scm",(void*)f_16011},
{"f_15995ChickenBridge.scm",(void*)f_15995},
{"f_16003ChickenBridge.scm",(void*)f_16003},
{"f_15977ChickenBridge.scm",(void*)f_15977},
{"f_15980ChickenBridge.scm",(void*)f_15980},
{"f_15862ChickenBridge.scm",(void*)f_15862},
{"f_15853ChickenBridge.scm",(void*)f_15853},
{"f_15844ChickenBridge.scm",(void*)f_15844},
{"f_15826ChickenBridge.scm",(void*)f_15826},
{"f_15808ChickenBridge.scm",(void*)f_15808},
{"f_15790ChickenBridge.scm",(void*)f_15790},
{"f_15781ChickenBridge.scm",(void*)f_15781},
{"f_15772ChickenBridge.scm",(void*)f_15772},
{"f_15550ChickenBridge.scm",(void*)f_15550},
{"f_15600ChickenBridge.scm",(void*)f_15600},
{"f_15745ChickenBridge.scm",(void*)f_15745},
{"f_15626ChickenBridge.scm",(void*)f_15626},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15726ChickenBridge.scm",(void*)f_15726},
{"f_15707ChickenBridge.scm",(void*)f_15707},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15633ChickenBridge.scm",(void*)f_15633},
{"f_15603ChickenBridge.scm",(void*)f_15603},
{"f_15553ChickenBridge.scm",(void*)f_15553},
{"f_15559ChickenBridge.scm",(void*)f_15559},
{"f_15575ChickenBridge.scm",(void*)f_15575},
{"f_15578ChickenBridge.scm",(void*)f_15578},
{"f_15076ChickenBridge.scm",(void*)f_15076},
{"f_15540ChickenBridge.scm",(void*)f_15540},
{"f_15080ChickenBridge.scm",(void*)f_15080},
{"f_15512ChickenBridge.scm",(void*)f_15512},
{"f_15527ChickenBridge.scm",(void*)f_15527},
{"f_15519ChickenBridge.scm",(void*)f_15519},
{"f_15483ChickenBridge.scm",(void*)f_15483},
{"f_15487ChickenBridge.scm",(void*)f_15487},
{"f_15448ChickenBridge.scm",(void*)f_15448},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15417ChickenBridge.scm",(void*)f_15417},
{"f_15083ChickenBridge.scm",(void*)f_15083},
{"f_15377ChickenBridge.scm",(void*)f_15377},
{"f_15392ChickenBridge.scm",(void*)f_15392},
{"f_15384ChickenBridge.scm",(void*)f_15384},
{"f_15348ChickenBridge.scm",(void*)f_15348},
{"f_15352ChickenBridge.scm",(void*)f_15352},
{"f_15313ChickenBridge.scm",(void*)f_15313},
{"f_15317ChickenBridge.scm",(void*)f_15317},
{"f_15278ChickenBridge.scm",(void*)f_15278},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_15086ChickenBridge.scm",(void*)f_15086},
{"f_15242ChickenBridge.scm",(void*)f_15242},
{"f_15257ChickenBridge.scm",(void*)f_15257},
{"f_15249ChickenBridge.scm",(void*)f_15249},
{"f_15213ChickenBridge.scm",(void*)f_15213},
{"f_15217ChickenBridge.scm",(void*)f_15217},
{"f_15178ChickenBridge.scm",(void*)f_15178},
{"f_15182ChickenBridge.scm",(void*)f_15182},
{"f_15143ChickenBridge.scm",(void*)f_15143},
{"f_15147ChickenBridge.scm",(void*)f_15147},
{"f_15089ChickenBridge.scm",(void*)f_15089},
{"f_15092ChickenBridge.scm",(void*)f_15092},
{"f_15095ChickenBridge.scm",(void*)f_15095},
{"f_15110ChickenBridge.scm",(void*)f_15110},
{"f_15122ChickenBridge.scm",(void*)f_15122},
{"f_15101ChickenBridge.scm",(void*)f_15101},
{"f_15104ChickenBridge.scm",(void*)f_15104},
{"f_15000ChickenBridge.scm",(void*)f_15000},
{"f_15004ChickenBridge.scm",(void*)f_15004},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_15033ChickenBridge.scm",(void*)f_15033},
{"f_15035ChickenBridge.scm",(void*)f_15035},
{"f_15052ChickenBridge.scm",(void*)f_15052},
{"f_15055ChickenBridge.scm",(void*)f_15055},
{"f_15066ChickenBridge.scm",(void*)f_15066},
{"f_15007ChickenBridge.scm",(void*)f_15007},
{"f_14737ChickenBridge.scm",(void*)f_14737},
{"f_14990ChickenBridge.scm",(void*)f_14990},
{"f_14741ChickenBridge.scm",(void*)f_14741},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14977ChickenBridge.scm",(void*)f_14977},
{"f_14969ChickenBridge.scm",(void*)f_14969},
{"f_14933ChickenBridge.scm",(void*)f_14933},
{"f_14937ChickenBridge.scm",(void*)f_14937},
{"f_14898ChickenBridge.scm",(void*)f_14898},
{"f_14902ChickenBridge.scm",(void*)f_14902},
{"f_14744ChickenBridge.scm",(void*)f_14744},
{"f_14862ChickenBridge.scm",(void*)f_14862},
{"f_14877ChickenBridge.scm",(void*)f_14877},
{"f_14869ChickenBridge.scm",(void*)f_14869},
{"f_14833ChickenBridge.scm",(void*)f_14833},
{"f_14837ChickenBridge.scm",(void*)f_14837},
{"f_14798ChickenBridge.scm",(void*)f_14798},
{"f_14802ChickenBridge.scm",(void*)f_14802},
{"f_14747ChickenBridge.scm",(void*)f_14747},
{"f_14750ChickenBridge.scm",(void*)f_14750},
{"f_14753ChickenBridge.scm",(void*)f_14753},
{"f_14765ChickenBridge.scm",(void*)f_14765},
{"f_14777ChickenBridge.scm",(void*)f_14777},
{"f_14759ChickenBridge.scm",(void*)f_14759},
{"f_14701ChickenBridge.scm",(void*)f_14701},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14727ChickenBridge.scm",(void*)f_14727},
{"f_14721ChickenBridge.scm",(void*)f_14721},
{"f_14714ChickenBridge.scm",(void*)f_14714},
{"f_14454ChickenBridge.scm",(void*)f_14454},
{"f_14458ChickenBridge.scm",(void*)f_14458},
{"f_14671ChickenBridge.scm",(void*)f_14671},
{"f_14686ChickenBridge.scm",(void*)f_14686},
{"f_14678ChickenBridge.scm",(void*)f_14678},
{"f_14642ChickenBridge.scm",(void*)f_14642},
{"f_14646ChickenBridge.scm",(void*)f_14646},
{"f_14607ChickenBridge.scm",(void*)f_14607},
{"f_14611ChickenBridge.scm",(void*)f_14611},
{"f_14461ChickenBridge.scm",(void*)f_14461},
{"f_14571ChickenBridge.scm",(void*)f_14571},
{"f_14586ChickenBridge.scm",(void*)f_14586},
{"f_14578ChickenBridge.scm",(void*)f_14578},
{"f_14542ChickenBridge.scm",(void*)f_14542},
{"f_14546ChickenBridge.scm",(void*)f_14546},
{"f_14507ChickenBridge.scm",(void*)f_14507},
{"f_14511ChickenBridge.scm",(void*)f_14511},
{"f_14464ChickenBridge.scm",(void*)f_14464},
{"f_14467ChickenBridge.scm",(void*)f_14467},
{"f_14470ChickenBridge.scm",(void*)f_14470},
{"f_14478ChickenBridge.scm",(void*)f_14478},
{"f_14486ChickenBridge.scm",(void*)f_14486},
{"f_14476ChickenBridge.scm",(void*)f_14476},
{"f_14239ChickenBridge.scm",(void*)f_14239},
{"f_14243ChickenBridge.scm",(void*)f_14243},
{"f_14452ChickenBridge.scm",(void*)f_14452},
{"f_14405ChickenBridge.scm",(void*)f_14405},
{"f_14417ChickenBridge.scm",(void*)f_14417},
{"f_14273ChickenBridge.scm",(void*)f_14273},
{"f_14276ChickenBridge.scm",(void*)f_14276},
{"f_14282ChickenBridge.scm",(void*)f_14282},
{"f_14285ChickenBridge.scm",(void*)f_14285},
{"f_14373ChickenBridge.scm",(void*)f_14373},
{"f_14288ChickenBridge.scm",(void*)f_14288},
{"f_14367ChickenBridge.scm",(void*)f_14367},
{"f_14294ChickenBridge.scm",(void*)f_14294},
{"f_14297ChickenBridge.scm",(void*)f_14297},
{"f_14249ChickenBridge.scm",(void*)f_14249},
{"f_14252ChickenBridge.scm",(void*)f_14252},
{"f_14259ChickenBridge.scm",(void*)f_14259},
{"f_13769ChickenBridge.scm",(void*)f_13769},
{"f_13773ChickenBridge.scm",(void*)f_13773},
{"f_14209ChickenBridge.scm",(void*)f_14209},
{"f_14224ChickenBridge.scm",(void*)f_14224},
{"f_14216ChickenBridge.scm",(void*)f_14216},
{"f_14180ChickenBridge.scm",(void*)f_14180},
{"f_14184ChickenBridge.scm",(void*)f_14184},
{"f_14145ChickenBridge.scm",(void*)f_14145},
{"f_14149ChickenBridge.scm",(void*)f_14149},
{"f_14110ChickenBridge.scm",(void*)f_14110},
{"f_14114ChickenBridge.scm",(void*)f_14114},
{"f_13776ChickenBridge.scm",(void*)f_13776},
{"f_14074ChickenBridge.scm",(void*)f_14074},
{"f_14089ChickenBridge.scm",(void*)f_14089},
{"f_14081ChickenBridge.scm",(void*)f_14081},
{"f_14045ChickenBridge.scm",(void*)f_14045},
{"f_14049ChickenBridge.scm",(void*)f_14049},
{"f_14010ChickenBridge.scm",(void*)f_14010},
{"f_14014ChickenBridge.scm",(void*)f_14014},
{"f_13975ChickenBridge.scm",(void*)f_13975},
{"f_13979ChickenBridge.scm",(void*)f_13979},
{"f_13779ChickenBridge.scm",(void*)f_13779},
{"f_13939ChickenBridge.scm",(void*)f_13939},
{"f_13954ChickenBridge.scm",(void*)f_13954},
{"f_13946ChickenBridge.scm",(void*)f_13946},
{"f_13910ChickenBridge.scm",(void*)f_13910},
{"f_13914ChickenBridge.scm",(void*)f_13914},
{"f_13875ChickenBridge.scm",(void*)f_13875},
{"f_13879ChickenBridge.scm",(void*)f_13879},
{"f_13840ChickenBridge.scm",(void*)f_13840},
{"f_13844ChickenBridge.scm",(void*)f_13844},
{"f_13782ChickenBridge.scm",(void*)f_13782},
{"f_13785ChickenBridge.scm",(void*)f_13785},
{"f_13788ChickenBridge.scm",(void*)f_13788},
{"f_13811ChickenBridge.scm",(void*)f_13811},
{"f_13819ChickenBridge.scm",(void*)f_13819},
{"f_13794ChickenBridge.scm",(void*)f_13794},
{"f_13797ChickenBridge.scm",(void*)f_13797},
{"f_13689ChickenBridge.scm",(void*)f_13689},
{"f_13680ChickenBridge.scm",(void*)f_13680},
{"f_13608ChickenBridge.scm",(void*)f_13608},
{"f_13612ChickenBridge.scm",(void*)f_13612},
{"f_13615ChickenBridge.scm",(void*)f_13615},
{"f_13353ChickenBridge.scm",(void*)f_13353},
{"f_13357ChickenBridge.scm",(void*)f_13357},
{"f_13578ChickenBridge.scm",(void*)f_13578},
{"f_13593ChickenBridge.scm",(void*)f_13593},
{"f_13585ChickenBridge.scm",(void*)f_13585},
{"f_13549ChickenBridge.scm",(void*)f_13549},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13514ChickenBridge.scm",(void*)f_13514},
{"f_13518ChickenBridge.scm",(void*)f_13518},
{"f_13360ChickenBridge.scm",(void*)f_13360},
{"f_13478ChickenBridge.scm",(void*)f_13478},
{"f_13493ChickenBridge.scm",(void*)f_13493},
{"f_13485ChickenBridge.scm",(void*)f_13485},
{"f_13449ChickenBridge.scm",(void*)f_13449},
{"f_13453ChickenBridge.scm",(void*)f_13453},
{"f_13414ChickenBridge.scm",(void*)f_13414},
{"f_13418ChickenBridge.scm",(void*)f_13418},
{"f_13363ChickenBridge.scm",(void*)f_13363},
{"f_13366ChickenBridge.scm",(void*)f_13366},
{"f_13369ChickenBridge.scm",(void*)f_13369},
{"f_13381ChickenBridge.scm",(void*)f_13381},
{"f_13393ChickenBridge.scm",(void*)f_13393},
{"f_13375ChickenBridge.scm",(void*)f_13375},
{"f_13238ChickenBridge.scm",(void*)f_13238},
{"f_13351ChickenBridge.scm",(void*)f_13351},
{"f_13248ChickenBridge.scm",(void*)f_13248},
{"f_13336ChickenBridge.scm",(void*)f_13336},
{"f_13347ChickenBridge.scm",(void*)f_13347},
{"f_13343ChickenBridge.scm",(void*)f_13343},
{"f_13251ChickenBridge.scm",(void*)f_13251},
{"f_13333ChickenBridge.scm",(void*)f_13333},
{"f_13259ChickenBridge.scm",(void*)f_13259},
{"f_13323ChickenBridge.scm",(void*)f_13323},
{"f_13268ChickenBridge.scm",(void*)f_13268},
{"f_13287ChickenBridge.scm",(void*)f_13287},
{"f_13316ChickenBridge.scm",(void*)f_13316},
{"f_13297ChickenBridge.scm",(void*)f_13297},
{"f_13312ChickenBridge.scm",(void*)f_13312},
{"f_13300ChickenBridge.scm",(void*)f_13300},
{"f_13271ChickenBridge.scm",(void*)f_13271},
{"f_13281ChickenBridge.scm",(void*)f_13281},
{"f_13262ChickenBridge.scm",(void*)f_13262},
{"f_13265ChickenBridge.scm",(void*)f_13265},
{"f_13192ChickenBridge.scm",(void*)f_13192},
{"f_13183ChickenBridge.scm",(void*)f_13183},
{"f_12891ChickenBridge.scm",(void*)f_12891},
{"f_12898ChickenBridge.scm",(void*)f_12898},
{"f_12901ChickenBridge.scm",(void*)f_12901},
{"f_13172ChickenBridge.scm",(void*)f_13172},
{"f_13164ChickenBridge.scm",(void*)f_13164},
{"f_13156ChickenBridge.scm",(void*)f_13156},
{"f_13159ChickenBridge.scm",(void*)f_13159},
{"f_13127ChickenBridge.scm",(void*)f_13127},
{"f_13150ChickenBridge.scm",(void*)f_13150},
{"f_13133ChickenBridge.scm",(void*)f_13133},
{"f_13137ChickenBridge.scm",(void*)f_13137},
{"f_12904ChickenBridge.scm",(void*)f_12904},
{"f_12910ChickenBridge.scm",(void*)f_12910},
{"f_13002ChickenBridge.scm",(void*)f_13002},
{"f_13114ChickenBridge.scm",(void*)f_13114},
{"f_13121ChickenBridge.scm",(void*)f_13121},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13027ChickenBridge.scm",(void*)f_13027},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_13111ChickenBridge.scm",(void*)f_13111},
{"f_13100ChickenBridge.scm",(void*)f_13100},
{"f_13236ChickenBridge.scm",(void*)f_13236},
{"f_13211ChickenBridge.scm",(void*)f_13211},
{"f_13232ChickenBridge.scm",(void*)f_13232},
{"f_13228ChickenBridge.scm",(void*)f_13228},
{"f_13220ChickenBridge.scm",(void*)f_13220},
{"f_13093ChickenBridge.scm",(void*)f_13093},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13074ChickenBridge.scm",(void*)f_13074},
{"f_13038ChickenBridge.scm",(void*)f_13038},
{"f_13070ChickenBridge.scm",(void*)f_13070},
{"f_13057ChickenBridge.scm",(void*)f_13057},
{"f_13065ChickenBridge.scm",(void*)f_13065},
{"f_13061ChickenBridge.scm",(void*)f_13061},
{"f_13041ChickenBridge.scm",(void*)f_13041},
{"f_13044ChickenBridge.scm",(void*)f_13044},
{"f_13018ChickenBridge.scm",(void*)f_13018},
{"f_13005ChickenBridge.scm",(void*)f_13005},
{"f_13014ChickenBridge.scm",(void*)f_13014},
{"f_13009ChickenBridge.scm",(void*)f_13009},
{"f_12916ChickenBridge.scm",(void*)f_12916},
{"f_12996ChickenBridge.scm",(void*)f_12996},
{"f_12976ChickenBridge.scm",(void*)f_12976},
{"f_12982ChickenBridge.scm",(void*)f_12982},
{"f_12993ChickenBridge.scm",(void*)f_12993},
{"f_12973ChickenBridge.scm",(void*)f_12973},
{"f_12961ChickenBridge.scm",(void*)f_12961},
{"f_12964ChickenBridge.scm",(void*)f_12964},
{"f_12919ChickenBridge.scm",(void*)f_12919},
{"f_12955ChickenBridge.scm",(void*)f_12955},
{"f_12950ChickenBridge.scm",(void*)f_12950},
{"f_12922ChickenBridge.scm",(void*)f_12922},
{"f_12935ChickenBridge.scm",(void*)f_12935},
{"f_12925ChickenBridge.scm",(void*)f_12925},
{"f_12928ChickenBridge.scm",(void*)f_12928},
{"f_12931ChickenBridge.scm",(void*)f_12931},
{"f_12768ChickenBridge.scm",(void*)f_12768},
{"f_12827ChickenBridge.scm",(void*)f_12827},
{"f_12837ChickenBridge.scm",(void*)f_12837},
{"f_12839ChickenBridge.scm",(void*)f_12839},
{"f_12868ChickenBridge.scm",(void*)f_12868},
{"f_12873ChickenBridge.scm",(void*)f_12873},
{"f_12858ChickenBridge.scm",(void*)f_12858},
{"f_12789ChickenBridge.scm",(void*)f_12789},
{"f_12821ChickenBridge.scm",(void*)f_12821},
{"f_12749ChickenBridge.scm",(void*)f_12749},
{"f_12756ChickenBridge.scm",(void*)f_12756},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12730ChickenBridge.scm",(void*)f_12730},
{"f_12737ChickenBridge.scm",(void*)f_12737},
{"f_12744ChickenBridge.scm",(void*)f_12744},
{"f_12550ChickenBridge.scm",(void*)f_12550},
{"f_12554ChickenBridge.scm",(void*)f_12554},
{"f_12557ChickenBridge.scm",(void*)f_12557},
{"f_12560ChickenBridge.scm",(void*)f_12560},
{"f_12563ChickenBridge.scm",(void*)f_12563},
{"f_12720ChickenBridge.scm",(void*)f_12720},
{"f_12727ChickenBridge.scm",(void*)f_12727},
{"f_12566ChickenBridge.scm",(void*)f_12566},
{"f_12718ChickenBridge.scm",(void*)f_12718},
{"f_12569ChickenBridge.scm",(void*)f_12569},
{"f_12711ChickenBridge.scm",(void*)f_12711},
{"f_12701ChickenBridge.scm",(void*)f_12701},
{"f_12575ChickenBridge.scm",(void*)f_12575},
{"f_12691ChickenBridge.scm",(void*)f_12691},
{"f_12681ChickenBridge.scm",(void*)f_12681},
{"f_12581ChickenBridge.scm",(void*)f_12581},
{"f_12644ChickenBridge.scm",(void*)f_12644},
{"f_12658ChickenBridge.scm",(void*)f_12658},
{"f_12674ChickenBridge.scm",(void*)f_12674},
{"f_12670ChickenBridge.scm",(void*)f_12670},
{"f_12666ChickenBridge.scm",(void*)f_12666},
{"f_12662ChickenBridge.scm",(void*)f_12662},
{"f_12652ChickenBridge.scm",(void*)f_12652},
{"f_12648ChickenBridge.scm",(void*)f_12648},
{"f_12584ChickenBridge.scm",(void*)f_12584},
{"f_12587ChickenBridge.scm",(void*)f_12587},
{"f_12628ChickenBridge.scm",(void*)f_12628},
{"f_12593ChickenBridge.scm",(void*)f_12593},
{"f_12606ChickenBridge.scm",(void*)f_12606},
{"f_12596ChickenBridge.scm",(void*)f_12596},
{"f_12599ChickenBridge.scm",(void*)f_12599},
{"f_12540ChickenBridge.scm",(void*)f_12540},
{"f_12481ChickenBridge.scm",(void*)f_12481},
{"f_12472ChickenBridge.scm",(void*)f_12472},
{"f_12355ChickenBridge.scm",(void*)f_12355},
{"f_12346ChickenBridge.scm",(void*)f_12346},
{"f_12337ChickenBridge.scm",(void*)f_12337},
{"f_12328ChickenBridge.scm",(void*)f_12328},
{"f_12319ChickenBridge.scm",(void*)f_12319},
{"f_12301ChickenBridge.scm",(void*)f_12301},
{"f_12292ChickenBridge.scm",(void*)f_12292},
{"f_12283ChickenBridge.scm",(void*)f_12283},
{"f_12265ChickenBridge.scm",(void*)f_12265},
{"f_12256ChickenBridge.scm",(void*)f_12256},
{"f_12247ChickenBridge.scm",(void*)f_12247},
{"f_12232ChickenBridge.scm",(void*)f_12232},
{"f_12187ChickenBridge.scm",(void*)f_12187},
{"f_12169ChickenBridge.scm",(void*)f_12169},
{"f_12160ChickenBridge.scm",(void*)f_12160},
{"f_12133ChickenBridge.scm",(void*)f_12133},
{"f_12115ChickenBridge.scm",(void*)f_12115},
{"f_12097ChickenBridge.scm",(void*)f_12097},
{"f_12088ChickenBridge.scm",(void*)f_12088},
{"f_12076ChickenBridge.scm",(void*)f_12076},
{"f_11327ChickenBridge.scm",(void*)f_11327},
{"f_11349ChickenBridge.scm",(void*)f_11349},
{"f_11364ChickenBridge.scm",(void*)f_11364},
{"f_11367ChickenBridge.scm",(void*)f_11367},
{"f_11543ChickenBridge.scm",(void*)f_11543},
{"f_11537ChickenBridge.scm",(void*)f_11537},
{"f_11370ChickenBridge.scm",(void*)f_11370},
{"f_11519ChickenBridge.scm",(void*)f_11519},
{"f_11373ChickenBridge.scm",(void*)f_11373},
{"f_11376ChickenBridge.scm",(void*)f_11376},
{"f_11512ChickenBridge.scm",(void*)f_11512},
{"f_11500ChickenBridge.scm",(void*)f_11500},
{"f_11396ChickenBridge.scm",(void*)f_11396},
{"f_11403ChickenBridge.scm",(void*)f_11403},
{"f_11473ChickenBridge.scm",(void*)f_11473},
{"f_11459ChickenBridge.scm",(void*)f_11459},
{"f_11467ChickenBridge.scm",(void*)f_11467},
{"f_11406ChickenBridge.scm",(void*)f_11406},
{"f_11445ChickenBridge.scm",(void*)f_11445},
{"f_11409ChickenBridge.scm",(void*)f_11409},
{"f_11438ChickenBridge.scm",(void*)f_11438},
{"f_11415ChickenBridge.scm",(void*)f_11415},
{"f_11418ChickenBridge.scm",(void*)f_11418},
{"f_11422ChickenBridge.scm",(void*)f_11422},
{"f_11383ChickenBridge.scm",(void*)f_11383},
{"f_11386ChickenBridge.scm",(void*)f_11386},
{"f_11196ChickenBridge.scm",(void*)f_11196},
{"f_11205ChickenBridge.scm",(void*)f_11205},
{"f_11153ChickenBridge.scm",(void*)f_11153},
{"f_11159ChickenBridge.scm",(void*)f_11159},
{"f_11222ChickenBridge.scm",(void*)f_11222},
{"f_11308ChickenBridge.scm",(void*)f_11308},
{"f_11295ChickenBridge.scm",(void*)f_11295},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11225ChickenBridge.scm",(void*)f_11225},
{"f_11229ChickenBridge.scm",(void*)f_11229},
{"f_11272ChickenBridge.scm",(void*)f_11272},
{"f_11234ChickenBridge.scm",(void*)f_11234},
{"f_11200ChickenBridge.scm",(void*)f_11200},
{"f_11095ChickenBridge.scm",(void*)f_11095},
{"f_11102ChickenBridge.scm",(void*)f_11102},
{"f_11133ChickenBridge.scm",(void*)f_11133},
{"f_11129ChickenBridge.scm",(void*)f_11129},
{"f_11121ChickenBridge.scm",(void*)f_11121},
{"f_11004ChickenBridge.scm",(void*)f_11004},
{"f_11011ChickenBridge.scm",(void*)f_11011},
{"f_11079ChickenBridge.scm",(void*)f_11079},
{"f_11022ChickenBridge.scm",(void*)f_11022},
{"f_11049ChickenBridge.scm",(void*)f_11049},
{"f_11033ChickenBridge.scm",(void*)f_11033},
{"f_10938ChickenBridge.scm",(void*)f_10938},
{"f_10949ChickenBridge.scm",(void*)f_10949},
{"f_10952ChickenBridge.scm",(void*)f_10952},
{"f_10959ChickenBridge.scm",(void*)f_10959},
{"f_10932ChickenBridge.scm",(void*)f_10932},
{"f_10386ChickenBridge.scm",(void*)f_10386},
{"f_10417ChickenBridge.scm",(void*)f_10417},
{"f_10881ChickenBridge.scm",(void*)f_10881},
{"f_10887ChickenBridge.scm",(void*)f_10887},
{"f_10428ChickenBridge.scm",(void*)f_10428},
{"f_10313ChickenBridge.scm",(void*)f_10313},
{"f_10338ChickenBridge.scm",(void*)f_10338},
{"f_10273ChickenBridge.scm",(void*)f_10273},
{"f_10286ChickenBridge.scm",(void*)f_10286},
{"f_10327ChickenBridge.scm",(void*)f_10327},
{"f_10432ChickenBridge.scm",(void*)f_10432},
{"f_10869ChickenBridge.scm",(void*)f_10869},
{"f_10865ChickenBridge.scm",(void*)f_10865},
{"f_10861ChickenBridge.scm",(void*)f_10861},
{"f_10435ChickenBridge.scm",(void*)f_10435},
{"f_10655ChickenBridge.scm",(void*)f_10655},
{"f_10764ChickenBridge.scm",(void*)f_10764},
{"f_10829ChickenBridge.scm",(void*)f_10829},
{"f_10771ChickenBridge.scm",(void*)f_10771},
{"f_10775ChickenBridge.scm",(void*)f_10775},
{"f_10779ChickenBridge.scm",(void*)f_10779},
{"f_10821ChickenBridge.scm",(void*)f_10821},
{"f_10817ChickenBridge.scm",(void*)f_10817},
{"f_10795ChickenBridge.scm",(void*)f_10795},
{"f_10658ChickenBridge.scm",(void*)f_10658},
{"f_10661ChickenBridge.scm",(void*)f_10661},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10643ChickenBridge.scm",(void*)f_10643},
{"f_10610ChickenBridge.scm",(void*)f_10610},
{"f_10636ChickenBridge.scm",(void*)f_10636},
{"f_10618ChickenBridge.scm",(void*)f_10618},
{"f_10566ChickenBridge.scm",(void*)f_10566},
{"f_10606ChickenBridge.scm",(void*)f_10606},
{"f_10548ChickenBridge.scm",(void*)f_10548},
{"f_10519ChickenBridge.scm",(void*)f_10519},
{"f_10541ChickenBridge.scm",(void*)f_10541},
{"f_10527ChickenBridge.scm",(void*)f_10527},
{"f_10481ChickenBridge.scm",(void*)f_10481},
{"f_10438ChickenBridge.scm",(void*)f_10438},
{"f_10449ChickenBridge.scm",(void*)f_10449},
{"f_10453ChickenBridge.scm",(void*)f_10453},
{"f_10457ChickenBridge.scm",(void*)f_10457},
{"f_10461ChickenBridge.scm",(void*)f_10461},
{"f_10445ChickenBridge.scm",(void*)f_10445},
{"f_10405ChickenBridge.scm",(void*)f_10405},
{"f_10400ChickenBridge.scm",(void*)f_10400},
{"f_10395ChickenBridge.scm",(void*)f_10395},
{"f_10227ChickenBridge.scm",(void*)f_10227},
{"f_10238ChickenBridge.scm",(void*)f_10238},
{"f_10253ChickenBridge.scm",(void*)f_10253},
{"f_10189ChickenBridge.scm",(void*)f_10189},
{"f_10200ChickenBridge.scm",(void*)f_10200},
{"f_10215ChickenBridge.scm",(void*)f_10215},
{"f_10122ChickenBridge.scm",(void*)f_10122},
{"f_10142ChickenBridge.scm",(void*)f_10142},
{"f_10152ChickenBridge.scm",(void*)f_10152},
{"f_10165ChickenBridge.scm",(void*)f_10165},
{"f_10133ChickenBridge.scm",(void*)f_10133},
{"f_10140ChickenBridge.scm",(void*)f_10140},
{"f_9929ChickenBridge.scm",(void*)f_9929},
{"f_9989ChickenBridge.scm",(void*)f_9989},
{"f_9999ChickenBridge.scm",(void*)f_9999},
{"f_10113ChickenBridge.scm",(void*)f_10113},
{"f_10078ChickenBridge.scm",(void*)f_10078},
{"f_10070ChickenBridge.scm",(void*)f_10070},
{"f_10041ChickenBridge.scm",(void*)f_10041},
{"f_10019ChickenBridge.scm",(void*)f_10019},
{"f_10022ChickenBridge.scm",(void*)f_10022},
{"f_10010ChickenBridge.scm",(void*)f_10010},
{"f_9936ChickenBridge.scm",(void*)f_9936},
{"f_9987ChickenBridge.scm",(void*)f_9987},
{"f_9979ChickenBridge.scm",(void*)f_9979},
{"f_9939ChickenBridge.scm",(void*)f_9939},
{"f_9950ChickenBridge.scm",(void*)f_9950},
{"f_9954ChickenBridge.scm",(void*)f_9954},
{"f_9946ChickenBridge.scm",(void*)f_9946},
{"f_9787ChickenBridge.scm",(void*)f_9787},
{"f_9835ChickenBridge.scm",(void*)f_9835},
{"f_9845ChickenBridge.scm",(void*)f_9845},
{"f_9856ChickenBridge.scm",(void*)f_9856},
{"f_9893ChickenBridge.scm",(void*)f_9893},
{"f_9868ChickenBridge.scm",(void*)f_9868},
{"f_9859ChickenBridge.scm",(void*)f_9859},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9804ChickenBridge.scm",(void*)f_9804},
{"f_9436ChickenBridge.scm",(void*)f_9436},
{"f_9443ChickenBridge.scm",(void*)f_9443},
{"f_9677ChickenBridge.scm",(void*)f_9677},
{"f_9687ChickenBridge.scm",(void*)f_9687},
{"f_9698ChickenBridge.scm",(void*)f_9698},
{"f_9710ChickenBridge.scm",(void*)f_9710},
{"f_9713ChickenBridge.scm",(void*)f_9713},
{"f_9701ChickenBridge.scm",(void*)f_9701},
{"f_9449ChickenBridge.scm",(void*)f_9449},
{"f_9675ChickenBridge.scm",(void*)f_9675},
{"f_9671ChickenBridge.scm",(void*)f_9671},
{"f_9617ChickenBridge.scm",(void*)f_9617},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9598ChickenBridge.scm",(void*)f_9598},
{"f_9553ChickenBridge.scm",(void*)f_9553},
{"f_9477ChickenBridge.scm",(void*)f_9477},
{"f_9480ChickenBridge.scm",(void*)f_9480},
{"f_9544ChickenBridge.scm",(void*)f_9544},
{"f_9540ChickenBridge.scm",(void*)f_9540},
{"f_9460ChickenBridge.scm",(void*)f_9460},
{"f_9471ChickenBridge.scm",(void*)f_9471},
{"f_9467ChickenBridge.scm",(void*)f_9467},
{"f_9389ChickenBridge.scm",(void*)f_9389},
{"f_9422ChickenBridge.scm",(void*)f_9422},
{"f_9404ChickenBridge.scm",(void*)f_9404},
{"f_9416ChickenBridge.scm",(void*)f_9416},
{"f_9007ChickenBridge.scm",(void*)f_9007},
{"f_9216ChickenBridge.scm",(void*)f_9216},
{"f_9226ChickenBridge.scm",(void*)f_9226},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9357ChickenBridge.scm",(void*)f_9357},
{"f_9336ChickenBridge.scm",(void*)f_9336},
{"f_9315ChickenBridge.scm",(void*)f_9315},
{"f_9294ChickenBridge.scm",(void*)f_9294},
{"f_9273ChickenBridge.scm",(void*)f_9273},
{"f_9252ChickenBridge.scm",(void*)f_9252},
{"f_9240ChickenBridge.scm",(void*)f_9240},
{"f_9017ChickenBridge.scm",(void*)f_9017},
{"f_9020ChickenBridge.scm",(void*)f_9020},
{"f_9183ChickenBridge.scm",(void*)f_9183},
{"f_9023ChickenBridge.scm",(void*)f_9023},
{"f_9174ChickenBridge.scm",(void*)f_9174},
{"f_9154ChickenBridge.scm",(void*)f_9154},
{"f_9026ChickenBridge.scm",(void*)f_9026},
{"f_9119ChickenBridge.scm",(void*)f_9119},
{"f_9136ChickenBridge.scm",(void*)f_9136},
{"f_9029ChickenBridge.scm",(void*)f_9029},
{"f_9068ChickenBridge.scm",(void*)f_9068},
{"f_9102ChickenBridge.scm",(void*)f_9102},
{"f_9086ChickenBridge.scm",(void*)f_9086},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9036ChickenBridge.scm",(void*)f_9036},
{"f_9047ChickenBridge.scm",(void*)f_9047},
{"f_9051ChickenBridge.scm",(void*)f_9051},
{"f_9043ChickenBridge.scm",(void*)f_9043},
{"f_8925ChickenBridge.scm",(void*)f_8925},
{"f_8929ChickenBridge.scm",(void*)f_8929},
{"f_8947ChickenBridge.scm",(void*)f_8947},
{"f_8765ChickenBridge.scm",(void*)f_8765},
{"f_8773ChickenBridge.scm",(void*)f_8773},
{"f_8783ChickenBridge.scm",(void*)f_8783},
{"f_8821ChickenBridge.scm",(void*)f_8821},
{"f_8824ChickenBridge.scm",(void*)f_8824},
{"f_8827ChickenBridge.scm",(void*)f_8827},
{"f_8902ChickenBridge.scm",(void*)f_8902},
{"f_8912ChickenBridge.scm",(void*)f_8912},
{"f_8830ChickenBridge.scm",(void*)f_8830},
{"f_8833ChickenBridge.scm",(void*)f_8833},
{"f_8836ChickenBridge.scm",(void*)f_8836},
{"f_8856ChickenBridge.scm",(void*)f_8856},
{"f_8866ChickenBridge.scm",(void*)f_8866},
{"f_8869ChickenBridge.scm",(void*)f_8869},
{"f_8872ChickenBridge.scm",(void*)f_8872},
{"f_8839ChickenBridge.scm",(void*)f_8839},
{"f_8842ChickenBridge.scm",(void*)f_8842},
{"f_8759ChickenBridge.scm",(void*)f_8759},
{"f_8753ChickenBridge.scm",(void*)f_8753},
{"f_8747ChickenBridge.scm",(void*)f_8747},
{"f_8676ChickenBridge.scm",(void*)f_8676},
{"f_8717ChickenBridge.scm",(void*)f_8717},
{"f_8721ChickenBridge.scm",(void*)f_8721},
{"f_8725ChickenBridge.scm",(void*)f_8725},
{"f_8729ChickenBridge.scm",(void*)f_8729},
{"f_8733ChickenBridge.scm",(void*)f_8733},
{"f_8737ChickenBridge.scm",(void*)f_8737},
{"f_8741ChickenBridge.scm",(void*)f_8741},
{"f_8745ChickenBridge.scm",(void*)f_8745},
{"f_8678ChickenBridge.scm",(void*)f_8678},
{"f_8684ChickenBridge.scm",(void*)f_8684},
{"f_8706ChickenBridge.scm",(void*)f_8706},
{"f_8695ChickenBridge.scm",(void*)f_8695},
{"f_8525ChickenBridge.scm",(void*)f_8525},
{"f_8540ChickenBridge.scm",(void*)f_8540},
{"f_8553ChickenBridge.scm",(void*)f_8553},
{"f_8513ChickenBridge.scm",(void*)f_8513},
{"f_8501ChickenBridge.scm",(void*)f_8501},
{"f_8489ChickenBridge.scm",(void*)f_8489},
{"f_8483ChickenBridge.scm",(void*)f_8483},
{"f_8477ChickenBridge.scm",(void*)f_8477},
{"f_8465ChickenBridge.scm",(void*)f_8465},
{"f_8453ChickenBridge.scm",(void*)f_8453},
{"f_8441ChickenBridge.scm",(void*)f_8441},
{"f_8429ChickenBridge.scm",(void*)f_8429},
{"f_8423ChickenBridge.scm",(void*)f_8423},
{"f_8373ChickenBridge.scm",(void*)f_8373},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8411ChickenBridge.scm",(void*)f_8411},
{"f_8415ChickenBridge.scm",(void*)f_8415},
{"f_8381ChickenBridge.scm",(void*)f_8381},
{"f_8399ChickenBridge.scm",(void*)f_8399},
{"f_8390ChickenBridge.scm",(void*)f_8390},
{"f_8398ChickenBridge.scm",(void*)f_8398},
{"f_8385ChickenBridge.scm",(void*)f_8385},
{"f_8329ChickenBridge.scm",(void*)f_8329},
{"f_8363ChickenBridge.scm",(void*)f_8363},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8371ChickenBridge.scm",(void*)f_8371},
{"f_8337ChickenBridge.scm",(void*)f_8337},
{"f_8355ChickenBridge.scm",(void*)f_8355},
{"f_8346ChickenBridge.scm",(void*)f_8346},
{"f_8354ChickenBridge.scm",(void*)f_8354},
{"f_8341ChickenBridge.scm",(void*)f_8341},
{"f_8255ChickenBridge.scm",(void*)f_8255},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8266ChickenBridge.scm",(void*)f_8266},
{"f_8268ChickenBridge.scm",(void*)f_8268},
{"f_8282ChickenBridge.scm",(void*)f_8282},
{"f_8295ChickenBridge.scm",(void*)f_8295},
{"f_8285ChickenBridge.scm",(void*)f_8285},
{"f_8169ChickenBridge.scm",(void*)f_8169},
{"f_8051ChickenBridge.scm",(void*)f_8051},
{"f_8057ChickenBridge.scm",(void*)f_8057},
{"f_8081ChickenBridge.scm",(void*)f_8081},
{"f_8067ChickenBridge.scm",(void*)f_8067},
{"f_7952ChickenBridge.scm",(void*)f_7952},
{"f_7956ChickenBridge.scm",(void*)f_7956},
{"f_7981ChickenBridge.scm",(void*)f_7981},
{"f_7998ChickenBridge.scm",(void*)f_7998},
{"f_8002ChickenBridge.scm",(void*)f_8002},
{"f_7958ChickenBridge.scm",(void*)f_7958},
{"f_7975ChickenBridge.scm",(void*)f_7975},
{"f_7790ChickenBridge.scm",(void*)f_7790},
{"f_7799ChickenBridge.scm",(void*)f_7799},
{"f_7837ChickenBridge.scm",(void*)f_7837},
{"f_7815ChickenBridge.scm",(void*)f_7815},
{"f_7700ChickenBridge.scm",(void*)f_7700},
{"f_7652ChickenBridge.scm",(void*)f_7652},
{"f_7686ChickenBridge.scm",(void*)f_7686},
{"f_7629ChickenBridge.scm",(void*)f_7629},
{"f_7623ChickenBridge.scm",(void*)f_7623},
{"f_7608ChickenBridge.scm",(void*)f_7608},
{"f_7594ChickenBridge.scm",(void*)f_7594},
{"f_7584ChickenBridge.scm",(void*)f_7584},
{"f_7574ChickenBridge.scm",(void*)f_7574},
{"f_7564ChickenBridge.scm",(void*)f_7564},
{"f_7554ChickenBridge.scm",(void*)f_7554},
{"f_7544ChickenBridge.scm",(void*)f_7544},
{"f_6850ChickenBridge.scm",(void*)f_6850},
{"f_7513ChickenBridge.scm",(void*)f_7513},
{"f_7523ChickenBridge.scm",(void*)f_7523},
{"f_7507ChickenBridge.scm",(void*)f_7507},
{"f_6808ChickenBridge.scm",(void*)f_6808},
{"f_7501ChickenBridge.scm",(void*)f_7501},
{"f_7424ChickenBridge.scm",(void*)f_7424},
{"f_7275ChickenBridge.scm",(void*)f_7275},
{"f_7284ChickenBridge.scm",(void*)f_7284},
{"f_7181ChickenBridge.scm",(void*)f_7181},
{"f_7161ChickenBridge.scm",(void*)f_7161},
{"f_7130ChickenBridge.scm",(void*)f_7130},
{"f_7127ChickenBridge.scm",(void*)f_7127},
{"f_7120ChickenBridge.scm",(void*)f_7120},
{"f_7117ChickenBridge.scm",(void*)f_7117},
{"f_7110ChickenBridge.scm",(void*)f_7110},
{"f_7092ChickenBridge.scm",(void*)f_7092},
{"f_7081ChickenBridge.scm",(void*)f_7081},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7075ChickenBridge.scm",(void*)f_7075},
{"f_7072ChickenBridge.scm",(void*)f_7072},
{"f_7043ChickenBridge.scm",(void*)f_7043},
{"f_7036ChickenBridge.scm",(void*)f_7036},
{"f_7033ChickenBridge.scm",(void*)f_7033},
{"f_7012ChickenBridge.scm",(void*)f_7012},
{"f_6993ChickenBridge.scm",(void*)f_6993},
{"f_6974ChickenBridge.scm",(void*)f_6974},
{"f_6967ChickenBridge.scm",(void*)f_6967},
{"f_6960ChickenBridge.scm",(void*)f_6960},
{"f_6945ChickenBridge.scm",(void*)f_6945},
{"f_6934ChickenBridge.scm",(void*)f_6934},
{"f_6927ChickenBridge.scm",(void*)f_6927},
{"f_6873ChickenBridge.scm",(void*)f_6873},
{"f_6817ChickenBridge.scm",(void*)f_6817},
{"f_6822ChickenBridge.scm",(void*)f_6822},
{"f_6736ChickenBridge.scm",(void*)f_6736},
{"f_6730ChickenBridge.scm",(void*)f_6730},
{"f_6723ChickenBridge.scm",(void*)f_6723},
{"f_6717ChickenBridge.scm",(void*)f_6717},
{"f_6707ChickenBridge.scm",(void*)f_6707},
{"f_6687ChickenBridge.scm",(void*)f_6687},
{"f_6699ChickenBridge.scm",(void*)f_6699},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
